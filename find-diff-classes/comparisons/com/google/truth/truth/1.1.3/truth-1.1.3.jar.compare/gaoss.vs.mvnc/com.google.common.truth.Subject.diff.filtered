298d297
< java.lang.Object v0;
301c300,303
< java.lang.String v6;
---
> int v8, v9;
> java.lang.Object v0;
> java.lang.StringBuilder v11;
> java.lang.String v10, v6, v7;
315,316c317,323
< v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 must be either a Character or a Number.");
< specialinvoke v5.<java.lang.AssertionError: void <init>(java.lang.Object)>(v6);
---
> v6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v0);
> v7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v6);
> v8 = virtualinvoke v7.<java.lang.String: int length()>();
> v9 = 40 + v8;
> specialinvoke v11.<java.lang.StringBuilder: void <init>(int)>(v9);
> v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 must be either a Character or a Number.");
> specialinvoke v5.<java.lang.AssertionError: void <init>(java.lang.Object)>(v10);
356d362
< com.google.common.truth.Fact[] v17;
358,359d363
< java.lang.String v12, v13, v14, v15, v20, v22, v4, v9;
< com.google.common.truth.Fact v16, v21, v23;
361d364
< java.lang.UnsupportedOperationException v8;
363,364c366,373
< java.lang.Class v1, v11, v19;
< java.lang.Object v10, v18, v3, v5;
---
> java.lang.StringBuilder v33;
> com.google.common.truth.Fact[] v26;
> int v15, v16, v18, v19, v21, v22;
> java.lang.String v12, v13, v14, v17, v20, v23, v24, v29, v31, v4, v9;
> com.google.common.truth.Fact v25, v30, v32;
> java.lang.UnsupportedOperationException v8;
> java.lang.Class v1, v11, v28;
> java.lang.Object v10, v27, v3, v5;
389,390c398,409
< v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v9, v12, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001, an instance of \u0001, may or may not be an instance of \u0001. Under -XdisableClassMetadata, we do not have enough information to tell.");
< specialinvoke v8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v14);
---
> v14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v9);
> v15 = virtualinvoke v14.<java.lang.String: int length()>();
> v16 = 126 + v15;
> v17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v12);
> v18 = virtualinvoke v17.<java.lang.String: int length()>();
> v19 = v16 + v18;
> v20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v13);
> v21 = virtualinvoke v20.<java.lang.String: int length()>();
> v22 = v19 + v21;
> specialinvoke v33.<java.lang.StringBuilder: void <init>(int)>(v22);
> v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v9, v12, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001, an instance of \u0001, may or may not be an instance of \u0001. Under -XdisableClassMetadata, we do not have enough information to tell.");
> specialinvoke v8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v23);
393,404c412,423
< v15 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
< v16 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("expected instance of", v15);
< v17 = newarray (com.google.common.truth.Fact)[2];
< v18 = v0.<com.google.common.truth.Subject: java.lang.Object actual>;
< v19 = virtualinvoke v18.<java.lang.Object: java.lang.Class getClass()>();
< v20 = virtualinvoke v19.<java.lang.Class: java.lang.String getName()>();
< v21 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("but was instance of", v20);
< v17[0] = v21;
< v22 = virtualinvoke v0.<com.google.common.truth.Subject: java.lang.String actualCustomStringRepresentation()>();
< v23 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("with value", v22);
< v17[1] = v23;
< virtualinvoke v0.<com.google.common.truth.Subject: void failWithoutActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>(v16, v17);
---
> v24 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
> v25 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("expected instance of", v24);
> v26 = newarray (com.google.common.truth.Fact)[2];
> v27 = v0.<com.google.common.truth.Subject: java.lang.Object actual>;
> v28 = virtualinvoke v27.<java.lang.Object: java.lang.Class getClass()>();
> v29 = virtualinvoke v28.<java.lang.Class: java.lang.String getName()>();
> v30 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("but was instance of", v29);
> v26[0] = v30;
> v31 = virtualinvoke v0.<com.google.common.truth.Subject: java.lang.String actualCustomStringRepresentation()>();
> v32 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("with value", v31);
> v26[1] = v32;
> virtualinvoke v0.<com.google.common.truth.Subject: void failWithoutActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>(v25, v26);
647,654c666,674
< boolean v15, v28, v30, v32, v33, v6, v7;
< com.google.common.truth.Subject$ComparisonResult v12, v22, v3, v31, v36, v37;
< com.google.common.truth.Fact[] v17, v34, v9;
< int v13, v14, v23;
< java.lang.String v2, v24, v4, v5;
< com.google.common.truth.Fact v10, v11, v16, v19, v21, v35, v8;
< java.lang.Class v27, v29;
< java.lang.Object v0, v1, v25, v26;
---
> boolean v15, v31, v33, v35, v36, v6, v7;
> java.lang.StringBuilder v41;
> com.google.common.truth.Subject$ComparisonResult v12, v22, v3, v34, v39, v40;
> com.google.common.truth.Fact[] v17, v37, v9;
> int v13, v14, v23, v25, v26;
> java.lang.String v2, v24, v27, v4, v5;
> com.google.common.truth.Fact v10, v11, v16, v19, v21, v38, v8;
> java.lang.Class v30, v32;
> java.lang.Object v0, v1, v28, v29;
706,720c726,744
< v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v2, v23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[\u0001]");
< v25 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v0, v23);
< v26 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v1, v23);
< if v26 == null goto label09;
< v27 = virtualinvoke v26.<java.lang.Object: java.lang.Class getClass()>();
< v28 = virtualinvoke v27.<java.lang.Class: boolean isArray()>();
< if v28 == 0 goto label09;
< if v25 == null goto label09;
< v29 = virtualinvoke v25.<java.lang.Object: java.lang.Class getClass()>();
< v30 = virtualinvoke v29.<java.lang.Class: boolean isArray()>();
< if v30 == 0 goto label09;
< v31 = staticinvoke <com.google.common.truth.Subject: com.google.common.truth.Subject$ComparisonResult checkArrayEqualsRecursive(java.lang.Object,java.lang.Object,java.lang.String)>(v25, v26, v24);
< v32 = virtualinvoke v31.<com.google.common.truth.Subject$ComparisonResult: boolean valuesAreEqual()>();
< if v32 != 0 goto label10;
< return v31;
---
> v24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
> v25 = virtualinvoke v24.<java.lang.String: int length()>();
> v26 = 13 + v25;
> specialinvoke v41.<java.lang.StringBuilder: void <init>(int)>(v26);
> v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v2, v23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[\u0001]");
> v28 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v0, v23);
> v29 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v1, v23);
> if v29 == null goto label09;
> v30 = virtualinvoke v29.<java.lang.Object: java.lang.Class getClass()>();
> v31 = virtualinvoke v30.<java.lang.Class: boolean isArray()>();
> if v31 == 0 goto label09;
> if v28 == null goto label09;
> v32 = virtualinvoke v28.<java.lang.Object: java.lang.Class getClass()>();
> v33 = virtualinvoke v32.<java.lang.Class: boolean isArray()>();
> if v33 == 0 goto label09;
> v34 = staticinvoke <com.google.common.truth.Subject: com.google.common.truth.Subject$ComparisonResult checkArrayEqualsRecursive(java.lang.Object,java.lang.Object,java.lang.String)>(v28, v29, v27);
> v35 = virtualinvoke v34.<com.google.common.truth.Subject$ComparisonResult: boolean valuesAreEqual()>();
> if v35 != 0 goto label10;
> return v34;
722,728c746,752
< v33 = staticinvoke <com.google.common.truth.Subject: boolean gwtSafeObjectEquals(java.lang.Object,java.lang.Object)>(v26, v25);
< if v33 != 0 goto label10;
< v34 = newarray (com.google.common.truth.Fact)[1];
< v35 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("differs at index", v24);
< v34[0] = v35;
< v36 = staticinvoke <com.google.common.truth.Subject$ComparisonResult: com.google.common.truth.Subject$ComparisonResult differentWithDescription(com.google.common.truth.Fact[])>(v34);
< return v36;
---
> v36 = staticinvoke <com.google.common.truth.Subject: boolean gwtSafeObjectEquals(java.lang.Object,java.lang.Object)>(v29, v28);
> if v36 != 0 goto label10;
> v37 = newarray (com.google.common.truth.Fact)[1];
> v38 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact fact(java.lang.String,java.lang.Object)>("differs at index", v27);
> v37[0] = v38;
> v39 = staticinvoke <com.google.common.truth.Subject$ComparisonResult: com.google.common.truth.Subject$ComparisonResult differentWithDescription(com.google.common.truth.Fact[])>(v37);
> return v39;
733,734c757,758
< v37 = staticinvoke <com.google.common.truth.Subject$ComparisonResult: com.google.common.truth.Subject$ComparisonResult equal()>();
< return v37;
---
> v40 = staticinvoke <com.google.common.truth.Subject$ComparisonResult: com.google.common.truth.Subject$ComparisonResult equal()>();
> return v40;
1427c1451
< java.lang.Object[] v5;
---
> java.lang.Object[] v8;
1429,1431c1453,1457
< com.google.common.truth.Fact[] v8;
< java.lang.String v1, v2, v3, v4, v6;
< com.google.common.truth.Fact v7;
---
> com.google.common.truth.Fact[] v11;
> int v6, v7;
> java.lang.StringBuilder v12;
> java.lang.String v1, v2, v3, v4, v5, v9;
> com.google.common.truth.Fact v10;
1439a1466,1469
> v5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v4);
> v6 = virtualinvoke v5.<java.lang.String: int length()>();
> v7 = 2 + v6;
> specialinvoke v12.<java.lang.StringBuilder: void <init>(int)>(v7);
1442,1448c1472,1478
< v5 = newarray (java.lang.Object)[2];
< v5[0] = v3;
< v5[1] = v1;
< v6 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("Not true that %s %s", v5);
< v7 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>(v6);
< v8 = newarray (com.google.common.truth.Fact)[0];
< virtualinvoke v0.<com.google.common.truth.Subject: void failWithoutActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>(v7, v8);
---
> v8 = newarray (java.lang.Object)[2];
> v8[0] = v3;
> v8[1] = v1;
> v9 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>("Not true that %s %s", v8);
> v10 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>(v9);
> v11 = newarray (com.google.common.truth.Fact)[0];
> virtualinvoke v0.<com.google.common.truth.Subject: void failWithoutActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>(v10, v11);
