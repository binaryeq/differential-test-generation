8c8
< io.micronaut.core.type.Argument v1006, v1007, v1032, v1033, v106, v107, v117, v118, v128, v129, v138, v147, v156, v166, v167, v176, v185, v194, v203, v213, v214, v22, v223, v23, v232, v241, v251, v252, v262, v263, v273, v274, v283, v293, v294, v304, v305, v33, v330, v331, v34, v356, v357, v381, v406, v407, v43, v431, v456, v457, v482, v483, v508, v509, v53, v534, v535, v54, v560, v561, v586, v587, v611, v63, v635, v659, v684, v685, v709, v73, v733, v74, v757, v781, v806, v807, v831, v84, v85, v855, v879, v904, v905, v930, v931, v95, v956, v957, v96, v981;
---
> io.micronaut.core.type.Argument v1003, v1028, v1029, v1054, v1055, v106, v107, v1080, v1081, v1106, v1107, v117, v118, v128, v129, v138, v147, v156, v166, v167, v176, v185, v194, v203, v213, v214, v22, v223, v23, v232, v241, v251, v252, v262, v263, v273, v274, v283, v293, v294, v304, v305, v315, v316, v326, v327, v33, v34, v352, v353, v378, v379, v403, v428, v429, v43, v453, v478, v479, v504, v505, v53, v530, v531, v54, v556, v557, v582, v583, v608, v609, v63, v633, v657, v681, v706, v707, v73, v731, v74, v755, v779, v803, v828, v829, v84, v85, v853, v877, v901, v926, v927, v95, v952, v953, v96, v978, v979;
10,16c10,16
< int v1008, v1034, v332, v358, v382, v408, v432, v458, v484, v510, v536, v562, v588, v612, v636, v660, v686, v710, v734, v758, v782, v808, v832, v856, v880, v906, v932, v958, v982;
< io.micronaut.inject.'annotation'.DefaultAnnotationMetadata v0, v1010, v108, v119, v13, v130, v139, v148, v157, v168, v177, v186, v195, v204, v215, v224, v233, v24, v242, v253, v264, v275, v284, v295, v308, v334, v35, v360, v384, v410, v434, v44, v460, v486, v512, v538, v55, v564, v590, v614, v638, v64, v662, v688, v712, v736, v75, v760, v784, v810, v834, v858, v86, v882, v908, v934, v960, v97, v984;
< io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef[] v306;
< java.util.List v1001, v1002, v1003, v1027, v1028, v1029, v325, v326, v327, v351, v352, v353, v377, v378, v379, v401, v402, v403, v427, v428, v429, v451, v452, v453, v477, v478, v479, v503, v504, v505, v529, v530, v531, v555, v556, v557, v581, v582, v583, v607, v608, v609, v631, v632, v633, v655, v656, v657, v679, v680, v681, v705, v706, v707, v729, v730, v731, v753, v754, v755, v777, v778, v779, v801, v802, v803, v827, v828, v829, v851, v852, v853, v875, v876, v877, v899, v900, v901, v925, v926, v927, v951, v952, v953, v977, v978, v979;
< io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef v1009, v307, v333, v359, v383, v409, v433, v459, v485, v511, v537, v563, v589, v613, v637, v661, v687, v711, v735, v759, v783, v809, v833, v857, v881, v907, v933, v959, v983;
< io.micronaut.core.type.Argument[] v1005, v1031, v105, v116, v12, v127, v165, v21, v212, v250, v261, v272, v292, v303, v32, v329, v355, v405, v455, v481, v507, v52, v533, v559, v585, v683, v72, v805, v83, v903, v929, v94, v955;
< java.util.Map v10, v100, v1000, v1004, v101, v1011, v1012, v1013, v1014, v1015, v1016, v1017, v1018, v1019, v102, v1020, v1021, v1022, v1023, v1024, v1025, v1026, v103, v1030, v104, v109, v11, v110, v111, v112, v113, v114, v115, v120, v121, v122, v123, v124, v125, v126, v131, v132, v133, v134, v135, v136, v137, v14, v140, v141, v142, v143, v144, v145, v146, v149, v15, v150, v151, v152, v153, v154, v155, v158, v159, v16, v160, v161, v162, v163, v164, v169, v17, v170, v171, v172, v173, v174, v175, v178, v179, v18, v180, v181, v182, v183, v184, v187, v188, v189, v19, v190, v191, v192, v193, v196, v197, v198, v199, v2, v20, v200, v201, v202, v205, v206, v207, v208, v209, v210, v211, v216, v217, v218, v219, v220, v221, v222, v225, v226, v227, v228, v229, v230, v231, v234, v235, v236, v237, v238, v239, v240, v243, v244, v245, v246, v247, v248, v249, v25, v254, v255, v256, v257, v258, v259, v26, v260, v265, v266, v267, v268, v269, v27, v270, v271, v276, v277, v278, v279, v28, v280, v281, v282, v285, v286, v287, v288, v289, v29, v290, v291, v296, v297, v298, v299, v3, v30, v300, v301, v302, v309, v31, v310, v311, v312, v313, v314, v315, v316, v317, v318, v319, v320, v321, v322, v323, v324, v328, v335, v336, v337, v338, v339, v340, v341, v342, v343, v344, v345, v346, v347, v348, v349, v350, v354, v36, v361, v362, v363, v364, v365, v366, v367, v368, v369, v37, v370, v371, v372, v373, v374, v375, v376, v38, v380, v385, v386, v387, v388, v389, v39, v390, v391, v392, v393, v394, v395, v396, v397, v398, v399, v4, v40, v400, v404, v41, v411, v412, v413, v414, v415, v416, v417, v418, v419, v42, v420, v421, v422, v423, v424, v425, v426, v430, v435, v436, v437, v438, v439, v440, v441, v442, v443, v444, v445, v446, v447, v448, v449, v45, v450, v454, v46, v461, v462, v463, v464, v465, v466, v467, v468, v469, v47, v470, v471, v472, v473, v474, v475, v476, v48, v480, v487, v488, v489, v49, v490, v491, v492, v493, v494, v495, v496, v497, v498, v499, v5, v50, v500, v501, v502, v506, v51, v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, v523, v524, v525, v526, v527, v528, v532, v539, v540, v541, v542, v543, v544, v545, v546, v547, v548, v549, v550, v551, v552, v553, v554, v558, v56, v565, v566, v567, v568, v569, v57, v570, v571, v572, v573, v574, v575, v576, v577, v578, v579, v58, v580, v584, v59, v591, v592, v593, v594, v595, v596, v597, v598, v599, v6, v60, v600, v601, v602, v603, v604, v605, v606, v61, v610, v615, v616, v617, v618, v619, v62, v620, v621, v622, v623, v624, v625, v626, v627, v628, v629, v630, v634, v639, v640, v641, v642, v643, v644, v645, v646, v647, v648, v649, v65, v650, v651, v652, v653, v654, v658, v66, v663, v664, v665, v666, v667, v668, v669, v67, v670, v671, v672, v673, v674, v675, v676, v677, v678, v68, v682, v689, v69, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v70, v700, v701, v702, v703, v704, v708, v71, v713, v714, v715, v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v727, v728, v732, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v750, v751, v752, v756, v76, v761, v762, v763, v764, v765, v766, v767, v768, v769, v77, v770, v771, v772, v773, v774, v775, v776, v78, v780, v785, v786, v787, v788, v789, v79, v790, v791, v792, v793, v794, v795, v796, v797, v798, v799, v8, v80, v800, v804, v81, v811, v812, v813, v814, v815, v816, v817, v818, v819, v82, v820, v821, v822, v823, v824, v825, v826, v830, v835, v836, v837, v838, v839, v840, v841, v842, v843, v844, v845, v846, v847, v848, v849, v850, v854, v859, v860, v861, v862, v863, v864, v865, v866, v867, v868, v869, v87, v870, v871, v872, v873, v874, v878, v88, v883, v884, v885, v886, v887, v888, v889, v89, v890, v891, v892, v893, v894, v895, v896, v897, v898, v9, v90, v902, v909, v91, v910, v911, v912, v913, v914, v915, v916, v917, v918, v919, v92, v920, v921, v922, v923, v924, v928, v93, v935, v936, v937, v938, v939, v940, v941, v942, v943, v944, v945, v946, v947, v948, v949, v950, v954, v961, v962, v963, v964, v965, v966, v967, v968, v969, v970, v971, v972, v973, v974, v975, v976, v98, v980, v985, v986, v987, v988, v989, v99, v990, v991, v992, v993, v994, v995, v996, v997, v998, v999;
---
> int v1004, v1030, v1056, v1082, v1108, v354, v380, v404, v430, v454, v480, v506, v532, v558, v584, v610, v634, v658, v682, v708, v732, v756, v780, v804, v830, v854, v878, v902, v928, v954, v980;
> io.micronaut.inject.'annotation'.DefaultAnnotationMetadata v0, v1006, v1032, v1058, v108, v1084, v119, v13, v130, v139, v148, v157, v168, v177, v186, v195, v204, v215, v224, v233, v24, v242, v253, v264, v275, v284, v295, v306, v317, v330, v35, v356, v382, v406, v432, v44, v456, v482, v508, v534, v55, v560, v586, v612, v636, v64, v660, v684, v710, v734, v75, v758, v782, v806, v832, v856, v86, v880, v904, v930, v956, v97, v982;
> io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef[] v328;
> java.util.List v1000, v1001, v1023, v1024, v1025, v1049, v1050, v1051, v1075, v1076, v1077, v1101, v1102, v1103, v347, v348, v349, v373, v374, v375, v399, v400, v401, v423, v424, v425, v449, v450, v451, v473, v474, v475, v499, v500, v501, v525, v526, v527, v551, v552, v553, v577, v578, v579, v603, v604, v605, v629, v630, v631, v653, v654, v655, v677, v678, v679, v701, v702, v703, v727, v728, v729, v751, v752, v753, v775, v776, v777, v799, v800, v801, v823, v824, v825, v849, v850, v851, v873, v874, v875, v897, v898, v899, v921, v922, v923, v947, v948, v949, v973, v974, v975, v999;
> io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef v1005, v1031, v1057, v1083, v329, v355, v381, v405, v431, v455, v481, v507, v533, v559, v585, v611, v635, v659, v683, v709, v733, v757, v781, v805, v831, v855, v879, v903, v929, v955, v981;
> io.micronaut.core.type.Argument[] v1027, v105, v1053, v1079, v1105, v116, v12, v127, v165, v21, v212, v250, v261, v272, v292, v303, v314, v32, v325, v351, v377, v427, v477, v503, v52, v529, v555, v581, v607, v705, v72, v827, v83, v925, v94, v951, v977;
> java.util.Map v10, v100, v1002, v1007, v1008, v1009, v101, v1010, v1011, v1012, v1013, v1014, v1015, v1016, v1017, v1018, v1019, v102, v1020, v1021, v1022, v1026, v103, v1033, v1034, v1035, v1036, v1037, v1038, v1039, v104, v1040, v1041, v1042, v1043, v1044, v1045, v1046, v1047, v1048, v1052, v1059, v1060, v1061, v1062, v1063, v1064, v1065, v1066, v1067, v1068, v1069, v1070, v1071, v1072, v1073, v1074, v1078, v1085, v1086, v1087, v1088, v1089, v109, v1090, v1091, v1092, v1093, v1094, v1095, v1096, v1097, v1098, v1099, v11, v110, v1100, v1104, v111, v112, v113, v114, v115, v120, v121, v122, v123, v124, v125, v126, v131, v132, v133, v134, v135, v136, v137, v14, v140, v141, v142, v143, v144, v145, v146, v149, v15, v150, v151, v152, v153, v154, v155, v158, v159, v16, v160, v161, v162, v163, v164, v169, v17, v170, v171, v172, v173, v174, v175, v178, v179, v18, v180, v181, v182, v183, v184, v187, v188, v189, v19, v190, v191, v192, v193, v196, v197, v198, v199, v2, v20, v200, v201, v202, v205, v206, v207, v208, v209, v210, v211, v216, v217, v218, v219, v220, v221, v222, v225, v226, v227, v228, v229, v230, v231, v234, v235, v236, v237, v238, v239, v240, v243, v244, v245, v246, v247, v248, v249, v25, v254, v255, v256, v257, v258, v259, v26, v260, v265, v266, v267, v268, v269, v27, v270, v271, v276, v277, v278, v279, v28, v280, v281, v282, v285, v286, v287, v288, v289, v29, v290, v291, v296, v297, v298, v299, v3, v30, v300, v301, v302, v307, v308, v309, v31, v310, v311, v312, v313, v318, v319, v320, v321, v322, v323, v324, v331, v332, v333, v334, v335, v336, v337, v338, v339, v340, v341, v342, v343, v344, v345, v346, v350, v357, v358, v359, v36, v360, v361, v362, v363, v364, v365, v366, v367, v368, v369, v37, v370, v371, v372, v376, v38, v383, v384, v385, v386, v387, v388, v389, v39, v390, v391, v392, v393, v394, v395, v396, v397, v398, v4, v40, v402, v407, v408, v409, v41, v410, v411, v412, v413, v414, v415, v416, v417, v418, v419, v42, v420, v421, v422, v426, v433, v434, v435, v436, v437, v438, v439, v440, v441, v442, v443, v444, v445, v446, v447, v448, v45, v452, v457, v458, v459, v46, v460, v461, v462, v463, v464, v465, v466, v467, v468, v469, v47, v470, v471, v472, v476, v48, v483, v484, v485, v486, v487, v488, v489, v49, v490, v491, v492, v493, v494, v495, v496, v497, v498, v5, v50, v502, v509, v51, v510, v511, v512, v513, v514, v515, v516, v517, v518, v519, v520, v521, v522, v523, v524, v528, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, v546, v547, v548, v549, v550, v554, v56, v561, v562, v563, v564, v565, v566, v567, v568, v569, v57, v570, v571, v572, v573, v574, v575, v576, v58, v580, v587, v588, v589, v59, v590, v591, v592, v593, v594, v595, v596, v597, v598, v599, v6, v60, v600, v601, v602, v606, v61, v613, v614, v615, v616, v617, v618, v619, v62, v620, v621, v622, v623, v624, v625, v626, v627, v628, v632, v637, v638, v639, v640, v641, v642, v643, v644, v645, v646, v647, v648, v649, v65, v650, v651, v652, v656, v66, v661, v662, v663, v664, v665, v666, v667, v668, v669, v67, v670, v671, v672, v673, v674, v675, v676, v68, v680, v685, v686, v687, v688, v689, v69, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v70, v700, v704, v71, v711, v712, v713, v714, v715, v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v730, v735, v736, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v750, v754, v759, v76, v760, v761, v762, v763, v764, v765, v766, v767, v768, v769, v77, v770, v771, v772, v773, v774, v778, v78, v783, v784, v785, v786, v787, v788, v789, v79, v790, v791, v792, v793, v794, v795, v796, v797, v798, v8, v80, v802, v807, v808, v809, v81, v810, v811, v812, v813, v814, v815, v816, v817, v818, v819, v82, v820, v821, v822, v826, v833, v834, v835, v836, v837, v838, v839, v840, v841, v842, v843, v844, v845, v846, v847, v848, v852, v857, v858, v859, v860, v861, v862, v863, v864, v865, v866, v867, v868, v869, v87, v870, v871, v872, v876, v88, v881, v882, v883, v884, v885, v886, v887, v888, v889, v89, v890, v891, v892, v893, v894, v895, v896, v9, v90, v900, v905, v906, v907, v908, v909, v91, v910, v911, v912, v913, v914, v915, v916, v917, v918, v919, v92, v920, v924, v93, v931, v932, v933, v934, v935, v936, v937, v938, v939, v940, v941, v942, v943, v944, v945, v946, v950, v957, v958, v959, v960, v961, v962, v963, v964, v965, v966, v967, v968, v969, v970, v971, v972, v976, v98, v983, v984, v985, v986, v987, v988, v989, v99, v990, v991, v992, v993, v994, v995, v996, v997, v998;
18c18
< v1 = newarray (java.lang.String)[29];
---
> v1 = newarray (java.lang.String)[31];
47a48,49
> v1[29] = "endpoints";
> v1[30] = "sourceProperties";
53c55
< v7 = newarray (java.lang.String)[29];
---
> v7 = newarray (java.lang.String)[31];
82a85,86
> v7[29] = "endpoints";
> v7[30] = "sourceProperties";
89c93
< v12 = newarray (io.micronaut.core.type.Argument)[29];
---
> v12 = newarray (io.micronaut.core.type.Argument)[31];
457,462c461,465
< <com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: io.micronaut.core.type.Argument[] $CONSTRUCTOR_ARGUMENTS> = v12;
< v306 = newarray (io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef)[29];
< v307 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v308 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v309 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelConditions");
< v310 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelConditions");
---
> v306 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v307 = staticinvoke <java.util.Map: java.util.Map of()>();
> v308 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("jakarta.annotation.Nullable", v307);
> v309 = staticinvoke <java.util.Map: java.util.Map of()>();
> v310 = staticinvoke <java.util.Map: java.util.Map of()>();
464c467
< v312 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v309, "io.micronaut.serde.config.annotation.SerdeConfig", v310, "jakarta.annotation.Nullable", v311);
---
> v312 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("jakarta.annotation.Nullable", v311);
466,469c469,475
< v314 = staticinvoke <java.util.Map: java.util.Map of()>();
< v315 = staticinvoke <java.util.Map: java.util.Map of()>();
< v316 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v313, "io.micronaut.core.annotation.Internal", v314, "io.micronaut.serde.config.annotation.SerdeConfig", v315);
< v317 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> specialinvoke v306.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v308, v309, v310, v312, v313, 0, 0);
> v314 = newarray (io.micronaut.core.type.Argument)[1];
> v315 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsEndpoint;", "E");
> v314[0] = v315;
> v316 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "endpoints", v306, v314);
> v12[29] = v316;
> v317 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
471,492c477,498
< v319 = staticinvoke <java.util.Map: java.util.Map of()>();
< v320 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v317, "io.micronaut.core.annotation.Internal", v318, "io.micronaut.serde.config.annotation.SerdeConfig", v319);
< v321 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelConditions");
< v322 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelConditions");
< v323 = staticinvoke <java.util.Map: java.util.Map of()>();
< v324 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v321, "io.micronaut.serde.config.annotation.SerdeConfig", v322, "jakarta.annotation.Nullable", v323);
< v325 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v326 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v327 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v328 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v325, "io.micronaut.core.annotation.Internal", v326, "io.micronaut.serde.config.annotation.SerdeConfig", v327);
< specialinvoke v308.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v312, v316, v320, v324, v328, 0, 0);
< v329 = newarray (io.micronaut.core.type.Argument)[1];
< v330 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceLabelCondition;", "E");
< v329[0] = v330;
< v331 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labelConditions", v308, v329);
< v332 = (int) -1;
< specialinvoke v307.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v331, 0, v332, 1, 1, 1);
< v306[0] = v307;
< v333 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v334 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v335 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "dataFilterDefinitions");
< v336 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "dataFilterDefinitions");
---
> v319 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("jakarta.annotation.Nullable", v318);
> v320 = staticinvoke <java.util.Map: java.util.Map of()>();
> v321 = staticinvoke <java.util.Map: java.util.Map of()>();
> v322 = staticinvoke <java.util.Map: java.util.Map of()>();
> v323 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("jakarta.annotation.Nullable", v322);
> v324 = staticinvoke <java.util.Map: java.util.Map of()>();
> specialinvoke v317.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v319, v320, v321, v323, v324, 0, 0);
> v325 = newarray (io.micronaut.core.type.Argument)[1];
> v326 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsProperty;", "E");
> v325[0] = v326;
> v327 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "sourceProperties", v317, v325);
> v12[30] = v327;
> <com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: io.micronaut.core.type.Argument[] $CONSTRUCTOR_ARGUMENTS> = v12;
> v328 = newarray (io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef)[31];
> v329 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v330 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v331 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelConditions");
> v332 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelConditions");
> v333 = staticinvoke <java.util.Map: java.util.Map of()>();
> v334 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v331, "io.micronaut.serde.config.annotation.SerdeConfig", v332, "jakarta.annotation.Nullable", v333);
> v335 = staticinvoke <java.util.Map: java.util.Map of()>();
> v336 = staticinvoke <java.util.Map: java.util.Map of()>();
494c500
< v338 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v335, "io.micronaut.serde.config.annotation.SerdeConfig", v336, "jakarta.annotation.Nullable", v337);
---
> v338 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v335, "io.micronaut.core.annotation.Internal", v336, "io.micronaut.serde.config.annotation.SerdeConfig", v337);
499,500c505,506
< v343 = staticinvoke <java.util.Map: java.util.Map of()>();
< v344 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v343 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelConditions");
> v344 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelConditions");
502,522c508,528
< v346 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v343, "io.micronaut.core.annotation.Internal", v344, "io.micronaut.serde.config.annotation.SerdeConfig", v345);
< v347 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "dataFilterDefinitions");
< v348 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "dataFilterDefinitions");
< v349 = staticinvoke <java.util.Map: java.util.Map of()>();
< v350 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v347, "io.micronaut.serde.config.annotation.SerdeConfig", v348, "jakarta.annotation.Nullable", v349);
< v351 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v352 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v353 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v354 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v351, "io.micronaut.core.annotation.Internal", v352, "io.micronaut.serde.config.annotation.SerdeConfig", v353);
< specialinvoke v334.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v338, v342, v346, v350, v354, 0, 0);
< v355 = newarray (io.micronaut.core.type.Argument)[1];
< v356 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceDataFilter;", "E");
< v355[0] = v356;
< v357 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "dataFilterDefinitions", v334, v355);
< v358 = (int) -1;
< specialinvoke v333.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v357, 2, v358, 3, 1, 1);
< v306[1] = v333;
< v359 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v360 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v361 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "databaseCredential");
< v362 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "databaseCredential");
---
> v346 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v343, "io.micronaut.serde.config.annotation.SerdeConfig", v344, "jakarta.annotation.Nullable", v345);
> v347 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v348 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v349 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v350 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v347, "io.micronaut.core.annotation.Internal", v348, "io.micronaut.serde.config.annotation.SerdeConfig", v349);
> specialinvoke v330.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v334, v338, v342, v346, v350, 0, 0);
> v351 = newarray (io.micronaut.core.type.Argument)[1];
> v352 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceLabelCondition;", "E");
> v351[0] = v352;
> v353 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labelConditions", v330, v351);
> v354 = (int) -1;
> specialinvoke v329.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v353, 0, v354, 1, 1, 1);
> v328[0] = v329;
> v355 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v356 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v357 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "dataFilterDefinitions");
> v358 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "dataFilterDefinitions");
> v359 = staticinvoke <java.util.Map: java.util.Map of()>();
> v360 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v357, "io.micronaut.serde.config.annotation.SerdeConfig", v358, "jakarta.annotation.Nullable", v359);
> v361 = staticinvoke <java.util.Map: java.util.Map of()>();
> v362 = staticinvoke <java.util.Map: java.util.Map of()>();
524c530
< v364 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v361, "io.micronaut.serde.config.annotation.SerdeConfig", v362, "jakarta.annotation.Nullable", v363);
---
> v364 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v361, "io.micronaut.core.annotation.Internal", v362, "io.micronaut.serde.config.annotation.SerdeConfig", v363);
529,530c535,536
< v369 = staticinvoke <java.util.Map: java.util.Map of()>();
< v370 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v369 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "dataFilterDefinitions");
> v370 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "dataFilterDefinitions");
532,549c538,556
< v372 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v369, "io.micronaut.core.annotation.Internal", v370, "io.micronaut.serde.config.annotation.SerdeConfig", v371);
< v373 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "databaseCredential");
< v374 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "databaseCredential");
< v375 = staticinvoke <java.util.Map: java.util.Map of()>();
< v376 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v373, "io.micronaut.serde.config.annotation.SerdeConfig", v374, "jakarta.annotation.Nullable", v375);
< v377 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v378 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v379 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v380 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v377, "io.micronaut.core.annotation.Internal", v378, "io.micronaut.serde.config.annotation.SerdeConfig", v379);
< specialinvoke v360.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v364, v368, v372, v376, v380, 0, 0);
< v381 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "databaseCredential", v360, null);
< v382 = (int) -1;
< specialinvoke v359.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v381, 4, v382, 5, 1, 1);
< v306[2] = v359;
< v383 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v384 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v385 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "extendedFieldDefinitions");
< v386 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "extendedFieldDefinitions");
---
> v372 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v369, "io.micronaut.serde.config.annotation.SerdeConfig", v370, "jakarta.annotation.Nullable", v371);
> v373 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v374 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v375 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v376 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v373, "io.micronaut.core.annotation.Internal", v374, "io.micronaut.serde.config.annotation.SerdeConfig", v375);
> specialinvoke v356.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v360, v364, v368, v372, v376, 0, 0);
> v377 = newarray (io.micronaut.core.type.Argument)[1];
> v378 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceDataFilter;", "E");
> v377[0] = v378;
> v379 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "dataFilterDefinitions", v356, v377);
> v380 = (int) -1;
> specialinvoke v355.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v379, 2, v380, 3, 1, 1);
> v328[1] = v355;
> v381 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v382 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v383 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "databaseCredential");
> v384 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "databaseCredential");
> v385 = staticinvoke <java.util.Map: java.util.Map of()>();
> v386 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v383, "io.micronaut.serde.config.annotation.SerdeConfig", v384, "jakarta.annotation.Nullable", v385);
551c558
< v388 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v385, "io.micronaut.serde.config.annotation.SerdeConfig", v386, "jakarta.annotation.Nullable", v387);
---
> v388 = staticinvoke <java.util.Map: java.util.Map of()>();
553c560
< v390 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v390 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v387, "io.micronaut.core.annotation.Internal", v388, "io.micronaut.serde.config.annotation.SerdeConfig", v389);
555c562
< v392 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v389, "io.micronaut.core.annotation.Internal", v390, "io.micronaut.serde.config.annotation.SerdeConfig", v391);
---
> v392 = staticinvoke <java.util.Map: java.util.Map of()>();
557,563c564,570
< v394 = staticinvoke <java.util.Map: java.util.Map of()>();
< v395 = staticinvoke <java.util.Map: java.util.Map of()>();
< v396 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v393, "io.micronaut.core.annotation.Internal", v394, "io.micronaut.serde.config.annotation.SerdeConfig", v395);
< v397 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "extendedFieldDefinitions");
< v398 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "extendedFieldDefinitions");
< v399 = staticinvoke <java.util.Map: java.util.Map of()>();
< v400 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v397, "io.micronaut.serde.config.annotation.SerdeConfig", v398, "jakarta.annotation.Nullable", v399);
---
> v394 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v391, "io.micronaut.core.annotation.Internal", v392, "io.micronaut.serde.config.annotation.SerdeConfig", v393);
> v395 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "databaseCredential");
> v396 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "databaseCredential");
> v397 = staticinvoke <java.util.Map: java.util.Map of()>();
> v398 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v395, "io.micronaut.serde.config.annotation.SerdeConfig", v396, "jakarta.annotation.Nullable", v397);
> v399 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v400 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
565,579c572,585
< v402 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v403 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v404 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v401, "io.micronaut.core.annotation.Internal", v402, "io.micronaut.serde.config.annotation.SerdeConfig", v403);
< specialinvoke v384.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v388, v392, v396, v400, v404, 0, 0);
< v405 = newarray (io.micronaut.core.type.Argument)[1];
< v406 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceExtendedFieldDefinition;", "E");
< v405[0] = v406;
< v407 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "extendedFieldDefinitions", v384, v405);
< v408 = (int) -1;
< specialinvoke v383.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v407, 6, v408, 7, 1, 1);
< v306[3] = v383;
< v409 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v410 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v411 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isForCloud");
< v412 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isForCloud");
---
> v402 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v399, "io.micronaut.core.annotation.Internal", v400, "io.micronaut.serde.config.annotation.SerdeConfig", v401);
> specialinvoke v382.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v386, v390, v394, v398, v402, 0, 0);
> v403 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "databaseCredential", v382, null);
> v404 = (int) -1;
> specialinvoke v381.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v403, 4, v404, 5, 1, 1);
> v328[2] = v381;
> v405 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v406 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v407 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "extendedFieldDefinitions");
> v408 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "extendedFieldDefinitions");
> v409 = staticinvoke <java.util.Map: java.util.Map of()>();
> v410 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v407, "io.micronaut.serde.config.annotation.SerdeConfig", v408, "jakarta.annotation.Nullable", v409);
> v411 = staticinvoke <java.util.Map: java.util.Map of()>();
> v412 = staticinvoke <java.util.Map: java.util.Map of()>();
581c587
< v414 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v411, "io.micronaut.serde.config.annotation.SerdeConfig", v412, "jakarta.annotation.Nullable", v413);
---
> v414 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v411, "io.micronaut.core.annotation.Internal", v412, "io.micronaut.serde.config.annotation.SerdeConfig", v413);
586,587c592,593
< v419 = staticinvoke <java.util.Map: java.util.Map of()>();
< v420 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v419 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "extendedFieldDefinitions");
> v420 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "extendedFieldDefinitions");
589,606c595,613
< v422 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v419, "io.micronaut.core.annotation.Internal", v420, "io.micronaut.serde.config.annotation.SerdeConfig", v421);
< v423 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isForCloud");
< v424 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isForCloud");
< v425 = staticinvoke <java.util.Map: java.util.Map of()>();
< v426 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v423, "io.micronaut.serde.config.annotation.SerdeConfig", v424, "jakarta.annotation.Nullable", v425);
< v427 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v428 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v429 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v430 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v427, "io.micronaut.core.annotation.Internal", v428, "io.micronaut.serde.config.annotation.SerdeConfig", v429);
< specialinvoke v410.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v414, v418, v422, v426, v430, 0, 0);
< v431 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isForCloud", v410, null);
< v432 = (int) -1;
< specialinvoke v409.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v431, 8, v432, 9, 1, 1);
< v306[4] = v409;
< v433 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v434 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v435 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labels");
< v436 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labels");
---
> v422 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v419, "io.micronaut.serde.config.annotation.SerdeConfig", v420, "jakarta.annotation.Nullable", v421);
> v423 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v424 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v425 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v426 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v423, "io.micronaut.core.annotation.Internal", v424, "io.micronaut.serde.config.annotation.SerdeConfig", v425);
> specialinvoke v406.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v410, v414, v418, v422, v426, 0, 0);
> v427 = newarray (io.micronaut.core.type.Argument)[1];
> v428 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceExtendedFieldDefinition;", "E");
> v427[0] = v428;
> v429 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "extendedFieldDefinitions", v406, v427);
> v430 = (int) -1;
> specialinvoke v405.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v429, 6, v430, 7, 1, 1);
> v328[3] = v405;
> v431 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v432 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v433 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isForCloud");
> v434 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isForCloud");
> v435 = staticinvoke <java.util.Map: java.util.Map of()>();
> v436 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v433, "io.micronaut.serde.config.annotation.SerdeConfig", v434, "jakarta.annotation.Nullable", v435);
608c615
< v438 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v435, "io.micronaut.serde.config.annotation.SerdeConfig", v436, "jakarta.annotation.Nullable", v437);
---
> v438 = staticinvoke <java.util.Map: java.util.Map of()>();
610c617
< v440 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v440 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v437, "io.micronaut.core.annotation.Internal", v438, "io.micronaut.serde.config.annotation.SerdeConfig", v439);
612c619
< v442 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v439, "io.micronaut.core.annotation.Internal", v440, "io.micronaut.serde.config.annotation.SerdeConfig", v441);
---
> v442 = staticinvoke <java.util.Map: java.util.Map of()>();
614,620c621,627
< v444 = staticinvoke <java.util.Map: java.util.Map of()>();
< v445 = staticinvoke <java.util.Map: java.util.Map of()>();
< v446 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v443, "io.micronaut.core.annotation.Internal", v444, "io.micronaut.serde.config.annotation.SerdeConfig", v445);
< v447 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labels");
< v448 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labels");
< v449 = staticinvoke <java.util.Map: java.util.Map of()>();
< v450 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v447, "io.micronaut.serde.config.annotation.SerdeConfig", v448, "jakarta.annotation.Nullable", v449);
---
> v444 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v441, "io.micronaut.core.annotation.Internal", v442, "io.micronaut.serde.config.annotation.SerdeConfig", v443);
> v445 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isForCloud");
> v446 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isForCloud");
> v447 = staticinvoke <java.util.Map: java.util.Map of()>();
> v448 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v445, "io.micronaut.serde.config.annotation.SerdeConfig", v446, "jakarta.annotation.Nullable", v447);
> v449 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v450 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
622,636c629,642
< v452 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v453 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v454 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v451, "io.micronaut.core.annotation.Internal", v452, "io.micronaut.serde.config.annotation.SerdeConfig", v453);
< specialinvoke v434.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v438, v442, v446, v450, v454, 0, 0);
< v455 = newarray (io.micronaut.core.type.Argument)[1];
< v456 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsLabelView;", "E");
< v455[0] = v456;
< v457 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labels", v434, v455);
< v458 = (int) -1;
< specialinvoke v433.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v457, 10, v458, 11, 1, 1);
< v306[5] = v433;
< v459 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v460 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v461 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metricDefinitions");
< v462 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metricDefinitions");
---
> v452 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v449, "io.micronaut.core.annotation.Internal", v450, "io.micronaut.serde.config.annotation.SerdeConfig", v451);
> specialinvoke v432.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v436, v440, v444, v448, v452, 0, 0);
> v453 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isForCloud", v432, null);
> v454 = (int) -1;
> specialinvoke v431.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v453, 8, v454, 9, 1, 1);
> v328[4] = v431;
> v455 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v456 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v457 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labels");
> v458 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labels");
> v459 = staticinvoke <java.util.Map: java.util.Map of()>();
> v460 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v457, "io.micronaut.serde.config.annotation.SerdeConfig", v458, "jakarta.annotation.Nullable", v459);
> v461 = staticinvoke <java.util.Map: java.util.Map of()>();
> v462 = staticinvoke <java.util.Map: java.util.Map of()>();
638c644
< v464 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v461, "io.micronaut.serde.config.annotation.SerdeConfig", v462, "jakarta.annotation.Nullable", v463);
---
> v464 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v461, "io.micronaut.core.annotation.Internal", v462, "io.micronaut.serde.config.annotation.SerdeConfig", v463);
643,644c649,650
< v469 = staticinvoke <java.util.Map: java.util.Map of()>();
< v470 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v469 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labels");
> v470 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labels");
646,666c652,672
< v472 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v469, "io.micronaut.core.annotation.Internal", v470, "io.micronaut.serde.config.annotation.SerdeConfig", v471);
< v473 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metricDefinitions");
< v474 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metricDefinitions");
< v475 = staticinvoke <java.util.Map: java.util.Map of()>();
< v476 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v473, "io.micronaut.serde.config.annotation.SerdeConfig", v474, "jakarta.annotation.Nullable", v475);
< v477 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v478 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v479 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v480 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v477, "io.micronaut.core.annotation.Internal", v478, "io.micronaut.serde.config.annotation.SerdeConfig", v479);
< specialinvoke v460.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v464, v468, v472, v476, v480, 0, 0);
< v481 = newarray (io.micronaut.core.type.Argument)[1];
< v482 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsMetric;", "E");
< v481[0] = v482;
< v483 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metricDefinitions", v460, v481);
< v484 = (int) -1;
< specialinvoke v459.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v483, 12, v484, 13, 1, 1);
< v306[6] = v459;
< v485 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v486 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v487 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metrics");
< v488 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metrics");
---
> v472 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v469, "io.micronaut.serde.config.annotation.SerdeConfig", v470, "jakarta.annotation.Nullable", v471);
> v473 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v474 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v475 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v476 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v473, "io.micronaut.core.annotation.Internal", v474, "io.micronaut.serde.config.annotation.SerdeConfig", v475);
> specialinvoke v456.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v460, v464, v468, v472, v476, 0, 0);
> v477 = newarray (io.micronaut.core.type.Argument)[1];
> v478 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsLabelView;", "E");
> v477[0] = v478;
> v479 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labels", v456, v477);
> v480 = (int) -1;
> specialinvoke v455.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v479, 10, v480, 11, 1, 1);
> v328[5] = v455;
> v481 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v482 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v483 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metricDefinitions");
> v484 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metricDefinitions");
> v485 = staticinvoke <java.util.Map: java.util.Map of()>();
> v486 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v483, "io.micronaut.serde.config.annotation.SerdeConfig", v484, "jakarta.annotation.Nullable", v485);
> v487 = staticinvoke <java.util.Map: java.util.Map of()>();
> v488 = staticinvoke <java.util.Map: java.util.Map of()>();
668c674
< v490 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v487, "io.micronaut.serde.config.annotation.SerdeConfig", v488, "jakarta.annotation.Nullable", v489);
---
> v490 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v487, "io.micronaut.core.annotation.Internal", v488, "io.micronaut.serde.config.annotation.SerdeConfig", v489);
673,674c679,680
< v495 = staticinvoke <java.util.Map: java.util.Map of()>();
< v496 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v495 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metricDefinitions");
> v496 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metricDefinitions");
676,696c682,702
< v498 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v495, "io.micronaut.core.annotation.Internal", v496, "io.micronaut.serde.config.annotation.SerdeConfig", v497);
< v499 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metrics");
< v500 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metrics");
< v501 = staticinvoke <java.util.Map: java.util.Map of()>();
< v502 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v499, "io.micronaut.serde.config.annotation.SerdeConfig", v500, "jakarta.annotation.Nullable", v501);
< v503 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v504 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v505 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v506 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v503, "io.micronaut.core.annotation.Internal", v504, "io.micronaut.serde.config.annotation.SerdeConfig", v505);
< specialinvoke v486.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v490, v494, v498, v502, v506, 0, 0);
< v507 = newarray (io.micronaut.core.type.Argument)[1];
< v508 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceMetric;", "E");
< v507[0] = v508;
< v509 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metrics", v486, v507);
< v510 = (int) -1;
< specialinvoke v485.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v509, 14, v510, 15, 1, 1);
< v306[7] = v485;
< v511 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v512 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v513 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "oobParsers");
< v514 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "oobParsers");
---
> v498 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v495, "io.micronaut.serde.config.annotation.SerdeConfig", v496, "jakarta.annotation.Nullable", v497);
> v499 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v500 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v501 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v502 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v499, "io.micronaut.core.annotation.Internal", v500, "io.micronaut.serde.config.annotation.SerdeConfig", v501);
> specialinvoke v482.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v486, v490, v494, v498, v502, 0, 0);
> v503 = newarray (io.micronaut.core.type.Argument)[1];
> v504 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsMetric;", "E");
> v503[0] = v504;
> v505 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metricDefinitions", v482, v503);
> v506 = (int) -1;
> specialinvoke v481.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v505, 12, v506, 13, 1, 1);
> v328[6] = v481;
> v507 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v508 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v509 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metrics");
> v510 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metrics");
> v511 = staticinvoke <java.util.Map: java.util.Map of()>();
> v512 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v509, "io.micronaut.serde.config.annotation.SerdeConfig", v510, "jakarta.annotation.Nullable", v511);
> v513 = staticinvoke <java.util.Map: java.util.Map of()>();
> v514 = staticinvoke <java.util.Map: java.util.Map of()>();
698c704
< v516 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v513, "io.micronaut.serde.config.annotation.SerdeConfig", v514, "jakarta.annotation.Nullable", v515);
---
> v516 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v513, "io.micronaut.core.annotation.Internal", v514, "io.micronaut.serde.config.annotation.SerdeConfig", v515);
703,704c709,710
< v521 = staticinvoke <java.util.Map: java.util.Map of()>();
< v522 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v521 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metrics");
> v522 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metrics");
706,726c712,732
< v524 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v521, "io.micronaut.core.annotation.Internal", v522, "io.micronaut.serde.config.annotation.SerdeConfig", v523);
< v525 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "oobParsers");
< v526 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "oobParsers");
< v527 = staticinvoke <java.util.Map: java.util.Map of()>();
< v528 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v525, "io.micronaut.serde.config.annotation.SerdeConfig", v526, "jakarta.annotation.Nullable", v527);
< v529 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v530 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v531 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v532 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v529, "io.micronaut.core.annotation.Internal", v530, "io.micronaut.serde.config.annotation.SerdeConfig", v531);
< specialinvoke v512.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v516, v520, v524, v528, v532, 0, 0);
< v533 = newarray (io.micronaut.core.type.Argument)[1];
< v534 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
< v533[0] = v534;
< v535 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "oobParsers", v512, v533);
< v536 = (int) -1;
< specialinvoke v511.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v535, 16, v536, 17, 1, 1);
< v306[8] = v511;
< v537 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v538 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v539 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parameters");
< v540 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parameters");
---
> v524 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v521, "io.micronaut.serde.config.annotation.SerdeConfig", v522, "jakarta.annotation.Nullable", v523);
> v525 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v526 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v527 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v528 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v525, "io.micronaut.core.annotation.Internal", v526, "io.micronaut.serde.config.annotation.SerdeConfig", v527);
> specialinvoke v508.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v512, v516, v520, v524, v528, 0, 0);
> v529 = newarray (io.micronaut.core.type.Argument)[1];
> v530 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceMetric;", "E");
> v529[0] = v530;
> v531 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metrics", v508, v529);
> v532 = (int) -1;
> specialinvoke v507.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v531, 14, v532, 15, 1, 1);
> v328[7] = v507;
> v533 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v534 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v535 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "oobParsers");
> v536 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "oobParsers");
> v537 = staticinvoke <java.util.Map: java.util.Map of()>();
> v538 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v535, "io.micronaut.serde.config.annotation.SerdeConfig", v536, "jakarta.annotation.Nullable", v537);
> v539 = staticinvoke <java.util.Map: java.util.Map of()>();
> v540 = staticinvoke <java.util.Map: java.util.Map of()>();
728c734
< v542 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v539, "io.micronaut.serde.config.annotation.SerdeConfig", v540, "jakarta.annotation.Nullable", v541);
---
> v542 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v539, "io.micronaut.core.annotation.Internal", v540, "io.micronaut.serde.config.annotation.SerdeConfig", v541);
733,734c739,740
< v547 = staticinvoke <java.util.Map: java.util.Map of()>();
< v548 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v547 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "oobParsers");
> v548 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "oobParsers");
736,756c742,762
< v550 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v547, "io.micronaut.core.annotation.Internal", v548, "io.micronaut.serde.config.annotation.SerdeConfig", v549);
< v551 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parameters");
< v552 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parameters");
< v553 = staticinvoke <java.util.Map: java.util.Map of()>();
< v554 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v551, "io.micronaut.serde.config.annotation.SerdeConfig", v552, "jakarta.annotation.Nullable", v553);
< v555 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v556 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v557 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v558 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v555, "io.micronaut.core.annotation.Internal", v556, "io.micronaut.serde.config.annotation.SerdeConfig", v557);
< specialinvoke v538.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v542, v546, v550, v554, v558, 0, 0);
< v559 = newarray (io.micronaut.core.type.Argument)[1];
< v560 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParameter;", "E");
< v559[0] = v560;
< v561 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "parameters", v538, v559);
< v562 = (int) -1;
< specialinvoke v537.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v561, 18, v562, 19, 1, 1);
< v306[9] = v537;
< v563 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v564 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v565 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "patterns");
< v566 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "patterns");
---
> v550 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v547, "io.micronaut.serde.config.annotation.SerdeConfig", v548, "jakarta.annotation.Nullable", v549);
> v551 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v552 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v553 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v554 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v551, "io.micronaut.core.annotation.Internal", v552, "io.micronaut.serde.config.annotation.SerdeConfig", v553);
> specialinvoke v534.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v538, v542, v546, v550, v554, 0, 0);
> v555 = newarray (io.micronaut.core.type.Argument)[1];
> v556 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
> v555[0] = v556;
> v557 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "oobParsers", v534, v555);
> v558 = (int) -1;
> specialinvoke v533.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v557, 16, v558, 17, 1, 1);
> v328[8] = v533;
> v559 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v560 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v561 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parameters");
> v562 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parameters");
> v563 = staticinvoke <java.util.Map: java.util.Map of()>();
> v564 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v561, "io.micronaut.serde.config.annotation.SerdeConfig", v562, "jakarta.annotation.Nullable", v563);
> v565 = staticinvoke <java.util.Map: java.util.Map of()>();
> v566 = staticinvoke <java.util.Map: java.util.Map of()>();
758c764
< v568 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v565, "io.micronaut.serde.config.annotation.SerdeConfig", v566, "jakarta.annotation.Nullable", v567);
---
> v568 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v565, "io.micronaut.core.annotation.Internal", v566, "io.micronaut.serde.config.annotation.SerdeConfig", v567);
763,764c769,770
< v573 = staticinvoke <java.util.Map: java.util.Map of()>();
< v574 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v573 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parameters");
> v574 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parameters");
766,786c772,792
< v576 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v573, "io.micronaut.core.annotation.Internal", v574, "io.micronaut.serde.config.annotation.SerdeConfig", v575);
< v577 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "patterns");
< v578 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "patterns");
< v579 = staticinvoke <java.util.Map: java.util.Map of()>();
< v580 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v577, "io.micronaut.serde.config.annotation.SerdeConfig", v578, "jakarta.annotation.Nullable", v579);
< v581 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v582 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v583 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v584 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v581, "io.micronaut.core.annotation.Internal", v582, "io.micronaut.serde.config.annotation.SerdeConfig", v583);
< specialinvoke v564.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v568, v572, v576, v580, v584, 0, 0);
< v585 = newarray (io.micronaut.core.type.Argument)[1];
< v586 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourcePattern;", "E");
< v585[0] = v586;
< v587 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "patterns", v564, v585);
< v588 = (int) -1;
< specialinvoke v563.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v587, 20, v588, 21, 1, 1);
< v306[10] = v563;
< v589 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v590 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v591 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "description");
< v592 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "description");
---
> v576 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v573, "io.micronaut.serde.config.annotation.SerdeConfig", v574, "jakarta.annotation.Nullable", v575);
> v577 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v578 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v579 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v580 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v577, "io.micronaut.core.annotation.Internal", v578, "io.micronaut.serde.config.annotation.SerdeConfig", v579);
> specialinvoke v560.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v564, v568, v572, v576, v580, 0, 0);
> v581 = newarray (io.micronaut.core.type.Argument)[1];
> v582 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParameter;", "E");
> v581[0] = v582;
> v583 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "parameters", v560, v581);
> v584 = (int) -1;
> specialinvoke v559.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v583, 18, v584, 19, 1, 1);
> v328[9] = v559;
> v585 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v586 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v587 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "patterns");
> v588 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "patterns");
> v589 = staticinvoke <java.util.Map: java.util.Map of()>();
> v590 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v587, "io.micronaut.serde.config.annotation.SerdeConfig", v588, "jakarta.annotation.Nullable", v589);
> v591 = staticinvoke <java.util.Map: java.util.Map of()>();
> v592 = staticinvoke <java.util.Map: java.util.Map of()>();
788c794
< v594 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v591, "io.micronaut.serde.config.annotation.SerdeConfig", v592, "jakarta.annotation.Nullable", v593);
---
> v594 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v591, "io.micronaut.core.annotation.Internal", v592, "io.micronaut.serde.config.annotation.SerdeConfig", v593);
793,794c799,800
< v599 = staticinvoke <java.util.Map: java.util.Map of()>();
< v600 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v599 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "patterns");
> v600 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "patterns");
796,813c802,820
< v602 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v599, "io.micronaut.core.annotation.Internal", v600, "io.micronaut.serde.config.annotation.SerdeConfig", v601);
< v603 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "description");
< v604 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "description");
< v605 = staticinvoke <java.util.Map: java.util.Map of()>();
< v606 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v603, "io.micronaut.serde.config.annotation.SerdeConfig", v604, "jakarta.annotation.Nullable", v605);
< v607 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v608 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v609 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v610 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v607, "io.micronaut.core.annotation.Internal", v608, "io.micronaut.serde.config.annotation.SerdeConfig", v609);
< specialinvoke v590.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v594, v598, v602, v606, v610, 0, 0);
< v611 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "description", v590, null);
< v612 = (int) -1;
< specialinvoke v589.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v611, 22, v612, 23, 1, 1);
< v306[11] = v589;
< v613 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v614 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v615 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "displayName");
< v616 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "displayName");
---
> v602 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v599, "io.micronaut.serde.config.annotation.SerdeConfig", v600, "jakarta.annotation.Nullable", v601);
> v603 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v604 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v605 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v606 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v603, "io.micronaut.core.annotation.Internal", v604, "io.micronaut.serde.config.annotation.SerdeConfig", v605);
> specialinvoke v586.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v590, v594, v598, v602, v606, 0, 0);
> v607 = newarray (io.micronaut.core.type.Argument)[1];
> v608 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourcePattern;", "E");
> v607[0] = v608;
> v609 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "patterns", v586, v607);
> v610 = (int) -1;
> specialinvoke v585.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v609, 20, v610, 21, 1, 1);
> v328[10] = v585;
> v611 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v612 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v613 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "description");
> v614 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "description");
> v615 = staticinvoke <java.util.Map: java.util.Map of()>();
> v616 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v613, "io.micronaut.serde.config.annotation.SerdeConfig", v614, "jakarta.annotation.Nullable", v615);
815c822
< v618 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v615, "io.micronaut.serde.config.annotation.SerdeConfig", v616, "jakarta.annotation.Nullable", v617);
---
> v618 = staticinvoke <java.util.Map: java.util.Map of()>();
817c824
< v620 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v620 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v617, "io.micronaut.core.annotation.Internal", v618, "io.micronaut.serde.config.annotation.SerdeConfig", v619);
819c826
< v622 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v619, "io.micronaut.core.annotation.Internal", v620, "io.micronaut.serde.config.annotation.SerdeConfig", v621);
---
> v622 = staticinvoke <java.util.Map: java.util.Map of()>();
821,827c828,834
< v624 = staticinvoke <java.util.Map: java.util.Map of()>();
< v625 = staticinvoke <java.util.Map: java.util.Map of()>();
< v626 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v623, "io.micronaut.core.annotation.Internal", v624, "io.micronaut.serde.config.annotation.SerdeConfig", v625);
< v627 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "displayName");
< v628 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "displayName");
< v629 = staticinvoke <java.util.Map: java.util.Map of()>();
< v630 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v627, "io.micronaut.serde.config.annotation.SerdeConfig", v628, "jakarta.annotation.Nullable", v629);
---
> v624 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v621, "io.micronaut.core.annotation.Internal", v622, "io.micronaut.serde.config.annotation.SerdeConfig", v623);
> v625 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "description");
> v626 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "description");
> v627 = staticinvoke <java.util.Map: java.util.Map of()>();
> v628 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v625, "io.micronaut.serde.config.annotation.SerdeConfig", v626, "jakarta.annotation.Nullable", v627);
> v629 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v630 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
829,840c836,847
< v632 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v633 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v634 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v631, "io.micronaut.core.annotation.Internal", v632, "io.micronaut.serde.config.annotation.SerdeConfig", v633);
< specialinvoke v614.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v618, v622, v626, v630, v634, 0, 0);
< v635 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "displayName", v614, null);
< v636 = (int) -1;
< specialinvoke v613.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v635, 24, v636, 25, 1, 1);
< v306[12] = v613;
< v637 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v638 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v639 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "editVersion");
< v640 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "editVersion");
---
> v632 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v629, "io.micronaut.core.annotation.Internal", v630, "io.micronaut.serde.config.annotation.SerdeConfig", v631);
> specialinvoke v612.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v616, v620, v624, v628, v632, 0, 0);
> v633 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "description", v612, null);
> v634 = (int) -1;
> specialinvoke v611.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v633, 22, v634, 23, 1, 1);
> v328[11] = v611;
> v635 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v636 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v637 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "displayName");
> v638 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "displayName");
> v639 = staticinvoke <java.util.Map: java.util.Map of()>();
> v640 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v637, "io.micronaut.serde.config.annotation.SerdeConfig", v638, "jakarta.annotation.Nullable", v639);
842c849
< v642 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v639, "io.micronaut.serde.config.annotation.SerdeConfig", v640, "jakarta.annotation.Nullable", v641);
---
> v642 = staticinvoke <java.util.Map: java.util.Map of()>();
844c851
< v644 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v644 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v641, "io.micronaut.core.annotation.Internal", v642, "io.micronaut.serde.config.annotation.SerdeConfig", v643);
846c853
< v646 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v643, "io.micronaut.core.annotation.Internal", v644, "io.micronaut.serde.config.annotation.SerdeConfig", v645);
---
> v646 = staticinvoke <java.util.Map: java.util.Map of()>();
848,854c855,861
< v648 = staticinvoke <java.util.Map: java.util.Map of()>();
< v649 = staticinvoke <java.util.Map: java.util.Map of()>();
< v650 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v647, "io.micronaut.core.annotation.Internal", v648, "io.micronaut.serde.config.annotation.SerdeConfig", v649);
< v651 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "editVersion");
< v652 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "editVersion");
< v653 = staticinvoke <java.util.Map: java.util.Map of()>();
< v654 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v651, "io.micronaut.serde.config.annotation.SerdeConfig", v652, "jakarta.annotation.Nullable", v653);
---
> v648 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v645, "io.micronaut.core.annotation.Internal", v646, "io.micronaut.serde.config.annotation.SerdeConfig", v647);
> v649 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "displayName");
> v650 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "displayName");
> v651 = staticinvoke <java.util.Map: java.util.Map of()>();
> v652 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v649, "io.micronaut.serde.config.annotation.SerdeConfig", v650, "jakarta.annotation.Nullable", v651);
> v653 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v654 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
856,867c863,874
< v656 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v657 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v658 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v655, "io.micronaut.core.annotation.Internal", v656, "io.micronaut.serde.config.annotation.SerdeConfig", v657);
< specialinvoke v638.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v642, v646, v650, v654, v658, 0, 0);
< v659 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "editVersion", v638, null);
< v660 = (int) -1;
< specialinvoke v637.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v659, 26, v660, 27, 1, 1);
< v306[13] = v637;
< v661 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v662 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v663 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "functions");
< v664 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "functions");
---
> v656 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v653, "io.micronaut.core.annotation.Internal", v654, "io.micronaut.serde.config.annotation.SerdeConfig", v655);
> specialinvoke v636.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v640, v644, v648, v652, v656, 0, 0);
> v657 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "displayName", v636, null);
> v658 = (int) -1;
> specialinvoke v635.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v657, 24, v658, 25, 1, 1);
> v328[12] = v635;
> v659 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v660 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v661 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "editVersion");
> v662 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "editVersion");
> v663 = staticinvoke <java.util.Map: java.util.Map of()>();
> v664 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v661, "io.micronaut.serde.config.annotation.SerdeConfig", v662, "jakarta.annotation.Nullable", v663);
869c876
< v666 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v663, "io.micronaut.serde.config.annotation.SerdeConfig", v664, "jakarta.annotation.Nullable", v665);
---
> v666 = staticinvoke <java.util.Map: java.util.Map of()>();
871c878
< v668 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v668 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v665, "io.micronaut.core.annotation.Internal", v666, "io.micronaut.serde.config.annotation.SerdeConfig", v667);
873c880
< v670 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v667, "io.micronaut.core.annotation.Internal", v668, "io.micronaut.serde.config.annotation.SerdeConfig", v669);
---
> v670 = staticinvoke <java.util.Map: java.util.Map of()>();
875,881c882,888
< v672 = staticinvoke <java.util.Map: java.util.Map of()>();
< v673 = staticinvoke <java.util.Map: java.util.Map of()>();
< v674 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v671, "io.micronaut.core.annotation.Internal", v672, "io.micronaut.serde.config.annotation.SerdeConfig", v673);
< v675 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "functions");
< v676 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "functions");
< v677 = staticinvoke <java.util.Map: java.util.Map of()>();
< v678 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v675, "io.micronaut.serde.config.annotation.SerdeConfig", v676, "jakarta.annotation.Nullable", v677);
---
> v672 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v669, "io.micronaut.core.annotation.Internal", v670, "io.micronaut.serde.config.annotation.SerdeConfig", v671);
> v673 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "editVersion");
> v674 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "editVersion");
> v675 = staticinvoke <java.util.Map: java.util.Map of()>();
> v676 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v673, "io.micronaut.serde.config.annotation.SerdeConfig", v674, "jakarta.annotation.Nullable", v675);
> v677 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v678 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
883,897c890,903
< v680 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v681 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v682 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v679, "io.micronaut.core.annotation.Internal", v680, "io.micronaut.serde.config.annotation.SerdeConfig", v681);
< specialinvoke v662.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v666, v670, v674, v678, v682, 0, 0);
< v683 = newarray (io.micronaut.core.type.Argument)[1];
< v684 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceFunction;", "E");
< v683[0] = v684;
< v685 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "functions", v662, v683);
< v686 = (int) -1;
< specialinvoke v661.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v685, 28, v686, 29, 1, 1);
< v306[14] = v661;
< v687 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v688 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v689 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceId");
< v690 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceId");
---
> v680 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v677, "io.micronaut.core.annotation.Internal", v678, "io.micronaut.serde.config.annotation.SerdeConfig", v679);
> specialinvoke v660.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v664, v668, v672, v676, v680, 0, 0);
> v681 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "editVersion", v660, null);
> v682 = (int) -1;
> specialinvoke v659.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v681, 26, v682, 27, 1, 1);
> v328[13] = v659;
> v683 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v684 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v685 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "functions");
> v686 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "functions");
> v687 = staticinvoke <java.util.Map: java.util.Map of()>();
> v688 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v685, "io.micronaut.serde.config.annotation.SerdeConfig", v686, "jakarta.annotation.Nullable", v687);
> v689 = staticinvoke <java.util.Map: java.util.Map of()>();
> v690 = staticinvoke <java.util.Map: java.util.Map of()>();
899c905
< v692 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v689, "io.micronaut.serde.config.annotation.SerdeConfig", v690, "jakarta.annotation.Nullable", v691);
---
> v692 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v689, "io.micronaut.core.annotation.Internal", v690, "io.micronaut.serde.config.annotation.SerdeConfig", v691);
904,905c910,911
< v697 = staticinvoke <java.util.Map: java.util.Map of()>();
< v698 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v697 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "functions");
> v698 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "functions");
907,924c913,931
< v700 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v697, "io.micronaut.core.annotation.Internal", v698, "io.micronaut.serde.config.annotation.SerdeConfig", v699);
< v701 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceId");
< v702 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceId");
< v703 = staticinvoke <java.util.Map: java.util.Map of()>();
< v704 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v701, "io.micronaut.serde.config.annotation.SerdeConfig", v702, "jakarta.annotation.Nullable", v703);
< v705 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v706 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v707 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v708 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v705, "io.micronaut.core.annotation.Internal", v706, "io.micronaut.serde.config.annotation.SerdeConfig", v707);
< specialinvoke v688.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v692, v696, v700, v704, v708, 0, 0);
< v709 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "sourceId", v688, null);
< v710 = (int) -1;
< specialinvoke v687.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v709, 30, v710, 31, 1, 1);
< v306[15] = v687;
< v711 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v712 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v713 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "name");
< v714 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "name");
---
> v700 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v697, "io.micronaut.serde.config.annotation.SerdeConfig", v698, "jakarta.annotation.Nullable", v699);
> v701 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v702 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v703 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v704 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v701, "io.micronaut.core.annotation.Internal", v702, "io.micronaut.serde.config.annotation.SerdeConfig", v703);
> specialinvoke v684.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v688, v692, v696, v700, v704, 0, 0);
> v705 = newarray (io.micronaut.core.type.Argument)[1];
> v706 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceFunction;", "E");
> v705[0] = v706;
> v707 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "functions", v684, v705);
> v708 = (int) -1;
> specialinvoke v683.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v707, 28, v708, 29, 1, 1);
> v328[14] = v683;
> v709 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v710 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v711 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceId");
> v712 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceId");
> v713 = staticinvoke <java.util.Map: java.util.Map of()>();
> v714 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v711, "io.micronaut.serde.config.annotation.SerdeConfig", v712, "jakarta.annotation.Nullable", v713);
926c933
< v716 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v713, "io.micronaut.serde.config.annotation.SerdeConfig", v714, "jakarta.annotation.Nullable", v715);
---
> v716 = staticinvoke <java.util.Map: java.util.Map of()>();
928c935
< v718 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v718 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v715, "io.micronaut.core.annotation.Internal", v716, "io.micronaut.serde.config.annotation.SerdeConfig", v717);
930c937
< v720 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v717, "io.micronaut.core.annotation.Internal", v718, "io.micronaut.serde.config.annotation.SerdeConfig", v719);
---
> v720 = staticinvoke <java.util.Map: java.util.Map of()>();
932,938c939,945
< v722 = staticinvoke <java.util.Map: java.util.Map of()>();
< v723 = staticinvoke <java.util.Map: java.util.Map of()>();
< v724 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v721, "io.micronaut.core.annotation.Internal", v722, "io.micronaut.serde.config.annotation.SerdeConfig", v723);
< v725 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "name");
< v726 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "name");
< v727 = staticinvoke <java.util.Map: java.util.Map of()>();
< v728 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v725, "io.micronaut.serde.config.annotation.SerdeConfig", v726, "jakarta.annotation.Nullable", v727);
---
> v722 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v719, "io.micronaut.core.annotation.Internal", v720, "io.micronaut.serde.config.annotation.SerdeConfig", v721);
> v723 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceId");
> v724 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceId");
> v725 = staticinvoke <java.util.Map: java.util.Map of()>();
> v726 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v723, "io.micronaut.serde.config.annotation.SerdeConfig", v724, "jakarta.annotation.Nullable", v725);
> v727 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v728 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
940,951c947,958
< v730 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v731 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v732 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v729, "io.micronaut.core.annotation.Internal", v730, "io.micronaut.serde.config.annotation.SerdeConfig", v731);
< specialinvoke v712.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v716, v720, v724, v728, v732, 0, 0);
< v733 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "name", v712, null);
< v734 = (int) -1;
< specialinvoke v711.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v733, 32, v734, 33, 1, 1);
< v306[16] = v711;
< v735 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v736 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v737 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSecureContent");
< v738 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSecureContent");
---
> v730 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v727, "io.micronaut.core.annotation.Internal", v728, "io.micronaut.serde.config.annotation.SerdeConfig", v729);
> specialinvoke v710.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v714, v718, v722, v726, v730, 0, 0);
> v731 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "sourceId", v710, null);
> v732 = (int) -1;
> specialinvoke v709.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v731, 30, v732, 31, 1, 1);
> v328[15] = v709;
> v733 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v734 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v735 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "name");
> v736 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "name");
> v737 = staticinvoke <java.util.Map: java.util.Map of()>();
> v738 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v735, "io.micronaut.serde.config.annotation.SerdeConfig", v736, "jakarta.annotation.Nullable", v737);
953c960
< v740 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v737, "io.micronaut.serde.config.annotation.SerdeConfig", v738, "jakarta.annotation.Nullable", v739);
---
> v740 = staticinvoke <java.util.Map: java.util.Map of()>();
955c962
< v742 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v742 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v739, "io.micronaut.core.annotation.Internal", v740, "io.micronaut.serde.config.annotation.SerdeConfig", v741);
957c964
< v744 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v741, "io.micronaut.core.annotation.Internal", v742, "io.micronaut.serde.config.annotation.SerdeConfig", v743);
---
> v744 = staticinvoke <java.util.Map: java.util.Map of()>();
959,965c966,972
< v746 = staticinvoke <java.util.Map: java.util.Map of()>();
< v747 = staticinvoke <java.util.Map: java.util.Map of()>();
< v748 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v745, "io.micronaut.core.annotation.Internal", v746, "io.micronaut.serde.config.annotation.SerdeConfig", v747);
< v749 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSecureContent");
< v750 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSecureContent");
< v751 = staticinvoke <java.util.Map: java.util.Map of()>();
< v752 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v749, "io.micronaut.serde.config.annotation.SerdeConfig", v750, "jakarta.annotation.Nullable", v751);
---
> v746 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v743, "io.micronaut.core.annotation.Internal", v744, "io.micronaut.serde.config.annotation.SerdeConfig", v745);
> v747 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "name");
> v748 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "name");
> v749 = staticinvoke <java.util.Map: java.util.Map of()>();
> v750 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v747, "io.micronaut.serde.config.annotation.SerdeConfig", v748, "jakarta.annotation.Nullable", v749);
> v751 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v752 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
967,978c974,985
< v754 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v755 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v756 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v753, "io.micronaut.core.annotation.Internal", v754, "io.micronaut.serde.config.annotation.SerdeConfig", v755);
< specialinvoke v736.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v740, v744, v748, v752, v756, 0, 0);
< v757 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isSecureContent", v736, null);
< v758 = (int) -1;
< specialinvoke v735.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v757, 34, v758, 35, 1, 1);
< v306[17] = v735;
< v759 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v760 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v761 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSystem");
< v762 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSystem");
---
> v754 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v751, "io.micronaut.core.annotation.Internal", v752, "io.micronaut.serde.config.annotation.SerdeConfig", v753);
> specialinvoke v734.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v738, v742, v746, v750, v754, 0, 0);
> v755 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "name", v734, null);
> v756 = (int) -1;
> specialinvoke v733.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v755, 32, v756, 33, 1, 1);
> v328[16] = v733;
> v757 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v758 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v759 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSecureContent");
> v760 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSecureContent");
> v761 = staticinvoke <java.util.Map: java.util.Map of()>();
> v762 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v759, "io.micronaut.serde.config.annotation.SerdeConfig", v760, "jakarta.annotation.Nullable", v761);
980c987
< v764 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v761, "io.micronaut.serde.config.annotation.SerdeConfig", v762, "jakarta.annotation.Nullable", v763);
---
> v764 = staticinvoke <java.util.Map: java.util.Map of()>();
982c989
< v766 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v766 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v763, "io.micronaut.core.annotation.Internal", v764, "io.micronaut.serde.config.annotation.SerdeConfig", v765);
984c991
< v768 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v765, "io.micronaut.core.annotation.Internal", v766, "io.micronaut.serde.config.annotation.SerdeConfig", v767);
---
> v768 = staticinvoke <java.util.Map: java.util.Map of()>();
986,992c993,999
< v770 = staticinvoke <java.util.Map: java.util.Map of()>();
< v771 = staticinvoke <java.util.Map: java.util.Map of()>();
< v772 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v769, "io.micronaut.core.annotation.Internal", v770, "io.micronaut.serde.config.annotation.SerdeConfig", v771);
< v773 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSystem");
< v774 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSystem");
< v775 = staticinvoke <java.util.Map: java.util.Map of()>();
< v776 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v773, "io.micronaut.serde.config.annotation.SerdeConfig", v774, "jakarta.annotation.Nullable", v775);
---
> v770 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v767, "io.micronaut.core.annotation.Internal", v768, "io.micronaut.serde.config.annotation.SerdeConfig", v769);
> v771 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSecureContent");
> v772 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSecureContent");
> v773 = staticinvoke <java.util.Map: java.util.Map of()>();
> v774 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v771, "io.micronaut.serde.config.annotation.SerdeConfig", v772, "jakarta.annotation.Nullable", v773);
> v775 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v776 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
994,1005c1001,1012
< v778 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v779 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v780 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v777, "io.micronaut.core.annotation.Internal", v778, "io.micronaut.serde.config.annotation.SerdeConfig", v779);
< specialinvoke v760.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v764, v768, v772, v776, v780, 0, 0);
< v781 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isSystem", v760, null);
< v782 = (int) -1;
< specialinvoke v759.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v781, 36, v782, 37, 1, 1);
< v306[18] = v759;
< v783 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v784 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v785 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parsers");
< v786 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parsers");
---
> v778 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v775, "io.micronaut.core.annotation.Internal", v776, "io.micronaut.serde.config.annotation.SerdeConfig", v777);
> specialinvoke v758.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v762, v766, v770, v774, v778, 0, 0);
> v779 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isSecureContent", v758, null);
> v780 = (int) -1;
> specialinvoke v757.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v779, 34, v780, 35, 1, 1);
> v328[17] = v757;
> v781 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v782 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v783 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSystem");
> v784 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSystem");
> v785 = staticinvoke <java.util.Map: java.util.Map of()>();
> v786 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v783, "io.micronaut.serde.config.annotation.SerdeConfig", v784, "jakarta.annotation.Nullable", v785);
1007c1014
< v788 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v785, "io.micronaut.serde.config.annotation.SerdeConfig", v786, "jakarta.annotation.Nullable", v787);
---
> v788 = staticinvoke <java.util.Map: java.util.Map of()>();
1009c1016
< v790 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v790 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v787, "io.micronaut.core.annotation.Internal", v788, "io.micronaut.serde.config.annotation.SerdeConfig", v789);
1011c1018
< v792 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v789, "io.micronaut.core.annotation.Internal", v790, "io.micronaut.serde.config.annotation.SerdeConfig", v791);
---
> v792 = staticinvoke <java.util.Map: java.util.Map of()>();
1013,1019c1020,1026
< v794 = staticinvoke <java.util.Map: java.util.Map of()>();
< v795 = staticinvoke <java.util.Map: java.util.Map of()>();
< v796 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v793, "io.micronaut.core.annotation.Internal", v794, "io.micronaut.serde.config.annotation.SerdeConfig", v795);
< v797 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parsers");
< v798 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parsers");
< v799 = staticinvoke <java.util.Map: java.util.Map of()>();
< v800 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v797, "io.micronaut.serde.config.annotation.SerdeConfig", v798, "jakarta.annotation.Nullable", v799);
---
> v794 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v791, "io.micronaut.core.annotation.Internal", v792, "io.micronaut.serde.config.annotation.SerdeConfig", v793);
> v795 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isSystem");
> v796 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isSystem");
> v797 = staticinvoke <java.util.Map: java.util.Map of()>();
> v798 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v795, "io.micronaut.serde.config.annotation.SerdeConfig", v796, "jakarta.annotation.Nullable", v797);
> v799 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v800 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
1021,1035c1028,1041
< v802 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v803 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v804 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v801, "io.micronaut.core.annotation.Internal", v802, "io.micronaut.serde.config.annotation.SerdeConfig", v803);
< specialinvoke v784.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v788, v792, v796, v800, v804, 0, 0);
< v805 = newarray (io.micronaut.core.type.Argument)[1];
< v806 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
< v805[0] = v806;
< v807 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "parsers", v784, v805);
< v808 = (int) -1;
< specialinvoke v783.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v807, 38, v808, 39, 1, 1);
< v306[19] = v783;
< v809 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v810 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v811 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "ruleId");
< v812 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "ruleId");
---
> v802 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v799, "io.micronaut.core.annotation.Internal", v800, "io.micronaut.serde.config.annotation.SerdeConfig", v801);
> specialinvoke v782.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v786, v790, v794, v798, v802, 0, 0);
> v803 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isSystem", v782, null);
> v804 = (int) -1;
> specialinvoke v781.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v803, 36, v804, 37, 1, 1);
> v328[18] = v781;
> v805 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v806 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v807 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parsers");
> v808 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parsers");
> v809 = staticinvoke <java.util.Map: java.util.Map of()>();
> v810 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v807, "io.micronaut.serde.config.annotation.SerdeConfig", v808, "jakarta.annotation.Nullable", v809);
> v811 = staticinvoke <java.util.Map: java.util.Map of()>();
> v812 = staticinvoke <java.util.Map: java.util.Map of()>();
1037c1043
< v814 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v811, "io.micronaut.serde.config.annotation.SerdeConfig", v812, "jakarta.annotation.Nullable", v813);
---
> v814 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v811, "io.micronaut.core.annotation.Internal", v812, "io.micronaut.serde.config.annotation.SerdeConfig", v813);
1042,1043c1048,1049
< v819 = staticinvoke <java.util.Map: java.util.Map of()>();
< v820 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v819 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "parsers");
> v820 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "parsers");
1045,1062c1051,1069
< v822 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v819, "io.micronaut.core.annotation.Internal", v820, "io.micronaut.serde.config.annotation.SerdeConfig", v821);
< v823 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "ruleId");
< v824 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "ruleId");
< v825 = staticinvoke <java.util.Map: java.util.Map of()>();
< v826 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v823, "io.micronaut.serde.config.annotation.SerdeConfig", v824, "jakarta.annotation.Nullable", v825);
< v827 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v828 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v829 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v830 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v827, "io.micronaut.core.annotation.Internal", v828, "io.micronaut.serde.config.annotation.SerdeConfig", v829);
< specialinvoke v810.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v814, v818, v822, v826, v830, 0, 0);
< v831 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "ruleId", v810, null);
< v832 = (int) -1;
< specialinvoke v809.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v831, 40, v832, 41, 1, 1);
< v306[20] = v809;
< v833 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v834 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v835 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "typeName");
< v836 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "typeName");
---
> v822 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v819, "io.micronaut.serde.config.annotation.SerdeConfig", v820, "jakarta.annotation.Nullable", v821);
> v823 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v824 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v825 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v826 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v823, "io.micronaut.core.annotation.Internal", v824, "io.micronaut.serde.config.annotation.SerdeConfig", v825);
> specialinvoke v806.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v810, v814, v818, v822, v826, 0, 0);
> v827 = newarray (io.micronaut.core.type.Argument)[1];
> v828 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
> v827[0] = v828;
> v829 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "parsers", v806, v827);
> v830 = (int) -1;
> specialinvoke v805.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v829, 38, v830, 39, 1, 1);
> v328[19] = v805;
> v831 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v832 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v833 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "ruleId");
> v834 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "ruleId");
> v835 = staticinvoke <java.util.Map: java.util.Map of()>();
> v836 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v833, "io.micronaut.serde.config.annotation.SerdeConfig", v834, "jakarta.annotation.Nullable", v835);
1064c1071
< v838 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v835, "io.micronaut.serde.config.annotation.SerdeConfig", v836, "jakarta.annotation.Nullable", v837);
---
> v838 = staticinvoke <java.util.Map: java.util.Map of()>();
1066c1073
< v840 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v840 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v837, "io.micronaut.core.annotation.Internal", v838, "io.micronaut.serde.config.annotation.SerdeConfig", v839);
1068c1075
< v842 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v839, "io.micronaut.core.annotation.Internal", v840, "io.micronaut.serde.config.annotation.SerdeConfig", v841);
---
> v842 = staticinvoke <java.util.Map: java.util.Map of()>();
1070,1076c1077,1083
< v844 = staticinvoke <java.util.Map: java.util.Map of()>();
< v845 = staticinvoke <java.util.Map: java.util.Map of()>();
< v846 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v843, "io.micronaut.core.annotation.Internal", v844, "io.micronaut.serde.config.annotation.SerdeConfig", v845);
< v847 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "typeName");
< v848 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "typeName");
< v849 = staticinvoke <java.util.Map: java.util.Map of()>();
< v850 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v847, "io.micronaut.serde.config.annotation.SerdeConfig", v848, "jakarta.annotation.Nullable", v849);
---
> v844 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v841, "io.micronaut.core.annotation.Internal", v842, "io.micronaut.serde.config.annotation.SerdeConfig", v843);
> v845 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "ruleId");
> v846 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "ruleId");
> v847 = staticinvoke <java.util.Map: java.util.Map of()>();
> v848 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v845, "io.micronaut.serde.config.annotation.SerdeConfig", v846, "jakarta.annotation.Nullable", v847);
> v849 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v850 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
1078,1089c1085,1096
< v852 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v853 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v854 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v851, "io.micronaut.core.annotation.Internal", v852, "io.micronaut.serde.config.annotation.SerdeConfig", v853);
< specialinvoke v834.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v838, v842, v846, v850, v854, 0, 0);
< v855 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "typeName", v834, null);
< v856 = (int) -1;
< specialinvoke v833.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v855, 42, v856, 43, 1, 1);
< v306[21] = v833;
< v857 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v858 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v859 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "warningConfig");
< v860 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "warningConfig");
---
> v852 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v849, "io.micronaut.core.annotation.Internal", v850, "io.micronaut.serde.config.annotation.SerdeConfig", v851);
> specialinvoke v832.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v836, v840, v844, v848, v852, 0, 0);
> v853 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "ruleId", v832, null);
> v854 = (int) -1;
> specialinvoke v831.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v853, 40, v854, 41, 1, 1);
> v328[20] = v831;
> v855 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v856 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v857 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "typeName");
> v858 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "typeName");
> v859 = staticinvoke <java.util.Map: java.util.Map of()>();
> v860 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v857, "io.micronaut.serde.config.annotation.SerdeConfig", v858, "jakarta.annotation.Nullable", v859);
1091c1098
< v862 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v859, "io.micronaut.serde.config.annotation.SerdeConfig", v860, "jakarta.annotation.Nullable", v861);
---
> v862 = staticinvoke <java.util.Map: java.util.Map of()>();
1093c1100
< v864 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v864 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v861, "io.micronaut.core.annotation.Internal", v862, "io.micronaut.serde.config.annotation.SerdeConfig", v863);
1095c1102
< v866 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v863, "io.micronaut.core.annotation.Internal", v864, "io.micronaut.serde.config.annotation.SerdeConfig", v865);
---
> v866 = staticinvoke <java.util.Map: java.util.Map of()>();
1097,1103c1104,1110
< v868 = staticinvoke <java.util.Map: java.util.Map of()>();
< v869 = staticinvoke <java.util.Map: java.util.Map of()>();
< v870 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v867, "io.micronaut.core.annotation.Internal", v868, "io.micronaut.serde.config.annotation.SerdeConfig", v869);
< v871 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "warningConfig");
< v872 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "warningConfig");
< v873 = staticinvoke <java.util.Map: java.util.Map of()>();
< v874 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v871, "io.micronaut.serde.config.annotation.SerdeConfig", v872, "jakarta.annotation.Nullable", v873);
---
> v868 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v865, "io.micronaut.core.annotation.Internal", v866, "io.micronaut.serde.config.annotation.SerdeConfig", v867);
> v869 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "typeName");
> v870 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "typeName");
> v871 = staticinvoke <java.util.Map: java.util.Map of()>();
> v872 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v869, "io.micronaut.serde.config.annotation.SerdeConfig", v870, "jakarta.annotation.Nullable", v871);
> v873 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v874 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
1105,1116c1112,1123
< v876 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v877 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v878 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v875, "io.micronaut.core.annotation.Internal", v876, "io.micronaut.serde.config.annotation.SerdeConfig", v877);
< specialinvoke v858.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v862, v866, v870, v874, v878, 0, 0);
< v879 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "warningConfig", v858, null);
< v880 = (int) -1;
< specialinvoke v857.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v879, 44, v880, 45, 1, 1);
< v306[22] = v857;
< v881 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v882 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v883 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metadataFields");
< v884 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metadataFields");
---
> v876 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v873, "io.micronaut.core.annotation.Internal", v874, "io.micronaut.serde.config.annotation.SerdeConfig", v875);
> specialinvoke v856.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v860, v864, v868, v872, v876, 0, 0);
> v877 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/String;", "typeName", v856, null);
> v878 = (int) -1;
> specialinvoke v855.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v877, 42, v878, 43, 1, 1);
> v328[21] = v855;
> v879 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v880 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v881 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "warningConfig");
> v882 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "warningConfig");
> v883 = staticinvoke <java.util.Map: java.util.Map of()>();
> v884 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v881, "io.micronaut.serde.config.annotation.SerdeConfig", v882, "jakarta.annotation.Nullable", v883);
1118c1125
< v886 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v883, "io.micronaut.serde.config.annotation.SerdeConfig", v884, "jakarta.annotation.Nullable", v885);
---
> v886 = staticinvoke <java.util.Map: java.util.Map of()>();
1120c1127
< v888 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v888 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v885, "io.micronaut.core.annotation.Internal", v886, "io.micronaut.serde.config.annotation.SerdeConfig", v887);
1122c1129
< v890 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v887, "io.micronaut.core.annotation.Internal", v888, "io.micronaut.serde.config.annotation.SerdeConfig", v889);
---
> v890 = staticinvoke <java.util.Map: java.util.Map of()>();
1124,1130c1131,1137
< v892 = staticinvoke <java.util.Map: java.util.Map of()>();
< v893 = staticinvoke <java.util.Map: java.util.Map of()>();
< v894 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v891, "io.micronaut.core.annotation.Internal", v892, "io.micronaut.serde.config.annotation.SerdeConfig", v893);
< v895 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metadataFields");
< v896 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metadataFields");
< v897 = staticinvoke <java.util.Map: java.util.Map of()>();
< v898 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v895, "io.micronaut.serde.config.annotation.SerdeConfig", v896, "jakarta.annotation.Nullable", v897);
---
> v892 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v889, "io.micronaut.core.annotation.Internal", v890, "io.micronaut.serde.config.annotation.SerdeConfig", v891);
> v893 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "warningConfig");
> v894 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "warningConfig");
> v895 = staticinvoke <java.util.Map: java.util.Map of()>();
> v896 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v893, "io.micronaut.serde.config.annotation.SerdeConfig", v894, "jakarta.annotation.Nullable", v895);
> v897 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v898 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
1132,1146c1139,1152
< v900 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v901 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v902 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v899, "io.micronaut.core.annotation.Internal", v900, "io.micronaut.serde.config.annotation.SerdeConfig", v901);
< specialinvoke v882.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v886, v890, v894, v898, v902, 0, 0);
< v903 = newarray (io.micronaut.core.type.Argument)[1];
< v904 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceMetadataField;", "E");
< v903[0] = v904;
< v905 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metadataFields", v882, v903);
< v906 = (int) -1;
< specialinvoke v881.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v905, 46, v906, 47, 1, 1);
< v306[23] = v881;
< v907 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v908 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v909 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelDefinitions");
< v910 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelDefinitions");
---
> v900 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v897, "io.micronaut.core.annotation.Internal", v898, "io.micronaut.serde.config.annotation.SerdeConfig", v899);
> specialinvoke v880.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v884, v888, v892, v896, v900, 0, 0);
> v901 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Long;", "warningConfig", v880, null);
> v902 = (int) -1;
> specialinvoke v879.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v901, 44, v902, 45, 1, 1);
> v328[22] = v879;
> v903 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v904 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v905 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metadataFields");
> v906 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metadataFields");
> v907 = staticinvoke <java.util.Map: java.util.Map of()>();
> v908 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v905, "io.micronaut.serde.config.annotation.SerdeConfig", v906, "jakarta.annotation.Nullable", v907);
> v909 = staticinvoke <java.util.Map: java.util.Map of()>();
> v910 = staticinvoke <java.util.Map: java.util.Map of()>();
1148c1154
< v912 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v909, "io.micronaut.serde.config.annotation.SerdeConfig", v910, "jakarta.annotation.Nullable", v911);
---
> v912 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v909, "io.micronaut.core.annotation.Internal", v910, "io.micronaut.serde.config.annotation.SerdeConfig", v911);
1153,1154c1159,1160
< v917 = staticinvoke <java.util.Map: java.util.Map of()>();
< v918 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v917 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "metadataFields");
> v918 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "metadataFields");
1156,1176c1162,1182
< v920 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v917, "io.micronaut.core.annotation.Internal", v918, "io.micronaut.serde.config.annotation.SerdeConfig", v919);
< v921 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelDefinitions");
< v922 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelDefinitions");
< v923 = staticinvoke <java.util.Map: java.util.Map of()>();
< v924 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v921, "io.micronaut.serde.config.annotation.SerdeConfig", v922, "jakarta.annotation.Nullable", v923);
< v925 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v926 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v927 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v928 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v925, "io.micronaut.core.annotation.Internal", v926, "io.micronaut.serde.config.annotation.SerdeConfig", v927);
< specialinvoke v908.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v912, v916, v920, v924, v928, 0, 0);
< v929 = newarray (io.micronaut.core.type.Argument)[1];
< v930 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsLabelDefinition;", "E");
< v929[0] = v930;
< v931 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labelDefinitions", v908, v929);
< v932 = (int) -1;
< specialinvoke v907.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v931, 48, v932, 49, 1, 1);
< v306[24] = v907;
< v933 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v934 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v935 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "entityTypes");
< v936 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "entityTypes");
---
> v920 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v917, "io.micronaut.serde.config.annotation.SerdeConfig", v918, "jakarta.annotation.Nullable", v919);
> v921 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v922 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v923 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v924 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v921, "io.micronaut.core.annotation.Internal", v922, "io.micronaut.serde.config.annotation.SerdeConfig", v923);
> specialinvoke v904.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v908, v912, v916, v920, v924, 0, 0);
> v925 = newarray (io.micronaut.core.type.Argument)[1];
> v926 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceMetadataField;", "E");
> v925[0] = v926;
> v927 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "metadataFields", v904, v925);
> v928 = (int) -1;
> specialinvoke v903.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v927, 46, v928, 47, 1, 1);
> v328[23] = v903;
> v929 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v930 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v931 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelDefinitions");
> v932 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelDefinitions");
> v933 = staticinvoke <java.util.Map: java.util.Map of()>();
> v934 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v931, "io.micronaut.serde.config.annotation.SerdeConfig", v932, "jakarta.annotation.Nullable", v933);
> v935 = staticinvoke <java.util.Map: java.util.Map of()>();
> v936 = staticinvoke <java.util.Map: java.util.Map of()>();
1178c1184
< v938 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v935, "io.micronaut.serde.config.annotation.SerdeConfig", v936, "jakarta.annotation.Nullable", v937);
---
> v938 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v935, "io.micronaut.core.annotation.Internal", v936, "io.micronaut.serde.config.annotation.SerdeConfig", v937);
1183,1184c1189,1190
< v943 = staticinvoke <java.util.Map: java.util.Map of()>();
< v944 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v943 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "labelDefinitions");
> v944 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "labelDefinitions");
1186,1206c1192,1212
< v946 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v943, "io.micronaut.core.annotation.Internal", v944, "io.micronaut.serde.config.annotation.SerdeConfig", v945);
< v947 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "entityTypes");
< v948 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "entityTypes");
< v949 = staticinvoke <java.util.Map: java.util.Map of()>();
< v950 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v947, "io.micronaut.serde.config.annotation.SerdeConfig", v948, "jakarta.annotation.Nullable", v949);
< v951 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v952 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v953 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v954 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v951, "io.micronaut.core.annotation.Internal", v952, "io.micronaut.serde.config.annotation.SerdeConfig", v953);
< specialinvoke v934.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v938, v942, v946, v950, v954, 0, 0);
< v955 = newarray (io.micronaut.core.type.Argument)[1];
< v956 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceEntityType;", "E");
< v955[0] = v956;
< v957 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "entityTypes", v934, v955);
< v958 = (int) -1;
< specialinvoke v933.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v957, 50, v958, 51, 1, 1);
< v306[25] = v933;
< v959 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v960 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v961 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isTimezoneOverride");
< v962 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isTimezoneOverride");
---
> v946 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v943, "io.micronaut.serde.config.annotation.SerdeConfig", v944, "jakarta.annotation.Nullable", v945);
> v947 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v948 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v949 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v950 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v947, "io.micronaut.core.annotation.Internal", v948, "io.micronaut.serde.config.annotation.SerdeConfig", v949);
> specialinvoke v930.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v934, v938, v942, v946, v950, 0, 0);
> v951 = newarray (io.micronaut.core.type.Argument)[1];
> v952 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsLabelDefinition;", "E");
> v951[0] = v952;
> v953 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "labelDefinitions", v930, v951);
> v954 = (int) -1;
> specialinvoke v929.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v953, 48, v954, 49, 1, 1);
> v328[24] = v929;
> v955 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v956 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v957 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "entityTypes");
> v958 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "entityTypes");
> v959 = staticinvoke <java.util.Map: java.util.Map of()>();
> v960 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v957, "io.micronaut.serde.config.annotation.SerdeConfig", v958, "jakarta.annotation.Nullable", v959);
> v961 = staticinvoke <java.util.Map: java.util.Map of()>();
> v962 = staticinvoke <java.util.Map: java.util.Map of()>();
1208c1214
< v964 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v961, "io.micronaut.serde.config.annotation.SerdeConfig", v962, "jakarta.annotation.Nullable", v963);
---
> v964 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v961, "io.micronaut.core.annotation.Internal", v962, "io.micronaut.serde.config.annotation.SerdeConfig", v963);
1213,1214c1219,1220
< v969 = staticinvoke <java.util.Map: java.util.Map of()>();
< v970 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v969 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "entityTypes");
> v970 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "entityTypes");
1216,1233c1222,1240
< v972 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v969, "io.micronaut.core.annotation.Internal", v970, "io.micronaut.serde.config.annotation.SerdeConfig", v971);
< v973 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isTimezoneOverride");
< v974 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isTimezoneOverride");
< v975 = staticinvoke <java.util.Map: java.util.Map of()>();
< v976 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v973, "io.micronaut.serde.config.annotation.SerdeConfig", v974, "jakarta.annotation.Nullable", v975);
< v977 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v978 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v979 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v980 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v977, "io.micronaut.core.annotation.Internal", v978, "io.micronaut.serde.config.annotation.SerdeConfig", v979);
< specialinvoke v960.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v964, v968, v972, v976, v980, 0, 0);
< v981 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isTimezoneOverride", v960, null);
< v982 = (int) -1;
< specialinvoke v959.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v981, 52, v982, 53, 1, 1);
< v306[26] = v959;
< v983 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v984 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v985 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "userParsers");
< v986 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "userParsers");
---
> v972 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v969, "io.micronaut.serde.config.annotation.SerdeConfig", v970, "jakarta.annotation.Nullable", v971);
> v973 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v974 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v975 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v976 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v973, "io.micronaut.core.annotation.Internal", v974, "io.micronaut.serde.config.annotation.SerdeConfig", v975);
> specialinvoke v956.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v960, v964, v968, v972, v976, 0, 0);
> v977 = newarray (io.micronaut.core.type.Argument)[1];
> v978 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsSourceEntityType;", "E");
> v977[0] = v978;
> v979 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "entityTypes", v956, v977);
> v980 = (int) -1;
> specialinvoke v955.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v979, 50, v980, 51, 1, 1);
> v328[25] = v955;
> v981 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v982 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v983 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isTimezoneOverride");
> v984 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isTimezoneOverride");
> v985 = staticinvoke <java.util.Map: java.util.Map of()>();
> v986 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v983, "io.micronaut.serde.config.annotation.SerdeConfig", v984, "jakarta.annotation.Nullable", v985);
1235c1242
< v988 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v985, "io.micronaut.serde.config.annotation.SerdeConfig", v986, "jakarta.annotation.Nullable", v987);
---
> v988 = staticinvoke <java.util.Map: java.util.Map of()>();
1237c1244
< v990 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v990 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v987, "io.micronaut.core.annotation.Internal", v988, "io.micronaut.serde.config.annotation.SerdeConfig", v989);
1239c1246
< v992 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v989, "io.micronaut.core.annotation.Internal", v990, "io.micronaut.serde.config.annotation.SerdeConfig", v991);
---
> v992 = staticinvoke <java.util.Map: java.util.Map of()>();
1241,1247c1248,1254
< v994 = staticinvoke <java.util.Map: java.util.Map of()>();
< v995 = staticinvoke <java.util.Map: java.util.Map of()>();
< v996 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v993, "io.micronaut.core.annotation.Internal", v994, "io.micronaut.serde.config.annotation.SerdeConfig", v995);
< v997 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "userParsers");
< v998 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "userParsers");
< v999 = staticinvoke <java.util.Map: java.util.Map of()>();
< v1000 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v997, "io.micronaut.serde.config.annotation.SerdeConfig", v998, "jakarta.annotation.Nullable", v999);
---
> v994 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v991, "io.micronaut.core.annotation.Internal", v992, "io.micronaut.serde.config.annotation.SerdeConfig", v993);
> v995 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "isTimezoneOverride");
> v996 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "isTimezoneOverride");
> v997 = staticinvoke <java.util.Map: java.util.Map of()>();
> v998 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v995, "io.micronaut.serde.config.annotation.SerdeConfig", v996, "jakarta.annotation.Nullable", v997);
> v999 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1000 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
1249,1263c1256,1269
< v1002 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v1003 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v1004 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1001, "io.micronaut.core.annotation.Internal", v1002, "io.micronaut.serde.config.annotation.SerdeConfig", v1003);
< specialinvoke v984.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v988, v992, v996, v1000, v1004, 0, 0);
< v1005 = newarray (io.micronaut.core.type.Argument)[1];
< v1006 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
< v1005[0] = v1006;
< v1007 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "userParsers", v984, v1005);
< v1008 = (int) -1;
< specialinvoke v983.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1007, 54, v1008, 55, 1, 1);
< v306[27] = v983;
< v1009 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
< v1010 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
< v1011 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "categories");
< v1012 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "categories");
---
> v1002 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v999, "io.micronaut.core.annotation.Internal", v1000, "io.micronaut.serde.config.annotation.SerdeConfig", v1001);
> specialinvoke v982.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v986, v990, v994, v998, v1002, 0, 0);
> v1003 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/lang/Boolean;", "isTimezoneOverride", v982, null);
> v1004 = (int) -1;
> specialinvoke v981.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1003, 52, v1004, 53, 1, 1);
> v328[26] = v981;
> v1005 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v1006 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v1007 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "userParsers");
> v1008 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "userParsers");
> v1009 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1010 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1007, "io.micronaut.serde.config.annotation.SerdeConfig", v1008, "jakarta.annotation.Nullable", v1009);
> v1011 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1012 = staticinvoke <java.util.Map: java.util.Map of()>();
1265c1271
< v1014 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1011, "io.micronaut.serde.config.annotation.SerdeConfig", v1012, "jakarta.annotation.Nullable", v1013);
---
> v1014 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1011, "io.micronaut.core.annotation.Internal", v1012, "io.micronaut.serde.config.annotation.SerdeConfig", v1013);
1270,1271c1276,1277
< v1019 = staticinvoke <java.util.Map: java.util.Map of()>();
< v1020 = staticinvoke <java.util.Map: java.util.Map of()>();
---
> v1019 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "userParsers");
> v1020 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "userParsers");
1273,1290c1279,1382
< v1022 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1019, "io.micronaut.core.annotation.Internal", v1020, "io.micronaut.serde.config.annotation.SerdeConfig", v1021);
< v1023 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "categories");
< v1024 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "categories");
< v1025 = staticinvoke <java.util.Map: java.util.Map of()>();
< v1026 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1023, "io.micronaut.serde.config.annotation.SerdeConfig", v1024, "jakarta.annotation.Nullable", v1025);
< v1027 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v1028 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
< v1029 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
< v1030 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1027, "io.micronaut.core.annotation.Internal", v1028, "io.micronaut.serde.config.annotation.SerdeConfig", v1029);
< specialinvoke v1010.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v1014, v1018, v1022, v1026, v1030, 0, 0);
< v1031 = newarray (io.micronaut.core.type.Argument)[1];
< v1032 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsCategory;", "E");
< v1031[0] = v1032;
< v1033 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "categories", v1010, v1031);
< v1034 = (int) -1;
< specialinvoke v1009.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1033, 56, v1034, 57, 1, 1);
< v306[28] = v1009;
< <com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef[] $PROPERTIES_REFERENCES> = v306;
---
> v1022 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1019, "io.micronaut.serde.config.annotation.SerdeConfig", v1020, "jakarta.annotation.Nullable", v1021);
> v1023 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1024 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v1025 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1026 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1023, "io.micronaut.core.annotation.Internal", v1024, "io.micronaut.serde.config.annotation.SerdeConfig", v1025);
> specialinvoke v1006.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v1010, v1014, v1018, v1022, v1026, 0, 0);
> v1027 = newarray (io.micronaut.core.type.Argument)[1];
> v1028 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsParser;", "E");
> v1027[0] = v1028;
> v1029 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "userParsers", v1006, v1027);
> v1030 = (int) -1;
> specialinvoke v1005.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1029, 54, v1030, 55, 1, 1);
> v328[27] = v1005;
> v1031 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v1032 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v1033 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "categories");
> v1034 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "categories");
> v1035 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1036 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1033, "io.micronaut.serde.config.annotation.SerdeConfig", v1034, "jakarta.annotation.Nullable", v1035);
> v1037 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1038 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1039 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1040 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1037, "io.micronaut.core.annotation.Internal", v1038, "io.micronaut.serde.config.annotation.SerdeConfig", v1039);
> v1041 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1042 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1043 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1044 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1041, "io.micronaut.core.annotation.Internal", v1042, "io.micronaut.serde.config.annotation.SerdeConfig", v1043);
> v1045 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "categories");
> v1046 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "categories");
> v1047 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1048 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1045, "io.micronaut.serde.config.annotation.SerdeConfig", v1046, "jakarta.annotation.Nullable", v1047);
> v1049 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1050 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v1051 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1052 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1049, "io.micronaut.core.annotation.Internal", v1050, "io.micronaut.serde.config.annotation.SerdeConfig", v1051);
> specialinvoke v1032.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v1036, v1040, v1044, v1048, v1052, 0, 0);
> v1053 = newarray (io.micronaut.core.type.Argument)[1];
> v1054 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsCategory;", "E");
> v1053[0] = v1054;
> v1055 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "categories", v1032, v1053);
> v1056 = (int) -1;
> specialinvoke v1031.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1055, 56, v1056, 57, 1, 1);
> v328[28] = v1031;
> v1057 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v1058 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v1059 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "endpoints");
> v1060 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "endpoints");
> v1061 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1062 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1059, "io.micronaut.serde.config.annotation.SerdeConfig", v1060, "jakarta.annotation.Nullable", v1061);
> v1063 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1064 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1065 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1066 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1063, "io.micronaut.core.annotation.Internal", v1064, "io.micronaut.serde.config.annotation.SerdeConfig", v1065);
> v1067 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1068 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1069 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1070 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1067, "io.micronaut.core.annotation.Internal", v1068, "io.micronaut.serde.config.annotation.SerdeConfig", v1069);
> v1071 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "endpoints");
> v1072 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "endpoints");
> v1073 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1074 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1071, "io.micronaut.serde.config.annotation.SerdeConfig", v1072, "jakarta.annotation.Nullable", v1073);
> v1075 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1076 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v1077 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1078 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1075, "io.micronaut.core.annotation.Internal", v1076, "io.micronaut.serde.config.annotation.SerdeConfig", v1077);
> specialinvoke v1058.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v1062, v1066, v1070, v1074, v1078, 0, 0);
> v1079 = newarray (io.micronaut.core.type.Argument)[1];
> v1080 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsEndpoint;", "E");
> v1079[0] = v1080;
> v1081 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "endpoints", v1058, v1079);
> v1082 = (int) -1;
> specialinvoke v1057.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1081, 58, v1082, 59, 1, 1);
> v328[29] = v1057;
> v1083 = new io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef;
> v1084 = new io.micronaut.inject.'annotation'.DefaultAnnotationMetadata;
> v1085 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceProperties");
> v1086 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceProperties");
> v1087 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1088 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1085, "io.micronaut.serde.config.annotation.SerdeConfig", v1086, "jakarta.annotation.Nullable", v1087);
> v1089 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1090 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1091 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1092 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1089, "io.micronaut.core.annotation.Internal", v1090, "io.micronaut.serde.config.annotation.SerdeConfig", v1091);
> v1093 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1094 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1095 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1096 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1093, "io.micronaut.core.annotation.Internal", v1094, "io.micronaut.serde.config.annotation.SerdeConfig", v1095);
> v1097 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "sourceProperties");
> v1098 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("property", "sourceProperties");
> v1099 = staticinvoke <java.util.Map: java.util.Map of()>();
> v1100 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty", v1097, "io.micronaut.serde.config.annotation.SerdeConfig", v1098, "jakarta.annotation.Nullable", v1099);
> v1101 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1102 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig");
> v1103 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("com.fasterxml.jackson.annotation.JsonProperty");
> v1104 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v1101, "io.micronaut.core.annotation.Internal", v1102, "io.micronaut.serde.config.annotation.SerdeConfig", v1103);
> specialinvoke v1084.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v1088, v1092, v1096, v1100, v1104, 0, 0);
> v1105 = newarray (io.micronaut.core.type.Argument)[1];
> v1106 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String)>(class "Lcom/oracle/bmc/loganalytics/model/LogAnalyticsProperty;", "E");
> v1105[0] = v1106;
> v1107 = staticinvoke <io.micronaut.core.type.Argument: io.micronaut.core.type.Argument of(java.lang.Class,java.lang.String,io.micronaut.core.'annotation'.AnnotationMetadata,io.micronaut.core.type.Argument[])>(class "Ljava/util/List;", "sourceProperties", v1084, v1105);
> v1108 = (int) -1;
> specialinvoke v1083.<io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef: void <init>(io.micronaut.core.type.Argument,int,int,int,boolean,boolean)>(v1107, 60, v1108, 61, 1, 1);
> v328[30] = v1083;
> <com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef[] $PROPERTIES_REFERENCES> = v328;
1309,1310c1401,1402
< java.lang.String v106, v107, v111, v116, v128, v136, v137, v141, v146, v158, v16, v166, v167, v17, v171, v176, v188, v196, v197, v201, v206, v21, v218, v226, v227, v231, v236, v248, v256, v257, v26, v261, v266, v278, v286, v287, v291, v296, v308, v316, v317, v321, v326, v334, v338, v347, v351, v356, v364, v368, v37, v377, v381, v386, v398, v407, v408, v411, v416, v428, v437, v438, v441, v446, v458, v46, v467, v468, v47, v471, v476, v484, v488, v497, v498, v506, v51, v518, v527, v528, v532, v536, v548, v557, v558, v56, v562, v566, v578, v587, v588, v592, v596, v608, v617, v618, v622, v626, v634, v638, v64, v647, v648, v652, v668, v677, v678, v682, v687, v698, v7, v707, v708, v712, v717, v728, v737, v738, v742, v747, v758, v76, v767, v768, v77, v772, v777, v788, v797, v798, v802, v807, v81, v818, v827, v828, v832, v837, v848, v857, v858, v86, v862, v867, v98;
< java.util.List v10, v100, v101, v102, v103, v104, v105, v109, v11, v114, v118, v119, v12, v120, v122, v123, v126, v127, v129, v13, v130, v131, v132, v133, v134, v135, v139, v14, v144, v148, v149, v15, v150, v152, v153, v154, v156, v157, v159, v161, v162, v163, v164, v165, v169, v174, v178, v179, v180, v182, v183, v184, v186, v187, v189, v19, v191, v192, v193, v194, v195, v199, v204, v208, v209, v210, v212, v213, v214, v216, v217, v219, v221, v222, v223, v224, v225, v229, v234, v238, v239, v24, v240, v242, v243, v244, v246, v247, v249, v251, v252, v253, v254, v255, v259, v264, v268, v269, v270, v272, v273, v274, v276, v277, v279, v28, v281, v282, v283, v284, v285, v289, v29, v294, v298, v299, v30, v300, v302, v303, v304, v306, v307, v309, v311, v312, v313, v314, v315, v319, v32, v324, v328, v329, v33, v330, v332, v333, v336, v337, v339, v34, v341, v342, v343, v344, v345, v346, v349, v354, v358, v359, v36, v360, v362, v363, v366, v367, v369, v371, v372, v373, v374, v375, v376, v379, v38, v384, v388, v389, v390, v392, v393, v396, v397, v399, v4, v40, v401, v402, v403, v404, v405, v406, v409, v41, v414, v418, v419, v42, v420, v422, v423, v424, v426, v427, v429, v43, v431, v432, v433, v434, v435, v436, v44, v444, v448, v449, v45, v450, v452, v453, v456, v457, v459, v461, v462, v463, v464, v465, v466, v470, v474, v478, v479, v480, v482, v483, v486, v487, v489, v49, v491, v492, v493, v494, v495, v496, v500, v504, v508, v509, v510, v512, v513, v516, v517, v519, v521, v522, v523, v524, v525, v526, v530, v534, v538, v539, v54, v540, v542, v543, v546, v547, v549, v551, v552, v553, v554, v555, v556, v560, v564, v568, v569, v570, v572, v573, v574, v576, v577, v579, v58, v581, v582, v583, v584, v585, v586, v59, v590, v598, v599, v6, v60, v600, v602, v603, v606, v607, v609, v611, v612, v613, v614, v615, v616, v62, v620, v625, v628, v629, v63, v630, v632, v633, v636, v637, v639, v641, v642, v643, v644, v645, v646, v650, v655, v658, v659, v66, v660, v662, v663, v666, v667, v669, v67, v671, v672, v673, v674, v675, v676, v68, v680, v685, v688, v689, v690, v692, v693, v694, v696, v697, v699, v70, v701, v702, v703, v704, v705, v706, v71, v710, v715, v719, v72, v720, v722, v723, v724, v726, v727, v729, v73, v731, v732, v733, v734, v735, v736, v74, v740, v745, v749, v75, v750, v752, v753, v754, v756, v757, v759, v761, v762, v763, v764, v765, v766, v770, v775, v779, v780, v782, v783, v786, v787, v789, v79, v791, v792, v793, v794, v795, v796, v8, v800, v805, v809, v810, v811, v812, v813, v814, v816, v817, v819, v821, v822, v823, v824, v825, v826, v830, v835, v839, v84, v840, v841, v843, v844, v846, v847, v849, v851, v852, v853, v854, v855, v856, v860, v865, v869, v870, v871, v873, v88, v89, v90, v92, v93, v94, v96, v97;
---
> java.lang.String v104, v112, v113, v117, v122, v136, v144, v145, v149, v154, v16, v168, v17, v176, v177, v181, v186, v200, v208, v209, v21, v213, v218, v232, v240, v241, v245, v250, v26, v264, v272, v273, v277, v282, v296, v304, v305, v309, v314, v328, v336, v337, v341, v346, v356, v360, v369, v373, v378, v388, v39, v392, v401, v405, v410, v424, v433, v434, v437, v442, v456, v465, v466, v469, v474, v48, v488, v49, v497, v498, v501, v506, v516, v520, v529, v53, v530, v538, v552, v561, v562, v566, v570, v58, v584, v593, v594, v598, v602, v616, v625, v626, v630, v634, v648, v657, v658, v662, v666, v676, v68, v680, v689, v690, v694, v7, v712, v721, v722, v726, v731, v744, v753, v754, v758, v763, v776, v785, v786, v790, v795, v80, v808, v81, v817, v818, v822, v827, v840, v849, v85, v850, v854, v859, v872, v881, v882, v886, v891, v90, v904, v913, v914, v918, v923, v936, v945, v946, v950, v955, v968, v977, v978, v982, v987;
> java.util.List v10, v100, v102, v103, v106, v107, v108, v109, v11, v110, v111, v115, v12, v120, v124, v125, v126, v128, v129, v13, v130, v131, v134, v135, v137, v138, v139, v14, v140, v141, v142, v143, v147, v15, v152, v156, v157, v158, v160, v161, v162, v163, v164, v166, v167, v169, v171, v172, v173, v174, v175, v179, v184, v188, v189, v19, v190, v192, v193, v194, v195, v196, v198, v199, v201, v203, v204, v205, v206, v207, v211, v216, v220, v221, v222, v224, v225, v226, v227, v228, v230, v231, v233, v235, v236, v237, v238, v239, v24, v243, v248, v252, v253, v254, v256, v257, v258, v259, v260, v262, v263, v265, v267, v268, v269, v270, v271, v275, v28, v280, v284, v285, v286, v288, v289, v29, v290, v291, v292, v294, v295, v297, v299, v30, v300, v301, v302, v303, v307, v312, v316, v317, v318, v32, v320, v321, v322, v323, v324, v326, v327, v329, v33, v331, v332, v333, v334, v335, v339, v34, v344, v348, v349, v35, v350, v352, v353, v354, v355, v358, v359, v36, v361, v363, v364, v365, v366, v367, v368, v371, v376, v38, v380, v381, v382, v384, v385, v386, v387, v390, v391, v393, v395, v396, v397, v398, v399, v4, v40, v400, v403, v408, v412, v413, v414, v416, v417, v418, v419, v42, v422, v423, v425, v427, v428, v429, v43, v430, v431, v432, v435, v44, v440, v444, v445, v446, v448, v449, v45, v450, v451, v452, v454, v455, v457, v459, v46, v460, v461, v462, v463, v464, v47, v472, v476, v477, v478, v480, v481, v482, v483, v486, v487, v489, v491, v492, v493, v494, v495, v496, v500, v504, v508, v509, v51, v510, v512, v513, v514, v515, v518, v519, v521, v523, v524, v525, v526, v527, v528, v532, v536, v540, v541, v542, v544, v545, v546, v547, v550, v551, v553, v555, v556, v557, v558, v559, v56, v560, v564, v568, v572, v573, v574, v576, v577, v578, v579, v582, v583, v585, v587, v588, v589, v590, v591, v592, v596, v6, v60, v600, v604, v605, v606, v608, v609, v61, v610, v611, v612, v614, v615, v617, v619, v62, v620, v621, v622, v623, v624, v628, v636, v637, v638, v64, v640, v641, v642, v643, v646, v647, v649, v65, v651, v652, v653, v654, v655, v656, v66, v660, v665, v668, v669, v67, v670, v672, v673, v674, v675, v678, v679, v681, v683, v684, v685, v686, v687, v688, v692, v697, v70, v700, v701, v702, v704, v705, v706, v707, v71, v710, v711, v713, v715, v716, v717, v718, v719, v72, v720, v724, v729, v732, v733, v734, v736, v737, v738, v739, v74, v740, v742, v743, v745, v747, v748, v749, v75, v750, v751, v752, v756, v76, v761, v765, v766, v768, v769, v77, v770, v771, v772, v774, v775, v777, v779, v78, v780, v781, v782, v783, v784, v788, v79, v793, v797, v798, v8, v800, v801, v802, v803, v804, v806, v807, v809, v811, v812, v813, v814, v815, v816, v820, v825, v829, v83, v830, v832, v833, v834, v835, v838, v839, v841, v843, v844, v845, v846, v847, v848, v852, v857, v861, v862, v863, v864, v865, v866, v867, v868, v870, v871, v873, v875, v876, v877, v878, v879, v88, v880, v884, v889, v893, v894, v895, v897, v898, v899, v900, v902, v903, v905, v907, v908, v909, v910, v911, v912, v916, v92, v921, v925, v926, v927, v929, v93, v930, v931, v932, v934, v935, v937, v939, v94, v940, v941, v942, v943, v944, v948, v953, v957, v958, v959, v96, v961, v962, v963, v964, v966, v967, v969, v97, v971, v972, v973, v974, v975, v976, v98, v980, v985, v989, v99, v990, v991, v993, v994, v995;
1312c1404
< com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails v125, v155, v185, v215, v245, v275, v305, v335, v35, v365, v395, v425, v455, v485, v5, v515, v545, v575, v605, v635, v65, v665, v695, v725, v755, v785, v815, v845, v95;
---
> com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails v101, v133, v165, v197, v229, v261, v293, v325, v357, v37, v389, v421, v453, v485, v5, v517, v549, v581, v613, v645, v677, v69, v709, v741, v773, v805, v837, v869, v901, v933, v965;
1314,1316c1406,1408
< java.lang.Boolean v112, v113, v121, v124, v142, v143, v151, v160, v172, v173, v181, v190, v202, v203, v211, v22, v220, v23, v232, v233, v241, v250, v262, v263, v271, v280, v292, v293, v301, v31, v310, v322, v323, v331, v340, v352, v353, v361, v370, v382, v383, v39, v391, v400, v412, v413, v421, v430, v442, v443, v451, v460, v472, v473, v481, v490, v502, v503, v511, v514, v52, v520, v53, v533, v541, v544, v550, v563, v571, v580, v593, v594, v601, v61, v610, v623, v624, v631, v640, v653, v654, v661, v670, v683, v684, v69, v691, v700, v713, v714, v721, v730, v743, v744, v751, v760, v773, v774, v781, v784, v790, v803, v804, v82, v820, v83, v833, v834, v842, v850, v863, v864, v872, v9, v91, v99;
< java.lang.RuntimeException v874;
< java.lang.Long v108, v110, v115, v117, v138, v140, v145, v147, v168, v170, v175, v177, v18, v198, v20, v200, v205, v207, v228, v230, v235, v237, v25, v258, v260, v265, v267, v27, v288, v290, v295, v297, v318, v320, v325, v327, v348, v350, v355, v357, v378, v380, v385, v387, v394, v410, v415, v417, v439, v440, v445, v447, v454, v469, v475, v477, v48, v499, v50, v501, v505, v507, v529, v531, v535, v537, v55, v559, v561, v565, v567, v57, v589, v591, v595, v597, v604, v619, v621, v627, v649, v651, v656, v657, v664, v679, v681, v686, v709, v711, v716, v718, v739, v741, v746, v748, v769, v771, v776, v778, v78, v799, v80, v801, v806, v808, v829, v831, v836, v838, v85, v859, v861, v866, v868, v87;
---
> java.lang.Boolean v105, v118, v119, v127, v132, v150, v151, v159, v170, v182, v183, v191, v202, v214, v215, v22, v223, v23, v234, v246, v247, v255, v266, v278, v279, v287, v298, v31, v310, v311, v319, v330, v342, v343, v351, v362, v374, v375, v383, v394, v406, v407, v41, v415, v426, v438, v439, v447, v458, v470, v471, v479, v490, v502, v503, v511, v522, v534, v535, v54, v543, v548, v55, v554, v567, v575, v580, v586, v599, v607, v618, v63, v631, v632, v639, v650, v663, v664, v671, v682, v695, v696, v703, v714, v727, v728, v73, v735, v746, v759, v760, v767, v778, v791, v792, v799, v810, v823, v824, v831, v836, v842, v855, v856, v86, v87, v874, v887, v888, v896, v9, v906, v919, v920, v928, v938, v95, v951, v952, v960, v970, v983, v984, v992;
> java.lang.RuntimeException v996;
> java.lang.Long v114, v116, v121, v123, v146, v148, v153, v155, v178, v18, v180, v185, v187, v20, v210, v212, v217, v219, v242, v244, v249, v25, v251, v27, v274, v276, v281, v283, v306, v308, v313, v315, v338, v340, v345, v347, v370, v372, v377, v379, v402, v404, v409, v411, v420, v436, v441, v443, v467, v468, v473, v475, v484, v499, v50, v505, v507, v52, v531, v533, v537, v539, v563, v565, v569, v57, v571, v59, v595, v597, v601, v603, v627, v629, v633, v635, v644, v659, v661, v667, v691, v693, v698, v699, v708, v723, v725, v730, v755, v757, v762, v764, v787, v789, v794, v796, v819, v82, v821, v826, v828, v84, v851, v853, v858, v860, v883, v885, v89, v890, v892, v91, v915, v917, v922, v924, v947, v949, v954, v956, v979, v981, v986, v988;
1382c1474,1478
< default: goto label59;
---
> case 58: goto label59;
> case 59: goto label60;
> case 60: goto label61;
> case 61: goto label62;
> default: goto label63;
1417c1513,1515
< specialinvoke v5.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v3, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
---
> v34 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v35 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v5.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v3, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
1420,1421c1518,1519
< v34 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< return v34;
---
> v36 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> return v36;
1423,1453c1521,1553
< v35 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v36 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v37 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v38 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v39 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v40 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v41 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v42 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v43 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v44 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v45 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v46 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v47 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v48 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v49 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v50 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v51 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v52 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v53 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v54 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v55 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v56 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v57 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v58 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v59 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v60 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v61 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v62 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v63 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v35.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v36, v3, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
< return v35;
---
> v37 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v38 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v39 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v40 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v41 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v42 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v43 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v44 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v45 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v46 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v47 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v48 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v49 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v50 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v51 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v52 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v53 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v54 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v55 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v56 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v57 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v58 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v59 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v60 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v61 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v62 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v63 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v64 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v65 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v66 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v67 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v37.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v38, v3, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67);
> return v37;
1455,1456c1555,1556
< v64 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< return v64;
---
> v68 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> return v68;
1458,1488c1558,1590
< v65 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v66 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v67 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v68 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v69 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v70 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v71 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v72 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v73 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v74 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v75 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v76 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v77 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v78 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v79 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v80 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v81 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v82 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v83 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v84 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v85 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v86 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v87 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v88 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v89 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v90 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v91 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v92 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v93 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v65.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v66, v67, v3, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93);
< return v65;
---
> v69 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v70 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v71 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v72 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v73 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v74 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v75 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v76 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v77 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v78 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v79 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v80 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v81 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v82 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v83 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v84 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v85 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v86 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v87 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v88 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v89 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v90 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v91 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v92 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v93 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v94 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v95 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v96 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v97 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v98 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v99 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v69.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v70, v71, v3, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99);
> return v69;
1490,1491c1592,1593
< v94 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< return v94;
---
> v100 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> return v100;
1493,1523c1595,1627
< v95 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v96 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v97 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v98 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v99 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v100 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v101 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v102 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v103 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v104 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v105 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v106 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v107 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v108 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v109 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v110 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v111 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v112 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v113 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v114 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v115 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v116 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v117 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v118 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v119 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v120 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v121 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v122 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v123 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v95.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v96, v97, v98, v3, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123);
< return v95;
---
> v101 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v102 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v103 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v104 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v105 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v106 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v107 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v108 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v109 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v110 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v111 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v112 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v113 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v114 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v115 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v116 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v117 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v118 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v119 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v120 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v121 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v122 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v123 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v124 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v125 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v126 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v127 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v128 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v129 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v130 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v131 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v101.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v102, v103, v104, v3, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131);
> return v101;
1525,1526c1629,1630
< v124 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< return v124;
---
> v132 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> return v132;
1528,1558c1632,1664
< v125 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v126 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v127 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v128 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v129 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v130 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v131 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v132 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v133 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v134 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v135 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v136 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v137 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v138 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v139 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v140 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v141 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v142 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v143 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v144 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v145 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v146 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v147 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v148 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v149 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v150 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v151 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v152 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v153 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v125.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v126, v127, v128, v129, v3, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153);
< return v125;
---
> v133 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v134 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v135 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v136 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v137 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v138 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v139 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v140 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v141 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v142 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v143 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v144 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v145 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v146 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v147 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v148 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v149 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v150 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v151 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v152 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v153 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v154 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v155 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v156 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v157 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v158 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v159 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v160 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v161 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v162 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v163 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v133.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v134, v135, v136, v137, v3, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163);
> return v133;
1560,1561c1666,1667
< v154 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< return v154;
---
> v164 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> return v164;
1563,1593c1669,1701
< v155 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v156 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v157 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v158 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v159 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v160 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v161 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v162 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v163 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v164 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v165 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v166 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v167 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v168 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v169 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v170 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v171 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v172 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v173 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v174 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v175 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v176 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v177 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v178 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v179 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v180 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v181 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v182 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v183 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v155.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v156, v157, v158, v159, v160, v3, v161, v162, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183);
< return v155;
---
> v165 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v166 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v167 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v168 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v169 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v170 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v171 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v172 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v173 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v174 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v175 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v176 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v177 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v178 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v179 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v180 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v181 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v182 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v183 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v184 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v185 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v186 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v187 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v188 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v189 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v190 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v191 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v192 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v193 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v194 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v195 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v165.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v166, v167, v168, v169, v170, v3, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v190, v191, v192, v193, v194, v195);
> return v165;
1595,1596c1703,1704
< v184 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< return v184;
---
> v196 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> return v196;
1598,1628c1706,1738
< v185 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v186 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v187 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v188 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v189 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v190 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v191 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v192 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v193 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v194 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v195 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v196 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v197 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v198 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v199 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v200 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v201 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v202 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v203 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v204 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v205 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v206 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v207 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v208 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v209 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v210 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v211 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v212 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v213 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v185.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v186, v187, v188, v189, v190, v191, v3, v192, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, v207, v208, v209, v210, v211, v212, v213);
< return v185;
---
> v197 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v198 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v199 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v200 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v201 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v202 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v203 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v204 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v205 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v206 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v207 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v208 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v209 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v210 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v211 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v212 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v213 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v214 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v215 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v216 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v217 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v218 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v219 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v220 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v221 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v222 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v223 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v224 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v225 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v226 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v227 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v197.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v198, v199, v200, v201, v202, v203, v3, v204, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227);
> return v197;
1630,1631c1740,1741
< v214 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< return v214;
---
> v228 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> return v228;
1633,1663c1743,1775
< v215 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v216 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v217 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v218 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v219 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v220 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v221 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v222 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v223 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v224 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v225 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v226 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v227 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v228 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v229 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v230 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v231 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v232 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v233 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v234 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v235 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v236 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v237 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v238 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v239 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v240 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v241 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v242 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v243 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v215.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v216, v217, v218, v219, v220, v221, v222, v3, v223, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243);
< return v215;
---
> v229 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v230 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v231 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v232 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v233 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v234 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v235 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v236 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v237 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v238 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v239 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v240 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v241 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v242 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v243 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v244 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v245 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v246 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v247 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v248 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v249 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v250 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v251 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v252 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v253 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v254 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v255 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v256 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v257 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v258 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v259 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v229.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v230, v231, v232, v233, v234, v235, v236, v3, v237, v238, v239, v240, v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, v256, v257, v258, v259);
> return v229;
1665,1666c1777,1778
< v244 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< return v244;
---
> v260 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> return v260;
1668,1698c1780,1812
< v245 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v246 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v247 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v248 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v249 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v250 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v251 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v252 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v253 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v254 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v255 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v256 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v257 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v258 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v259 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v260 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v261 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v262 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v263 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v264 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v265 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v266 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v267 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v268 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v269 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v270 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v271 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v272 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v273 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v245.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v246, v247, v248, v249, v250, v251, v252, v253, v3, v254, v255, v256, v257, v258, v259, v260, v261, v262, v263, v264, v265, v266, v267, v268, v269, v270, v271, v272, v273);
< return v245;
---
> v261 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v262 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v263 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v264 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v265 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v266 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v267 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v268 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v269 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v270 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v271 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v272 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v273 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v274 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v275 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v276 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v277 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v278 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v279 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v280 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v281 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v282 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v283 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v284 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v285 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v286 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v287 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v288 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v289 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v290 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v291 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v261.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v262, v263, v264, v265, v266, v267, v268, v269, v3, v270, v271, v272, v273, v274, v275, v276, v277, v278, v279, v280, v281, v282, v283, v284, v285, v286, v287, v288, v289, v290, v291);
> return v261;
1700,1701c1814,1815
< v274 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< return v274;
---
> v292 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> return v292;
1703,1733c1817,1849
< v275 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v276 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v277 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v278 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v279 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v280 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v281 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v282 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v283 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v284 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v285 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v286 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v287 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v288 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v289 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v290 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v291 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v292 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v293 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v294 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v295 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v296 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v297 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v298 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v299 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v300 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v301 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v302 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v303 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v275.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v276, v277, v278, v279, v280, v281, v282, v283, v284, v3, v285, v286, v287, v288, v289, v290, v291, v292, v293, v294, v295, v296, v297, v298, v299, v300, v301, v302, v303);
< return v275;
---
> v293 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v294 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v295 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v296 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v297 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v298 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v299 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v300 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v301 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v302 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v303 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v304 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v305 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v306 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v307 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v308 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v309 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v310 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v311 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v312 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v313 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v314 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v315 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v316 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v317 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v318 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v319 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v320 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v321 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v322 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v323 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v293.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v294, v295, v296, v297, v298, v299, v300, v301, v302, v3, v303, v304, v305, v306, v307, v308, v309, v310, v311, v312, v313, v314, v315, v316, v317, v318, v319, v320, v321, v322, v323);
> return v293;
1735,1736c1851,1852
< v304 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< return v304;
---
> v324 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> return v324;
1738,1768c1854,1886
< v305 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v306 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v307 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v308 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v309 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v310 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v311 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v312 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v313 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v314 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v315 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v316 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v317 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v318 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v319 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v320 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v321 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v322 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v323 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v324 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v325 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v326 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v327 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v328 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v329 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v330 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v331 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v332 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v333 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v305.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v306, v307, v308, v309, v310, v311, v312, v313, v314, v315, v3, v316, v317, v318, v319, v320, v321, v322, v323, v324, v325, v326, v327, v328, v329, v330, v331, v332, v333);
< return v305;
---
> v325 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v326 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v327 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v328 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v329 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v330 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v331 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v332 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v333 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v334 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v335 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v336 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v337 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v338 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v339 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v340 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v341 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v342 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v343 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v344 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v345 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v346 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v347 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v348 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v349 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v350 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v351 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v352 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v353 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v354 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v355 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v325.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v326, v327, v328, v329, v330, v331, v332, v333, v334, v335, v3, v336, v337, v338, v339, v340, v341, v342, v343, v344, v345, v346, v347, v348, v349, v350, v351, v352, v353, v354, v355);
> return v325;
1770,1771c1888,1889
< v334 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< return v334;
---
> v356 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> return v356;
1773,1803c1891,1923
< v335 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v336 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v337 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v338 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v339 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v340 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v341 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v342 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v343 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v344 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v345 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v346 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v347 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v348 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v349 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v350 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v351 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v352 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v353 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v354 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v355 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v356 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v357 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v358 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v359 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v360 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v361 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v362 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v363 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v335.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v336, v337, v338, v339, v340, v341, v342, v343, v344, v345, v346, v3, v347, v348, v349, v350, v351, v352, v353, v354, v355, v356, v357, v358, v359, v360, v361, v362, v363);
< return v335;
---
> v357 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v358 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v359 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v360 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v361 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v362 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v363 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v364 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v365 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v366 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v367 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v368 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v369 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v370 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v371 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v372 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v373 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v374 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v375 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v376 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v377 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v378 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v379 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v380 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v381 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v382 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v383 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v384 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v385 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v386 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v387 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v357.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v358, v359, v360, v361, v362, v363, v364, v365, v366, v367, v368, v3, v369, v370, v371, v372, v373, v374, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387);
> return v357;
1805,1806c1925,1926
< v364 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< return v364;
---
> v388 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> return v388;
1808,1838c1928,1960
< v365 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v366 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v367 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v368 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v369 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v370 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v371 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v372 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v373 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v374 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v375 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v376 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v377 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v378 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v379 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v380 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v381 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v382 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v383 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v384 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v385 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v386 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v387 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v388 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v389 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v390 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v391 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v392 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v393 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v365.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v366, v367, v368, v369, v370, v371, v372, v373, v374, v375, v376, v377, v3, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393);
< return v365;
---
> v389 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v390 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v391 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v392 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v393 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v394 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v395 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v396 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v397 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v398 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v399 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v400 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v401 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v402 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v403 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v404 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v405 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v406 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v407 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v408 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v409 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v410 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v411 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v412 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v413 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v414 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v415 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v416 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v417 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v418 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v419 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v389.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v390, v391, v392, v393, v394, v395, v396, v397, v398, v399, v400, v401, v3, v402, v403, v404, v405, v406, v407, v408, v409, v410, v411, v412, v413, v414, v415, v416, v417, v418, v419);
> return v389;
1840,1841c1962,1963
< v394 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< return v394;
---
> v420 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> return v420;
1843,1873c1965,1997
< v395 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v396 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v397 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v398 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v399 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v400 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v401 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v402 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v403 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v404 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v405 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v406 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v407 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v408 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v409 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v410 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v411 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v412 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v413 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v414 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v415 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v416 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v417 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v418 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v419 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v420 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v421 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v422 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v423 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v395.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v396, v397, v398, v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v3, v409, v410, v411, v412, v413, v414, v415, v416, v417, v418, v419, v420, v421, v422, v423);
< return v395;
---
> v421 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v422 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v423 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v424 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v425 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v426 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v427 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v428 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v429 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v430 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v431 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v432 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v433 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v434 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v435 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v436 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v437 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v438 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v439 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v440 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v441 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v442 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v443 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v444 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v445 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v446 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v447 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v448 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v449 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v450 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v451 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v421.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v422, v423, v424, v425, v426, v427, v428, v429, v430, v431, v432, v433, v434, v3, v435, v436, v437, v438, v439, v440, v441, v442, v443, v444, v445, v446, v447, v448, v449, v450, v451);
> return v421;
1875,1876c1999,2000
< v424 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< return v424;
---
> v452 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> return v452;
1878,1908c2002,2034
< v425 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v426 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v427 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v428 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v429 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v430 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v431 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v432 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v433 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v434 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v435 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v436 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v437 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v438 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v439 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v440 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v441 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v442 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v443 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v444 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v445 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v446 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v447 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v448 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v449 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v450 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v451 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v452 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v453 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v425.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v426, v427, v428, v429, v430, v431, v432, v433, v434, v435, v436, v437, v438, v439, v3, v440, v441, v442, v443, v444, v445, v446, v447, v448, v449, v450, v451, v452, v453);
< return v425;
---
> v453 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v454 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v455 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v456 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v457 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v458 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v459 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v460 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v461 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v462 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v463 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v464 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v465 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v466 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v467 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v468 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v469 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v470 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v471 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v472 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v473 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v474 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v475 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v476 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v477 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v478 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v479 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v480 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v481 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v482 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v483 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v453.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v454, v455, v456, v457, v458, v459, v460, v461, v462, v463, v464, v465, v466, v467, v3, v468, v469, v470, v471, v472, v473, v474, v475, v476, v477, v478, v479, v480, v481, v482, v483);
> return v453;
1910,1945c2036
< v454 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< return v454;
< label32:
< v455 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v456 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v457 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v458 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v459 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v460 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v461 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v462 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v463 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v464 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v465 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v466 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v467 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v468 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v469 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v470 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v471 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v472 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v473 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v474 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v475 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v476 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v477 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v478 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v479 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v480 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v481 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v482 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v483 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v455.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v456, v457, v458, v459, v460, v461, v462, v463, v464, v465, v466, v467, v468, v469, v470, v3, v471, v472, v473, v474, v475, v476, v477, v478, v479, v480, v481, v482, v483);
< return v455;
< label33:
< v484 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
---
> v484 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
1947c2038
< label34:
---
> label32:
1964c2055
< v501 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
---
> v501 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
1977c2068,2070
< specialinvoke v485.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v486, v487, v488, v489, v490, v491, v492, v493, v494, v495, v496, v497, v498, v499, v500, v501, v3, v502, v503, v504, v505, v506, v507, v508, v509, v510, v511, v512, v513);
---
> v514 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v515 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v485.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v486, v487, v488, v489, v490, v491, v492, v493, v494, v495, v496, v497, v498, v499, v500, v3, v501, v502, v503, v504, v505, v506, v507, v508, v509, v510, v511, v512, v513, v514, v515);
1978a2072,2108
> label33:
> v516 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> return v516;
> label34:
> v517 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v518 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v519 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v520 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v521 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v522 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v523 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v524 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v525 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v526 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v527 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v528 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v529 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v530 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v531 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v532 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v533 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v534 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v535 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v536 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v537 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v538 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v539 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v540 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v541 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v542 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v543 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v544 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v545 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v546 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v547 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v517.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v518, v519, v520, v521, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, v532, v533, v3, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, v546, v547);
> return v517;
1980,1981c2110,2111
< v514 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< return v514;
---
> v548 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> return v548;
1983,2013c2113,2145
< v515 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v516 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v517 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v518 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v519 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v520 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v521 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v522 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v523 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v524 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v525 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v526 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v527 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v528 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v529 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v530 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v531 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v532 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v533 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v534 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v535 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v536 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v537 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v538 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v539 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v540 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v541 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v542 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v543 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v515.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v516, v517, v518, v519, v520, v521, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, v532, v3, v533, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543);
< return v515;
---
> v549 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v550 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v551 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v552 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v553 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v554 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v555 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v556 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v557 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v558 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v559 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v560 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v561 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v562 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v563 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v564 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v565 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v566 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v567 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v568 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v569 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v570 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v571 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v572 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v573 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v574 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v575 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v576 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v577 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v578 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v579 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v549.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v550, v551, v552, v553, v554, v555, v556, v557, v558, v559, v560, v561, v562, v563, v564, v565, v566, v3, v567, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v578, v579);
> return v549;
2015,2016c2147,2148
< v544 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< return v544;
---
> v580 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> return v580;
2018,2048c2150,2182
< v545 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v546 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v547 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v548 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v549 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v550 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v551 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v552 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v553 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v554 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v555 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v556 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v557 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v558 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v559 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v560 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v561 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v562 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v563 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v564 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v565 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v566 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v567 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v568 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v569 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v570 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v571 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v572 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v573 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v545.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v546, v547, v548, v549, v550, v551, v552, v553, v554, v555, v556, v557, v558, v559, v560, v561, v562, v563, v3, v564, v565, v566, v567, v568, v569, v570, v571, v572, v573);
< return v545;
---
> v581 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v582 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v583 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v584 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v585 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v586 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v587 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v588 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v589 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v590 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v591 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v592 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v593 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v594 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v595 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v596 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v597 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v598 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v599 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v600 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v601 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v602 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v603 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v604 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v605 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v606 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v607 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v608 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v609 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v610 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v611 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v581.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v582, v583, v584, v585, v586, v587, v588, v589, v590, v591, v592, v593, v594, v595, v596, v597, v598, v599, v3, v600, v601, v602, v603, v604, v605, v606, v607, v608, v609, v610, v611);
> return v581;
2050,2051c2184,2185
< v574 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< return v574;
---
> v612 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> return v612;
2053,2083c2187,2219
< v575 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v576 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v577 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v578 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v579 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v580 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v581 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v582 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v583 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v584 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v585 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v586 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v587 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v588 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v589 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v590 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v591 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v592 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v593 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v594 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v595 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v596 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v597 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v598 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v599 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v600 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v601 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v602 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v603 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v575.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v576, v577, v578, v579, v580, v581, v582, v583, v584, v585, v586, v587, v588, v589, v590, v591, v592, v593, v594, v3, v595, v596, v597, v598, v599, v600, v601, v602, v603);
< return v575;
---
> v613 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v614 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v615 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v616 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v617 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v618 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v619 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v620 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v621 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v622 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v623 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v624 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v625 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v626 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v627 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v628 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v629 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v630 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v631 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v632 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v633 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v634 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v635 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v636 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v637 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v638 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v639 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v640 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v641 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v642 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v643 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v613.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v614, v615, v616, v617, v618, v619, v620, v621, v622, v623, v624, v625, v626, v627, v628, v629, v630, v631, v632, v3, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643);
> return v613;
2085,2086c2221,2222
< v604 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< return v604;
---
> v644 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> return v644;
2088,2118c2224,2256
< v605 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v606 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v607 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v608 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v609 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v610 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v611 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v612 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v613 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v614 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v615 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v616 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v617 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v618 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v619 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v620 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v621 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v622 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v623 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v624 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v625 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v626 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v627 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v628 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v629 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v630 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v631 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v632 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v633 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v605.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v606, v607, v608, v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, v620, v621, v622, v623, v624, v625, v3, v626, v627, v628, v629, v630, v631, v632, v633);
< return v605;
---
> v645 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v646 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v647 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v648 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v649 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v650 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v651 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v652 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v653 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v654 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v655 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v656 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v657 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v658 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v659 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v660 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v661 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v662 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v663 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v664 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v665 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v666 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v667 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v668 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v669 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v670 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v671 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v672 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v673 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v674 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v675 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v645.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v646, v647, v648, v649, v650, v651, v652, v653, v654, v655, v656, v657, v658, v659, v660, v661, v662, v663, v664, v665, v3, v666, v667, v668, v669, v670, v671, v672, v673, v674, v675);
> return v645;
2120,2121c2258,2259
< v634 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< return v634;
---
> v676 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> return v676;
2123,2153c2261,2293
< v635 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v636 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v637 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v638 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v639 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v640 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v641 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v642 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v643 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v644 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v645 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v646 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v647 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v648 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v649 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v650 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v651 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v652 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v653 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v654 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v655 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v656 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v657 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v658 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v659 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v660 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v661 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v662 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v663 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v635.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v636, v637, v638, v639, v640, v641, v642, v643, v644, v645, v646, v647, v648, v649, v650, v651, v652, v653, v654, v655, v656, v3, v657, v658, v659, v660, v661, v662, v663);
< return v635;
---
> v677 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v678 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v679 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v680 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v681 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v682 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v683 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v684 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v685 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v686 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v687 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v688 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v689 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v690 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v691 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v692 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v693 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v694 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v695 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v696 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v697 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v698 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v699 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v700 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v701 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v702 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v703 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v704 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v705 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v706 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v707 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v677.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v678, v679, v680, v681, v682, v683, v684, v685, v686, v687, v688, v689, v690, v691, v692, v693, v694, v695, v696, v697, v698, v3, v699, v700, v701, v702, v703, v704, v705, v706, v707);
> return v677;
2155,2156c2295,2296
< v664 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< return v664;
---
> v708 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> return v708;
2158,2188c2298,2330
< v665 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v666 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v667 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v668 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v669 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v670 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v671 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v672 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v673 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v674 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v675 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v676 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v677 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v678 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v679 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v680 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v681 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v682 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v683 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v684 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v685 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v686 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v687 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v688 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v689 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v690 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v691 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v692 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v693 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v665.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v666, v667, v668, v669, v670, v671, v672, v673, v674, v675, v676, v677, v678, v679, v680, v681, v682, v683, v684, v685, v686, v687, v3, v688, v689, v690, v691, v692, v693);
< return v665;
---
> v709 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v710 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v711 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v712 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v713 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v714 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v715 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v716 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v717 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v718 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v719 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v720 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v721 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v722 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v723 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v724 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v725 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v726 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v727 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v728 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v729 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v730 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v731 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v732 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v733 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v734 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v735 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v736 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v737 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v738 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v739 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v709.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v710, v711, v712, v713, v714, v715, v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v727, v728, v729, v730, v731, v3, v732, v733, v734, v735, v736, v737, v738, v739);
> return v709;
2190,2191c2332,2333
< v694 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< return v694;
---
> v740 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> return v740;
2193,2223c2335,2367
< v695 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v696 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v697 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v698 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v699 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v700 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v701 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v702 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v703 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v704 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v705 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v706 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v707 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v708 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v709 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v710 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v711 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v712 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v713 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v714 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v715 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v716 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v717 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v718 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v719 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v720 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v721 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v722 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v723 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v695.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v696, v697, v698, v699, v700, v701, v702, v703, v704, v705, v706, v707, v708, v709, v710, v711, v712, v713, v714, v715, v716, v717, v718, v3, v719, v720, v721, v722, v723);
< return v695;
---
> v741 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v742 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v743 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v744 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v745 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v746 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v747 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v748 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v749 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v750 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v751 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v752 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v753 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v754 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v755 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v756 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v757 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v758 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v759 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v760 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v761 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v762 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v763 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v764 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v765 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v766 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v767 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v768 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v769 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v770 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v771 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v741.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v742, v743, v744, v745, v746, v747, v748, v749, v750, v751, v752, v753, v754, v755, v756, v757, v758, v759, v760, v761, v762, v763, v764, v3, v765, v766, v767, v768, v769, v770, v771);
> return v741;
2225,2226c2369,2370
< v724 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< return v724;
---
> v772 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> return v772;
2228,2258c2372,2404
< v725 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v726 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v727 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v728 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v729 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v730 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v731 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v732 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v733 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v734 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v735 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v736 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v737 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v738 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v739 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v740 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v741 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v742 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v743 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v744 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v745 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v746 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v747 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v748 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v749 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v750 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v751 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v752 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v753 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v725.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v726, v727, v728, v729, v730, v731, v732, v733, v734, v735, v736, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v3, v750, v751, v752, v753);
< return v725;
---
> v773 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v774 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v775 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v776 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v777 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v778 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v779 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v780 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v781 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v782 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v783 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v784 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v785 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v786 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v787 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v788 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v789 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v790 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v791 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v792 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v793 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v794 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v795 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v796 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v797 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v798 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v799 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v800 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v801 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v802 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v803 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v773.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v774, v775, v776, v777, v778, v779, v780, v781, v782, v783, v784, v785, v786, v787, v788, v789, v790, v791, v792, v793, v794, v795, v796, v797, v3, v798, v799, v800, v801, v802, v803);
> return v773;
2260,2261c2406,2407
< v754 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< return v754;
---
> v804 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> return v804;
2263,2293c2409,2441
< v755 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v756 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v757 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v758 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v759 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v760 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v761 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v762 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v763 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v764 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v765 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v766 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v767 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v768 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v769 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v770 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v771 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v772 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v773 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v774 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v775 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v776 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v777 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v778 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v779 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v780 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v781 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v782 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v783 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v755.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v756, v757, v758, v759, v760, v761, v762, v763, v764, v765, v766, v767, v768, v769, v770, v771, v772, v773, v774, v775, v776, v777, v778, v779, v780, v3, v781, v782, v783);
< return v755;
---
> v805 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v806 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v807 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v808 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v809 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v810 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v811 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v812 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v813 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v814 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v815 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v816 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v817 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v818 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v819 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v820 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v821 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v822 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v823 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v824 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v825 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v826 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v827 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v828 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v829 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v830 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v831 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v832 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v833 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v834 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v835 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v805.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v806, v807, v808, v809, v810, v811, v812, v813, v814, v815, v816, v817, v818, v819, v820, v821, v822, v823, v824, v825, v826, v827, v828, v829, v830, v3, v831, v832, v833, v834, v835);
> return v805;
2295,2296c2443,2444
< v784 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< return v784;
---
> v836 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> return v836;
2298,2328c2446,2478
< v785 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v786 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v787 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v788 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v789 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v790 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v791 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v792 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v793 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v794 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v795 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v796 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v797 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v798 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v799 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v800 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v801 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v802 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v803 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v804 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v805 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v806 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v807 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v808 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v809 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v810 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v811 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v812 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< v813 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v785.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v786, v787, v788, v789, v790, v791, v792, v793, v794, v795, v796, v797, v798, v799, v800, v801, v802, v803, v804, v805, v806, v807, v808, v809, v810, v811, v3, v812, v813);
< return v785;
---
> v837 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v838 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v839 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v840 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v841 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v842 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v843 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v844 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v845 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v846 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v847 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v848 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v849 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v850 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v851 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v852 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v853 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v854 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v855 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v856 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v857 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v858 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v859 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v860 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v861 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v862 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v863 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v864 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v865 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v866 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v867 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v837.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v838, v839, v840, v841, v842, v843, v844, v845, v846, v847, v848, v849, v850, v851, v852, v853, v854, v855, v856, v857, v858, v859, v860, v861, v862, v863, v3, v864, v865, v866, v867);
> return v837;
2330,2331c2480,2481
< v814 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< return v814;
---
> v868 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> return v868;
2333,2363c2483,2515
< v815 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v816 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v817 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v818 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v819 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v820 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v821 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v822 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v823 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v824 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v825 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v826 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v827 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v828 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v829 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v830 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v831 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v832 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v833 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v834 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v835 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v836 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v837 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v838 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v839 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v840 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v841 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v842 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v843 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< specialinvoke v815.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v816, v817, v818, v819, v820, v821, v822, v823, v824, v825, v826, v827, v828, v829, v830, v831, v832, v833, v834, v835, v836, v837, v838, v839, v840, v841, v842, v3, v843);
< return v815;
---
> v869 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v870 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v871 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v872 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v873 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v874 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v875 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v876 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v877 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v878 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v879 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v880 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v881 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v882 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v883 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v884 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v885 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v886 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v887 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v888 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v889 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v890 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v891 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v892 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v893 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v894 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v895 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v896 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v897 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v898 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v899 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v869.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v870, v871, v872, v873, v874, v875, v876, v877, v878, v879, v880, v881, v882, v883, v884, v885, v886, v887, v888, v889, v890, v891, v892, v893, v894, v895, v896, v3, v897, v898, v899);
> return v869;
2365,2366c2517,2518
< v844 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
< return v844;
---
> v900 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> return v900;
2368,2398c2520,2552
< v845 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
< v846 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
< v847 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
< v848 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
< v849 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
< v850 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
< v851 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
< v852 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
< v853 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
< v854 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
< v855 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
< v856 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
< v857 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
< v858 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
< v859 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
< v860 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
< v861 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
< v862 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
< v863 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
< v864 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
< v865 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
< v866 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
< v867 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
< v868 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
< v869 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
< v870 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
< v871 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
< v872 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
< v873 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
< specialinvoke v845.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v846, v847, v848, v849, v850, v851, v852, v853, v854, v855, v856, v857, v858, v859, v860, v861, v862, v863, v864, v865, v866, v867, v868, v869, v870, v871, v872, v873, v3);
< return v845;
---
> v901 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v902 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v903 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v904 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v905 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v906 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v907 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v908 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v909 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v910 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v911 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v912 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v913 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v914 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v915 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v916 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v917 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v918 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v919 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v920 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v921 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v922 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v923 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v924 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v925 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v926 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v927 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v928 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v929 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v930 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> v931 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v901.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v902, v903, v904, v905, v906, v907, v908, v909, v910, v911, v912, v913, v914, v915, v916, v917, v918, v919, v920, v921, v922, v923, v924, v925, v926, v927, v928, v929, v3, v930, v931);
> return v901;
2400,2401c2554,2629
< v874 = virtualinvoke v0.<com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: java.lang.RuntimeException unknownDispatchAtIndexException(int)>(v1);
< throw v874;
---
> v932 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> return v932;
> label60:
> v933 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v934 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v935 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v936 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v937 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v938 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v939 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v940 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v941 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v942 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v943 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v944 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v945 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v946 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v947 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v948 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v949 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v950 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v951 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v952 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v953 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v954 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v955 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v956 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v957 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v958 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v959 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v960 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v961 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v962 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v963 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> specialinvoke v933.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v934, v935, v936, v937, v938, v939, v940, v941, v942, v943, v944, v945, v946, v947, v948, v949, v950, v951, v952, v953, v954, v955, v956, v957, v958, v959, v960, v961, v962, v3, v963);
> return v933;
> label61:
> v964 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getSourceProperties()>();
> return v964;
> label62:
> v965 = new com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails;
> v966 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelConditions()>();
> v967 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getDataFilterDefinitions()>();
> v968 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDatabaseCredential()>();
> v969 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getExtendedFieldDefinitions()>();
> v970 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsForCloud()>();
> v971 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabels()>();
> v972 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetricDefinitions()>();
> v973 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetrics()>();
> v974 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getOobParsers()>();
> v975 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParameters()>();
> v976 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getPatterns()>();
> v977 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDescription()>();
> v978 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getDisplayName()>();
> v979 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getEditVersion()>();
> v980 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getFunctions()>();
> v981 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getSourceId()>();
> v982 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getName()>();
> v983 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSecureContent()>();
> v984 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsSystem()>();
> v985 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getParsers()>();
> v986 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getRuleId()>();
> v987 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.String getTypeName()>();
> v988 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Long getWarningConfig()>();
> v989 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getMetadataFields()>();
> v990 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getLabelDefinitions()>();
> v991 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEntityTypes()>();
> v992 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.lang.Boolean getIsTimezoneOverride()>();
> v993 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getUserParsers()>();
> v994 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getCategories()>();
> v995 = virtualinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: java.util.List getEndpoints()>();
> specialinvoke v965.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v966, v967, v968, v969, v970, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v982, v983, v984, v985, v986, v987, v988, v989, v990, v991, v992, v993, v994, v995, v3);
> return v965;
> label63:
> v996 = virtualinvoke v0.<com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: java.lang.RuntimeException unknownDispatchAtIndexException(int)>(v1);
> throw v996;
2405d2632
< java.lang.reflect.Method v11, v13, v15, v17, v19, v21, v23, v25, v27, v29, v3, v31, v33, v35, v37, v39, v41, v43, v45, v47, v49, v5, v51, v53, v55, v57, v59, v7, v9;
2406a2634,2636
> java.lang.Class[] v10, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v6, v60, v62, v8;
> java.lang.RuntimeException v64;
> java.lang.reflect.Method v11, v13, v15, v17, v19, v21, v23, v25, v27, v29, v3, v31, v33, v35, v37, v39, v41, v43, v45, v47, v49, v5, v51, v53, v55, v57, v59, v61, v63, v7, v9;
2408,2409d2637
< java.lang.Class[] v10, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v6, v8;
< java.lang.RuntimeException v60;
2415c2643
< case 1: goto label30;
---
> case 1: goto label32;
2417c2645
< case 3: goto label30;
---
> case 3: goto label32;
2419c2647
< case 5: goto label30;
---
> case 5: goto label32;
2421c2649
< case 7: goto label30;
---
> case 7: goto label32;
2423c2651
< case 9: goto label30;
---
> case 9: goto label32;
2425c2653
< case 11: goto label30;
---
> case 11: goto label32;
2427c2655
< case 13: goto label30;
---
> case 13: goto label32;
2429c2657
< case 15: goto label30;
---
> case 15: goto label32;
2431c2659
< case 17: goto label30;
---
> case 17: goto label32;
2433c2661
< case 19: goto label30;
---
> case 19: goto label32;
2435c2663
< case 21: goto label30;
---
> case 21: goto label32;
2437c2665
< case 23: goto label30;
---
> case 23: goto label32;
2439c2667
< case 25: goto label30;
---
> case 25: goto label32;
2441c2669
< case 27: goto label30;
---
> case 27: goto label32;
2443c2671
< case 29: goto label30;
---
> case 29: goto label32;
2445c2673
< case 31: goto label30;
---
> case 31: goto label32;
2447c2675
< case 33: goto label30;
---
> case 33: goto label32;
2449c2677
< case 35: goto label30;
---
> case 35: goto label32;
2451c2679
< case 37: goto label30;
---
> case 37: goto label32;
2453c2681
< case 39: goto label30;
---
> case 39: goto label32;
2455c2683
< case 41: goto label30;
---
> case 41: goto label32;
2457c2685
< case 43: goto label30;
---
> case 43: goto label32;
2459c2687
< case 45: goto label30;
---
> case 45: goto label32;
2461c2689
< case 47: goto label30;
---
> case 47: goto label32;
2463c2691
< case 49: goto label30;
---
> case 49: goto label32;
2465c2693
< case 51: goto label30;
---
> case 51: goto label32;
2467c2695
< case 53: goto label30;
---
> case 53: goto label32;
2469c2697
< case 55: goto label30;
---
> case 55: goto label32;
2471c2699,2703
< default: goto label30;
---
> case 57: goto label32;
> case 58: goto label30;
> case 59: goto label32;
> case 60: goto label31;
> default: goto label32;
2590,2591c2822,2831
< v60 = virtualinvoke v0.<com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: java.lang.RuntimeException unknownDispatchAtIndexException(int)>(v1);
< throw v60;
---
> v60 = <io.micronaut.core.reflect.ReflectionUtils: java.lang.Class[] EMPTY_CLASS_ARRAY>;
> v61 = staticinvoke <io.micronaut.core.reflect.ReflectionUtils: java.lang.reflect.Method getRequiredMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/oracle/bmc/loganalytics/model/UpsertLogAnalyticsSourceDetails;", "getEndpoints", v60);
> return v61;
> label31:
> v62 = <io.micronaut.core.reflect.ReflectionUtils: java.lang.Class[] EMPTY_CLASS_ARRAY>;
> v63 = staticinvoke <io.micronaut.core.reflect.ReflectionUtils: java.lang.reflect.Method getRequiredMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/oracle/bmc/loganalytics/model/UpsertLogAnalyticsSourceDetails;", "getSourceProperties", v62);
> return v63;
> label32:
> v64 = virtualinvoke v0.<com.oracle.bmc.loganalytics.model.introspection.$UpsertLogAnalyticsSourceDetails$Introspection: java.lang.RuntimeException unknownDispatchAtIndexException(int)>(v1);
> throw v64;
2598c2838
< java.lang.Object v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v4, v5, v6, v7, v8, v9;
---
> java.lang.Object v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v4, v5, v6, v7, v8, v9;
2631c2871,2873
< specialinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List)>(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
---
> v32 = v1[29];
> v33 = v1[30];
> specialinvoke v2.<com.oracle.bmc.loganalytics.model.UpsertLogAnalyticsSourceDetails: void <init>(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,java.lang.Long,java.util.List,java.lang.Long,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.util.List,java.util.List,java.util.List,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List)>(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
