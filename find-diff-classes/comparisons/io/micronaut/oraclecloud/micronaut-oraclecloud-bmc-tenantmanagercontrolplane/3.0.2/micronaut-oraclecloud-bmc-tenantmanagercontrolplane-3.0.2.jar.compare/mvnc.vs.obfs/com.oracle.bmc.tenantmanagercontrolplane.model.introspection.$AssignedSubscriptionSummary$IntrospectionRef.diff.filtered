6,9c6,13
< java.lang.Integer v63;
< java.util.Map v10, v100, v101, v102, v109, v19, v45, v50, v55, v58, v65, v67, v69, v70, v71, v72, v73, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v94, v95, v96, v97, v98;
< io.micronaut.core.'annotation'.AnnotationClassValue v0, v1, v11, v12, v13, v14, v15, v16, v17, v2, v20, v3, v4, v46, v47, v48, v5, v51, v52, v53, v56, v59, v6, v60, v61, v68, v7, v8, v9, v93;
< io.micronaut.core.'annotation'.AnnotationClassValue[] v28, v30, v34;
---
> java.lang.Integer v62;
> java.util.Map v10, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v122, v125, v126, v128, v133, v134, v135, v136, v137, v139, v145, v150, v151, v152, v159, v18, v3, v44, v49, v54, v57, v64, v65, v67, v7, v71, v72, v75, v76, v78, v83, v84, v85, v86, v87, v89, v95, v96;
> io.micronaut.core.'annotation'.AnnotationClassValue v0, v1, v100, v11, v12, v121, v124, v127, v13, v130, v132, v14, v144, v149, v15, v16, v19, v4, v45, v46, v47, v5, v50, v51, v52, v55, v58, v59, v60, v70, v74, v77, v8, v80, v82, v94;
> io.micronaut.core.'annotation'.AnnotationClassValue[] v129, v131, v143, v148, v27, v29, v33, v79, v81, v93, v99;
> io.micronaut.core.'annotation'.AnnotationValue[] v119, v140, v37, v6, v68, v90;
> int v61;
> java.lang.Boolean v138, v17, v2, v23, v48, v53, v56, v63, v88, v9;
> io.micronaut.core.'annotation'.AnnotationValue v120, v123, v141, v146, v69, v73, v91, v97;
11,17c15,18
< java.util.Map$Entry v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v44;
< java.util.List v103, v104, v105, v106, v107, v108;
< io.micronaut.core.'annotation'.AnnotationValue[] v38;
< java.lang.String[] v22, v26, v32, v36, v40, v42;
< int v62;
< java.lang.Boolean v18, v24, v49, v54, v57, v64, v74, v99;
< java.util.Map$Entry[] v21;
---
> java.util.Map$Entry v22, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42, v43;
> java.util.List v153, v154, v155, v156, v157, v158;
> java.lang.String[] v142, v147, v21, v25, v31, v35, v39, v41, v92, v98;
> java.util.Map$Entry[] v20;
19,30c20,34
< v1 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_1()>();
< v2 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_1()>();
< v3 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_1()>();
< v4 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_2()>();
< v5 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_3()>();
< v6 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_2()>();
< v7 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_1()>();
< v8 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_4()>();
< v9 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_3()>();
< v10 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("as", v1, "builder", v2, "contentAs", v3, "contentConverter", v4, "contentUsing", v5, "converter", v6, "keyAs", v7, "keyUsing", v8, "using", v9);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v0, v10);
< v11 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_5()>();
---
> v1 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_0()>();
> v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v3 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("defaultImpl", v1, "include", "PROPERTY", "visible", v2);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v0, v3);
> v4 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_1()>();
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationType(io.micronaut.core.'annotation'.AnnotationClassValue)>(v4);
> v5 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_2()>();
> v6 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[0];
> v7 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", v6);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v5, v7);
> v8 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_3()>();
> v9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v10 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("failOnRepeatedNames", v9);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v8, v10);
> v11 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_4()>();
32c36
< v12 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_6()>();
---
> v12 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_5()>();
34c38
< v13 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_7()>();
---
> v13 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_6()>();
36c40
< v14 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_8()>();
---
> v14 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_7()>();
38,102c42,106
< v15 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_9()>();
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationType(io.micronaut.core.'annotation'.AnnotationClassValue)>(v15);
< v16 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_10()>();
< v17 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_11()>();
< v18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
< v19 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v17, "validate", v18);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v16, v19);
< v20 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_12()>();
< v21 = newarray (java.util.Map$Entry)[12];
< v22 = newarray (java.lang.String)[1];
< v22[0] = "METHOD";
< v23 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("accessKind", v22);
< v21[0] = v23;
< v24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
< v25 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("annotationMetadata", v24);
< v21[1] = v25;
< v26 = newarray (java.lang.String)[0];
< v27 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("classNames", v26);
< v21[2] = v27;
< v28 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
< v29 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("classes", v28);
< v21[3] = v29;
< v30 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
< v31 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("excludedAnnotations", v30);
< v21[4] = v31;
< v32 = newarray (java.lang.String)[0];
< v33 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("excludes", v32);
< v21[5] = v33;
< v34 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
< v35 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("includedAnnotations", v34);
< v21[6] = v35;
< v36 = newarray (java.lang.String)[0];
< v37 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("includes", v36);
< v21[7] = v37;
< v38 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[0];
< v39 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("indexed", v38);
< v21[8] = v39;
< v40 = newarray (java.lang.String)[0];
< v41 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("packages", v40);
< v21[9] = v41;
< v42 = newarray (java.lang.String)[1];
< v42[0] = "DEFAULT";
< v43 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("visibility", v42);
< v21[10] = v43;
< v44 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("withPrefix", "with");
< v21[11] = v44;
< v45 = staticinvoke <java.util.Map: java.util.Map ofEntries(java.util.Map$Entry[])>(v21);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v20, v45);
< v46 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_13()>();
< v47 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_11()>();
< v48 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_14()>();
< v49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
< v50 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v47, "using", v48, "validate", v49);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v46, v50);
< v51 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_15()>();
< v52 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_11()>();
< v53 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_16()>();
< v54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
< v55 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v52, "using", v53, "validate", v54);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v51, v55);
< v56 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_17()>();
< v57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
< v58 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("forRemoval", v57);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v56, v58);
< v59 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_18()>();
---
> v15 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_8()>();
> v16 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_9()>();
> v17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
> v18 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v16, "validate", v17);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v15, v18);
> v19 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_10()>();
> v20 = newarray (java.util.Map$Entry)[12];
> v21 = newarray (java.lang.String)[1];
> v21[0] = "METHOD";
> v22 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("accessKind", v21);
> v20[0] = v22;
> v23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
> v24 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("annotationMetadata", v23);
> v20[1] = v24;
> v25 = newarray (java.lang.String)[0];
> v26 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("classNames", v25);
> v20[2] = v26;
> v27 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
> v28 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("classes", v27);
> v20[3] = v28;
> v29 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
> v30 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("excludedAnnotations", v29);
> v20[4] = v30;
> v31 = newarray (java.lang.String)[0];
> v32 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("excludes", v31);
> v20[5] = v32;
> v33 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[0];
> v34 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("includedAnnotations", v33);
> v20[6] = v34;
> v35 = newarray (java.lang.String)[0];
> v36 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("includes", v35);
> v20[7] = v36;
> v37 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[0];
> v38 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("indexed", v37);
> v20[8] = v38;
> v39 = newarray (java.lang.String)[0];
> v40 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("packages", v39);
> v20[9] = v40;
> v41 = newarray (java.lang.String)[1];
> v41[0] = "DEFAULT";
> v42 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("visibility", v41);
> v20[10] = v42;
> v43 = staticinvoke <java.util.Map: java.util.Map$Entry entry(java.lang.Object,java.lang.Object)>("withPrefix", "with");
> v20[11] = v43;
> v44 = staticinvoke <java.util.Map: java.util.Map ofEntries(java.util.Map$Entry[])>(v20);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v19, v44);
> v45 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_11()>();
> v46 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_9()>();
> v47 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_12()>();
> v48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
> v49 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v46, "using", v47, "validate", v48);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v45, v49);
> v50 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_13()>();
> v51 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_9()>();
> v52 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_14()>();
> v53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
> v54 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("naming", v51, "using", v52, "validate", v53);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v50, v54);
> v55 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_15()>();
> v56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v57 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("forRemoval", v56);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v55, v57);
> v58 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_16()>();
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationType(io.micronaut.core.'annotation'.AnnotationClassValue)>(v58);
> v59 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_17()>();
104,111c108,115
< v60 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_19()>();
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationType(io.micronaut.core.'annotation'.AnnotationClassValue)>(v60);
< v61 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_20()>();
< v62 = (int) -1;
< v63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v62);
< v64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
< v65 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("access", "AUTO", "index", v63, "required", v64);
< staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v61, v65);
---
> v60 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_18()>();
> v61 = (int) -1;
> v62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v61);
> v63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v64 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("access", "AUTO", "index", v62, "required", v63);
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerAnnotationDefaults(io.micronaut.core.'annotation'.AnnotationClassValue,java.util.Map)>(v60, v64);
> v65 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype", "io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped");
> staticinvoke <io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void registerRepeatableAnnotations(java.util.Map)>(v65);
114,130c118,140
< v68 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
< v69 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("builder", v68);
< v70 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("targetPackage", "com.oracle.bmc.tenantmanagercontrolplane.model.introspection");
< v71 = staticinvoke <java.util.Map: java.util.Map of()>();
< v72 = staticinvoke <java.util.Map: java.util.Map of()>();
< v73 = staticinvoke <java.util.Map: java.util.Map of()>();
< v74 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
< v75 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("filter", "explicitlySetFilter", "validate", v74);
< v76 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "Annotation @JsonDeserialize specifies attribute \'builder\'. Currently supported attributes include: [as]");
< v77 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonFilter", v67, "com.fasterxml.jackson.databind.annotation.JsonDeserialize", v69, "io.micronaut.core.annotation.Introspected", v70, "io.micronaut.serde.annotation.Serdeable", v71, "io.micronaut.serde.annotation.Serdeable$Deserializable", v72, "io.micronaut.serde.annotation.Serdeable$Serializable", v73, "io.micronaut.serde.config.annotation.SerdeConfig", v75, "io.micronaut.serde.config.annotation.SerdeConfig$SerError", v76);
< v78 = staticinvoke <java.util.Map: java.util.Map of()>();
< v79 = staticinvoke <java.util.Map: java.util.Map of()>();
< v80 = staticinvoke <java.util.Map: java.util.Map of()>();
< v81 = staticinvoke <java.util.Map: java.util.Map of()>();
< v82 = staticinvoke <java.util.Map: java.util.Map of()>();
< v83 = staticinvoke <java.util.Map: java.util.Map of()>();
< v84 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v78, "io.micronaut.core.annotation.Internal", v79, "io.micronaut.core.annotation.Introspected", v80, "io.micronaut.serde.annotation.Serdeable$Deserializable", v81, "io.micronaut.serde.annotation.Serdeable$Serializable", v82, "io.micronaut.serde.config.annotation.SerdeConfig", v83);
---
> v68 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[2];
> v69 = new io.micronaut.core.'annotation'.AnnotationValue;
> v70 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_19()>();
> v71 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", "V1", "value", v70);
> v72 = staticinvoke <io.micronaut.inject.'annotation'.AnnotationMetadataSupport: java.util.Map getDefaultValues(java.lang.String)>("com.fasterxml.jackson.annotation.JsonSubTypes$Type");
> specialinvoke v69.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("com.fasterxml.jackson.annotation.JsonSubTypes$Type", v71, v72);
> v68[0] = v69;
> v73 = new io.micronaut.core.'annotation'.AnnotationValue;
> v74 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_20()>();
> v75 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", "V2", "value", v74);
> specialinvoke v73.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("com.fasterxml.jackson.annotation.JsonSubTypes$Type", v75, v72);
> v68[1] = v73;
> v76 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", v68);
> v77 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v78 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("defaultImpl", v77, "include", "PROPERTY", "property", "entityVersion", "use", "NAME");
> v79 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v80 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v79[0] = v80;
> v81 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v82 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v81[0] = v82;
> v83 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", v79, "value", v81);
> v84 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("targetPackage", "com.oracle.bmc.tenantmanagercontrolplane.model.introspection");
134,156c144,238
< v88 = staticinvoke <java.util.Map: java.util.Map of()>();
< v89 = staticinvoke <java.util.Map: java.util.Map of()>();
< v90 = staticinvoke <java.util.Map: java.util.Map of()>();
< v91 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v85, "io.micronaut.core.annotation.Internal", v86, "io.micronaut.core.annotation.Introspected", v87, "io.micronaut.serde.annotation.Serdeable$Deserializable", v88, "io.micronaut.serde.annotation.Serdeable$Serializable", v89, "io.micronaut.serde.config.annotation.SerdeConfig", v90);
< v92 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "explicitlySetFilter");
< v93 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
< v94 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("builder", v93);
< v95 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("targetPackage", "com.oracle.bmc.tenantmanagercontrolplane.model.introspection");
< v96 = staticinvoke <java.util.Map: java.util.Map of()>();
< v97 = staticinvoke <java.util.Map: java.util.Map of()>();
< v98 = staticinvoke <java.util.Map: java.util.Map of()>();
< v99 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
< v100 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("filter", "explicitlySetFilter", "validate", v99);
< v101 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "Annotation @JsonDeserialize specifies attribute \'builder\'. Currently supported attributes include: [as]");
< v102 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonFilter", v92, "com.fasterxml.jackson.databind.annotation.JsonDeserialize", v94, "io.micronaut.core.annotation.Introspected", v95, "io.micronaut.serde.annotation.Serdeable", v96, "io.micronaut.serde.annotation.Serdeable$Deserializable", v97, "io.micronaut.serde.annotation.Serdeable$Serializable", v98, "io.micronaut.serde.config.annotation.SerdeConfig", v100, "io.micronaut.serde.config.annotation.SerdeConfig$SerError", v101);
< v103 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.databind.annotation.JsonDeserialize", "com.fasterxml.jackson.annotation.JsonFilter");
< v104 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig$SerError", "io.micronaut.serde.config.annotation.SerdeConfig");
< v105 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object)>("io.micronaut.serde.annotation.Serdeable", "io.micronaut.serde.annotation.Serdeable$Serializable", "io.micronaut.serde.annotation.Serdeable$Deserializable");
< v106 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.annotation.Serdeable");
< v107 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.annotation.Serdeable");
< v108 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.databind.annotation.JsonDeserialize", "com.fasterxml.jackson.annotation.JsonFilter", "io.micronaut.serde.annotation.Serdeable", "io.micronaut.serde.annotation.Serdeable$Serializable", "io.micronaut.serde.annotation.Serdeable$Deserializable");
< v109 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v103, "io.micronaut.core.annotation.Internal", v104, "io.micronaut.core.annotation.Introspected", v105, "io.micronaut.serde.annotation.Serdeable$Deserializable", v106, "io.micronaut.serde.annotation.Serdeable$Serializable", v107, "io.micronaut.serde.config.annotation.SerdeConfig", v108);
< specialinvoke v66.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v77, v84, v91, v102, v109, 0, 0);
---
> v88 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v89 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("filter", "explicitlySetFilter", "validate", v88);
> v90 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[2];
> v91 = new io.micronaut.core.'annotation'.AnnotationValue;
> v92 = newarray (java.lang.String)[1];
> v92[0] = "V1";
> v93 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v94 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_19()>();
> v93[0] = v94;
> v95 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("names", v92, "value", v93);
> v96 = staticinvoke <io.micronaut.inject.'annotation'.AnnotationMetadataSupport: java.util.Map getDefaultValues(java.lang.String)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype");
> specialinvoke v91.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype", v95, v96);
> v90[0] = v91;
> v97 = new io.micronaut.core.'annotation'.AnnotationValue;
> v98 = newarray (java.lang.String)[1];
> v98[0] = "V2";
> v99 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v100 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_20()>();
> v99[0] = v100;
> v101 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("names", v98, "value", v99);
> specialinvoke v97.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype", v101, v96);
> v90[1] = v97;
> v102 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("dp", "entityVersion", "dt", "PROPERTY", "dv", "NAME", "value", v90);
> v103 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonFilter", v67, "com.fasterxml.jackson.annotation.JsonSubTypes", v76, "com.fasterxml.jackson.annotation.JsonTypeInfo", v78, "io.micronaut.context.annotation.DefaultImplementation", v83, "io.micronaut.core.annotation.Introspected", v84, "io.micronaut.serde.annotation.Serdeable", v85, "io.micronaut.serde.annotation.Serdeable$Deserializable", v86, "io.micronaut.serde.annotation.Serdeable$Serializable", v87, "io.micronaut.serde.config.annotation.SerdeConfig", v89, "io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped", v102);
> v104 = staticinvoke <java.util.Map: java.util.Map of()>();
> v105 = staticinvoke <java.util.Map: java.util.Map of()>();
> v106 = staticinvoke <java.util.Map: java.util.Map of()>();
> v107 = staticinvoke <java.util.Map: java.util.Map of()>();
> v108 = staticinvoke <java.util.Map: java.util.Map of()>();
> v109 = staticinvoke <java.util.Map: java.util.Map of()>();
> v110 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v104, "io.micronaut.core.annotation.Internal", v105, "io.micronaut.core.annotation.Introspected", v106, "io.micronaut.serde.annotation.Serdeable$Deserializable", v107, "io.micronaut.serde.annotation.Serdeable$Serializable", v108, "io.micronaut.serde.config.annotation.SerdeConfig", v109);
> v111 = staticinvoke <java.util.Map: java.util.Map of()>();
> v112 = staticinvoke <java.util.Map: java.util.Map of()>();
> v113 = staticinvoke <java.util.Map: java.util.Map of()>();
> v114 = staticinvoke <java.util.Map: java.util.Map of()>();
> v115 = staticinvoke <java.util.Map: java.util.Map of()>();
> v116 = staticinvoke <java.util.Map: java.util.Map of()>();
> v117 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v111, "io.micronaut.core.annotation.Internal", v112, "io.micronaut.core.annotation.Introspected", v113, "io.micronaut.serde.annotation.Serdeable$Deserializable", v114, "io.micronaut.serde.annotation.Serdeable$Serializable", v115, "io.micronaut.serde.config.annotation.SerdeConfig", v116);
> v118 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", "explicitlySetFilter");
> v119 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[2];
> v120 = new io.micronaut.core.'annotation'.AnnotationValue;
> v121 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_19()>();
> v122 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", "V1", "value", v121);
> specialinvoke v120.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("com.fasterxml.jackson.annotation.JsonSubTypes$Type", v122, v72);
> v119[0] = v120;
> v123 = new io.micronaut.core.'annotation'.AnnotationValue;
> v124 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_20()>();
> v125 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", "V2", "value", v124);
> specialinvoke v123.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("com.fasterxml.jackson.annotation.JsonSubTypes$Type", v125, v72);
> v119[1] = v123;
> v126 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("value", v119);
> v127 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v128 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("defaultImpl", v127, "include", "PROPERTY", "property", "entityVersion", "use", "NAME");
> v129 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v130 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v129[0] = v130;
> v131 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v132 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_21()>();
> v131[0] = v132;
> v133 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("name", v129, "value", v131);
> v134 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>("targetPackage", "com.oracle.bmc.tenantmanagercontrolplane.model.introspection");
> v135 = staticinvoke <java.util.Map: java.util.Map of()>();
> v136 = staticinvoke <java.util.Map: java.util.Map of()>();
> v137 = staticinvoke <java.util.Map: java.util.Map of()>();
> v138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
> v139 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("filter", "explicitlySetFilter", "validate", v138);
> v140 = newarray (io.micronaut.core.'annotation'.AnnotationValue)[2];
> v141 = new io.micronaut.core.'annotation'.AnnotationValue;
> v142 = newarray (java.lang.String)[1];
> v142[0] = "V1";
> v143 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v144 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_19()>();
> v143[0] = v144;
> v145 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("names", v142, "value", v143);
> specialinvoke v141.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype", v145, v96);
> v140[0] = v141;
> v146 = new io.micronaut.core.'annotation'.AnnotationValue;
> v147 = newarray (java.lang.String)[1];
> v147[0] = "V2";
> v148 = newarray (io.micronaut.core.'annotation'.AnnotationClassValue)[1];
> v149 = staticinvoke <com.oracle.bmc.tenantmanagercontrolplane.model.introspection.$AssignedSubscriptionSummary$IntrospectionRef: io.micronaut.core.'annotation'.AnnotationClassValue $micronaut_load_class_value_20()>();
> v148[0] = v149;
> v150 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("names", v147, "value", v148);
> specialinvoke v146.<io.micronaut.core.'annotation'.AnnotationValue: void <init>(java.lang.String,java.util.Map,java.util.Map)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$SerSubtype", v150, v96);
> v140[1] = v146;
> v151 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("dp", "entityVersion", "dt", "PROPERTY", "dv", "NAME", "value", v140);
> v152 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonFilter", v118, "com.fasterxml.jackson.annotation.JsonSubTypes", v126, "com.fasterxml.jackson.annotation.JsonTypeInfo", v128, "io.micronaut.context.annotation.DefaultImplementation", v133, "io.micronaut.core.annotation.Introspected", v134, "io.micronaut.serde.annotation.Serdeable", v135, "io.micronaut.serde.annotation.Serdeable$Deserializable", v136, "io.micronaut.serde.annotation.Serdeable$Serializable", v137, "io.micronaut.serde.config.annotation.SerdeConfig", v139, "io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped", v151);
> v153 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonTypeInfo", "com.fasterxml.jackson.annotation.JsonSubTypes", "com.fasterxml.jackson.annotation.JsonFilter");
> v154 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object)>("io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped", "io.micronaut.serde.config.annotation.SerdeConfig");
> v155 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object)>("io.micronaut.serde.annotation.Serdeable", "io.micronaut.serde.annotation.Serdeable$Serializable", "io.micronaut.serde.annotation.Serdeable$Deserializable");
> v156 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.annotation.Serdeable");
> v157 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>("io.micronaut.serde.annotation.Serdeable");
> v158 = staticinvoke <java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JsonTypeInfo", "com.fasterxml.jackson.annotation.JsonSubTypes", "com.fasterxml.jackson.annotation.JsonFilter", "io.micronaut.serde.annotation.Serdeable", "io.micronaut.serde.annotation.Serdeable$Serializable", "io.micronaut.serde.annotation.Serdeable$Deserializable");
> v159 = staticinvoke <java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("com.fasterxml.jackson.annotation.JacksonAnnotation", v153, "io.micronaut.core.annotation.Internal", v154, "io.micronaut.core.annotation.Introspected", v155, "io.micronaut.serde.annotation.Serdeable$Deserializable", v156, "io.micronaut.serde.annotation.Serdeable$Serializable", v157, "io.micronaut.serde.config.annotation.SerdeConfig", v158);
> specialinvoke v66.<io.micronaut.inject.'annotation'.DefaultAnnotationMetadata: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean)>(v103, v110, v117, v152, v159, 0, 0);
