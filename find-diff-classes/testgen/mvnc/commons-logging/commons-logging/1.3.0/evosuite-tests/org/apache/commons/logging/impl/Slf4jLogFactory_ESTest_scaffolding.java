/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 20:35:35 GMT 2024
 */

package org.apache.commons.logging.impl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Slf4jLogFactory_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.logging.impl.Slf4jLogFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.cpu.isalist", ""); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("algorithm", "DYNAMOSA"); 
    java.lang.System.setProperty("sun.boot.library.path", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"); 
    java.lang.System.setProperty("sun.java.command", "org.evosuite.ClientProcess Client-0"); 
    java.lang.System.setProperty("TARGET_CLASS", "org.apache.commons.logging.impl.Slf4jLogFactory"); 
    java.lang.System.setProperty("selection_function", "RANK_CROWD_DISTANCE_TOURNAMENT"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
    java.lang.System.setProperty("user.name", "wtwhite"); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("num_parallel_clients", "1"); 
    java.lang.System.setProperty("sun.os.patch.level", "unknown"); 
    java.lang.System.setProperty("evosuite.log.appender", "CLIENT"); 
    java.lang.System.setProperty("CP_file_path", "/tmp/EvoSuite_classpathFile1585615265086603331.txt"); 
    java.lang.System.setProperty("java.specification.maintenance.version", "5"); 
    java.lang.System.setProperty("sun.io.unicode.encoding", "UnicodeLittle"); 
    java.lang.System.setProperty("file.encoding.pkg", "sun.io"); 
    java.lang.System.setProperty("process_communication_port", "7619"); 
    java.lang.System.setProperty("user.timezone", "Pacific/Auckland"); 
    java.lang.System.setProperty("user.country", "NZ"); 
    java.lang.System.setProperty("sun.java.launcher", "SUN_STANDARD"); 
    java.lang.System.setProperty("sun.cpu.endian", "little"); 
    java.lang.System.setProperty("user.home", "/home/wtwhite"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("logback.configurationFile", "logback-evosuite.xml"); 
    java.lang.System.setProperty("java.vendor.url.bug", "http://bugreport.sun.com/bugreport/"); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/commons-logging/commons-logging/1.3.0"); 
    java.lang.System.setProperty("master_log_port", "45449"); 
    java.lang.System.setProperty("inline", "true"); 
    java.lang.System.setProperty("java.rmi.server.hostname", "127.0.0.1"); 
    java.lang.System.setProperty("PROJECT_PREFIX", ""); 
    java.lang.System.setProperty("strategy", "MOSuite"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Slf4jLogFactory_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog",
      "org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
      "org.apache.commons.logging.impl.Slf4jLogFactory"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Slf4jLogFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.logging.impl.Slf4jLogFactory",
      "org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog",
      "org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "org.apache.logging.log4j.MarkerManager",
      "org.apache.logging.log4j.MarkerManager$Log4jMarker",
      "org.apache.commons.logging.impl.Log4jApiLogFactory",
      "org.apache.logging.log4j.spi.AbstractLoggerAdapter",
      "org.apache.commons.logging.impl.Log4jApiLogFactory$LogAdapter",
      "org.apache.logging.log4j.util.PropertiesPropertySource",
      "org.apache.logging.log4j.util.PropertyFilePropertySource",
      "org.apache.logging.log4j.util.LoaderUtil$ThreadContextClassLoaderGetter",
      "org.apache.logging.log4j.util.LoaderUtil",
      "org.apache.logging.log4j.util.PropertiesUtil$Environment",
      "org.apache.logging.log4j.util.PropertySource$Comparator",
      "org.apache.logging.log4j.util.ServiceLoaderUtil",
      "org.apache.logging.log4j.util.ServiceLoaderUtil$ServiceLoaderSpliterator",
      "org.apache.logging.log4j.util.OsgiServiceLocator",
      "org.apache.logging.log4j.util.EnvironmentPropertySource",
      "org.apache.logging.log4j.util.SystemPropertiesPropertySource",
      "org.apache.logging.log4j.test.junit.ExtensionContextAnchor",
      "org.apache.logging.log4j.test.junit.TestPropertySource$EmptyTestProperties",
      "org.apache.logging.log4j.test.junit.TestPropertySource",
      "org.apache.logging.log4j.util.PropertySource$Util",
      "org.apache.logging.log4j.util.Strings",
      "org.apache.logging.log4j.util.PropertiesUtil",
      "org.apache.logging.log4j.util.Constants",
      "org.apache.logging.log4j.spi.AbstractLogger",
      "org.apache.logging.log4j.message.AbstractMessageFactory",
      "org.apache.logging.log4j.message.ParameterizedNoReferenceMessageFactory",
      "org.apache.logging.log4j.status.SimpleLoggerFactory",
      "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
      "org.apache.logging.log4j.message.ParameterizedMessageFactory",
      "org.apache.logging.log4j.status.StatusLogger$BoundedQueue",
      "org.apache.logging.log4j.spi.StandardLevel",
      "org.apache.logging.log4j.Level",
      "org.apache.logging.log4j.simple.SimpleLogger",
      "org.apache.logging.log4j.status.StatusLogger",
      "org.apache.logging.log4j.util.ProviderUtil",
      "org.apache.logging.log4j.spi.Provider",
      "org.apache.logging.log4j.core.impl.Log4jProvider",
      "org.apache.logging.log4j.core.util.Constants",
      "org.apache.logging.log4j.core.impl.Log4jContextFactory",
      "org.apache.logging.log4j.core.util.Loader",
      "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector",
      "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry",
      "org.apache.logging.log4j.core.LifeCycle$State",
      "org.apache.logging.log4j.internal.LogManagerStatus",
      "org.apache.logging.log4j.LogManager",
      "org.apache.logging.log4j.util.StackLocator",
      "org.apache.logging.log4j.util.StackLocatorUtil",
      "org.apache.logging.log4j.core.AbstractLifeCycle",
      "org.apache.logging.log4j.spi.LoggerContext",
      "org.apache.logging.log4j.core.filter.AbstractFilterable",
      "org.apache.logging.log4j.core.config.AbstractConfiguration",
      "org.apache.logging.log4j.core.config.NullConfiguration",
      "org.apache.logging.log4j.core.config.ConfigurationSource",
      "org.apache.logging.log4j.core.config.Property",
      "org.apache.logging.log4j.core.config.DefaultAdvertiser",
      "org.apache.logging.log4j.core.lookup.AbstractLookup",
      "org.apache.logging.log4j.core.lookup.AbstractConfigurationAwareLookup",
      "org.apache.logging.log4j.core.lookup.Interpolator",
      "org.apache.logging.log4j.core.lookup.PropertiesLookup",
      "org.apache.logging.log4j.core.config.plugins.util.PluginManager",
      "org.apache.logging.log4j.core.config.plugins.util.PluginRegistry",
      "org.apache.logging.log4j.core.config.plugins.processor.PluginCache",
      "org.apache.logging.log4j.core.config.plugins.processor.PluginEntry",
      "org.apache.logging.log4j.core.config.plugins.util.PluginType",
      "org.apache.logging.log4j.core.util.ReflectionUtil",
      "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
      "org.apache.logging.log4j.core.lookup.ContextMapLookup",
      "org.apache.logging.log4j.core.impl.ContextDataInjectorFactory",
      "org.apache.logging.log4j.ThreadContext$EmptyIterator",
      "org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack",
      "org.apache.logging.log4j.spi.ThreadContextMapFactory",
      "org.apache.logging.log4j.util.SortedArrayStringMap",
      "org.apache.logging.log4j.spi.CopyOnWriteSortedArrayThreadContextMap",
      "org.apache.logging.log4j.spi.GarbageFreeSortedArrayThreadContextMap",
      "org.apache.logging.log4j.spi.DefaultThreadContextMap",
      "org.apache.logging.log4j.spi.DefaultThreadContextStack",
      "org.apache.logging.log4j.ThreadContext",
      "org.apache.logging.log4j.core.impl.ThreadContextDataInjector$ForDefaultThreadContextMap",
      "org.apache.logging.log4j.core.impl.ThreadContextDataProvider",
      "org.apache.logging.log4j.core.impl.ThreadContextDataInjector",
      "org.apache.logging.log4j.core.lookup.DateLookup",
      "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
      "org.apache.logging.log4j.core.lookup.EventLookup",
      "org.apache.logging.log4j.core.lookup.JavaLookup",
      "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
      "org.apache.logging.log4j.core.appender.AbstractManager",
      "org.apache.logging.log4j.core.net.JndiManager$JndiManagerFactory",
      "org.apache.logging.log4j.core.net.JndiManager",
      "org.apache.logging.log4j.core.lookup.MapLookup",
      "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
      "org.apache.logging.log4j.core.lookup.Log4jLookup",
      "org.apache.logging.log4j.core.lookup.LowerLookup",
      "org.apache.logging.log4j.core.lookup.MainMapLookup",
      "org.apache.logging.log4j.core.lookup.MarkerLookup",
      "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
      "org.apache.logging.log4j.core.test.junit.TestPropertyLookup",
      "org.apache.logging.log4j.core.lookup.UpperLookup",
      "org.apache.logging.log4j.core.lookup.StrMatcher$CharMatcher",
      "org.apache.logging.log4j.core.lookup.StrMatcher$CharSetMatcher",
      "org.apache.logging.log4j.core.lookup.StrMatcher$TrimMatcher",
      "org.apache.logging.log4j.core.lookup.StrMatcher$NoMatcher",
      "org.apache.logging.log4j.core.lookup.StrMatcher",
      "org.apache.logging.log4j.core.lookup.StrMatcher$StringMatcher",
      "org.apache.logging.log4j.core.lookup.StrSubstitutor",
      "org.apache.logging.log4j.core.lookup.RuntimeStrSubstitutor",
      "org.apache.logging.log4j.core.lookup.ConfigurationStrSubstitutor",
      "org.apache.logging.log4j.core.impl.DefaultLogEventFactory",
      "org.apache.logging.log4j.core.config.LoggerConfig",
      "org.apache.logging.log4j.core.config.AppenderControlArraySet",
      "org.apache.logging.log4j.core.config.AppenderControl",
      "org.apache.logging.log4j.core.config.DefaultReliabilityStrategy",
      "org.apache.logging.log4j.core.config.ConfigurationScheduler",
      "org.apache.logging.log4j.core.util.WatchManager",
      "org.apache.logging.log4j.core.util.WatchManager$LocalUUID",
      "org.apache.logging.log4j.core.LoggerContext",
      "org.apache.commons.logging.impl.SimpleLog",
      "org.apache.commons.logging.impl.NoOpLog",
      "org.apache.commons.io.filefilter.IOFileFilter"
    );
  }
}
