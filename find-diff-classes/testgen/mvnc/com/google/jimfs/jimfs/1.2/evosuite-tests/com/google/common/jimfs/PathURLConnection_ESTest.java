/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 18:41:58 GMT 2024
 */

package com.google.common.jimfs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.jimfs.PathURLConnection;
import java.io.IOException;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.nio.file.FileSystemNotFoundException;
import java.nio.file.NoSuchFileException;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathURLConnection_ESTest extends PathURLConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("last-modified");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      Map<String, List<String>> map0 = pathURLConnection0.getHeaderFields();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      URL uRL0 = MockURI.toURL(uRI0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      String string0 = pathURLConnection0.getHeaderField("dQRKh<Yb/wfb");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      URL uRL0 = MockURI.toURL(uRI0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: FileSystemNotFoundException");
      
      } catch(FileSystemNotFoundException e) {
         //
         // Provider \"ftp\" not installed
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "1qP[rT;VBT3oRZ", uRLStreamHandler0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL1);
      // Undeclared exception!
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tM1)Sy$Yrr");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // URL file:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/jimfs/jimfs/1.2/tM1)Sy$Yrr cannot be converted to a URI
         //
         verifyException("com.google.common.jimfs.PathURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderFields();
        fail("Expecting exception: FileSystemNotFoundException");
      
      } catch(FileSystemNotFoundException e) {
         //
         // Provider \"ftp\" not installed
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, ":d9v_QG[&wCj\"Cqa9", uRLStreamHandler0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL1);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderFields();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderFields();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderField("URL ");
        fail("Expecting exception: FileSystemNotFoundException");
      
      } catch(FileSystemNotFoundException e) {
         //
         // Provider \"http\" not installed
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "CN~LR#FEd", uRLStreamHandler0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL1);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderField("CN~LR#FEd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderField((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: FileSystemNotFoundException");
      
      } catch(FileSystemNotFoundException e) {
         //
         // Provider \"ftp\" not installed
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "NFC", uRLStreamHandler0);
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL1);
      // Undeclared exception!
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "S\"^OU',IfKk b!1;8");
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL1);
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // URL file://some/fake/but/wellformed/S\"^OU',IfKk b!1;8 cannot be converted to a URI
         //
         verifyException("com.google.common.jimfs.PathURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PathURLConnection pathURLConnection0 = null;
      try {
        pathURLConnection0 = new PathURLConnection((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderFields();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getHeaderField("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      // Undeclared exception!
      try { 
        pathURLConnection0.getInputStream();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("L7htmpW");
      URL uRL0 = mockFile0.toURL();
      PathURLConnection pathURLConnection0 = new PathURLConnection(uRL0);
      try { 
        pathURLConnection0.connect();
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }
}
