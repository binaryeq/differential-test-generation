/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 18:43:10 GMT 2024
 */

package com.google.common.jimfs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.jimfs.AttributeService;
import com.google.common.jimfs.Configuration;
import com.google.common.jimfs.Directory;
import com.google.common.jimfs.FileFactory;
import com.google.common.jimfs.FileSystemState;
import com.google.common.jimfs.FileSystemView;
import com.google.common.jimfs.FileTree;
import com.google.common.jimfs.HeapDisk;
import com.google.common.jimfs.Name;
import com.google.common.jimfs.PathService;
import com.google.common.jimfs.PollingWatchService;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PollingWatchService_ESTest extends PollingWatchService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Name, Directory> hashMap0 = new HashMap<Name, Directory>();
      FileTree fileTree0 = new FileTree(hashMap0);
      Configuration configuration0 = Configuration.forCurrentPlatform();
      HeapDisk heapDisk0 = new HeapDisk(configuration0);
      FileFactory fileFactory0 = new FileFactory(heapDisk0);
      AttributeService attributeService0 = null;
      try {
        attributeService0 = new AttributeService(configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathService pathService0 = new PathService(configuration0);
      Thread thread0 = MockThread.currentThread();
      FileSystemState fileSystemState0 = new FileSystemState(thread0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      PollingWatchService pollingWatchService0 = null;
      try {
        pollingWatchService0 = new PollingWatchService((FileSystemView) null, pathService0, fileSystemState0, 1616L, timeUnit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
