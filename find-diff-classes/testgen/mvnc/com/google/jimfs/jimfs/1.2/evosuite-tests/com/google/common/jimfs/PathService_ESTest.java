/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 18:40:48 GMT 2024
 */

package com.google.common.jimfs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableSet;
import com.google.common.jimfs.Configuration;
import com.google.common.jimfs.JimfsPath;
import com.google.common.jimfs.Name;
import com.google.common.jimfs.PathNormalization;
import com.google.common.jimfs.PathService;
import com.google.common.jimfs.PathType;
import com.google.common.jimfs.WindowsPathType;
import java.net.URI;
import java.nio.file.FileSystem;
import java.nio.file.InvalidPathException;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.List;
import java.util.PriorityQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathService_ESTest extends PathService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WindowsPathType windowsPathType0 = WindowsPathType.INSTANCE;
      PathNormalization pathNormalization0 = PathNormalization.CASE_FOLD_ASCII;
      EnumSet<PathNormalization> enumSet0 = EnumSet.range(pathNormalization0, pathNormalization0);
      PathService pathService0 = new PathService(windowsPathType0, enumSet0, enumSet0, true);
      Name name0 = pathService0.name("$+o9?qzP|*aDh'BMN");
      assertEquals("$+o9?qzp|*adh'bmn", name0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>(3092);
      List<Name> list0 = pathService0.names(priorityQueue0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      LinkedBlockingDeque<String> linkedBlockingDeque0 = new LinkedBlockingDeque<String>();
      linkedBlockingDeque0.offer("");
      PathService pathService0 = new PathService(configuration0);
      List<Name> list0 = pathService0.names(linkedBlockingDeque0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.toString((JimfsPath) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        pathService0.parsePath("\"^/", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.parsePath("\"!^/", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      String[] stringArray0 = new String[0];
      JimfsPath jimfsPath0 = pathService0.parsePath("", stringArray0);
      assertFalse(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.names((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      ImmutableSet<String> immutableSet0 = ImmutableSet.of();
      List<Name> list0 = pathService0.names(immutableSet0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.name((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = pathService0.name("_A");
      assertEquals("_A", name0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathService pathService0 = new PathService(configuration0);
      URI uRI0 = MockURI.aFTPURI;
      // Undeclared exception!
      try { 
        pathService0.fromUri(uRI0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.fromUri((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      URI uRI0 = MockURI.aHttpURI;
      // Undeclared exception!
      try { 
        pathService0.fromUri(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // uriPath (java.lang.String@0000000002) must start with /
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = Name.PARENT;
      JimfsPath jimfsPath0 = pathService0.createRoot(name0);
      assertTrue(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.createPathMatcher(">CRfQ*r^#-eQ:h");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Invalid syntax: >CRfQ*r^#-eQ:h
         //
         verifyException("com.google.common.jimfs.PathMatchers", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.createPathMatcher((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathMatchers", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = pathService0.name("");
      // Undeclared exception!
      try { 
        pathService0.createPath(name0, (Iterable<Name>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PathType pathType0 = PathType.windows();
      PathService pathService0 = null;
      try {
        pathService0 = new PathService(pathType0, (Iterable<PathNormalization>) null, (Iterable<PathNormalization>) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PriorityQueue<PathNormalization> priorityQueue0 = new PriorityQueue<PathNormalization>();
      PathService pathService0 = null;
      try {
        pathService0 = new PathService((PathType) null, priorityQueue0, priorityQueue0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PathService pathService0 = null;
      try {
        pathService0 = new PathService((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      FileSystem fileSystem0 = pathService0.getFileSystem();
      assertNull(fileSystem0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.createPathMatcher("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be of the form 'syntax:pattern': java.lang.String@0000000002
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathService pathService0 = new PathService(configuration0);
      URI uRI0 = MockURI.aFileURI;
      JimfsPath jimfsPath0 = pathService0.fromUri(uRI0);
      assertFalse(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = pathService0.name("..");
      ImmutableSet<Name> immutableSet0 = ImmutableSet.of(name0, name0, name0);
      pathService0.createPath(name0, immutableSet0);
      assertEquals("..", name0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = pathService0.name(".");
      assertEquals(".", name0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      JimfsPath jimfsPath0 = pathService0.emptyPath();
      assertFalse(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.setFileSystem((FileSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.createRoot((Name) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      String string0 = pathService0.getSeparator();
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathService pathService0 = new PathService(configuration0);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        pathService0.parsePath("'$U: N>%^YU8a1Mj~", stringArray0);
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
         //
         // Illegal char <:> at index 3: '$U: N>%^YU8a1Mj~
         //
         verifyException("com.google.common.jimfs.WindowsPathType", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = pathService0.name("");
      LinkedBlockingQueue<Name> linkedBlockingQueue0 = new LinkedBlockingQueue<Name>();
      pathService0.createPathInternal(name0, linkedBlockingQueue0);
      assertEquals("", name0.toString());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      HashSet<Name> hashSet0 = new HashSet<Name>();
      JimfsPath jimfsPath0 = pathService0.createRelativePath(hashSet0);
      assertFalse(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      Name name0 = Name.PARENT;
      JimfsPath jimfsPath0 = pathService0.createFileName(name0);
      assertFalse(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.toUri((URI) null, (JimfsPath) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.compare((JimfsPath) null, (JimfsPath) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      PathService pathService0 = new PathService(configuration0);
      URI uRI0 = MockURI.aFileURI;
      JimfsPath jimfsPath0 = pathService0.fromUri(uRI0);
      assertTrue(jimfsPath0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Configuration configuration0 = Configuration.unix();
      PathService pathService0 = new PathService(configuration0);
      // Undeclared exception!
      try { 
        pathService0.hash((JimfsPath) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }
}
