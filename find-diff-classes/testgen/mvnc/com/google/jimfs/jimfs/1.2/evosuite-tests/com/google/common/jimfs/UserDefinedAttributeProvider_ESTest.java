/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 18:46:45 GMT 2024
 */

package com.google.common.jimfs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import com.google.common.jimfs.Configuration;
import com.google.common.jimfs.Directory;
import com.google.common.jimfs.File;
import com.google.common.jimfs.FileFactory;
import com.google.common.jimfs.FileLookup;
import com.google.common.jimfs.HeapDisk;
import com.google.common.jimfs.RegularFile;
import com.google.common.jimfs.UserDefinedAttributeProvider;
import java.nio.ByteBuffer;
import java.nio.file.attribute.FileAttributeView;
import java.nio.file.attribute.UserDefinedFileAttributeView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserDefinedAttributeProvider_ESTest extends UserDefinedAttributeProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      Class<UserDefinedFileAttributeView> class0 = userDefinedAttributeProvider0.viewType();
      Configuration configuration0 = Configuration.unix();
      HeapDisk heapDisk0 = new HeapDisk(configuration0);
      RegularFile regularFile0 = RegularFile.create((-3264), heapDisk0);
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.set(regularFile0, "m.D.zdG|h>G{Vte%QG", "", class0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid type class java.lang.Class for attribute 'm.D.zdG|h>G{Vte%QG:': expected one of [class [B, class java.nio.ByteBuffer]
         //
         verifyException("com.google.common.jimfs.AttributeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      Configuration configuration0 = Configuration.unix();
      HeapDisk heapDisk0 = new HeapDisk(configuration0);
      byte[][] byteArray0 = new byte[8][3];
      RegularFile regularFile0 = new RegularFile((-2842), heapDisk0, byteArray0, (byte)0, (byte)0);
      userDefinedAttributeProvider0.set(regularFile0, "user", "user", byteArray0[0], false);
      assertFalse(regularFile0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.set((File) null, "ino", "ino", "ino", true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // cannot set attribute 'ino:ino' during file creation
         //
         verifyException("com.google.common.jimfs.AttributeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.set((File) null, "zZ33", "", byteBuffer0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.UserDefinedAttributeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.get((File) null, "lIFw@K|md Cv2)<HC8h");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.UserDefinedAttributeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      Configuration configuration0 = Configuration.osX();
      HeapDisk heapDisk0 = new HeapDisk(configuration0);
      FileFactory fileFactory0 = new FileFactory(heapDisk0);
      Directory directory0 = fileFactory0.createDirectory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(337);
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.set(directory0, "'f0l{", (String) null, byteBuffer0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      Directory directory0 = Directory.create((-616));
      Object object0 = userDefinedAttributeProvider0.get(directory0, "lIFw@K|md Cv2)<HC8h");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      Directory directory0 = Directory.create(2);
      ImmutableSet<String> immutableSet0 = userDefinedAttributeProvider0.attributes(directory0);
      assertEquals(0, immutableSet0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      FileLookup fileLookup0 = mock(FileLookup.class, new ViolatedAssumptionAnswer());
      UserDefinedFileAttributeView userDefinedFileAttributeView0 = userDefinedAttributeProvider0.view(fileLookup0, (ImmutableMap<String, FileAttributeView>) null);
      assertNotNull(userDefinedFileAttributeView0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.attributes((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.UserDefinedAttributeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      String string0 = userDefinedAttributeProvider0.name();
      assertEquals("user", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      boolean boolean0 = userDefinedAttributeProvider0.supports(")\"");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      // Undeclared exception!
      try { 
        userDefinedAttributeProvider0.view((FileLookup) null, (ImmutableMap<String, FileAttributeView>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserDefinedAttributeProvider userDefinedAttributeProvider0 = new UserDefinedAttributeProvider();
      ImmutableSet<String> immutableSet0 = userDefinedAttributeProvider0.fixedAttributes();
      assertEquals(0, immutableSet0.size());
  }
}
