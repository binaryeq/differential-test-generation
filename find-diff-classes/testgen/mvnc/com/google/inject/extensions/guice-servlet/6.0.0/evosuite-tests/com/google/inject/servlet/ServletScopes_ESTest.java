/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 18:16:54 GMT 2024
 */

package com.google.inject.servlet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.inject.Binding;
import com.google.inject.Key;
import com.google.inject.servlet.ServletScopes;
import java.lang.annotation.Annotation;
import java.util.concurrent.Callable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServletScopes_ESTest extends ServletScopes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Key<Annotation> key0 = Key.get(class0);
      Binding<Integer> binding0 = (Binding<Integer>) mock(Binding.class, new ViolatedAssumptionAnswer());
      doReturn(key0).when(binding0).acceptScopingVisitor(any(com.google.inject.spi.BindingScopingVisitor.class));
      // Undeclared exception!
      try { 
        ServletScopes.isRequestScoped(binding0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.inject.Key cannot be cast to java.lang.Boolean
         //
         verifyException("com.google.inject.Scopes", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ServletScopes.transferRequest();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not in a request scope
         //
         verifyException("com.google.inject.servlet.ServletScopes", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ServletScopes.transferRequest((Callable<Annotation>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not in a request scope
         //
         verifyException("com.google.inject.servlet.ServletScopes", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ServletScopes.isRequestScoped((Binding<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.inject.Scopes", e);
      }
  }
}
