* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.ThrowableSubject
* Starting Client-0
* Connecting to master process on port 7435
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar
  - t/dependency/asm-9.6.jar
  - t/dependency/auto-value-annotations-1.10.4.jar
  - t/dependency/checker-qual-3.42.0.jar
  - t/dependency/error_prone_annotations-2.23.0.jar
  - t/dependency/failureaccess-1.0.2.jar
  - t/dependency/guava-33.0.0-android.jar
  - t/dependency/guava-gwt-33.0.0-jre.jar
  - t/dependency/guava-testlib-33.0.0-android.jar
  - t/dependency/gwt-user-2.10.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-2.8.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.ThrowableSubject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 64
* Using seed 1731035795620
* Starting evolution
* Initial Number of Goals in DynaMOSA = 28 / 64
[Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        75%][MASTER] 16:16:45.508 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:=============================>     85%][Progress:====>                         15%] [Cov:=============================>     85%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:===================>          66%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:====================>         68%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        70%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        71%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 61s and 491 generations, 144668 statements, best individual has fitness: 5.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Generated 7 tests with total length 45
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 16:17:41.949 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1_1731035861823/com/google/common/truth/ThrowableSubject_1_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1_1731035861823/com/google/common/truth/ThrowableSubject_1_tmp__ESTest_scaffolding.java]]
[MASTER] 16:17:41.949 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:t/dependency/asm-9.6.jar:t/dependency/auto-value-annotations-1.10.4.jar:t/dependency/checker-qual-3.42.0.jar:t/dependency/error_prone_annotations-2.23.0.jar:t/dependency/failureaccess-1.0.2.jar:t/dependency/guava-33.0.0-android.jar:t/dependency/guava-gwt-33.0.0-jre.jar:t/dependency/guava-testlib-33.0.0-android.jar:t/dependency/gwt-user-2.10.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/asm-9.6.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/auto-value-annotations-1.10.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/checker-qual-3.42.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/error_prone_annotations-2.23.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/failureaccess-1.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-gwt-33.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-testlib-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/gwt-user-2.10.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:17:41.949 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/asm-9.6.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/auto-value-annotations-1.10.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/checker-qual-3.42.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/error_prone_annotations-2.23.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/failureaccess-1.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-gwt-33.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-testlib-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/gwt-user-2.10.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:17:41.952 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:17:41.953 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-33.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:17:41.953 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:17:41.954 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkPositionIndexes
  location: class: 22
[MASTER] 16:17:41.954 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 21
[MASTER] 16:17:41.954 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkElementIndex
  location: class: 20
[MASTER] 16:17:41.955 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:17:41.955 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:17:41.955 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:17:41.955 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:17:41.956 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1_1731035861823/com/google/common/truth/ThrowableSubject_1_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:17:41 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.AssertionErrorWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.SQLFeatureNotSupportedException;
19: import java.util.HashSet;
20: import java.util.LinkedHashSet;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.evosuite.runtime.ViolatedAssumptionAnswer;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class ThrowableSubject_1_tmp__ESTest extends ThrowableSubject_1_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
32:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
33:       HashSet<String> hashSet0 = new HashSet<String>();
34:       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(hashSet0);
35:       ImmutableList<String> immutableList0 = ImmutableList.sortedCopyOf((Iterable<? extends String>) linkedHashSet0);
36:       Fact[] factArray0 = new Fact[0];
37:       ImmutableList<Fact> immutableList1 = ImmutableList.copyOf(factArray0);
38:       SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("com.google.common.truth.ThrowableSubject$1", "com.google.common.truth.ThrowableSubject$1", 1);
39:       AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLFeatureNotSupportedException0);
40:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
41:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
42:       assertNotNull(stringSubject0);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_1_1731035861823/com/google/common/truth/ThrowableSubject_1_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:17:41 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_1_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_1_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
87:       "com.google.common.collect.Lists$RandomAccessPartition",
88:       "com.google.common.base.CharMatcher$ForPredicate",
89:       "com.google.common.truth.ErrorWithFacts",
90:       "com.google.common.collect.PeekingIterator",
91:       "com.google.common.collect.RegularImmutableList",
92:       "com.google.common.truth.StackTraceCleaner",
93:       "com.google.common.truth.SubjectUtils",
94:       "com.google.common.collect.FluentIterable",
95:       "com.google.common.base.Optional",
96:       "com.google.common.collect.Lists$TransformingRandomAccessList",
97:       "com.google.common.collect.Sets$2",
98:       "com.google.common.collect.Iterators$ArrayItr",
99:       "com.google.common.collect.Sets$3",
100:       "com.google.common.truth.ThrowableSubject",
101:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
102:       "com.google.common.collect.Sets$1",
103:       "com.google.common.base.CharMatcher$IsNot",
104:       "com.google.common.base.CharMatcher$InRange",
105:       "com.google.common.collect.Platform",
106:       "com.google.common.base.Verify",
107:       "com.google.common.collect.BaseImmutableMultimap",
108:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
109:       "com.google.common.collect.ImmutableMultimap$Values",
110:       "com.google.common.collect.Range",
111:       "com.google.common.collect.SortedMapDifference",
112:       "com.google.common.collect.RegularImmutableSet",
113:       "com.google.common.truth.Subject$EqualityCheck",
114:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
115:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
116:       "com.google.common.base.Predicate",
117:       "com.google.common.base.CharMatcher$IsEither",
118:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
119:       "com.google.common.collect.ImmutableListMultimap",
120:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
121:       "com.google.common.collect.ImmutableMultimap$1",
122:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
123:       "com.google.common.base.Present",
124:       "com.google.common.base.Joiner",
125:       "com.google.common.collect.ImmutableMultimap$2",
126:       "com.google.common.collect.Iterators$ConcatenatedIterator",
127:       "com.google.common.collect.Iterables",
128:       "com.google.common.collect.Sets$SetView",
129:       "com.google.common.collect.ImmutableSet$Builder",
130:       "com.google.common.collect.SingletonImmutableSet",
131:       "com.google.common.collect.ImmutableSetMultimap$Builder",
132:       "com.google.common.truth.AssertionErrorWithFacts",
133:       "com.google.common.base.Strings",
134:       "com.google.common.collect.Lists$Partition",
135:       "com.google.common.collect.Lists",
136:       "com.google.common.truth.ActualValueInference$InferredType",
137:       "com.google.common.collect.ImmutableMultiset",
138:       "com.google.common.collect.UnmodifiableListIterator",
139:       "com.google.common.truth.ComparableSubject",
140:       "com.google.common.collect.ImmutableMultimap$Keys",
141:       "com.google.common.collect.ImmutableMultimap",
142:       "com.google.common.truth.FailureMetadata",
143:       "com.google.common.truth.FailureMetadata$Step",
144:       "com.google.common.collect.Lists$TransformingSequentialList",
145:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
146:       "com.google.common.collect.ImmutableSortedSet",
147:       "com.google.common.primitives.IntsMethodsForWeb",
148:       "com.google.common.collect.Sets$4",
149:       "com.google.common.collect.RangeGwtSerializationDependencies",
150:       "com.google.common.base.Absent",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.common.collect.Maps$BiMapConverter",
153:       "com.google.common.base.CaseFormat$1",
154:       "com.google.common.base.CaseFormat$2",
155:       "com.google.common.base.CaseFormat$3",
156:       "com.google.common.base.CharMatcher",
157:       "com.google.common.collect.AbstractIterator",
158:       "com.google.common.base.MoreObjects",
159:       "com.google.common.base.CaseFormat$4",
160:       "com.google.common.base.CaseFormat$5",
161:       "com.google.common.collect.ImmutableSortedSet$Builder",
162:       "com.google.common.base.CharMatcher$And",
163:       "com.google.common.base.Suppliers$MemoizingSupplier",
164:       "com.google.common.collect.MapDifference",
165:       "com.google.common.collect.SortedIterable",
166:       "com.google.common.base.CharMatcher$AnyOf",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.common.base.CharMatcher$1",
170:       "com.google.common.truth.StandardSubjectBuilder$1",
171:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
172:       "com.google.common.base.CharMatcher$FastMatcher",
173:       "com.google.common.base.Joiner$1",
174:       "com.google.common.base.Joiner$2",
175:       "org.objectweb.asm.MethodVisitor",
176:       "com.google.common.collect.EmptyImmutableSetMultimap",
177:       "com.google.common.collect.ImmutableList$Itr",
178:       "com.google.common.truth.ActualValueInference",
179:       "com.google.common.collect.ImmutableCollection",
180:       "com.google.common.collect.ImmutableEnumMap",
181:       "com.google.common.base.Joiner$3",
182:       "com.google.common.collect.ImmutableEnumSet",
183:       "com.google.common.collect.Lists$RandomAccessListWrapper",
184:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
185:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
186:       "com.google.common.base.CharMatcher$BitSetMatcher",
187:       "org.objectweb.asm.ClassVisitor",
188:       "com.google.common.collect.ImmutableCollection$Builder",
189:       "com.google.common.base.Converter",
190:       "com.google.common.collect.ImmutableSetMultimap",
191:       "com.google.common.collect.Iterators$SingletonIterator",
192:       "com.google.errorprone.annotations.DoNotMock",
193:       "com.google.common.collect.Maps$8",
194:       "com.google.common.collect.BiMap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Iterators$9",
198:       "com.google.common.collect.Lists$AbstractListWrapper",
199:       "com.google.common.collect.ImmutableMap",
200:       "com.google.common.collect.AbstractIndexedListIterator",
201:       "com.google.common.collect.CollectPreconditions",
202:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
203:       "com.google.common.base.CharMatcher$NamedFastMatcher",
204:       "com.google.common.collect.Iterators$1",
205:       "com.google.common.collect.CompactHashMap",
206:       "com.google.common.truth.Subject",
207:       "com.google.common.collect.Sets",
208:       "com.google.common.collect.Iterators$4",
209:       "com.google.common.collect.Iterators$5",
210:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
211:       "org.objectweb.asm.ClassReader",
212:       "com.google.common.truth.Platform",
213:       "com.google.common.base.CharMatcher$Is",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.common.truth.LazyMessage",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.common.collect.ImmutableMultimap$Builder",
220:       "com.google.common.truth.Subject$ComparisonResult",
221:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
222:       "com.google.common.collect.Multiset",
223:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
224:       "com.google.common.collect.AbstractMultimap",
225:       "com.google.common.base.Supplier",
226:       "com.google.common.collect.Multimap",
227:       "com.google.common.collect.Iterators",
228:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
229:       "com.google.common.collect.ImmutableList",
230:       "com.google.common.collect.FluentIterable$1",
231:       "com.google.common.base.Suppliers",
232:       "com.google.common.collect.FluentIterable$2",
233:       "com.google.common.truth.ThrowableSubject$1",
234:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
235:       "com.google.common.truth.Fact",
236:       "com.google.common.collect.FluentIterable$3",
237:       "com.google.common.base.VerifyException",
238:       "com.google.common.base.CharMatcher$Negated",
239:       "com.google.common.truth.ActualValueInference$DescribedEntry",
240:       "com.google.common.base.CaseFormat",
241:       "com.google.common.base.Ascii",
242:       "com.google.common.truth.ActualValueInference$SubjectEntry",
243:       "com.google.common.truth.StandardSubjectBuilder",
244:       "com.google.common.collect.Maps",
245:       "com.google.common.primitives.Ints",
246:       "com.google.common.truth.StringSubject",
247:       "com.google.common.collect.SetMultimap",
248:       "com.google.common.base.CharMatcher$Or",
249:       "com.google.common.base.CaseFormat$StringConverter",
250:       "com.google.common.collect.Maps$EntryTransformer",
251:       "com.google.common.collect.FluentIterable$3$1",
252:       "com.google.common.truth.FailureStrategy",
253:       "com.google.common.collect.Iterators$MergingIterator",
254:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
255:       "com.google.common.collect.RegularImmutableSortedSet",
256:       "com.google.common.truth.ActualValueInference$StackEntry"
257:     );
258:   } 
259:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
260:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_1_tmp__ESTest_scaffolding.class.getClassLoader()));
261:   }
262: 
263:   private static void resetClasses() {
264:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_1_tmp__ESTest_scaffolding.class.getClassLoader()); 
265: 
266:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
267:       "com.google.common.truth.Subject",
268:       "com.google.common.truth.ThrowableSubject",
269:       "com.google.common.truth.ThrowableSubject$1",
270:       "com.google.common.truth.FailureMetadata",
271:       "com.google.common.collect.ImmutableCollection",
272:       "com.google.common.collect.UnmodifiableIterator",
273:       "com.google.common.collect.UnmodifiableListIterator",
274:       "com.google.common.collect.AbstractIndexedListIterator",
275:       "com.google.common.collect.ImmutableList$Itr",
276:       "com.google.common.collect.RegularImmutableList",
277:       "com.google.common.base.Preconditions",
278:       "com.google.common.collect.ImmutableList",
279:       "com.google.common.truth.LazyMessage",
280:       "com.google.common.base.Strings",
281:       "com.google.common.truth.FailureMetadata$Step",
282:       "com.google.common.base.Converter",
283:       "com.google.common.base.Converter$IdentityConverter",
284:       "com.google.common.truth.SubjectUtils",
285:       "com.google.common.collect.ImmutableCollection$Builder",
286:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
287:       "com.google.common.collect.ImmutableList$Builder",
288:       "com.google.common.collect.CollectPreconditions",
289:       "com.google.common.base.Suppliers",
290:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
291:       "com.google.common.truth.Platform",
292:       "com.google.common.collect.ImmutableSet",
293:       "com.google.common.collect.SingletonImmutableSet",
294:       "com.google.common.collect.ObjectArrays",
295:       "com.google.common.collect.Hashing",
296:       "com.google.common.collect.RegularImmutableSet",
297:       "com.google.common.truth.StackTraceCleaner",
298:       "com.google.common.collect.Sets",
299:       "com.google.common.collect.Maps",
300:       "com.google.common.base.MoreObjects",
301:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
302:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
303:       "com.google.common.base.Joiner",
304:       "com.google.common.base.Joiner$3",
305:       "com.google.common.truth.ActualValueInference",
306:       "org.objectweb.asm.ClassVisitor",
307:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
308:       "com.google.common.collect.AbstractMultimap",
309:       "com.google.common.collect.BaseImmutableMultimap",
310:       "com.google.common.collect.ImmutableMultimap",
311:       "com.google.common.collect.ImmutableSetMultimap",
312:       "com.google.common.collect.ImmutableMultimap$Builder",
313:       "com.google.common.collect.ImmutableSetMultimap$Builder",
314:       "com.google.common.collect.Platform",
315:       "com.google.common.collect.CompactHashMap",
316:       "com.google.common.primitives.IntsMethodsForWeb",
317:       "com.google.common.primitives.Ints",
318:       "org.objectweb.asm.ClassReader",
319:       "com.google.common.truth.StandardSubjectBuilder",
320:       "com.google.common.truth.Subject$ComparisonResult",
321:       "com.google.common.truth.Fact",
322:       "com.google.common.collect.Lists",
323:       "com.google.common.collect.Lists$OnePlusArrayList",
324:       "com.google.common.math.IntMath",
325:       "com.google.common.truth.AssertionErrorWithFacts",
326:       "com.google.common.base.CharMatcher",
327:       "com.google.common.base.CharMatcher$FastMatcher",
328:       "com.google.common.base.CharMatcher$Is",
329:       "com.google.common.base.CharMatcher$InRange",
330:       "com.google.common.base.CaseFormat",
331:       "com.google.common.base.Ascii",
332:       "com.google.common.base.Verify",
333:       "com.google.common.collect.Iterables",
334:       "com.google.common.collect.FluentIterable",
335:       "com.google.common.collect.FluentIterable$3",
336:       "com.google.common.base.Optional",
337:       "com.google.common.base.Absent",
338:       "com.google.common.collect.FluentIterable$3$1",
339:       "com.google.common.collect.Iterators",
340:       "com.google.common.collect.Iterators$ConcatenatedIterator",
341:       "com.google.common.collect.Iterators$ArrayItr",
342:       "com.google.common.truth.ComparableSubject",
343:       "com.google.common.truth.StringSubject",
344:       "com.google.common.truth.Platform$PlatformComparisonFailure",
345:       "com.google.common.truth.ComparisonFailureWithFacts",
346:       "com.google.common.base.Converter$FunctionBasedConverter",
347:       "com.google.common.truth.Subject$EqualityCheck",
348:       "com.google.common.truth.ComparisonFailures",
349:       "com.google.common.base.Splitter",
350:       "com.google.common.base.Platform$JdkPatternCompiler",
351:       "com.google.common.base.Platform",
352:       "com.google.common.base.CommonPattern",
353:       "com.google.common.base.JdkPattern",
354:       "com.google.common.base.CommonMatcher",
355:       "com.google.common.base.JdkPattern$JdkMatcher",
356:       "com.google.common.base.Splitter$3",
357:       "com.google.common.base.CharMatcher$NamedFastMatcher",
358:       "com.google.common.base.CharMatcher$None",
359:       "com.google.common.base.Splitter$5",
360:       "com.google.common.base.AbstractIterator",
361:       "com.google.common.base.Splitter$SplittingIterator",
362:       "com.google.common.base.Splitter$3$1",
363:       "com.google.common.base.AbstractIterator$State",
364:       "com.google.common.base.AbstractIterator$1",
365:       "com.google.common.base.NullnessCasts",
366:       "com.google.common.truth.DiffUtils",
367:       "com.google.common.base.Converter$ConverterComposition",
368:       "com.google.common.base.Converter$ReverseConverter",
369:       "com.google.common.collect.Collections2",
370:       "com.google.common.base.Converter$1",
371:       "com.google.common.collect.ImmutableList$SubList",
372:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
373:       "com.google.common.collect.Iterators$SingletonIterator",
374:       "com.google.common.base.Converter$1$1",
375:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
376:     );
377:   }
378: }

[MASTER] 16:17:41.956 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
HashSet<String> hashSet0 = new HashSet<String>();
LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(hashSet0);
ImmutableList<String> immutableList0 = ImmutableList.sortedCopyOf((Iterable<? extends String>) linkedHashSet0);
Fact[] factArray0 = new Fact[0];
ImmutableList<Fact> immutableList1 = ImmutableList.copyOf(factArray0);
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("com.google.common.truth.ThrowableSubject$1", "com.google.common.truth.ThrowableSubject$1", 1);
AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLFeatureNotSupportedException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


[MASTER] 16:17:42.032 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1731035861957/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1731035861957/com/google/common/truth/ThrowableSubject_2_tmp__ESTest_scaffolding.java]]
[MASTER] 16:17:42.032 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:t/dependency/asm-9.6.jar:t/dependency/auto-value-annotations-1.10.4.jar:t/dependency/checker-qual-3.42.0.jar:t/dependency/error_prone_annotations-2.23.0.jar:t/dependency/failureaccess-1.0.2.jar:t/dependency/guava-33.0.0-android.jar:t/dependency/guava-gwt-33.0.0-jre.jar:t/dependency/guava-testlib-33.0.0-android.jar:t/dependency/gwt-user-2.10.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/asm-9.6.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/auto-value-annotations-1.10.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/checker-qual-3.42.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/error_prone_annotations-2.23.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/failureaccess-1.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-gwt-33.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-testlib-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/gwt-user-2.10.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:17:42.032 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/asm-9.6.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/auto-value-annotations-1.10.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/checker-qual-3.42.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/error_prone_annotations-2.23.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/failureaccess-1.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-gwt-33.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/guava-testlib-33.0.0-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/gwt-user-2.10.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:17:42.033 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:17:42.033 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-33.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:17:42.034 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:17:42.034 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkPositionIndexes
  location: class: 22
[MASTER] 16:17:42.034 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 21
[MASTER] 16:17:42.035 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkElementIndex
  location: class: 20
[MASTER] 16:17:42.035 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:17:42.035 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:17:42.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:17:42.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:17:42.037 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1731035861957/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:17:41 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.AssertionErrorWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.SQLFeatureNotSupportedException;
19: import java.util.HashSet;
20: import java.util.LinkedHashSet;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.evosuite.runtime.ViolatedAssumptionAnswer;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class ThrowableSubject_2_tmp__ESTest extends ThrowableSubject_2_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
32:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
33:       HashSet<String> hashSet0 = new HashSet<String>();
34:       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(hashSet0);
35:       ImmutableList<String> immutableList0 = ImmutableList.sortedCopyOf((Iterable<? extends String>) linkedHashSet0);
36:       Fact fact0 = Fact.simpleFact("com.google.common.truth.ThrowableSubject$1");
37:       ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0);
38:       SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("com.google.common.truth.ThrowableSubject$1", "com.google.common.truth.ThrowableSubject$1", 1);
39:       AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLFeatureNotSupportedException0);
40:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
41:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
42:       assertNotNull(stringSubject0);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_2_1731035861957/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:17:41 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_2_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.2.0"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
87:       "com.google.common.collect.Lists$RandomAccessPartition",
88:       "com.google.common.base.CharMatcher$ForPredicate",
89:       "com.google.common.truth.ErrorWithFacts",
90:       "com.google.common.collect.PeekingIterator",
91:       "com.google.common.collect.RegularImmutableList",
92:       "com.google.common.truth.StackTraceCleaner",
93:       "com.google.common.truth.SubjectUtils",
94:       "com.google.common.collect.FluentIterable",
95:       "com.google.common.base.Optional",
96:       "com.google.common.collect.Lists$TransformingRandomAccessList",
97:       "com.google.common.collect.Sets$2",
98:       "com.google.common.collect.Iterators$ArrayItr",
99:       "com.google.common.collect.Sets$3",
100:       "com.google.common.truth.ThrowableSubject",
101:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
102:       "com.google.common.collect.Sets$1",
103:       "com.google.common.base.CharMatcher$IsNot",
104:       "com.google.common.base.CharMatcher$InRange",
105:       "com.google.common.collect.Platform",
106:       "com.google.common.base.Verify",
107:       "com.google.common.collect.BaseImmutableMultimap",
108:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
109:       "com.google.common.collect.ImmutableMultimap$Values",
110:       "com.google.common.collect.Range",
111:       "com.google.common.collect.SortedMapDifference",
112:       "com.google.common.collect.RegularImmutableSet",
113:       "com.google.common.truth.Subject$EqualityCheck",
114:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
115:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
116:       "com.google.common.base.Predicate",
117:       "com.google.common.base.CharMatcher$IsEither",
118:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
119:       "com.google.common.collect.ImmutableListMultimap",
120:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
121:       "com.google.common.collect.ImmutableMultimap$1",
122:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
123:       "com.google.common.base.Present",
124:       "com.google.common.base.Joiner",
125:       "com.google.common.collect.ImmutableMultimap$2",
126:       "com.google.common.collect.Iterators$ConcatenatedIterator",
127:       "com.google.common.collect.Iterables",
128:       "com.google.common.collect.Sets$SetView",
129:       "com.google.common.collect.ImmutableSet$Builder",
130:       "com.google.common.collect.SingletonImmutableSet",
131:       "com.google.common.collect.ImmutableSetMultimap$Builder",
132:       "com.google.common.truth.AssertionErrorWithFacts",
133:       "com.google.common.base.Strings",
134:       "com.google.common.collect.Lists$Partition",
135:       "com.google.common.collect.Lists",
136:       "com.google.common.truth.ActualValueInference$InferredType",
137:       "com.google.common.collect.ImmutableMultiset",
138:       "com.google.common.collect.UnmodifiableListIterator",
139:       "com.google.common.truth.ComparableSubject",
140:       "com.google.common.collect.ImmutableMultimap$Keys",
141:       "com.google.common.collect.ImmutableMultimap",
142:       "com.google.common.truth.FailureMetadata",
143:       "com.google.common.truth.FailureMetadata$Step",
144:       "com.google.common.collect.Lists$TransformingSequentialList",
145:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
146:       "com.google.common.collect.ImmutableSortedSet",
147:       "com.google.common.primitives.IntsMethodsForWeb",
148:       "com.google.common.collect.Sets$4",
149:       "com.google.common.collect.RangeGwtSerializationDependencies",
150:       "com.google.common.base.Absent",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.common.collect.Maps$BiMapConverter",
153:       "com.google.common.base.CaseFormat$1",
154:       "com.google.common.base.CaseFormat$2",
155:       "com.google.common.base.CaseFormat$3",
156:       "com.google.common.base.CharMatcher",
157:       "com.google.common.collect.AbstractIterator",
158:       "com.google.common.base.MoreObjects",
159:       "com.google.common.base.CaseFormat$4",
160:       "com.google.common.base.CaseFormat$5",
161:       "com.google.common.collect.ImmutableSortedSet$Builder",
162:       "com.google.common.base.CharMatcher$And",
163:       "com.google.common.base.Suppliers$MemoizingSupplier",
164:       "com.google.common.collect.MapDifference",
165:       "com.google.common.collect.SortedIterable",
166:       "com.google.common.base.CharMatcher$AnyOf",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.common.base.CharMatcher$1",
170:       "com.google.common.truth.StandardSubjectBuilder$1",
171:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
172:       "com.google.common.base.CharMatcher$FastMatcher",
173:       "com.google.common.base.Joiner$1",
174:       "com.google.common.base.Joiner$2",
175:       "org.objectweb.asm.MethodVisitor",
176:       "com.google.common.collect.EmptyImmutableSetMultimap",
177:       "com.google.common.collect.ImmutableList$Itr",
178:       "com.google.common.truth.ActualValueInference",
179:       "com.google.common.collect.ImmutableCollection",
180:       "com.google.common.collect.ImmutableEnumMap",
181:       "com.google.common.base.Joiner$3",
182:       "com.google.common.collect.ImmutableEnumSet",
183:       "com.google.common.collect.Lists$RandomAccessListWrapper",
184:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
185:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
186:       "com.google.common.base.CharMatcher$BitSetMatcher",
187:       "org.objectweb.asm.ClassVisitor",
188:       "com.google.common.collect.ImmutableCollection$Builder",
189:       "com.google.common.base.Converter",
190:       "com.google.common.collect.ImmutableSetMultimap",
191:       "com.google.common.collect.Iterators$SingletonIterator",
192:       "com.google.errorprone.annotations.DoNotMock",
193:       "com.google.common.collect.Maps$8",
194:       "com.google.common.collect.BiMap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Iterators$9",
198:       "com.google.common.collect.Lists$AbstractListWrapper",
199:       "com.google.common.collect.ImmutableMap",
200:       "com.google.common.collect.AbstractIndexedListIterator",
201:       "com.google.common.collect.CollectPreconditions",
202:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
203:       "com.google.common.base.CharMatcher$NamedFastMatcher",
204:       "com.google.common.collect.Iterators$1",
205:       "com.google.common.collect.CompactHashMap",
206:       "com.google.common.truth.Subject",
207:       "com.google.common.collect.Sets",
208:       "com.google.common.collect.Iterators$4",
209:       "com.google.common.collect.Iterators$5",
210:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
211:       "org.objectweb.asm.ClassReader",
212:       "com.google.common.truth.Platform",
213:       "com.google.common.base.CharMatcher$Is",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.common.truth.LazyMessage",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.common.collect.ImmutableMultimap$Builder",
220:       "com.google.common.truth.Subject$ComparisonResult",
221:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
222:       "com.google.common.collect.Multiset",
223:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
224:       "com.google.common.collect.AbstractMultimap",
225:       "com.google.common.base.Supplier",
226:       "com.google.common.collect.Multimap",
227:       "com.google.common.collect.Iterators",
228:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
229:       "com.google.common.collect.ImmutableList",
230:       "com.google.common.collect.FluentIterable$1",
231:       "com.google.common.base.Suppliers",
232:       "com.google.common.collect.FluentIterable$2",
233:       "com.google.common.truth.ThrowableSubject$1",
234:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
235:       "com.google.common.truth.Fact",
236:       "com.google.common.collect.FluentIterable$3",
237:       "com.google.common.base.VerifyException",
238:       "com.google.common.base.CharMatcher$Negated",
239:       "com.google.common.truth.ActualValueInference$DescribedEntry",
240:       "com.google.common.base.CaseFormat",
241:       "com.google.common.base.Ascii",
242:       "com.google.common.truth.ActualValueInference$SubjectEntry",
243:       "com.google.common.truth.StandardSubjectBuilder",
244:       "com.google.common.collect.Maps",
245:       "com.google.common.primitives.Ints",
246:       "com.google.common.truth.StringSubject",
247:       "com.google.common.collect.SetMultimap",
248:       "com.google.common.base.CharMatcher$Or",
249:       "com.google.common.base.CaseFormat$StringConverter",
250:       "com.google.common.collect.Maps$EntryTransformer",
251:       "com.google.common.collect.FluentIterable$3$1",
252:       "com.google.common.truth.FailureStrategy",
253:       "com.google.common.collect.Iterators$MergingIterator",
254:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
255:       "com.google.common.collect.RegularImmutableSortedSet",
256:       "com.google.common.truth.ActualValueInference$StackEntry"
257:     );
258:   } 
259:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
260:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()));
261:   }
262: 
263:   private static void resetClasses() {
264:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
265: 
266:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
267:       "com.google.common.truth.Subject",
268:       "com.google.common.truth.ThrowableSubject",
269:       "com.google.common.truth.ThrowableSubject$1",
270:       "com.google.common.truth.FailureMetadata",
271:       "com.google.common.collect.ImmutableCollection",
272:       "com.google.common.collect.UnmodifiableIterator",
273:       "com.google.common.collect.UnmodifiableListIterator",
274:       "com.google.common.collect.AbstractIndexedListIterator",
275:       "com.google.common.collect.ImmutableList$Itr",
276:       "com.google.common.collect.RegularImmutableList",
277:       "com.google.common.base.Preconditions",
278:       "com.google.common.collect.ImmutableList",
279:       "com.google.common.truth.LazyMessage",
280:       "com.google.common.base.Strings",
281:       "com.google.common.truth.FailureMetadata$Step",
282:       "com.google.common.base.Converter",
283:       "com.google.common.base.Converter$IdentityConverter",
284:       "com.google.common.truth.SubjectUtils",
285:       "com.google.common.collect.ImmutableCollection$Builder",
286:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
287:       "com.google.common.collect.ImmutableList$Builder",
288:       "com.google.common.collect.CollectPreconditions",
289:       "com.google.common.base.Suppliers",
290:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
291:       "com.google.common.truth.Platform",
292:       "com.google.common.collect.ImmutableSet",
293:       "com.google.common.collect.SingletonImmutableSet",
294:       "com.google.common.collect.ObjectArrays",
295:       "com.google.common.collect.Hashing",
296:       "com.google.common.collect.RegularImmutableSet",
297:       "com.google.common.truth.StackTraceCleaner",
298:       "com.google.common.collect.Sets",
299:       "com.google.common.collect.Maps",
300:       "com.google.common.base.MoreObjects",
301:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
302:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
303:       "com.google.common.base.Joiner",
304:       "com.google.common.base.Joiner$3",
305:       "com.google.common.truth.ActualValueInference",
306:       "org.objectweb.asm.ClassVisitor",
307:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
308:       "com.google.common.collect.AbstractMultimap",
309:       "com.google.common.collect.BaseImmutableMultimap",
310:       "com.google.common.collect.ImmutableMultimap",
311:       "com.google.common.collect.ImmutableSetMultimap",
312:       "com.google.common.collect.ImmutableMultimap$Builder",
313:       "com.google.common.collect.ImmutableSetMultimap$Builder",
314:       "com.google.common.collect.Platform",
315:       "com.google.common.collect.CompactHashMap",
316:       "com.google.common.primitives.IntsMethodsForWeb",
317:       "com.google.common.primitives.Ints",
318:       "org.objectweb.asm.ClassReader",
319:       "com.google.common.truth.StandardSubjectBuilder",
320:       "com.google.common.truth.Subject$ComparisonResult",
321:       "com.google.common.truth.Fact",
322:       "com.google.common.collect.Lists",
323:       "com.google.common.collect.Lists$OnePlusArrayList",
324:       "com.google.common.math.IntMath",
325:       "com.google.common.truth.AssertionErrorWithFacts",
326:       "com.google.common.base.CharMatcher",
327:       "com.google.common.base.CharMatcher$FastMatcher",
328:       "com.google.common.base.CharMatcher$Is",
329:       "com.google.common.base.CharMatcher$InRange",
330:       "com.google.common.base.CaseFormat",
331:       "com.google.common.base.Ascii",
332:       "com.google.common.base.Verify",
333:       "com.google.common.collect.Iterables",
334:       "com.google.common.collect.FluentIterable",
335:       "com.google.common.collect.FluentIterable$3",
336:       "com.google.common.base.Optional",
337:       "com.google.common.base.Absent",
338:       "com.google.common.collect.FluentIterable$3$1",
339:       "com.google.common.collect.Iterators",
340:       "com.google.common.collect.Iterators$ConcatenatedIterator",
341:       "com.google.common.collect.Iterators$ArrayItr",
342:       "com.google.common.truth.ComparableSubject",
343:       "com.google.common.truth.StringSubject",
344:       "com.google.common.truth.Platform$PlatformComparisonFailure",
345:       "com.google.common.truth.ComparisonFailureWithFacts",
346:       "com.google.common.base.Converter$FunctionBasedConverter",
347:       "com.google.common.truth.Subject$EqualityCheck",
348:       "com.google.common.truth.ComparisonFailures",
349:       "com.google.common.base.Splitter",
350:       "com.google.common.base.Platform$JdkPatternCompiler",
351:       "com.google.common.base.Platform",
352:       "com.google.common.base.CommonPattern",
353:       "com.google.common.base.JdkPattern",
354:       "com.google.common.base.CommonMatcher",
355:       "com.google.common.base.JdkPattern$JdkMatcher",
356:       "com.google.common.base.Splitter$3",
357:       "com.google.common.base.CharMatcher$NamedFastMatcher",
358:       "com.google.common.base.CharMatcher$None",
359:       "com.google.common.base.Splitter$5",
360:       "com.google.common.base.AbstractIterator",
361:       "com.google.common.base.Splitter$SplittingIterator",
362:       "com.google.common.base.Splitter$3$1",
363:       "com.google.common.base.AbstractIterator$State",
364:       "com.google.common.base.AbstractIterator$1",
365:       "com.google.common.base.NullnessCasts",
366:       "com.google.common.truth.DiffUtils",
367:       "com.google.common.base.Converter$ConverterComposition",
368:       "com.google.common.base.Converter$ReverseConverter",
369:       "com.google.common.collect.Collections2",
370:       "com.google.common.base.Converter$1",
371:       "com.google.common.collect.ImmutableList$SubList",
372:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
373:       "com.google.common.collect.Iterators$SingletonIterator",
374:       "com.google.common.base.Converter$1$1",
375:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
376:     );
377:   }
378: }

[MASTER] 16:17:42.038 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
HashSet<String> hashSet0 = new HashSet<String>();
LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(hashSet0);
ImmutableList<String> immutableList0 = ImmutableList.sortedCopyOf((Iterable<? extends String>) linkedHashSet0);
Fact fact0 = Fact.simpleFact("com.google.common.truth.ThrowableSubject$1");
ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0);
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("com.google.common.truth.ThrowableSubject$1", "com.google.common.truth.ThrowableSubject$1", 1);
AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLFeatureNotSupportedException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'ThrowableSubject_ESTest' to evosuite-tests
* Done!

* Computation finished
