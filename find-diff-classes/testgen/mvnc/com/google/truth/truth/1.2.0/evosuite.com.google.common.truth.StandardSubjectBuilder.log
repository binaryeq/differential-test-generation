* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.StandardSubjectBuilder
* Starting Client-0
* Connecting to master process on port 20221
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.2.0/truth-1.2.0.jar
  - t/dependency/asm-9.6.jar
  - t/dependency/auto-value-annotations-1.10.4.jar
  - t/dependency/checker-qual-3.42.0.jar
  - t/dependency/error_prone_annotations-2.23.0.jar
  - t/dependency/failureaccess-1.0.2.jar
  - t/dependency/guava-33.0.0-android.jar
  - t/dependency/guava-gwt-33.0.0-jre.jar
  - t/dependency/guava-testlib-33.0.0-android.jar
  - t/dependency/gwt-user-2.10.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-2.8.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.StandardSubjectBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 256
* Using seed 1731035727330
* Starting evolution
* Initial Number of Goals in DynaMOSA = 152 / 256
[MASTER] 16:15:34.352 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=>                            5%] [Cov:===>                               9%][Progress:=>                            6%] [Cov:===>                               9%][Progress:==>                           8%] [Cov:===>                               9%][Progress:==>                           8%] [Cov:===>                               9%][Progress:===>                          10%] [Cov:===>                               9%][Progress:===>                          11%] [Cov:===>                               9%][Progress:===>                          11%] [Cov:===>                               11%][Progress:===>                          11%] [Cov:===>                               9%][Progress:===>                          11%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:===>                               9%][Progress:====>                         15%] [Cov:===>                               11%][Progress:====>                         15%] [Cov:===>                               9%][Progress:====>                         15%] [Cov:===>                               9%][MASTER] 16:15:40.645 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Optional<T> : Type points to itself
[Progress:====>                         15%] [Cov:===>                               9%][Progress:====>                         15%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:===>                               9%][MASTER] 16:15:41.984 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[Progress:=====>                        18%] [Cov:===>                               9%][Progress:=====>                        18%] [Cov:===>                               9%][MASTER] 16:15:42.650 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedMultiset#of. The owner var map is {E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class com.google.common.truth.CustomSubjectBuilder, E=java.lang.Comparable<java.lang.Integer>, E=class java.lang.Integer, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class java.lang.Integer, E=class java.lang.Integer, E=java.lang.Comparable<java.lang.Integer>, E=class java.lang.Integer, T=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class java.lang.Integer, E=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class java.lang.Integer, E=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class java.lang.Double, E=class java.lang.Double, E=class java.lang.Integer, E=class java.lang.Double, E=class java.lang.Double, E=java.lang.Comparable<java.lang.Object>}
[Progress:=====>                        18%] [Cov:===>                               9%][MASTER] 16:15:43.201 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[Progress:======>                       20%] [Cov:===>                               9%][Progress:======>                       21%] [Cov:===>                               9%][Progress:======>                       21%] [Cov:===>                               9%][Progress:======>                       21%] [Cov:===>                               9%][Progress:======>                       21%] [Cov:===>                               9%][Progress:======>                       21%] [Cov:===>                               9%][Progress:======>                       23%] [Cov:===>                               9%][Progress:======>                       23%] [Cov:===>                               9%][Progress:======>                       23%] [Cov:===>                               9%][Progress:======>                       23%] [Cov:===>                               9%][Progress:=======>                      25%] [Cov:===>                               9%][Progress:=======>                      25%] [Cov:===>                               9%][Progress:=======>                      26%] [Cov:===>                               9%][Progress:=======>                      26%] [Cov:===>                               9%][Progress:=======>                      26%] [Cov:===>                               9%][Progress:========>                     28%] [Cov:===>                               9%][Progress:========>                     28%] [Cov:===>                               9%][Progress:========>                     28%] [Cov:===>                               9%][Progress:=========>                    30%] [Cov:===>                               9%][Progress:=========>                    30%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    33%] [Cov:===>                               9%][Progress:=========>                    33%] [Cov:===>                               9%][Progress:=========>                    33%] [Cov:===>                               9%][Progress:=========>                    33%] [Cov:===>                               9%][Progress:=========>                    33%] [Cov:===>                               9%][Progress:==========>                   35%] [Cov:===>                               9%][Progress:==========>                   35%] [Cov:===>                               9%][Progress:==========>                   35%] [Cov:===>                               9%][Progress:==========>                   35%] [Cov:===>                               9%][Progress:==========>                   36%] [Cov:===>                               9%][Progress:==========>                   36%] [Cov:===>                               9%][Progress:==========>                   36%] [Cov:===>                               9%][Progress:===========>                  38%] [Cov:===>                               9%][Progress:===========>                  38%] [Cov:===>                               9%][Progress:===========>                  38%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 40%] [Cov:===>                               9%][Progress:============>                 41%] [Cov:===>                               9%][Progress:============>                 43%] [Cov:===>                               9%][Progress:============>                 43%] [Cov:===>                               9%][Progress:============>                 43%] [Cov:===>                               9%][Progress:============>                 43%] [Cov:===>                               9%][Progress:=============>                45%] [Cov:===>                               9%][Progress:=============>                45%] [Cov:===>                               9%][Progress:=============>                46%] [Cov:===>                               9%][Progress:=============>                46%] [Cov:===>                               9%][Progress:==============>               48%] [Cov:===>                               9%][Progress:==============>               48%] [Cov:===>                               9%][Progress:==============>               48%] [Cov:===>                               9%][Progress:===============>              50%] [Cov:===>                               9%][Progress:===============>              50%] [Cov:===>                               9%][Progress:===============>              50%] [Cov:===>                               9%][Progress:===============>              50%] [Cov:===>                               9%][Progress:===============>              51%] [Cov:===>                               9%][Progress:===============>              51%] [Cov:===>                               9%][Progress:===============>              51%] [Cov:===>                               9%][Progress:===============>              51%] [Cov:===>                               9%][Progress:===============>              53%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             55%] [Cov:===>                               9%][Progress:================>             56%] [Cov:===>                               9%][Progress:================>             56%] [Cov:===>                               9%][Progress:================>             56%] [Cov:===>                               9%][Progress:================>             56%] [Cov:===>                               9%][Progress:================>             56%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:=================>            58%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           60%] [Cov:===>                               9%][Progress:==================>           61%] [Cov:===>                               9%][Progress:==================>           61%] [Cov:===>                               9%][Progress:==================>           61%] [Cov:===>                               9%][Progress:==================>           61%] [Cov:===>                               9%][MASTER] 16:16:08.618 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:==================>           61%] [Cov:===>                               9%][Progress:==================>           63%] [Cov:===>                               9%][Progress:==================>           63%] [Cov:===>                               9%][Progress:===================>          65%] [Cov:===>                               9%][Progress:===================>          65%] [Cov:===>                               9%][Progress:===================>          65%] [Cov:===>                               9%][Progress:===================>          65%] [Cov:===>                               9%][Progress:===================>          65%] [Cov:===>                               9%][Progress:===================>          66%] [Cov:===>                               9%][Progress:===================>          66%] [Cov:===>                               9%][Progress:===================>          66%] [Cov:===>                               9%][Progress:====================>         68%] [Cov:===>                               9%][Progress:====================>         68%] [Cov:===>                               9%][Progress:====================>         68%] [Cov:===>                               9%][Progress:====================>         68%] [Cov:===>                               9%][MASTER] 16:16:12.926 [logback-1] WARN  CastClassManager - Nothing is assignable after adding class java.lang.Integer for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedMultiset#of. The owner var map is {E=class java.lang.String, E=class java.lang.String, E=class java.lang.String, E=class java.lang.String, E=class java.lang.String, E=java.lang.Comparable<java.lang.String>, E=java.util.Map<java.lang.Integer, java.lang.Comparable<T>>.Entry<java.lang.Integer, java.util.Map<K, V>.Entry<K, V>>, E=java.lang.Comparable<java.lang.Comparable<T>>, E=class java.lang.Integer, E=class java.lang.String, E=java.util.Map<java.lang.String, java.util.Map<K, V>.Entry<K, V>>.Entry<java.lang.Comparable<T>, java.util.Map<K, V>.Entry<K, V>>, E=class java.lang.Integer, E=java.lang.Comparable<java.lang.String>, E=java.lang.Comparable<java.lang.String>, E=java.lang.Comparable<java.lang.String>, T=class java.lang.String, E=class java.lang.Integer, E=class java.lang.String, E=java.lang.Comparable<java.lang.Comparable<T>>, E=class java.lang.String, E=class java.lang.String, E=class java.lang.String, E=class java.lang.Integer, E=class java.lang.String, E=class java.lang.String, E=class java.lang.String, E=java.lang.Comparable<java.lang.Object>}
[Progress:=====================>        70%] [Cov:===>                               9%][Progress:=====================>        70%] [Cov:===>                               9%][Progress:=====================>        70%] [Cov:===>                               9%][Progress:=====================>        71%] [Cov:===>                               9%][Progress:=====================>        71%] [Cov:===>                               9%][Progress:=====================>        71%] [Cov:===>                               9%][Progress:=====================>        73%] [Cov:===>                               9%][Progress:=====================>        73%] [Cov:===>                               9%][Progress:=====================>        73%] [Cov:===>                               9%][Progress:=====================>        73%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       75%] [Cov:===>                               9%][Progress:======================>       76%] [Cov:===>                               9%][Progress:=======================>      78%] [Cov:===>                               9%][Progress:=======================>      78%] [Cov:===>                               9%][Progress:=======================>      78%] [Cov:===>                               9%][Progress:=======================>      78%] [Cov:===>                               9%][Progress:========================>     80%] [Cov:===>                               9%][Progress:========================>     80%] [Cov:===>                               9%][MASTER] 16:16:19.707 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedMultiset#of. The owner var map is {E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=java.util.Map<java.lang.Comparable<T>, com.google.common.truth.CustomSubjectBuilder>.Entry<java.util.Map<K, V>.Entry<K, V>, java.util.Map<K, V>.Entry<K, V>>, E=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=class com.google.common.truth.CustomSubjectBuilder, E=java.lang.Comparable<java.util.Map<K, V>.Entry<K, V>>, E=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, T=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class com.google.common.truth.CustomSubjectBuilder, E=java.lang.Comparable<com.google.common.truth.CustomSubjectBuilder>, E=class com.google.common.truth.CustomSubjectBuilder, E=java.lang.Comparable<java.lang.Comparable<T>>, E=java.lang.Comparable<java.lang.Object>, E=class java.lang.Object, E=java.lang.Comparable<java.lang.Object>}
[Progress:========================>     80%] [Cov:===>                               9%][Progress:========================>     83%] [Cov:===>                               9%][Progress:========================>     83%] [Cov:===>                               9%][Progress:========================>     83%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    85%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:=========================>    86%] [Cov:===>                               9%][Progress:==========================>   88%] [Cov:===>                               9%][Progress:==========================>   88%] [Cov:===>                               9%][Progress:==========================>   88%] [Cov:===>                               9%][Progress:==========================>   88%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  90%] [Cov:===>                               9%][Progress:===========================>  91%] [Cov:===>                               9%][Progress:===========================>  91%] [Cov:===>                               9%][Progress:===========================>  91%] [Cov:===>                               9%][Progress:===========================>  91%] [Cov:===>                               9%][Progress:===========================>  91%] [Cov:===>                               9%][Progress:===========================>  93%] [Cov:===>                               9%][Progress:===========================>  93%] [Cov:===>                               9%][Progress:===========================>  93%] [Cov:===>                               9%][Progress:===========================>  93%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 96%] [Cov:===>                               9%][Progress:============================> 96%] [Cov:===>                               9%][Progress:=============================>98%] [Cov:===>                               9%][Progress:=============================>98%] [Cov:===>                               9%][Progress:==============================100%] [Cov:===>                               9%]
* Search finished after 62s and 206 generations, 12575 statements, best individual has fitness: 249.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 8%
* Total number of goals: 39
* Number of covered goals: 3
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 6%
* Total number of goals: 36
* Number of covered goals: 2
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 0%
* Total number of goals: 15
* Number of covered goals: 0
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 62
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 6%
* Total number of goals: 34
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 0%
* Total number of goals: 34
* Number of covered goals: 0
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 6%
* Total number of goals: 36
* Number of covered goals: 2
* Generated 2 tests with total length 2
* Resulting test suite's coverage: 9% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'StandardSubjectBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
