* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.ThrowableSubject
* Starting Client-0
* Connecting to master process on port 9188
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar
  - t/dependency/asm-9.5.jar
  - t/dependency/auto-value-annotations-1.10.1.jar
  - t/dependency/checker-qual-3.35.0.jar
  - t/dependency/error_prone_annotations-2.19.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-32.0.1-android.jar
  - t/dependency/guava-gwt-32.0.0-jre.jar
  - t/dependency/guava-testlib-32.0.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-2.8.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.ThrowableSubject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 64
* Using seed 1731035531348
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 28 / 64
[MASTER] 16:12:16.121 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             1%] [Cov:============================>      82%][Progress:>                             3%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:=========>                    33%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][MASTER] 16:12:36.522 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Converter<A, B> : Type points to itself
[Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 40%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 41%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:============>                 43%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                45%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:=============>                46%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              50%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              51%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             55%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:=================>            58%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:==================>           63%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:===================>          65%] [Cov:==============================>    87%][Progress:=====================>        73%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:=======================>      78%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     80%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     81%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:========================>     83%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    85%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:=========================>    86%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:==========================>   88%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  90%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 61s and 675 generations, 195454 statements, best individual has fitness: 5.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Generated 8 tests with total length 51
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 46%
* Compiling and checking tests
[MASTER] 16:13:19.716 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1731035599615/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1731035599615/com/google/common/truth/ThrowableSubject_2_tmp__ESTest_scaffolding.java]]
[MASTER] 16:13:19.716 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.716 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.719 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkPositionIndexes
  location: class: 22
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 21
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkElementIndex
  location: class: 20
[MASTER] 16:13:19.720 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:13:19.721 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:13:19.721 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:13:19.721 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:13:19.721 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1731035599615/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:13:19 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.AssertionErrorWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.SQLInvalidAuthorizationSpecException;
19: import java.util.ArrayList;
20: import java.util.Iterator;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.evosuite.runtime.ViolatedAssumptionAnswer;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class ThrowableSubject_2_tmp__ESTest extends ThrowableSubject_2_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
32:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
33:       SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();
34:       ImmutableList<String> immutableList0 = ImmutableList.of("com.google.common.base.CharMatcher$None");
35:       ArrayList<Fact> arrayList0 = new ArrayList<Fact>();
36:       Iterator<Fact> iterator0 = arrayList0.iterator();
37:       ImmutableList<Fact> immutableList1 = ImmutableList.copyOf((Iterator<? extends Fact>) iterator0);
38:       AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLInvalidAuthorizationSpecException0);
39:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0, "com.google.common.base.CharMatcher$None");
40:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
41:       assertNotNull(stringSubject0);
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_2_1731035599615/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:13:19 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_2_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
87:       "com.google.common.base.CharMatcher$Whitespace",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.base.CharMatcher$ForPredicate",
90:       "com.google.common.truth.ErrorWithFacts",
91:       "com.google.common.collect.PeekingIterator",
92:       "com.google.common.collect.RegularImmutableList",
93:       "com.google.common.truth.StackTraceCleaner",
94:       "com.google.common.truth.SubjectUtils",
95:       "com.google.common.base.CharMatcher$JavaDigit",
96:       "com.google.common.collect.FluentIterable",
97:       "com.google.common.base.Optional",
98:       "com.google.common.collect.Lists$TransformingRandomAccessList",
99:       "com.google.common.collect.Sets$2",
100:       "com.google.common.collect.Iterators$ArrayItr",
101:       "com.google.common.collect.Sets$3",
102:       "com.google.common.truth.ThrowableSubject",
103:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
104:       "com.google.common.collect.Sets$1",
105:       "com.google.common.base.CharMatcher$IsNot",
106:       "com.google.common.base.CharMatcher$InRange",
107:       "com.google.common.base.CharMatcher$JavaLetter",
108:       "com.google.common.collect.Platform",
109:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
110:       "com.google.common.base.Verify",
111:       "com.google.common.collect.BaseImmutableMultimap",
112:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
113:       "com.google.common.collect.ImmutableMultimap$Values",
114:       "com.google.common.collect.Range",
115:       "com.google.common.collect.SortedMapDifference",
116:       "com.google.common.collect.RegularImmutableSet",
117:       "com.google.common.collect.Iterators$10",
118:       "com.google.common.truth.Subject$EqualityCheck",
119:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
120:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
121:       "com.google.common.base.Predicate",
122:       "com.google.common.base.CharMatcher$IsEither",
123:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
124:       "com.google.common.collect.ImmutableListMultimap",
125:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
126:       "com.google.common.collect.ImmutableMultimap$1",
127:       "com.google.common.base.CharMatcher$Invisible",
128:       "com.google.common.base.CharMatcher$None",
129:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
130:       "com.google.common.base.Present",
131:       "com.google.common.base.Joiner",
132:       "com.google.common.collect.ImmutableMultimap$2",
133:       "com.google.common.collect.Iterators$ConcatenatedIterator",
134:       "com.google.common.collect.Iterables",
135:       "com.google.common.base.CharMatcher$Any",
136:       "com.google.common.collect.Sets$SetView",
137:       "com.google.common.collect.ImmutableSet$Builder",
138:       "com.google.common.collect.SingletonImmutableSet",
139:       "com.google.common.collect.ImmutableSetMultimap$Builder",
140:       "com.google.common.truth.AssertionErrorWithFacts",
141:       "com.google.common.base.Strings",
142:       "com.google.common.collect.Lists$Partition",
143:       "com.google.common.collect.Lists",
144:       "com.google.common.truth.ActualValueInference$InferredType",
145:       "com.google.common.collect.ImmutableMultiset",
146:       "com.google.common.collect.UnmodifiableListIterator",
147:       "com.google.common.truth.ComparableSubject",
148:       "com.google.common.collect.ImmutableMultimap$Keys",
149:       "com.google.common.collect.ImmutableMultimap",
150:       "com.google.common.truth.FailureMetadata",
151:       "com.google.common.truth.FailureMetadata$Step",
152:       "com.google.common.collect.Lists$TransformingSequentialList",
153:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
154:       "com.google.common.collect.ImmutableSortedSet",
155:       "com.google.common.primitives.IntsMethodsForWeb",
156:       "com.google.common.collect.Sets$4",
157:       "com.google.common.collect.RangeGwtSerializationDependencies",
158:       "com.google.common.base.Absent",
159:       "com.google.common.collect.ObjectArrays",
160:       "com.google.common.collect.Maps$BiMapConverter",
161:       "com.google.common.base.CaseFormat$1",
162:       "com.google.common.base.CaseFormat$2",
163:       "com.google.common.base.CaseFormat$3",
164:       "com.google.common.base.CharMatcher",
165:       "com.google.common.collect.AbstractIterator",
166:       "com.google.common.base.MoreObjects",
167:       "com.google.common.base.CaseFormat$4",
168:       "com.google.common.base.CaseFormat$5",
169:       "com.google.common.collect.ImmutableSortedSet$Builder",
170:       "com.google.common.base.CharMatcher$And",
171:       "com.google.common.base.Suppliers$MemoizingSupplier",
172:       "com.google.common.collect.MapDifference",
173:       "com.google.common.collect.SortedIterable",
174:       "com.google.common.base.CharMatcher$AnyOf",
175:       "com.google.common.base.Preconditions",
176:       "com.google.common.collect.UnmodifiableIterator",
177:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
178:       "com.google.common.base.CharMatcher$1",
179:       "com.google.common.truth.StandardSubjectBuilder$1",
180:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
181:       "com.google.common.base.CharMatcher$FastMatcher",
182:       "com.google.common.base.Joiner$1",
183:       "com.google.common.base.CharMatcher$JavaIsoControl",
184:       "com.google.common.base.Joiner$2",
185:       "org.objectweb.asm.MethodVisitor",
186:       "com.google.common.collect.EmptyImmutableSetMultimap",
187:       "com.google.common.collect.ImmutableList$Itr",
188:       "com.google.common.truth.ActualValueInference",
189:       "com.google.common.collect.ImmutableCollection",
190:       "com.google.common.collect.ImmutableEnumMap",
191:       "com.google.common.base.Joiner$3",
192:       "com.google.common.collect.ImmutableEnumSet",
193:       "com.google.common.collect.Lists$RandomAccessListWrapper",
194:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
195:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
196:       "com.google.common.base.CharMatcher$BitSetMatcher",
197:       "com.google.common.base.CharMatcher$RangesMatcher",
198:       "org.objectweb.asm.ClassVisitor",
199:       "com.google.common.base.CharMatcher$JavaUpperCase",
200:       "com.google.common.collect.ImmutableCollection$Builder",
201:       "com.google.common.base.Converter",
202:       "com.google.common.collect.ImmutableSetMultimap",
203:       "com.google.errorprone.annotations.DoNotMock",
204:       "com.google.common.collect.Maps$8",
205:       "com.google.common.collect.BiMap",
206:       "com.google.common.base.Function",
207:       "com.google.common.collect.ImmutableSet",
208:       "com.google.common.collect.Iterators$9",
209:       "com.google.common.collect.Lists$AbstractListWrapper",
210:       "com.google.common.collect.ImmutableMap",
211:       "com.google.common.collect.AbstractIndexedListIterator",
212:       "com.google.common.collect.CollectPreconditions",
213:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
214:       "com.google.common.base.CharMatcher$NamedFastMatcher",
215:       "com.google.common.collect.Iterators$1",
216:       "com.google.common.collect.CompactHashMap",
217:       "com.google.common.truth.Subject",
218:       "com.google.common.collect.Sets",
219:       "com.google.common.primitives.Ints$IntConverter",
220:       "com.google.common.collect.Iterators$4",
221:       "com.google.common.collect.Iterators$5",
222:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
223:       "org.objectweb.asm.ClassReader",
224:       "com.google.common.truth.Platform",
225:       "com.google.common.base.CharMatcher$Is",
226:       "com.google.common.collect.Lists$StringAsImmutableList",
227:       "com.google.common.collect.Lists$2",
228:       "com.google.common.base.CharMatcher$SingleWidth",
229:       "com.google.common.base.CharMatcher$JavaLowerCase",
230:       "com.google.common.truth.LazyMessage",
231:       "com.google.common.collect.ImmutableList$Builder",
232:       "com.google.common.collect.Lists$1",
233:       "com.google.common.collect.ImmutableMultimap$Builder",
234:       "com.google.common.truth.Subject$ComparisonResult",
235:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
236:       "com.google.common.collect.Multiset",
237:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
238:       "com.google.common.collect.AbstractMultimap",
239:       "com.google.common.base.Supplier",
240:       "com.google.common.collect.Multimap",
241:       "com.google.common.collect.Iterators",
242:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
243:       "com.google.common.collect.ImmutableList",
244:       "com.google.common.collect.FluentIterable$1",
245:       "com.google.common.base.Suppliers",
246:       "com.google.common.collect.FluentIterable$2",
247:       "com.google.common.truth.ThrowableSubject$1",
248:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
249:       "com.google.common.truth.Fact",
250:       "com.google.common.collect.FluentIterable$3",
251:       "com.google.common.base.VerifyException",
252:       "com.google.common.base.CharMatcher$Negated",
253:       "com.google.common.truth.ActualValueInference$DescribedEntry",
254:       "com.google.common.base.CaseFormat",
255:       "com.google.common.base.Ascii",
256:       "com.google.common.truth.ActualValueInference$SubjectEntry",
257:       "com.google.common.base.CharMatcher$Ascii",
258:       "com.google.common.truth.StandardSubjectBuilder",
259:       "com.google.common.collect.Maps",
260:       "com.google.common.primitives.Ints",
261:       "com.google.common.truth.StringSubject",
262:       "com.google.common.collect.SetMultimap",
263:       "com.google.common.base.CharMatcher$Or",
264:       "com.google.common.base.CaseFormat$StringConverter",
265:       "com.google.common.collect.Maps$EntryTransformer",
266:       "com.google.common.collect.FluentIterable$3$1",
267:       "com.google.common.truth.FailureStrategy",
268:       "com.google.common.base.CharMatcher$Digit",
269:       "com.google.common.collect.Iterators$MergingIterator",
270:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
271:       "com.google.common.collect.RegularImmutableSortedSet",
272:       "com.google.common.truth.ActualValueInference$StackEntry"
273:     );
274:   } 
275:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
276:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()));
277:   }
278: 
279:   private static void resetClasses() {
280:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
281: 
282:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
283:       "com.google.common.truth.Subject",
284:       "com.google.common.truth.ThrowableSubject",
285:       "com.google.common.truth.ThrowableSubject$1",
286:       "com.google.common.truth.FailureMetadata",
287:       "com.google.common.collect.ImmutableCollection",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.AbstractIndexedListIterator",
291:       "com.google.common.collect.ImmutableList$Itr",
292:       "com.google.common.collect.RegularImmutableList",
293:       "com.google.common.base.Preconditions",
294:       "com.google.common.collect.ImmutableList",
295:       "com.google.common.truth.FailureMetadata$Step",
296:       "com.google.common.truth.SubjectUtils",
297:       "com.google.common.collect.ImmutableCollection$Builder",
298:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
299:       "com.google.common.collect.ImmutableList$Builder",
300:       "com.google.common.collect.CollectPreconditions",
301:       "com.google.common.truth.Subject$ComparisonResult",
302:       "com.google.common.truth.LazyMessage",
303:       "com.google.common.truth.StandardSubjectBuilder",
304:       "com.google.common.truth.ComparableSubject",
305:       "com.google.common.truth.StringSubject",
306:       "com.google.common.collect.Iterables",
307:       "com.google.common.collect.Collections2",
308:       "com.google.common.truth.Fact",
309:       "com.google.common.truth.AssertionErrorWithFacts",
310:       "com.google.common.base.Strings",
311:       "com.google.common.base.Suppliers",
312:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
313:       "com.google.common.truth.Platform",
314:       "com.google.common.collect.ImmutableSet",
315:       "com.google.common.collect.SingletonImmutableSet",
316:       "com.google.common.collect.ObjectArrays",
317:       "com.google.common.collect.Hashing",
318:       "com.google.common.collect.RegularImmutableSet",
319:       "com.google.common.truth.StackTraceCleaner",
320:       "com.google.common.collect.Sets",
321:       "com.google.common.collect.Maps",
322:       "com.google.common.base.MoreObjects",
323:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
324:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
325:       "com.google.common.base.Joiner",
326:       "com.google.common.base.Joiner$3",
327:       "com.google.common.truth.ActualValueInference",
328:       "org.objectweb.asm.ClassVisitor",
329:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
330:       "com.google.common.collect.AbstractMultimap",
331:       "com.google.common.collect.BaseImmutableMultimap",
332:       "com.google.common.collect.ImmutableMultimap",
333:       "com.google.common.collect.ImmutableSetMultimap",
334:       "com.google.common.collect.ImmutableMultimap$Builder",
335:       "com.google.common.collect.ImmutableSetMultimap$Builder",
336:       "com.google.common.collect.Platform",
337:       "com.google.common.collect.CompactHashMap",
338:       "com.google.common.primitives.IntsMethodsForWeb",
339:       "com.google.common.primitives.Ints",
340:       "org.objectweb.asm.ClassReader",
341:       "com.google.common.base.CharMatcher",
342:       "com.google.common.base.CharMatcher$FastMatcher",
343:       "com.google.common.base.CharMatcher$Is",
344:       "com.google.common.base.CharMatcher$InRange",
345:       "com.google.common.base.CaseFormat",
346:       "com.google.common.base.Ascii",
347:       "com.google.common.base.Verify",
348:       "com.google.common.collect.FluentIterable",
349:       "com.google.common.collect.FluentIterable$3",
350:       "com.google.common.base.Optional",
351:       "com.google.common.base.Absent",
352:       "com.google.common.collect.FluentIterable$3$1",
353:       "com.google.common.collect.Iterators",
354:       "com.google.common.collect.Iterators$ConcatenatedIterator",
355:       "com.google.common.collect.Iterators$ArrayItr",
356:       "com.google.common.base.Converter",
357:       "com.google.common.base.Converter$IdentityConverter",
358:       "com.google.common.base.Converter$FunctionBasedConverter",
359:       "com.google.common.truth.ComparisonFailures",
360:       "com.google.common.base.Splitter",
361:       "com.google.common.base.Platform$JdkPatternCompiler",
362:       "com.google.common.base.Platform",
363:       "com.google.common.base.CommonPattern",
364:       "com.google.common.base.JdkPattern",
365:       "com.google.common.base.CommonMatcher",
366:       "com.google.common.base.JdkPattern$JdkMatcher",
367:       "com.google.common.base.Splitter$3",
368:       "com.google.common.base.CharMatcher$NamedFastMatcher",
369:       "com.google.common.base.CharMatcher$None",
370:       "com.google.common.base.Splitter$5",
371:       "com.google.common.base.AbstractIterator",
372:       "com.google.common.base.Splitter$SplittingIterator",
373:       "com.google.common.base.Splitter$3$1",
374:       "com.google.common.base.AbstractIterator$State",
375:       "com.google.common.base.AbstractIterator$1",
376:       "com.google.common.base.NullnessCasts",
377:       "com.google.common.truth.DiffUtils",
378:       "com.google.common.truth.Platform$PlatformComparisonFailure",
379:       "com.google.common.truth.ComparisonFailureWithFacts",
380:       "com.google.common.truth.Subject$EqualityCheck",
381:       "com.google.common.collect.Lists",
382:       "com.google.common.collect.Lists$OnePlusArrayList",
383:       "com.google.common.math.IntMath",
384:       "com.google.common.base.Converter$ConverterComposition",
385:       "com.google.common.base.Converter$ReverseConverter",
386:       "com.google.common.base.Converter$1",
387:       "com.google.common.collect.Iterators$9",
388:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
389:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
390:     );
391:   }
392: }

[MASTER] 16:13:19.722 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();
ImmutableList<String> immutableList0 = ImmutableList.of("com.google.common.base.CharMatcher$None");
ArrayList<Fact> arrayList0 = new ArrayList<Fact>();
Iterator<Fact> iterator0 = arrayList0.iterator();
ImmutableList<Fact> immutableList1 = ImmutableList.copyOf((Iterator<? extends Fact>) iterator0);
AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLInvalidAuthorizationSpecException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0, "com.google.common.base.CharMatcher$None");
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


[MASTER] 16:13:19.808 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1731035599723/com/google/common/truth/ThrowableSubject_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1731035599723/com/google/common/truth/ThrowableSubject_3_tmp__ESTest_scaffolding.java]]
[MASTER] 16:13:19.808 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.808 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkPositionIndexes
  location: class: 22
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 21
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkElementIndex
  location: class: 20
[MASTER] 16:13:19.809 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:13:19.810 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:13:19.811 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:13:19.811 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:13:19.812 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1731035599723/com/google/common/truth/ThrowableSubject_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:13:19 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.AssertionErrorWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.ClientInfoStatus;
19: import java.sql.SQLClientInfoException;
20: import java.sql.SQLRecoverableException;
21: import java.util.HashMap;
22: import org.evosuite.runtime.EvoRunner;
23: import org.evosuite.runtime.EvoRunnerParameters;
24: import org.evosuite.runtime.ViolatedAssumptionAnswer;
25: import org.junit.runner.RunWith;
26: 
27: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
28: public class ThrowableSubject_3_tmp__ESTest extends ThrowableSubject_3_tmp__ESTest_scaffolding {
29: 
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
33:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
34:       ImmutableList<String> immutableList0 = ImmutableList.of("", "", "", "", "@1wLvx/d)", "-H_]Ifs@ \"FCWE=H", "", "");
35:       Fact fact0 = Fact.simpleFact("@1wLvx/d)");
36:       ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0);
37:       HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
38:       SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
39:       SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("", hashMap0, sQLRecoverableException0);
40:       AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLClientInfoException0);
41:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
42:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
43:       assertNotNull(stringSubject0);
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_3_1731035599723/com/google/common/truth/ThrowableSubject_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:13:19 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_3_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
87:       "com.google.common.base.CharMatcher$Whitespace",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.base.CharMatcher$ForPredicate",
90:       "com.google.common.truth.ErrorWithFacts",
91:       "com.google.common.collect.PeekingIterator",
92:       "com.google.common.collect.RegularImmutableList",
93:       "com.google.common.truth.StackTraceCleaner",
94:       "com.google.common.truth.SubjectUtils",
95:       "com.google.common.base.CharMatcher$JavaDigit",
96:       "com.google.common.collect.FluentIterable",
97:       "com.google.common.base.Optional",
98:       "com.google.common.collect.Lists$TransformingRandomAccessList",
99:       "com.google.common.collect.Sets$2",
100:       "com.google.common.collect.Iterators$ArrayItr",
101:       "com.google.common.collect.Sets$3",
102:       "com.google.common.truth.ThrowableSubject",
103:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
104:       "com.google.common.collect.Sets$1",
105:       "com.google.common.base.CharMatcher$IsNot",
106:       "com.google.common.base.CharMatcher$InRange",
107:       "com.google.common.base.CharMatcher$JavaLetter",
108:       "com.google.common.collect.Platform",
109:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
110:       "com.google.common.base.Verify",
111:       "com.google.common.collect.BaseImmutableMultimap",
112:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
113:       "com.google.common.collect.ImmutableMultimap$Values",
114:       "com.google.common.collect.Range",
115:       "com.google.common.collect.SortedMapDifference",
116:       "com.google.common.collect.RegularImmutableSet",
117:       "com.google.common.collect.Iterators$10",
118:       "com.google.common.truth.Subject$EqualityCheck",
119:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
120:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
121:       "com.google.common.base.Predicate",
122:       "com.google.common.base.CharMatcher$IsEither",
123:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
124:       "com.google.common.collect.ImmutableListMultimap",
125:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
126:       "com.google.common.collect.ImmutableMultimap$1",
127:       "com.google.common.base.CharMatcher$Invisible",
128:       "com.google.common.base.CharMatcher$None",
129:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
130:       "com.google.common.base.Present",
131:       "com.google.common.base.Joiner",
132:       "com.google.common.collect.ImmutableMultimap$2",
133:       "com.google.common.collect.Iterators$ConcatenatedIterator",
134:       "com.google.common.collect.Iterables",
135:       "com.google.common.base.CharMatcher$Any",
136:       "com.google.common.collect.Sets$SetView",
137:       "com.google.common.collect.ImmutableSet$Builder",
138:       "com.google.common.collect.SingletonImmutableSet",
139:       "com.google.common.collect.ImmutableSetMultimap$Builder",
140:       "com.google.common.truth.AssertionErrorWithFacts",
141:       "com.google.common.base.Strings",
142:       "com.google.common.collect.Lists$Partition",
143:       "com.google.common.collect.Lists",
144:       "com.google.common.truth.ActualValueInference$InferredType",
145:       "com.google.common.collect.ImmutableMultiset",
146:       "com.google.common.collect.UnmodifiableListIterator",
147:       "com.google.common.truth.ComparableSubject",
148:       "com.google.common.collect.ImmutableMultimap$Keys",
149:       "com.google.common.collect.ImmutableMultimap",
150:       "com.google.common.truth.FailureMetadata",
151:       "com.google.common.truth.FailureMetadata$Step",
152:       "com.google.common.collect.Lists$TransformingSequentialList",
153:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
154:       "com.google.common.collect.ImmutableSortedSet",
155:       "com.google.common.primitives.IntsMethodsForWeb",
156:       "com.google.common.collect.Sets$4",
157:       "com.google.common.collect.RangeGwtSerializationDependencies",
158:       "com.google.common.base.Absent",
159:       "com.google.common.collect.ObjectArrays",
160:       "com.google.common.collect.Maps$BiMapConverter",
161:       "com.google.common.base.CaseFormat$1",
162:       "com.google.common.base.CaseFormat$2",
163:       "com.google.common.base.CaseFormat$3",
164:       "com.google.common.base.CharMatcher",
165:       "com.google.common.collect.AbstractIterator",
166:       "com.google.common.base.MoreObjects",
167:       "com.google.common.base.CaseFormat$4",
168:       "com.google.common.base.CaseFormat$5",
169:       "com.google.common.collect.ImmutableSortedSet$Builder",
170:       "com.google.common.base.CharMatcher$And",
171:       "com.google.common.base.Suppliers$MemoizingSupplier",
172:       "com.google.common.collect.MapDifference",
173:       "com.google.common.collect.SortedIterable",
174:       "com.google.common.base.CharMatcher$AnyOf",
175:       "com.google.common.base.Preconditions",
176:       "com.google.common.collect.UnmodifiableIterator",
177:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
178:       "com.google.common.base.CharMatcher$1",
179:       "com.google.common.truth.StandardSubjectBuilder$1",
180:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
181:       "com.google.common.base.CharMatcher$FastMatcher",
182:       "com.google.common.base.Joiner$1",
183:       "com.google.common.base.CharMatcher$JavaIsoControl",
184:       "com.google.common.base.Joiner$2",
185:       "org.objectweb.asm.MethodVisitor",
186:       "com.google.common.collect.EmptyImmutableSetMultimap",
187:       "com.google.common.collect.ImmutableList$Itr",
188:       "com.google.common.truth.ActualValueInference",
189:       "com.google.common.collect.ImmutableCollection",
190:       "com.google.common.collect.ImmutableEnumMap",
191:       "com.google.common.base.Joiner$3",
192:       "com.google.common.collect.ImmutableEnumSet",
193:       "com.google.common.collect.Lists$RandomAccessListWrapper",
194:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
195:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
196:       "com.google.common.base.CharMatcher$BitSetMatcher",
197:       "com.google.common.base.CharMatcher$RangesMatcher",
198:       "org.objectweb.asm.ClassVisitor",
199:       "com.google.common.base.CharMatcher$JavaUpperCase",
200:       "com.google.common.collect.ImmutableCollection$Builder",
201:       "com.google.common.base.Converter",
202:       "com.google.common.collect.ImmutableSetMultimap",
203:       "com.google.errorprone.annotations.DoNotMock",
204:       "com.google.common.collect.Maps$8",
205:       "com.google.common.collect.BiMap",
206:       "com.google.common.base.Function",
207:       "com.google.common.collect.ImmutableSet",
208:       "com.google.common.collect.Iterators$9",
209:       "com.google.common.collect.Lists$AbstractListWrapper",
210:       "com.google.common.collect.ImmutableMap",
211:       "com.google.common.collect.AbstractIndexedListIterator",
212:       "com.google.common.collect.CollectPreconditions",
213:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
214:       "com.google.common.base.CharMatcher$NamedFastMatcher",
215:       "com.google.common.collect.Iterators$1",
216:       "com.google.common.collect.CompactHashMap",
217:       "com.google.common.truth.Subject",
218:       "com.google.common.collect.Sets",
219:       "com.google.common.primitives.Ints$IntConverter",
220:       "com.google.common.collect.Iterators$4",
221:       "com.google.common.collect.Iterators$5",
222:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
223:       "org.objectweb.asm.ClassReader",
224:       "com.google.common.truth.Platform",
225:       "com.google.common.base.CharMatcher$Is",
226:       "com.google.common.collect.Lists$StringAsImmutableList",
227:       "com.google.common.collect.Lists$2",
228:       "com.google.common.base.CharMatcher$SingleWidth",
229:       "com.google.common.base.CharMatcher$JavaLowerCase",
230:       "com.google.common.truth.LazyMessage",
231:       "com.google.common.collect.ImmutableList$Builder",
232:       "com.google.common.collect.Lists$1",
233:       "com.google.common.collect.ImmutableMultimap$Builder",
234:       "com.google.common.truth.Subject$ComparisonResult",
235:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
236:       "com.google.common.collect.Multiset",
237:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
238:       "com.google.common.collect.AbstractMultimap",
239:       "com.google.common.base.Supplier",
240:       "com.google.common.collect.Multimap",
241:       "com.google.common.collect.Iterators",
242:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
243:       "com.google.common.collect.ImmutableList",
244:       "com.google.common.collect.FluentIterable$1",
245:       "com.google.common.base.Suppliers",
246:       "com.google.common.collect.FluentIterable$2",
247:       "com.google.common.truth.ThrowableSubject$1",
248:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
249:       "com.google.common.truth.Fact",
250:       "com.google.common.collect.FluentIterable$3",
251:       "com.google.common.base.VerifyException",
252:       "com.google.common.base.CharMatcher$Negated",
253:       "com.google.common.truth.ActualValueInference$DescribedEntry",
254:       "com.google.common.base.CaseFormat",
255:       "com.google.common.base.Ascii",
256:       "com.google.common.truth.ActualValueInference$SubjectEntry",
257:       "com.google.common.base.CharMatcher$Ascii",
258:       "com.google.common.truth.StandardSubjectBuilder",
259:       "com.google.common.collect.Maps",
260:       "com.google.common.primitives.Ints",
261:       "com.google.common.truth.StringSubject",
262:       "com.google.common.collect.SetMultimap",
263:       "com.google.common.base.CharMatcher$Or",
264:       "com.google.common.base.CaseFormat$StringConverter",
265:       "com.google.common.collect.Maps$EntryTransformer",
266:       "com.google.common.collect.FluentIterable$3$1",
267:       "com.google.common.truth.FailureStrategy",
268:       "com.google.common.base.CharMatcher$Digit",
269:       "com.google.common.collect.Iterators$MergingIterator",
270:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
271:       "com.google.common.collect.RegularImmutableSortedSet",
272:       "com.google.common.truth.ActualValueInference$StackEntry"
273:     );
274:   } 
275:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
276:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_3_tmp__ESTest_scaffolding.class.getClassLoader()));
277:   }
278: 
279:   private static void resetClasses() {
280:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
281: 
282:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
283:       "com.google.common.truth.Subject",
284:       "com.google.common.truth.ThrowableSubject",
285:       "com.google.common.truth.ThrowableSubject$1",
286:       "com.google.common.truth.FailureMetadata",
287:       "com.google.common.collect.ImmutableCollection",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.AbstractIndexedListIterator",
291:       "com.google.common.collect.ImmutableList$Itr",
292:       "com.google.common.collect.RegularImmutableList",
293:       "com.google.common.base.Preconditions",
294:       "com.google.common.collect.ImmutableList",
295:       "com.google.common.truth.FailureMetadata$Step",
296:       "com.google.common.truth.SubjectUtils",
297:       "com.google.common.collect.ImmutableCollection$Builder",
298:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
299:       "com.google.common.collect.ImmutableList$Builder",
300:       "com.google.common.collect.CollectPreconditions",
301:       "com.google.common.truth.Subject$ComparisonResult",
302:       "com.google.common.truth.LazyMessage",
303:       "com.google.common.truth.StandardSubjectBuilder",
304:       "com.google.common.truth.ComparableSubject",
305:       "com.google.common.truth.StringSubject",
306:       "com.google.common.collect.Iterables",
307:       "com.google.common.collect.Collections2",
308:       "com.google.common.truth.Fact",
309:       "com.google.common.truth.AssertionErrorWithFacts",
310:       "com.google.common.base.Strings",
311:       "com.google.common.base.Suppliers",
312:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
313:       "com.google.common.truth.Platform",
314:       "com.google.common.collect.ImmutableSet",
315:       "com.google.common.collect.SingletonImmutableSet",
316:       "com.google.common.collect.ObjectArrays",
317:       "com.google.common.collect.Hashing",
318:       "com.google.common.collect.RegularImmutableSet",
319:       "com.google.common.truth.StackTraceCleaner",
320:       "com.google.common.collect.Sets",
321:       "com.google.common.collect.Maps",
322:       "com.google.common.base.MoreObjects",
323:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
324:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
325:       "com.google.common.base.Joiner",
326:       "com.google.common.base.Joiner$3",
327:       "com.google.common.truth.ActualValueInference",
328:       "org.objectweb.asm.ClassVisitor",
329:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
330:       "com.google.common.collect.AbstractMultimap",
331:       "com.google.common.collect.BaseImmutableMultimap",
332:       "com.google.common.collect.ImmutableMultimap",
333:       "com.google.common.collect.ImmutableSetMultimap",
334:       "com.google.common.collect.ImmutableMultimap$Builder",
335:       "com.google.common.collect.ImmutableSetMultimap$Builder",
336:       "com.google.common.collect.Platform",
337:       "com.google.common.collect.CompactHashMap",
338:       "com.google.common.primitives.IntsMethodsForWeb",
339:       "com.google.common.primitives.Ints",
340:       "org.objectweb.asm.ClassReader",
341:       "com.google.common.base.CharMatcher",
342:       "com.google.common.base.CharMatcher$FastMatcher",
343:       "com.google.common.base.CharMatcher$Is",
344:       "com.google.common.base.CharMatcher$InRange",
345:       "com.google.common.base.CaseFormat",
346:       "com.google.common.base.Ascii",
347:       "com.google.common.base.Verify",
348:       "com.google.common.collect.FluentIterable",
349:       "com.google.common.collect.FluentIterable$3",
350:       "com.google.common.base.Optional",
351:       "com.google.common.base.Absent",
352:       "com.google.common.collect.FluentIterable$3$1",
353:       "com.google.common.collect.Iterators",
354:       "com.google.common.collect.Iterators$ConcatenatedIterator",
355:       "com.google.common.collect.Iterators$ArrayItr",
356:       "com.google.common.base.Converter",
357:       "com.google.common.base.Converter$IdentityConverter",
358:       "com.google.common.base.Converter$FunctionBasedConverter",
359:       "com.google.common.truth.ComparisonFailures",
360:       "com.google.common.base.Splitter",
361:       "com.google.common.base.Platform$JdkPatternCompiler",
362:       "com.google.common.base.Platform",
363:       "com.google.common.base.CommonPattern",
364:       "com.google.common.base.JdkPattern",
365:       "com.google.common.base.CommonMatcher",
366:       "com.google.common.base.JdkPattern$JdkMatcher",
367:       "com.google.common.base.Splitter$3",
368:       "com.google.common.base.CharMatcher$NamedFastMatcher",
369:       "com.google.common.base.CharMatcher$None",
370:       "com.google.common.base.Splitter$5",
371:       "com.google.common.base.AbstractIterator",
372:       "com.google.common.base.Splitter$SplittingIterator",
373:       "com.google.common.base.Splitter$3$1",
374:       "com.google.common.base.AbstractIterator$State",
375:       "com.google.common.base.AbstractIterator$1",
376:       "com.google.common.base.NullnessCasts",
377:       "com.google.common.truth.DiffUtils",
378:       "com.google.common.truth.Platform$PlatformComparisonFailure",
379:       "com.google.common.truth.ComparisonFailureWithFacts",
380:       "com.google.common.truth.Subject$EqualityCheck",
381:       "com.google.common.collect.Lists",
382:       "com.google.common.collect.Lists$OnePlusArrayList",
383:       "com.google.common.math.IntMath",
384:       "com.google.common.base.Converter$ConverterComposition",
385:       "com.google.common.base.Converter$ReverseConverter",
386:       "com.google.common.base.Converter$1",
387:       "com.google.common.collect.Iterators$9",
388:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
389:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
390:     );
391:   }
392: }

[MASTER] 16:13:19.812 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
ImmutableList<String> immutableList0 = ImmutableList.of("", "", "", "", "@1wLvx/d)", "-H_]Ifs@ \"FCWE=H", "", "");
Fact fact0 = Fact.simpleFact("@1wLvx/d)");
ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0);
HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("", hashMap0, sQLRecoverableException0);
AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLClientInfoException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0);
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


[MASTER] 16:13:19.869 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1731035599814/com/google/common/truth/ThrowableSubject_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1731035599814/com/google/common/truth/ThrowableSubject_4_tmp__ESTest_scaffolding.java]]
[MASTER] 16:13:19.870 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.870 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:13:19.870 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:13:19.870 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:13:19.870 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkPositionIndexes
  location: class: 22
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 21
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkElementIndex
  location: class: 20
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:13:19.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:13:19.872 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1731035599814/com/google/common/truth/ThrowableSubject_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:13:19 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.AssertionErrorWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.ThrowableSubject;
17: import java.sql.ClientInfoStatus;
18: import java.sql.SQLClientInfoException;
19: import java.sql.SQLRecoverableException;
20: import java.util.HashMap;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.evosuite.runtime.ViolatedAssumptionAnswer;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class ThrowableSubject_4_tmp__ESTest extends ThrowableSubject_4_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
32:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
33:       ImmutableList<String> immutableList0 = ImmutableList.of("", "@lzN.O", "", "HU,QU*>kUkFS", "@1wLvx/d)", "-H_]Ifs@ \"FCWE=H", "HU,QU*>kUkFS", "HU,QU*>kUkFS");
34:       Fact fact0 = Fact.simpleFact("");
35:       ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0);
36:       HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
37:       SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
38:       SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("@lzN.O", hashMap0, sQLRecoverableException0);
39:       AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLClientInfoException0);
40:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0, "@1wLvx/d)");
41:       ThrowableSubject throwableSubject1 = throwableSubject0.hasCauseThat();
42:       assertNotSame(throwableSubject0, throwableSubject1);
43:   }
44: }
RegularFileObject[/tmp/EvoSuite_4_1731035599814/com/google/common/truth/ThrowableSubject_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:13:19 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_4_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
87:       "com.google.common.base.CharMatcher$Whitespace",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.base.CharMatcher$ForPredicate",
90:       "com.google.common.truth.ErrorWithFacts",
91:       "com.google.common.collect.PeekingIterator",
92:       "com.google.common.collect.RegularImmutableList",
93:       "com.google.common.truth.StackTraceCleaner",
94:       "com.google.common.truth.SubjectUtils",
95:       "com.google.common.base.CharMatcher$JavaDigit",
96:       "com.google.common.collect.FluentIterable",
97:       "com.google.common.base.Optional",
98:       "com.google.common.collect.Lists$TransformingRandomAccessList",
99:       "com.google.common.collect.Sets$2",
100:       "com.google.common.collect.Iterators$ArrayItr",
101:       "com.google.common.collect.Sets$3",
102:       "com.google.common.truth.ThrowableSubject",
103:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
104:       "com.google.common.collect.Sets$1",
105:       "com.google.common.base.CharMatcher$IsNot",
106:       "com.google.common.base.CharMatcher$InRange",
107:       "com.google.common.base.CharMatcher$JavaLetter",
108:       "com.google.common.collect.Platform",
109:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
110:       "com.google.common.base.Verify",
111:       "com.google.common.collect.BaseImmutableMultimap",
112:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
113:       "com.google.common.collect.ImmutableMultimap$Values",
114:       "com.google.common.collect.Range",
115:       "com.google.common.collect.SortedMapDifference",
116:       "com.google.common.collect.RegularImmutableSet",
117:       "com.google.common.collect.Iterators$10",
118:       "com.google.common.truth.Subject$EqualityCheck",
119:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
120:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
121:       "com.google.common.base.Predicate",
122:       "com.google.common.base.CharMatcher$IsEither",
123:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
124:       "com.google.common.collect.ImmutableListMultimap",
125:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
126:       "com.google.common.collect.ImmutableMultimap$1",
127:       "com.google.common.base.CharMatcher$Invisible",
128:       "com.google.common.base.CharMatcher$None",
129:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
130:       "com.google.common.base.Present",
131:       "com.google.common.base.Joiner",
132:       "com.google.common.collect.ImmutableMultimap$2",
133:       "com.google.common.collect.Iterators$ConcatenatedIterator",
134:       "com.google.common.collect.Iterables",
135:       "com.google.common.base.CharMatcher$Any",
136:       "com.google.common.collect.Sets$SetView",
137:       "com.google.common.collect.ImmutableSet$Builder",
138:       "com.google.common.collect.SingletonImmutableSet",
139:       "com.google.common.collect.ImmutableSetMultimap$Builder",
140:       "com.google.common.truth.AssertionErrorWithFacts",
141:       "com.google.common.base.Strings",
142:       "com.google.common.collect.Lists$Partition",
143:       "com.google.common.collect.Lists",
144:       "com.google.common.truth.ActualValueInference$InferredType",
145:       "com.google.common.collect.ImmutableMultiset",
146:       "com.google.common.collect.UnmodifiableListIterator",
147:       "com.google.common.truth.ComparableSubject",
148:       "com.google.common.collect.ImmutableMultimap$Keys",
149:       "com.google.common.collect.ImmutableMultimap",
150:       "com.google.common.truth.FailureMetadata",
151:       "com.google.common.truth.FailureMetadata$Step",
152:       "com.google.common.collect.Lists$TransformingSequentialList",
153:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
154:       "com.google.common.collect.ImmutableSortedSet",
155:       "com.google.common.primitives.IntsMethodsForWeb",
156:       "com.google.common.collect.Sets$4",
157:       "com.google.common.collect.RangeGwtSerializationDependencies",
158:       "com.google.common.base.Absent",
159:       "com.google.common.collect.ObjectArrays",
160:       "com.google.common.collect.Maps$BiMapConverter",
161:       "com.google.common.base.CaseFormat$1",
162:       "com.google.common.base.CaseFormat$2",
163:       "com.google.common.base.CaseFormat$3",
164:       "com.google.common.base.CharMatcher",
165:       "com.google.common.collect.AbstractIterator",
166:       "com.google.common.base.MoreObjects",
167:       "com.google.common.base.CaseFormat$4",
168:       "com.google.common.base.CaseFormat$5",
169:       "com.google.common.collect.ImmutableSortedSet$Builder",
170:       "com.google.common.base.CharMatcher$And",
171:       "com.google.common.base.Suppliers$MemoizingSupplier",
172:       "com.google.common.collect.MapDifference",
173:       "com.google.common.collect.SortedIterable",
174:       "com.google.common.base.CharMatcher$AnyOf",
175:       "com.google.common.base.Preconditions",
176:       "com.google.common.collect.UnmodifiableIterator",
177:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
178:       "com.google.common.base.CharMatcher$1",
179:       "com.google.common.truth.StandardSubjectBuilder$1",
180:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
181:       "com.google.common.base.CharMatcher$FastMatcher",
182:       "com.google.common.base.Joiner$1",
183:       "com.google.common.base.CharMatcher$JavaIsoControl",
184:       "com.google.common.base.Joiner$2",
185:       "org.objectweb.asm.MethodVisitor",
186:       "com.google.common.collect.EmptyImmutableSetMultimap",
187:       "com.google.common.collect.ImmutableList$Itr",
188:       "com.google.common.truth.ActualValueInference",
189:       "com.google.common.collect.ImmutableCollection",
190:       "com.google.common.collect.ImmutableEnumMap",
191:       "com.google.common.base.Joiner$3",
192:       "com.google.common.collect.ImmutableEnumSet",
193:       "com.google.common.collect.Lists$RandomAccessListWrapper",
194:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
195:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
196:       "com.google.common.base.CharMatcher$BitSetMatcher",
197:       "com.google.common.base.CharMatcher$RangesMatcher",
198:       "org.objectweb.asm.ClassVisitor",
199:       "com.google.common.base.CharMatcher$JavaUpperCase",
200:       "com.google.common.collect.ImmutableCollection$Builder",
201:       "com.google.common.base.Converter",
202:       "com.google.common.collect.ImmutableSetMultimap",
203:       "com.google.errorprone.annotations.DoNotMock",
204:       "com.google.common.collect.Maps$8",
205:       "com.google.common.collect.BiMap",
206:       "com.google.common.base.Function",
207:       "com.google.common.collect.ImmutableSet",
208:       "com.google.common.collect.Iterators$9",
209:       "com.google.common.collect.Lists$AbstractListWrapper",
210:       "com.google.common.collect.ImmutableMap",
211:       "com.google.common.collect.AbstractIndexedListIterator",
212:       "com.google.common.collect.CollectPreconditions",
213:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
214:       "com.google.common.base.CharMatcher$NamedFastMatcher",
215:       "com.google.common.collect.Iterators$1",
216:       "com.google.common.collect.CompactHashMap",
217:       "com.google.common.truth.Subject",
218:       "com.google.common.collect.Sets",
219:       "com.google.common.primitives.Ints$IntConverter",
220:       "com.google.common.collect.Iterators$4",
221:       "com.google.common.collect.Iterators$5",
222:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
223:       "org.objectweb.asm.ClassReader",
224:       "com.google.common.truth.Platform",
225:       "com.google.common.base.CharMatcher$Is",
226:       "com.google.common.collect.Lists$StringAsImmutableList",
227:       "com.google.common.collect.Lists$2",
228:       "com.google.common.base.CharMatcher$SingleWidth",
229:       "com.google.common.base.CharMatcher$JavaLowerCase",
230:       "com.google.common.truth.LazyMessage",
231:       "com.google.common.collect.ImmutableList$Builder",
232:       "com.google.common.collect.Lists$1",
233:       "com.google.common.collect.ImmutableMultimap$Builder",
234:       "com.google.common.truth.Subject$ComparisonResult",
235:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
236:       "com.google.common.collect.Multiset",
237:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
238:       "com.google.common.collect.AbstractMultimap",
239:       "com.google.common.base.Supplier",
240:       "com.google.common.collect.Multimap",
241:       "com.google.common.collect.Iterators",
242:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
243:       "com.google.common.collect.ImmutableList",
244:       "com.google.common.collect.FluentIterable$1",
245:       "com.google.common.base.Suppliers",
246:       "com.google.common.collect.FluentIterable$2",
247:       "com.google.common.truth.ThrowableSubject$1",
248:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
249:       "com.google.common.truth.Fact",
250:       "com.google.common.collect.FluentIterable$3",
251:       "com.google.common.base.VerifyException",
252:       "com.google.common.base.CharMatcher$Negated",
253:       "com.google.common.truth.ActualValueInference$DescribedEntry",
254:       "com.google.common.base.CaseFormat",
255:       "com.google.common.base.Ascii",
256:       "com.google.common.truth.ActualValueInference$SubjectEntry",
257:       "com.google.common.base.CharMatcher$Ascii",
258:       "com.google.common.truth.StandardSubjectBuilder",
259:       "com.google.common.collect.Maps",
260:       "com.google.common.primitives.Ints",
261:       "com.google.common.truth.StringSubject",
262:       "com.google.common.collect.SetMultimap",
263:       "com.google.common.base.CharMatcher$Or",
264:       "com.google.common.base.CaseFormat$StringConverter",
265:       "com.google.common.collect.Maps$EntryTransformer",
266:       "com.google.common.collect.FluentIterable$3$1",
267:       "com.google.common.truth.FailureStrategy",
268:       "com.google.common.base.CharMatcher$Digit",
269:       "com.google.common.collect.Iterators$MergingIterator",
270:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
271:       "com.google.common.collect.RegularImmutableSortedSet",
272:       "com.google.common.truth.ActualValueInference$StackEntry"
273:     );
274:   } 
275:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
276:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_4_tmp__ESTest_scaffolding.class.getClassLoader()));
277:   }
278: 
279:   private static void resetClasses() {
280:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
281: 
282:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
283:       "com.google.common.truth.Subject",
284:       "com.google.common.truth.ThrowableSubject",
285:       "com.google.common.truth.ThrowableSubject$1",
286:       "com.google.common.truth.FailureMetadata",
287:       "com.google.common.collect.ImmutableCollection",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.AbstractIndexedListIterator",
291:       "com.google.common.collect.ImmutableList$Itr",
292:       "com.google.common.collect.RegularImmutableList",
293:       "com.google.common.base.Preconditions",
294:       "com.google.common.collect.ImmutableList",
295:       "com.google.common.truth.FailureMetadata$Step",
296:       "com.google.common.truth.SubjectUtils",
297:       "com.google.common.collect.ImmutableCollection$Builder",
298:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
299:       "com.google.common.collect.ImmutableList$Builder",
300:       "com.google.common.collect.CollectPreconditions",
301:       "com.google.common.truth.Subject$ComparisonResult",
302:       "com.google.common.truth.LazyMessage",
303:       "com.google.common.truth.StandardSubjectBuilder",
304:       "com.google.common.truth.ComparableSubject",
305:       "com.google.common.truth.StringSubject",
306:       "com.google.common.collect.Iterables",
307:       "com.google.common.collect.Collections2",
308:       "com.google.common.truth.Fact",
309:       "com.google.common.truth.AssertionErrorWithFacts",
310:       "com.google.common.base.Strings",
311:       "com.google.common.base.Suppliers",
312:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
313:       "com.google.common.truth.Platform",
314:       "com.google.common.collect.ImmutableSet",
315:       "com.google.common.collect.SingletonImmutableSet",
316:       "com.google.common.collect.ObjectArrays",
317:       "com.google.common.collect.Hashing",
318:       "com.google.common.collect.RegularImmutableSet",
319:       "com.google.common.truth.StackTraceCleaner",
320:       "com.google.common.collect.Sets",
321:       "com.google.common.collect.Maps",
322:       "com.google.common.base.MoreObjects",
323:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
324:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
325:       "com.google.common.base.Joiner",
326:       "com.google.common.base.Joiner$3",
327:       "com.google.common.truth.ActualValueInference",
328:       "org.objectweb.asm.ClassVisitor",
329:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
330:       "com.google.common.collect.AbstractMultimap",
331:       "com.google.common.collect.BaseImmutableMultimap",
332:       "com.google.common.collect.ImmutableMultimap",
333:       "com.google.common.collect.ImmutableSetMultimap",
334:       "com.google.common.collect.ImmutableMultimap$Builder",
335:       "com.google.common.collect.ImmutableSetMultimap$Builder",
336:       "com.google.common.collect.Platform",
337:       "com.google.common.collect.CompactHashMap",
338:       "com.google.common.primitives.IntsMethodsForWeb",
339:       "com.google.common.primitives.Ints",
340:       "org.objectweb.asm.ClassReader",
341:       "com.google.common.base.CharMatcher",
342:       "com.google.common.base.CharMatcher$FastMatcher",
343:       "com.google.common.base.CharMatcher$Is",
344:       "com.google.common.base.CharMatcher$InRange",
345:       "com.google.common.base.CaseFormat",
346:       "com.google.common.base.Ascii",
347:       "com.google.common.base.Verify",
348:       "com.google.common.collect.FluentIterable",
349:       "com.google.common.collect.FluentIterable$3",
350:       "com.google.common.base.Optional",
351:       "com.google.common.base.Absent",
352:       "com.google.common.collect.FluentIterable$3$1",
353:       "com.google.common.collect.Iterators",
354:       "com.google.common.collect.Iterators$ConcatenatedIterator",
355:       "com.google.common.collect.Iterators$ArrayItr",
356:       "com.google.common.base.Converter",
357:       "com.google.common.base.Converter$IdentityConverter",
358:       "com.google.common.base.Converter$FunctionBasedConverter",
359:       "com.google.common.truth.ComparisonFailures",
360:       "com.google.common.base.Splitter",
361:       "com.google.common.base.Platform$JdkPatternCompiler",
362:       "com.google.common.base.Platform",
363:       "com.google.common.base.CommonPattern",
364:       "com.google.common.base.JdkPattern",
365:       "com.google.common.base.CommonMatcher",
366:       "com.google.common.base.JdkPattern$JdkMatcher",
367:       "com.google.common.base.Splitter$3",
368:       "com.google.common.base.CharMatcher$NamedFastMatcher",
369:       "com.google.common.base.CharMatcher$None",
370:       "com.google.common.base.Splitter$5",
371:       "com.google.common.base.AbstractIterator",
372:       "com.google.common.base.Splitter$SplittingIterator",
373:       "com.google.common.base.Splitter$3$1",
374:       "com.google.common.base.AbstractIterator$State",
375:       "com.google.common.base.AbstractIterator$1",
376:       "com.google.common.base.NullnessCasts",
377:       "com.google.common.truth.DiffUtils",
378:       "com.google.common.truth.Platform$PlatformComparisonFailure",
379:       "com.google.common.truth.ComparisonFailureWithFacts",
380:       "com.google.common.truth.Subject$EqualityCheck",
381:       "com.google.common.collect.Lists",
382:       "com.google.common.collect.Lists$OnePlusArrayList",
383:       "com.google.common.math.IntMath",
384:       "com.google.common.base.Converter$ConverterComposition",
385:       "com.google.common.base.Converter$ReverseConverter",
386:       "com.google.common.base.Converter$1",
387:       "com.google.common.collect.Iterators$9",
388:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
389:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
390:     );
391:   }
392: }

[MASTER] 16:13:19.872 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
ImmutableList<String> immutableList0 = ImmutableList.of("", "@lzN.O", "", "HU,QU*>kUkFS", "@1wLvx/d)", "-H_]Ifs@ \"FCWE=H", "HU,QU*>kUkFS", "HU,QU*>kUkFS");
Fact fact0 = Fact.simpleFact("");
ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0);
HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("@lzN.O", hashMap0, sQLRecoverableException0);
AssertionErrorWithFacts assertionErrorWithFacts0 = new AssertionErrorWithFacts(immutableList0, immutableList1, sQLClientInfoException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, assertionErrorWithFacts0, "@1wLvx/d)");
ThrowableSubject throwableSubject1 = throwableSubject0.hasCauseThat();
assertNotSame(throwableSubject0, throwableSubject1);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing tests to file
* Writing JUnit test case 'ThrowableSubject_ESTest' to evosuite-tests
* Done!

* Computation finished
