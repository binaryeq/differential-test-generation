/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 08 03:11:02 GMT 2024
 */

package com.google.common.truth;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class IterableSubject_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.ArrayListMultimap",
      "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.PeekingIterator",
      "com.google.common.collect.Multisets$MultisetIteratorImpl",
      "com.google.common.truth.SubjectUtils",
      "com.google.common.math.IntMath",
      "com.google.common.collect.LinkedHashMultiset",
      "com.google.common.truth.GraphMatching",
      "com.google.common.collect.AbstractMapBasedMultiset$2",
      "com.google.common.collect.Sets$2",
      "com.google.common.collect.Sets$3",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.Sets$1",
      "com.google.common.collect.Platform",
      "com.google.common.collect.NullsLastOrdering",
      "com.google.common.collect.RegularImmutableMultiset",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.RegularImmutableBiMap",
      "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.common.collect.ImmutableMultimap$Values",
      "com.google.common.collect.ByFunctionOrdering",
      "com.google.common.collect.AbstractSortedMultiset",
      "com.google.common.collect.Iterators$10",
      "com.google.common.collect.RegularImmutableMultiset$ElementSet",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.collect.ImmutableBiMap$Builder",
      "com.google.common.base.Predicate",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.base.Joiner",
      "com.google.common.collect.GeneralRange",
      "com.google.common.collect.AbstractListMultimap",
      "com.google.common.collect.NullsFirstOrdering",
      "com.google.common.truth.Correspondence$BinaryPredicate",
      "org.checkerframework.framework.qual.QualifierForLiterals",
      "com.google.common.truth.AssertionErrorWithFacts",
      "com.google.common.base.Strings",
      "com.google.common.truth.IterableSubject$3",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.Lists",
      "com.google.common.truth.IterableSubject$1",
      "com.google.common.truth.IterableSubject$4",
      "com.google.common.collect.Multisets$ImmutableEntry",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.TreeMultiset$AvlNode",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.collect.ObjectCountHashMap$MapEntry",
      "com.google.common.collect.TreeMultiset$2",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.base.Functions",
      "com.google.common.collect.Sets$4",
      "com.google.common.base.Absent",
      "com.google.common.collect.Maps$BiMapConverter",
      "org.checkerframework.framework.qual.SubtypeOf",
      "com.google.common.base.Throwables",
      "com.google.common.collect.ImmutableSortedSet$Builder",
      "com.google.common.base.Equivalence$Equals",
      "com.google.common.truth.Correspondence",
      "com.google.common.base.ElementTypesAreNonnullByDefault",
      "com.google.common.collect.AbstractMultiset$EntrySet",
      "com.google.common.base.Equivalence$Wrapper",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.truth.StandardSubjectBuilder$1",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.Converter$ConverterComposition",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "com.google.common.collect.HashBiMap$EntrySet",
      "com.google.common.base.Joiner$2",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "com.google.common.truth.Ordered",
      "com.google.common.collect.TreeMultiset",
      "com.google.common.collect.LinkedListMultimap$KeyList",
      "com.google.common.collect.Lists$OnePlusArrayList",
      "com.google.common.base.Objects",
      "com.google.common.collect.CompactHashMap$Itr",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.errorprone.annotations.DoNotMock",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.AbstractMapBasedMultiset",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.collect.Iterators$4",
      "com.google.common.collect.Iterators$5",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.collect.ImmutableMultimap$EntryCollection",
      "com.google.common.truth.Platform",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.collect.Lists$2",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
      "com.google.common.collect.CompactHashMap$EntrySetView",
      "com.google.common.truth.LazyMessage",
      "com.google.common.collect.Lists$1",
      "com.google.common.collect.ImmutableMultimap$Builder",
      "com.google.common.base.Equivalence$Identity",
      "com.google.common.truth.Subject$ComparisonResult",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.ImmutableSetMultimap$EntrySet",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.base.Supplier",
      "com.google.common.truth.IterableSubject$UsingCorrespondence",
      "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
      "com.google.common.collect.HashBiMap$View",
      "com.google.common.truth.IterableSubject$PairwiseChecker",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ReverseOrdering",
      "com.google.common.collect.FluentIterable$1",
      "com.google.common.collect.FluentIterable$2",
      "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
      "com.google.common.truth.Fact",
      "com.google.common.collect.FluentIterable$3",
      "org.checkerframework.checker.nullness.qual.Nullable",
      "com.google.common.collect.NullnessCasts",
      "org.checkerframework.framework.qual.DefaultFor",
      "com.google.common.truth.IterableSubject$ElementFactGrouping",
      "com.google.common.collect.SortedMultisetBridge",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.collect.HashBiMap",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.collect.ElementTypesAreNonnullByDefault",
      "com.google.common.collect.LinkedListMultimap$Node",
      "com.google.common.collect.TreeMultiset$Aggregate$2",
      "com.google.common.collect.TreeMultiset$Aggregate$1",
      "com.google.common.collect.AllEqualOrdering",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.collect.ListMultimap",
      "com.google.common.base.FunctionalEquivalence",
      "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
      "com.google.common.truth.ErrorWithFacts",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
      "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.SortedMultiset",
      "com.google.common.truth.IterableSubject",
      "com.google.common.collect.FluentIterable",
      "com.google.common.base.Optional",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.BaseImmutableMultimap",
      "com.google.common.collect.Multisets",
      "com.google.common.collect.CompactHashMap$MapEntry",
      "com.google.common.collect.AbstractMapBasedMultiset$Itr",
      "com.google.common.collect.RegularImmutableMap$EntrySet$1",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.collect.CompactHashMap$2",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.truth.Subject$EqualityCheck",
      "com.google.common.collect.LexicographicalOrdering",
      "com.google.common.collect.ImmutableListMultimap",
      "com.google.common.base.ParametricNullness",
      "com.google.common.collect.ImmutableMultimap$1",
      "com.google.common.base.Present",
      "com.google.common.collect.ImmutableMultimap$2",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.LinkedListMultimap$1",
      "com.google.common.collect.Sets$SetView",
      "com.google.common.collect.ImmutableSet$Builder",
      "com.google.common.truth.Correspondence$DiffFormatter",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.collect.ImmutableSetMultimap$Builder",
      "com.google.common.truth.Correspondence$Transforming",
      "com.google.common.truth.Correspondence$TolerantNumericEquality",
      "com.google.common.collect.ImmutableMultiset",
      "com.google.common.truth.Correspondence$ExceptionStore",
      "com.google.common.collect.UsingToStringOrdering",
      "com.google.common.truth.ComparableSubject",
      "com.google.common.collect.Multisets$AbstractEntry",
      "com.google.common.collect.ImmutableMultimap$Keys",
      "com.google.common.base.Functions$IdentityFunction",
      "com.google.common.truth.FailureMetadata",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.truth.Correspondence$FormattingDiffs",
      "com.google.common.truth.Correspondence$Equality",
      "com.google.common.base.MoreObjects",
      "com.google.common.collect.IndexedImmutableSet$1",
      "com.google.common.base.Suppliers$MemoizingSupplier",
      "com.google.common.collect.MapDifference",
      "com.google.common.collect.ObjectCountLinkedHashMap",
      "com.google.common.collect.SortedIterable",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.ImmutableSortedMultiset",
      "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
      "com.google.common.collect.TreeMultiset$Aggregate",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.collect.ImmutableEnumSet",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
      "com.google.common.collect.HashBiMap$View$1",
      "com.google.common.collect.ImmutableMultiset$EntrySet",
      "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.base.Converter",
      "com.google.common.collect.LinkedListMultimap",
      "com.google.common.collect.Maps$8",
      "com.google.common.base.Function",
      "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.HashBiMap$EntryForKey",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.Multiset$Entry",
      "com.google.common.truth.Subject",
      "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
      "com.google.common.primitives.Ints$IntConverter",
      "com.google.common.collect.Sets",
      "com.google.common.collect.ObjectCountHashMap",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.ExplicitOrdering",
      "com.google.common.collect.CompactHashSet",
      "com.google.common.collect.TreeMultiset$Reference",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.ImmutableMap$1",
      "com.google.common.collect.Iterables$5",
      "com.google.common.collect.AbstractMultiset",
      "com.google.common.collect.Multimap",
      "com.google.common.truth.Correspondence$FromBinaryPredicate",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.CompoundOrdering",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
      "com.google.common.collect.ImmutableMultiset$Builder",
      "com.google.common.collect.Multisets$EntrySet",
      "com.google.common.base.PairwiseEquivalence",
      "com.google.common.collect.CompactHashing",
      "com.google.common.collect.ImmutableMultiset$1",
      "com.google.common.base.Suppliers",
      "com.google.common.collect.RegularImmutableMap$EntrySet",
      "com.google.common.base.Equivalence",
      "com.google.common.collect.ReverseNaturalOrdering",
      "com.google.common.truth.StandardSubjectBuilder",
      "com.google.common.primitives.Ints",
      "com.google.common.collect.Maps",
      "com.google.common.collect.SetMultimap",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.truth.GraphMatching$HopcroftKarp",
      "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
      "com.google.common.collect.Iterators$MergingIterator",
      "com.google.common.truth.Correspondence$StoredException",
      "com.google.common.collect.RegularImmutableSortedSet"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.google.common.base.Function", false, IterableSubject_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.google.common.truth.Correspondence$BinaryPredicate", false, IterableSubject_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.google.common.truth.Correspondence$DiffFormatter", false, IterableSubject_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.lang.Comparable", false, IterableSubject_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.Comparator", false, IterableSubject_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.truth.Subject",
      "com.google.common.truth.IterableSubject",
      "com.google.common.truth.IterableSubject$2",
      "com.google.common.truth.IterableSubject$1",
      "com.google.common.truth.IterableSubject$3",
      "com.google.common.truth.IterableSubject$4",
      "com.google.common.truth.IterableSubject$UsingCorrespondence",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
      "com.google.common.truth.IterableSubject$ElementFactGrouping",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.truth.Correspondence",
      "com.google.common.truth.Correspondence$Equality",
      "com.google.common.truth.FailureMetadata",
      "com.google.common.truth.Subject$ComparisonResult",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.Lists",
      "com.google.common.collect.Iterables",
      "com.google.common.truth.SubjectUtils",
      "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
      "com.google.common.collect.ImmutableMultiset",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableMultiset$Builder",
      "com.google.common.collect.ObjectCountHashMap",
      "com.google.common.collect.Hashing",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.primitives.Ints",
      "com.google.common.collect.RegularImmutableMultiset",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.collect.AbstractMultiset",
      "com.google.common.collect.ConcurrentHashMultiset",
      "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
      "com.google.common.collect.ImmutableSortedMultiset",
      "com.google.common.collect.ImmutableSortedMultiset$Builder",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.collect.Multisets$EntrySet",
      "com.google.common.collect.AbstractMultiset$EntrySet",
      "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.collect.ConcurrentHashMultiset$2",
      "com.google.common.collect.AbstractIterator$State",
      "com.google.common.collect.ForwardingObject",
      "com.google.common.collect.ForwardingIterator",
      "com.google.common.collect.ConcurrentHashMultiset$3",
      "com.google.common.collect.AbstractIterator$1",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.collect.RegularImmutableSortedMultiset",
      "com.google.common.collect.Sets",
      "com.google.common.collect.AbstractMapBasedMultiset",
      "com.google.common.collect.LinkedHashMultiset",
      "com.google.common.collect.Multisets",
      "com.google.common.collect.ObjectCountLinkedHashMap",
      "com.google.common.collect.AbstractMapBasedMultiset$Itr",
      "com.google.common.collect.AbstractMapBasedMultiset$2",
      "com.google.common.collect.Iterators",
      "com.google.common.truth.Correspondence$Transforming",
      "com.google.common.base.Functions",
      "com.google.common.base.Functions$IdentityFunction",
      "com.google.common.truth.Correspondence$FormattingDiffs",
      "com.google.common.truth.Correspondence$FromBinaryPredicate",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
      "com.google.common.base.Present",
      "com.google.common.truth.Correspondence$ExceptionStore",
      "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.LinkedListMultimap",
      "com.google.common.collect.Platform",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.truth.Fact",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.collect.ImmutableMultiset$EntrySet",
      "com.google.common.base.Suppliers",
      "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
      "com.google.common.truth.Platform",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.AbstractListMultimap",
      "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
      "com.google.common.collect.ArrayListMultimap",
      "com.google.common.collect.CompactHashing",
      "com.google.common.base.Strings",
      "com.google.common.collect.BaseImmutableMultimap",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.ImmutableMultimap$Builder",
      "com.google.common.collect.ImmutableSetMultimap$Builder",
      "com.google.common.collect.CompactHashMap$EntrySetView",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "com.google.common.collect.ImmutableSetMultimap$EntrySet",
      "com.google.common.collect.ImmutableMultimap$1",
      "com.google.common.collect.RegularImmutableMap$EntrySet",
      "com.google.common.base.Converter",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.common.truth.LazyMessage",
      "com.google.common.truth.StandardSubjectBuilder",
      "com.google.common.collect.Lists$OnePlusArrayList",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.base.Objects",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
      "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CaseFormat",
      "com.google.common.base.Ascii",
      "com.google.common.collect.AbstractSortedMultiset",
      "com.google.common.collect.TreeMultiset",
      "com.google.common.collect.GeneralRange",
      "com.google.common.collect.TreeMultiset$AvlNode",
      "com.google.common.collect.TreeMultiset$Reference",
      "com.google.common.collect.Multisets$MultisetIteratorImpl",
      "com.google.common.collect.TreeMultiset$2",
      "com.google.common.collect.CompactHashSet",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.CompactHashMap$Itr",
      "com.google.common.collect.CompactHashMap$2",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.CompactHashMap$MapEntry",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.base.Converter$ConverterComposition",
      "com.google.common.base.Joiner",
      "com.google.common.base.Joiner$1",
      "com.google.common.truth.Correspondence$StoredException",
      "com.google.common.collect.HashMultiset",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.truth.Subject$EqualityCheck",
      "com.google.common.collect.LinkedListMultimap$Node",
      "com.google.common.collect.LinkedListMultimap$KeyList",
      "com.google.common.collect.NullnessCasts",
      "com.google.common.collect.TreeMultiset$Aggregate",
      "com.google.common.base.Equivalence",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset",
      "com.google.common.base.Equivalence$Wrapper",
      "com.google.common.collect.FluentIterable",
      "com.google.common.collect.Iterables$5",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.Multisets$AbstractEntry",
      "com.google.common.collect.ObjectCountHashMap$MapEntry",
      "com.google.common.collect.Multisets$ImmutableEntry",
      "com.google.common.collect.TreeMultiset$1",
      "com.google.common.collect.RegularImmutableMultiset$ElementSet",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.base.NullnessCasts",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.math.IntMath",
      "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.RegularImmutableMap$EntrySet$1",
      "com.google.common.truth.GraphMatching",
      "com.google.common.truth.GraphMatching$HopcroftKarp",
      "com.google.common.collect.HashBiMap",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.HashBiMap$View",
      "com.google.common.collect.HashBiMap$EntrySet",
      "com.google.common.collect.ImmutableBiMap$Builder",
      "com.google.common.collect.HashBiMap$View$1",
      "com.google.common.collect.RegularImmutableBiMap",
      "com.google.common.collect.Maps",
      "com.google.common.base.MoreObjects",
      "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.HashBiMap$EntryForKey",
      "com.google.common.collect.LinkedListMultimap$1",
      "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
      "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
      "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
      "com.google.common.base.Throwables",
      "com.google.common.collect.ImmutableMultiset$1",
      "com.google.common.collect.IndexedImmutableSet$1"
    );
  }
}
