* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.IterableSubject
* Starting Client-0
* Connecting to master process on port 14095
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar
  - t/dependency/asm-9.5.jar
  - t/dependency/auto-value-annotations-1.10.1.jar
  - t/dependency/checker-qual-3.35.0.jar
  - t/dependency/error_prone_annotations-2.19.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-32.0.1-android.jar
  - t/dependency/guava-gwt-32.0.0-jre.jar
  - t/dependency/guava-testlib-32.0.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-2.8.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.IterableSubject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 2741
* Using seed 1731035348648
* Starting evolution
* Initial Number of Goals in DynaMOSA = 719 / 2741
[MASTER] 16:09:12.449 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedMultiset<E> : Type points to itself
[MASTER] 16:09:16.376 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=>                            6%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:============>                      37%][MASTER] 16:09:29.428 [logback-1] WARN  TestCluster - Failed to check cache for java.util.concurrent.ConcurrentSkipListMap<K, V> : Type points to itself
[Progress:========>                     28%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:============>                      37%][MASTER] 16:09:33.811 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:==========>                   35%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:============>                 41%] [Cov:==============>                    41%][MASTER] 16:09:37.943 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableMultiset<E> : Type points to itself
[Progress:=============>                45%] [Cov:==============>                    42%][Progress:=============>                46%] [Cov:==============>                    42%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              53%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:===================>          65%] [Cov:===============>                   45%][Progress:===================>          66%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:======================>       75%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:========================>     81%] [Cov:================>                  46%][Progress:========================>     83%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  47%][Progress:===========================>  90%] [Cov:================>                  47%][Progress:===========================>  93%] [Cov:================>                  48%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 49%]
* Search finished after 62s and 31 generations, 20246 statements, best individual has fitness: 1560.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 787
* Number of covered goals: 340
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 429
* Number of covered goals: 232
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 983
* Number of covered goals: 373
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 19
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 47
* Number of covered goals: 46
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 79%
* Total number of goals: 47
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 429
* Number of covered goals: 203
* Generated 96 tests with total length 538
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 16:10:34.345 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1731035433787/com/google/common/truth/IterableSubject_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1731035433787/com/google/common/truth/IterableSubject_0_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:34.345 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:34.345 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:34.350 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:34.351 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:10:34.351 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1731035433787/com/google/common/truth/IterableSubject_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:33 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.base.Converter;
13: import com.google.common.base.Function;
14: import com.google.common.collect.TreeMultiset;
15: import com.google.common.truth.Correspondence;
16: import com.google.common.truth.FailureMetadata;
17: import com.google.common.truth.IterableSubject;
18: import java.lang.reflect.Array;
19: import java.sql.SQLNonTransientConnectionException;
20: import java.util.Comparator;
21: import java.util.LinkedList;
22: import java.util.concurrent.ConcurrentSkipListMap;
23: import org.evosuite.runtime.EvoRunner;
24: import org.evosuite.runtime.EvoRunnerParameters;
25: import org.evosuite.runtime.ViolatedAssumptionAnswer;
26: import org.junit.runner.RunWith;
27: 
28: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
29: public class IterableSubject_0_tmp__ESTest extends IterableSubject_0_tmp__ESTest_scaffolding {
30: 
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       Correspondence.BinaryPredicate<Object, Object> correspondence_BinaryPredicate0 = (Correspondence.BinaryPredicate<Object, Object>) mock(Correspondence.BinaryPredicate.class, new ViolatedAssumptionAnswer());
34:       Correspondence<Object, Object> correspondence0 = Correspondence.from((Correspondence.BinaryPredicate<Object, Object>) correspondence_BinaryPredicate0, "w~1P");
35:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
36:       TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
37:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
38:       IterableSubject.UsingCorrespondence<LinkedList<SQLNonTransientConnectionException>, ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>> iterableSubject_UsingCorrespondence0 = iterableSubject0.comparingElementsUsing((Correspondence<? super LinkedList<SQLNonTransientConnectionException>, ? super ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>>) correspondence0);
39:       Converter<Object, Object> converter0 = Converter.identity();
40:       IterableSubject.UsingCorrespondence<LinkedList<SQLNonTransientConnectionException>, ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>> iterableSubject_UsingCorrespondence1 = iterableSubject_UsingCorrespondence0.displayingDiffsPairedBy((Function<? super ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>, ?>) converter0);
41:       ConcurrentSkipListMap<SQLNonTransientConnectionException, Object> concurrentSkipListMap0 = new ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>();
42:       ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>[] concurrentSkipListMapArray0 = (ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>[]) Array.newInstance(ConcurrentSkipListMap.class, 1);
43:       // Undeclared exception!
44:       try { 
45:         iterableSubject_UsingCorrespondence1.containsAnyOf(concurrentSkipListMap0, concurrentSkipListMap0, concurrentSkipListMapArray0);
46:         fail("Expecting exception: NullPointerException");
47:       
48:       } catch(NullPointerException e) {
49:          //
50:          // no message in exception (getMessage() returned null)
51:          //
52:          verifyException("com.google.common.base.Preconditions", e);
53:       }
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_0_1731035433787/com/google/common/truth/IterableSubject_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:33 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class IterableSubject_0_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.ArrayListMultimap",
84:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
85:       "com.google.common.collect.Lists$RandomAccessPartition",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
89:       "com.google.common.truth.SubjectUtils",
90:       "com.google.common.math.IntMath",
91:       "com.google.common.collect.LinkedHashMultiset",
92:       "com.google.common.truth.GraphMatching",
93:       "com.google.common.collect.AbstractMapBasedMultiset$2",
94:       "com.google.common.collect.Sets$2",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.collect.NullsLastOrdering",
100:       "com.google.common.collect.RegularImmutableMultiset",
101:       "com.google.common.collect.RegularImmutableMap",
102:       "com.google.common.collect.RegularImmutableBiMap",
103:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.collect.ImmutableMultimap$Values",
106:       "com.google.common.collect.ByFunctionOrdering",
107:       "com.google.common.collect.AbstractSortedMultiset",
108:       "com.google.common.collect.Iterators$10",
109:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
110:       "com.google.common.collect.AbstractMapEntry",
111:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
112:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
113:       "com.google.common.collect.ImmutableBiMap$Builder",
114:       "com.google.common.base.Predicate",
115:       "com.google.common.collect.Iterators$ConcatenatedIterator",
116:       "com.google.common.base.Joiner",
117:       "com.google.common.collect.GeneralRange",
118:       "com.google.common.collect.AbstractListMultimap",
119:       "com.google.common.collect.NullsFirstOrdering",
120:       "com.google.common.truth.Correspondence$BinaryPredicate",
121:       "org.checkerframework.framework.qual.QualifierForLiterals",
122:       "com.google.common.truth.AssertionErrorWithFacts",
123:       "com.google.common.base.Strings",
124:       "com.google.common.truth.IterableSubject$3",
125:       "com.google.common.collect.Lists$Partition",
126:       "com.google.common.collect.AbstractMapBasedMultimap",
127:       "com.google.common.collect.Lists",
128:       "com.google.common.truth.IterableSubject$1",
129:       "com.google.common.truth.IterableSubject$4",
130:       "com.google.common.collect.Multisets$ImmutableEntry",
131:       "com.google.common.collect.UnmodifiableListIterator",
132:       "com.google.common.collect.TreeMultiset$AvlNode",
133:       "com.google.common.collect.ImmutableMultimap",
134:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
135:       "com.google.common.collect.TreeMultiset$2",
136:       "com.google.common.collect.ImmutableSortedSet",
137:       "com.google.common.base.Functions",
138:       "com.google.common.collect.Sets$4",
139:       "com.google.common.base.Absent",
140:       "com.google.common.collect.Maps$BiMapConverter",
141:       "org.checkerframework.framework.qual.SubtypeOf",
142:       "com.google.common.base.Throwables",
143:       "com.google.common.collect.ImmutableSortedSet$Builder",
144:       "com.google.common.base.Equivalence$Equals",
145:       "com.google.common.truth.Correspondence",
146:       "com.google.common.base.ElementTypesAreNonnullByDefault",
147:       "com.google.common.collect.AbstractMultiset$EntrySet",
148:       "com.google.common.base.Equivalence$Wrapper",
149:       "com.google.common.collect.Sets$ImprovedAbstractSet",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
152:       "com.google.common.truth.StandardSubjectBuilder$1",
153:       "com.google.common.collect.ImmutableEntry",
154:       "com.google.common.base.Joiner$1",
155:       "com.google.common.base.Converter$ConverterComposition",
156:       "com.google.common.collect.EmptyImmutableSetMultimap",
157:       "com.google.common.collect.HashBiMap$EntrySet",
158:       "com.google.common.base.Joiner$2",
159:       "com.google.common.collect.ImmutableList$Itr",
160:       "com.google.common.collect.ImmutableCollection",
161:       "com.google.common.collect.ImmutableEnumMap",
162:       "com.google.common.truth.Ordered",
163:       "com.google.common.collect.TreeMultiset",
164:       "com.google.common.collect.LinkedListMultimap$KeyList",
165:       "com.google.common.collect.Lists$OnePlusArrayList",
166:       "com.google.common.base.Objects",
167:       "com.google.common.collect.CompactHashMap$Itr",
168:       "com.google.common.collect.ImmutableSetMultimap",
169:       "com.google.common.collect.ImmutableCollection$Builder",
170:       "com.google.errorprone.annotations.DoNotMock",
171:       "com.google.common.collect.Iterators$6",
172:       "com.google.common.collect.BiMap",
173:       "com.google.common.collect.IndexedImmutableSet",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.collect.Lists$AbstractListWrapper",
177:       "com.google.common.collect.AbstractMapBasedMultiset",
178:       "com.google.common.collect.Iterators$1",
179:       "com.google.common.collect.CompactHashMap",
180:       "com.google.common.collect.Iterators$4",
181:       "com.google.common.collect.Iterators$5",
182:       "com.google.common.base.Converter$ReverseConverter",
183:       "com.google.common.base.ExtraObjectsMethodsForWeb",
184:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
185:       "com.google.common.truth.Platform",
186:       "com.google.common.collect.Lists$StringAsImmutableList",
187:       "com.google.common.collect.Lists$2",
188:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
189:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
190:       "com.google.common.collect.CompactHashMap$EntrySetView",
191:       "com.google.common.truth.LazyMessage",
192:       "com.google.common.collect.Lists$1",
193:       "com.google.common.collect.ImmutableMultimap$Builder",
194:       "com.google.common.base.Equivalence$Identity",
195:       "com.google.common.truth.Subject$ComparisonResult",
196:       "com.google.common.collect.Multiset",
197:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
198:       "com.google.common.collect.AbstractMultimap",
199:       "com.google.common.base.Supplier",
200:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
201:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
202:       "com.google.common.collect.HashBiMap$View",
203:       "com.google.common.truth.IterableSubject$PairwiseChecker",
204:       "com.google.common.collect.ImmutableList",
205:       "com.google.common.collect.ReverseOrdering",
206:       "com.google.common.collect.FluentIterable$1",
207:       "com.google.common.collect.FluentIterable$2",
208:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
209:       "com.google.common.truth.Fact",
210:       "com.google.common.collect.FluentIterable$3",
211:       "org.checkerframework.checker.nullness.qual.Nullable",
212:       "com.google.common.collect.NullnessCasts",
213:       "org.checkerframework.framework.qual.DefaultFor",
214:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
215:       "com.google.common.collect.SortedMultisetBridge",
216:       "com.google.common.collect.ImmutableMap$Builder",
217:       "com.google.common.base.Converter$FunctionBasedConverter",
218:       "com.google.common.collect.HashBiMap",
219:       "com.google.common.collect.Maps$EntryTransformer",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.collect.FluentIterable$3$1",
222:       "com.google.common.collect.NaturalOrdering",
223:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
224:       "com.google.common.collect.LinkedListMultimap$Node",
225:       "com.google.common.collect.TreeMultiset$Aggregate$2",
226:       "com.google.common.collect.TreeMultiset$Aggregate$1",
227:       "com.google.common.collect.AllEqualOrdering",
228:       "com.google.common.collect.Hashing",
229:       "com.google.common.collect.ImmutableList$SubList",
230:       "com.google.common.collect.ListMultimap",
231:       "com.google.common.base.FunctionalEquivalence",
232:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
233:       "com.google.common.truth.ErrorWithFacts",
234:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
235:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
236:       "com.google.common.collect.RegularImmutableList",
237:       "com.google.common.collect.SortedMultiset",
238:       "com.google.common.truth.IterableSubject",
239:       "com.google.common.collect.FluentIterable",
240:       "com.google.common.base.Optional",
241:       "com.google.common.collect.Lists$TransformingRandomAccessList",
242:       "com.google.common.collect.Iterators$ArrayItr",
243:       "com.google.common.collect.RegularImmutableMap$KeySet",
244:       "com.google.common.collect.BaseImmutableMultimap",
245:       "com.google.common.collect.Multisets",
246:       "com.google.common.collect.CompactHashMap$MapEntry",
247:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
248:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
249:       "com.google.common.collect.SortedMapDifference",
250:       "com.google.common.collect.CompactHashMap$2",
251:       "com.google.common.collect.RegularImmutableSet",
252:       "com.google.common.truth.Subject$EqualityCheck",
253:       "com.google.common.collect.LexicographicalOrdering",
254:       "com.google.common.collect.ImmutableListMultimap",
255:       "com.google.common.base.ParametricNullness",
256:       "com.google.common.collect.ImmutableMultimap$1",
257:       "com.google.common.base.Present",
258:       "com.google.common.collect.ImmutableMultimap$2",
259:       "com.google.common.collect.Iterables",
260:       "com.google.common.collect.LinkedListMultimap$1",
261:       "com.google.common.collect.Sets$SetView",
262:       "com.google.common.collect.ImmutableSet$Builder",
263:       "com.google.common.truth.Correspondence$DiffFormatter",
264:       "com.google.common.collect.SingletonImmutableSet",
265:       "com.google.common.collect.ImmutableSetMultimap$Builder",
266:       "com.google.common.truth.Correspondence$Transforming",
267:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
268:       "com.google.common.collect.ImmutableMultiset",
269:       "com.google.common.truth.Correspondence$ExceptionStore",
270:       "com.google.common.collect.UsingToStringOrdering",
271:       "com.google.common.truth.ComparableSubject",
272:       "com.google.common.collect.Multisets$AbstractEntry",
273:       "com.google.common.collect.ImmutableMultimap$Keys",
274:       "com.google.common.base.Functions$IdentityFunction",
275:       "com.google.common.truth.FailureMetadata",
276:       "com.google.common.collect.Lists$TransformingSequentialList",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.collect.ObjectArrays",
279:       "com.google.common.collect.AbstractIterator",
280:       "com.google.common.truth.Correspondence$FormattingDiffs",
281:       "com.google.common.truth.Correspondence$Equality",
282:       "com.google.common.base.MoreObjects",
283:       "com.google.common.collect.IndexedImmutableSet$1",
284:       "com.google.common.base.Suppliers$MemoizingSupplier",
285:       "com.google.common.collect.MapDifference",
286:       "com.google.common.collect.ObjectCountLinkedHashMap",
287:       "com.google.common.collect.SortedIterable",
288:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
289:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
290:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.ImmutableSortedMultiset",
293:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
294:       "com.google.common.collect.TreeMultiset$Aggregate",
295:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
296:       "com.google.common.collect.Lists$RandomAccessListWrapper",
297:       "com.google.common.collect.ImmutableEnumSet",
298:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
299:       "com.google.common.collect.HashBiMap$View$1",
300:       "com.google.common.collect.ImmutableMultiset$EntrySet",
301:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
302:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
303:       "com.google.common.base.Converter",
304:       "com.google.common.collect.LinkedListMultimap",
305:       "com.google.common.collect.Maps$8",
306:       "com.google.common.base.Function",
307:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ComparatorOrdering",
310:       "com.google.common.collect.AbstractIndexedListIterator",
311:       "com.google.common.collect.HashBiMap$EntryForKey",
312:       "com.google.common.collect.CollectPreconditions",
313:       "com.google.common.collect.Multiset$Entry",
314:       "com.google.common.truth.Subject",
315:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
316:       "com.google.common.primitives.Ints$IntConverter",
317:       "com.google.common.collect.Sets",
318:       "com.google.common.collect.ObjectCountHashMap",
319:       "com.google.common.collect.BoundType",
320:       "com.google.common.collect.ExplicitOrdering",
321:       "com.google.common.collect.CompactHashSet",
322:       "com.google.common.collect.TreeMultiset$Reference",
323:       "com.google.common.collect.ImmutableList$Builder",
324:       "com.google.common.collect.ImmutableMap$1",
325:       "com.google.common.collect.Iterables$5",
326:       "com.google.common.collect.AbstractMultiset",
327:       "com.google.common.collect.Multimap",
328:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
329:       "com.google.common.collect.Iterators",
330:       "com.google.common.collect.CompoundOrdering",
331:       "com.google.common.collect.ImmutableBiMap",
332:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
333:       "com.google.common.collect.ImmutableMultiset$Builder",
334:       "com.google.common.collect.Multisets$EntrySet",
335:       "com.google.common.base.PairwiseEquivalence",
336:       "com.google.common.collect.CompactHashing",
337:       "com.google.common.collect.ImmutableMultiset$1",
338:       "com.google.common.base.Suppliers",
339:       "com.google.common.collect.RegularImmutableMap$EntrySet",
340:       "com.google.common.base.Equivalence",
341:       "com.google.common.collect.ReverseNaturalOrdering",
342:       "com.google.common.truth.StandardSubjectBuilder",
343:       "com.google.common.primitives.Ints",
344:       "com.google.common.collect.Maps",
345:       "com.google.common.collect.SetMultimap",
346:       "com.google.common.collect.TransformedIterator",
347:       "com.google.common.truth.GraphMatching$HopcroftKarp",
348:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
349:       "com.google.common.collect.Iterators$MergingIterator",
350:       "com.google.common.truth.Correspondence$StoredException",
351:       "com.google.common.collect.RegularImmutableSortedSet"
352:     );
353:   } 
354:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
355:     mock(Class.forName("com.google.common.truth.Correspondence$BinaryPredicate", false, IterableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader()));
356:     mock(Class.forName("java.util.Comparator", false, IterableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader()));
357:   }
358: 
359:   private static void resetClasses() {
360:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
361: 
362:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
363:       "com.google.common.truth.Subject",
364:       "com.google.common.truth.IterableSubject",
365:       "com.google.common.truth.IterableSubject$2",
366:       "com.google.common.truth.IterableSubject$1",
367:       "com.google.common.truth.IterableSubject$3",
368:       "com.google.common.truth.IterableSubject$4",
369:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
370:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
371:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
372:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
373:       "com.google.common.base.Optional",
374:       "com.google.common.base.Absent",
375:       "com.google.common.collect.ImmutableCollection",
376:       "com.google.common.collect.UnmodifiableIterator",
377:       "com.google.common.collect.UnmodifiableListIterator",
378:       "com.google.common.collect.AbstractIndexedListIterator",
379:       "com.google.common.collect.ImmutableList$Itr",
380:       "com.google.common.collect.ImmutableList",
381:       "com.google.common.collect.Ordering",
382:       "com.google.common.collect.NaturalOrdering",
383:       "com.google.common.truth.Correspondence",
384:       "com.google.common.truth.Correspondence$Equality",
385:       "com.google.common.truth.FailureMetadata",
386:       "com.google.common.truth.Subject$ComparisonResult",
387:       "com.google.common.base.Preconditions",
388:       "com.google.common.collect.Lists",
389:       "com.google.common.collect.Iterables",
390:       "com.google.common.truth.SubjectUtils",
391:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
392:       "com.google.common.collect.ImmutableMultiset",
393:       "com.google.common.collect.ImmutableCollection$Builder",
394:       "com.google.common.collect.ImmutableMultiset$Builder",
395:       "com.google.common.collect.ObjectCountHashMap",
396:       "com.google.common.collect.Hashing",
397:       "com.google.common.primitives.IntsMethodsForWeb",
398:       "com.google.common.primitives.Ints",
399:       "com.google.common.collect.RegularImmutableMultiset",
400:       "com.google.common.collect.ImmutableSet",
401:       "com.google.common.collect.RegularImmutableSet",
402:       "com.google.common.collect.AbstractMultiset",
403:       "com.google.common.collect.ConcurrentHashMultiset",
404:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
405:       "com.google.common.collect.ImmutableSortedMultiset",
406:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
407:       "com.google.common.collect.Sets$ImprovedAbstractSet",
408:       "com.google.common.collect.Multisets$EntrySet",
409:       "com.google.common.collect.AbstractMultiset$EntrySet",
410:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
411:       "com.google.common.collect.AbstractIterator",
412:       "com.google.common.collect.ConcurrentHashMultiset$2",
413:       "com.google.common.collect.AbstractIterator$State",
414:       "com.google.common.collect.ForwardingObject",
415:       "com.google.common.collect.ForwardingIterator",
416:       "com.google.common.collect.ConcurrentHashMultiset$3",
417:       "com.google.common.collect.AbstractIterator$1",
418:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
419:       "com.google.common.collect.ImmutableSortedSet",
420:       "com.google.common.collect.RegularImmutableSortedSet",
421:       "com.google.common.collect.RegularImmutableSortedMultiset",
422:       "com.google.common.collect.Sets",
423:       "com.google.common.collect.AbstractMapBasedMultiset",
424:       "com.google.common.collect.LinkedHashMultiset",
425:       "com.google.common.collect.Multisets",
426:       "com.google.common.collect.ObjectCountLinkedHashMap",
427:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
428:       "com.google.common.collect.AbstractMapBasedMultiset$2",
429:       "com.google.common.collect.Iterators",
430:       "com.google.common.truth.Correspondence$Transforming",
431:       "com.google.common.base.Functions",
432:       "com.google.common.base.Functions$IdentityFunction",
433:       "com.google.common.truth.Correspondence$FormattingDiffs",
434:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
435:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
436:       "com.google.common.base.Present",
437:       "com.google.common.truth.Correspondence$ExceptionStore",
438:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
439:       "com.google.common.collect.AbstractMultimap",
440:       "com.google.common.collect.LinkedListMultimap",
441:       "com.google.common.collect.Platform",
442:       "com.google.common.collect.CompactHashMap",
443:       "com.google.common.collect.Collections2",
444:       "com.google.common.collect.CollectPreconditions",
445:       "com.google.common.truth.Fact",
446:       "com.google.common.collect.ObjectArrays",
447:       "com.google.common.collect.IndexedImmutableSet",
448:       "com.google.common.collect.ImmutableMultiset$EntrySet",
449:       "com.google.common.base.Suppliers",
450:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
451:       "com.google.common.truth.Platform",
452:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
453:       "com.google.common.collect.ImmutableList$Builder",
454:       "com.google.common.collect.AbstractMapBasedMultimap",
455:       "com.google.common.collect.AbstractListMultimap",
456:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
457:       "com.google.common.collect.ArrayListMultimap",
458:       "com.google.common.collect.CompactHashing",
459:       "com.google.common.base.Strings",
460:       "com.google.common.collect.BaseImmutableMultimap",
461:       "com.google.common.collect.ImmutableMultimap",
462:       "com.google.common.collect.ImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableMultimap$Builder",
464:       "com.google.common.collect.ImmutableSetMultimap$Builder",
465:       "com.google.common.collect.CompactHashMap$EntrySetView",
466:       "com.google.common.collect.ImmutableMap",
467:       "com.google.common.collect.RegularImmutableMap",
468:       "com.google.common.collect.EmptyImmutableSetMultimap",
469:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
470:       "com.google.common.collect.ImmutableMultimap$1",
471:       "com.google.common.collect.RegularImmutableMap$EntrySet",
472:       "com.google.common.base.Converter",
473:       "com.google.common.base.Converter$IdentityConverter",
474:       "com.google.common.truth.LazyMessage",
475:       "com.google.common.truth.StandardSubjectBuilder",
476:       "com.google.common.collect.Lists$OnePlusArrayList",
477:       "com.google.common.base.ExtraObjectsMethodsForWeb",
478:       "com.google.common.base.Objects",
479:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
480:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
481:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
482:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
483:       "com.google.common.base.CharMatcher",
484:       "com.google.common.base.CharMatcher$FastMatcher",
485:       "com.google.common.base.CharMatcher$Is",
486:       "com.google.common.base.CharMatcher$InRange",
487:       "com.google.common.base.CaseFormat",
488:       "com.google.common.base.Ascii",
489:       "com.google.common.collect.AbstractSortedMultiset",
490:       "com.google.common.collect.TreeMultiset",
491:       "com.google.common.collect.GeneralRange",
492:       "com.google.common.collect.TreeMultiset$AvlNode",
493:       "com.google.common.collect.TreeMultiset$Reference",
494:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
495:       "com.google.common.collect.TreeMultiset$2",
496:       "com.google.common.collect.CompactHashSet",
497:       "com.google.common.collect.ImmutableMap$Builder",
498:       "com.google.common.collect.CompactHashMap$Itr",
499:       "com.google.common.collect.CompactHashMap$2",
500:       "com.google.common.collect.AbstractMapEntry",
501:       "com.google.common.collect.CompactHashMap$MapEntry",
502:       "com.google.common.base.Converter$FunctionBasedConverter",
503:       "com.google.common.base.Converter$ConverterComposition",
504:       "com.google.common.base.Joiner",
505:       "com.google.common.base.Joiner$1",
506:       "com.google.common.truth.Correspondence$StoredException",
507:       "com.google.common.collect.HashMultiset",
508:       "com.google.common.base.Converter$ReverseConverter",
509:       "com.google.common.truth.Subject$EqualityCheck",
510:       "com.google.common.collect.LinkedListMultimap$Node",
511:       "com.google.common.collect.LinkedListMultimap$KeyList",
512:       "com.google.common.collect.NullnessCasts",
513:       "com.google.common.collect.TreeMultiset$Aggregate",
514:       "com.google.common.base.Equivalence",
515:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
516:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
517:       "com.google.common.base.Equivalence$Wrapper",
518:       "com.google.common.collect.FluentIterable",
519:       "com.google.common.collect.Iterables$5",
520:       "com.google.common.collect.TransformedIterator",
521:       "com.google.common.collect.Iterators$6",
522:       "com.google.common.collect.Multisets$AbstractEntry",
523:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
524:       "com.google.common.collect.Multisets$ImmutableEntry",
525:       "com.google.common.collect.TreeMultiset$1",
526:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
527:       "com.google.common.collect.SingletonImmutableSet",
528:       "com.google.common.base.NullnessCasts",
529:       "com.google.common.collect.BoundType",
530:       "com.google.common.collect.RegularImmutableList",
531:       "com.google.common.math.IntMath",
532:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
533:       "com.google.common.collect.FluentIterable$3",
534:       "com.google.common.collect.FluentIterable$3$1",
535:       "com.google.common.collect.Iterators$ConcatenatedIterator",
536:       "com.google.common.collect.Iterators$ArrayItr",
537:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
538:       "com.google.common.collect.RegularImmutableMap$KeySet",
539:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
540:       "com.google.common.truth.GraphMatching",
541:       "com.google.common.truth.GraphMatching$HopcroftKarp",
542:       "com.google.common.collect.HashBiMap",
543:       "com.google.common.collect.ImmutableBiMap",
544:       "com.google.common.collect.HashBiMap$View",
545:       "com.google.common.collect.HashBiMap$EntrySet",
546:       "com.google.common.collect.ImmutableBiMap$Builder",
547:       "com.google.common.collect.HashBiMap$View$1",
548:       "com.google.common.collect.RegularImmutableBiMap",
549:       "com.google.common.collect.Maps",
550:       "com.google.common.base.MoreObjects",
551:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
552:       "com.google.common.collect.Iterators$9",
553:       "com.google.common.collect.ImmutableEntry",
554:       "com.google.common.collect.HashBiMap$EntryForKey",
555:       "com.google.common.collect.LinkedListMultimap$1",
556:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
557:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
558:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
559:       "com.google.common.base.Throwables",
560:       "com.google.common.collect.ImmutableMultiset$1",
561:       "com.google.common.collect.IndexedImmutableSet$1"
562:     );
563:   }
564: }

[MASTER] 16:10:34.352 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence.BinaryPredicate<Object, Object> correspondence_BinaryPredicate0 = (Correspondence.BinaryPredicate<Object, Object>) mock(Correspondence.BinaryPredicate.class, new ViolatedAssumptionAnswer());
Correspondence<Object, Object> correspondence0 = Correspondence.from((Correspondence.BinaryPredicate<Object, Object>) correspondence_BinaryPredicate0, "w~1P");
Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
IterableSubject.UsingCorrespondence<LinkedList<SQLNonTransientConnectionException>, ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>> iterableSubject_UsingCorrespondence0 = iterableSubject0.comparingElementsUsing((Correspondence<? super LinkedList<SQLNonTransientConnectionException>, ? super ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>>) correspondence0);
Converter<Object, Object> converter0 = Converter.identity();
IterableSubject.UsingCorrespondence<LinkedList<SQLNonTransientConnectionException>, ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>> iterableSubject_UsingCorrespondence1 = iterableSubject_UsingCorrespondence0.displayingDiffsPairedBy((Function<? super ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>, ?>) converter0);
ConcurrentSkipListMap<SQLNonTransientConnectionException, Object> concurrentSkipListMap0 = new ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>();
ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>[] concurrentSkipListMapArray0 = (ConcurrentSkipListMap<SQLNonTransientConnectionException, Object>[]) Array.newInstance(ConcurrentSkipListMap.class, 1);
iterableSubject_UsingCorrespondence1.containsAnyOf(concurrentSkipListMap0, concurrentSkipListMap0, concurrentSkipListMapArray0);

[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1731035435973/com/google/common/truth/IterableSubject_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1731035435973/com/google/common/truth/IterableSubject_17_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:10:36.016 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:10:36.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 21
[MASTER] 16:10:36.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 20
[MASTER] 16:10:36.018 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:10:36.019 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:36.020 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:36.020 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:36.020 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1731035435973/com/google/common/truth/IterableSubject_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:35 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.collect.TreeMultiset;
13: import com.google.common.truth.FailureMetadata;
14: import com.google.common.truth.IterableSubject;
15: import java.util.Comparator;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class IterableSubject_17_tmp__ESTest extends IterableSubject_17_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
27:       TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
28:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
29:       // Undeclared exception!
30:       try { 
31:         iterableSubject0.isEqualTo((Object) null);
32:         fail("Expecting exception: NullPointerException");
33:       
34:       } catch(NullPointerException e) {
35:          //
36:          // no message in exception (getMessage() returned null)
37:          //
38:          verifyException("com.google.common.base.Preconditions", e);
39:       }
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_17_1731035435973/com/google/common/truth/IterableSubject_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:35 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class IterableSubject_17_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.ArrayListMultimap",
84:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
85:       "com.google.common.collect.Lists$RandomAccessPartition",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
89:       "com.google.common.truth.SubjectUtils",
90:       "com.google.common.math.IntMath",
91:       "com.google.common.collect.LinkedHashMultiset",
92:       "com.google.common.truth.GraphMatching",
93:       "com.google.common.collect.AbstractMapBasedMultiset$2",
94:       "com.google.common.collect.Sets$2",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.collect.NullsLastOrdering",
100:       "com.google.common.collect.RegularImmutableMultiset",
101:       "com.google.common.collect.RegularImmutableMap",
102:       "com.google.common.collect.RegularImmutableBiMap",
103:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.collect.ImmutableMultimap$Values",
106:       "com.google.common.collect.ByFunctionOrdering",
107:       "com.google.common.collect.AbstractSortedMultiset",
108:       "com.google.common.collect.Iterators$10",
109:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
110:       "com.google.common.collect.AbstractMapEntry",
111:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
112:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
113:       "com.google.common.collect.ImmutableBiMap$Builder",
114:       "com.google.common.base.Predicate",
115:       "com.google.common.collect.Iterators$ConcatenatedIterator",
116:       "com.google.common.base.Joiner",
117:       "com.google.common.collect.GeneralRange",
118:       "com.google.common.collect.AbstractListMultimap",
119:       "com.google.common.collect.NullsFirstOrdering",
120:       "com.google.common.truth.Correspondence$BinaryPredicate",
121:       "org.checkerframework.framework.qual.QualifierForLiterals",
122:       "com.google.common.truth.AssertionErrorWithFacts",
123:       "com.google.common.base.Strings",
124:       "com.google.common.truth.IterableSubject$3",
125:       "com.google.common.collect.Lists$Partition",
126:       "com.google.common.collect.AbstractMapBasedMultimap",
127:       "com.google.common.collect.Lists",
128:       "com.google.common.truth.IterableSubject$1",
129:       "com.google.common.truth.IterableSubject$4",
130:       "com.google.common.collect.Multisets$ImmutableEntry",
131:       "com.google.common.collect.UnmodifiableListIterator",
132:       "com.google.common.collect.TreeMultiset$AvlNode",
133:       "com.google.common.collect.ImmutableMultimap",
134:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
135:       "com.google.common.collect.TreeMultiset$2",
136:       "com.google.common.collect.ImmutableSortedSet",
137:       "com.google.common.base.Functions",
138:       "com.google.common.collect.Sets$4",
139:       "com.google.common.base.Absent",
140:       "com.google.common.collect.Maps$BiMapConverter",
141:       "org.checkerframework.framework.qual.SubtypeOf",
142:       "com.google.common.base.Throwables",
143:       "com.google.common.collect.ImmutableSortedSet$Builder",
144:       "com.google.common.base.Equivalence$Equals",
145:       "com.google.common.truth.Correspondence",
146:       "com.google.common.base.ElementTypesAreNonnullByDefault",
147:       "com.google.common.collect.AbstractMultiset$EntrySet",
148:       "com.google.common.base.Equivalence$Wrapper",
149:       "com.google.common.collect.Sets$ImprovedAbstractSet",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
152:       "com.google.common.truth.StandardSubjectBuilder$1",
153:       "com.google.common.collect.ImmutableEntry",
154:       "com.google.common.base.Joiner$1",
155:       "com.google.common.base.Converter$ConverterComposition",
156:       "com.google.common.collect.EmptyImmutableSetMultimap",
157:       "com.google.common.collect.HashBiMap$EntrySet",
158:       "com.google.common.base.Joiner$2",
159:       "com.google.common.collect.ImmutableList$Itr",
160:       "com.google.common.collect.ImmutableCollection",
161:       "com.google.common.collect.ImmutableEnumMap",
162:       "com.google.common.truth.Ordered",
163:       "com.google.common.collect.TreeMultiset",
164:       "com.google.common.collect.LinkedListMultimap$KeyList",
165:       "com.google.common.collect.Lists$OnePlusArrayList",
166:       "com.google.common.base.Objects",
167:       "com.google.common.collect.CompactHashMap$Itr",
168:       "com.google.common.collect.ImmutableSetMultimap",
169:       "com.google.common.collect.ImmutableCollection$Builder",
170:       "com.google.errorprone.annotations.DoNotMock",
171:       "com.google.common.collect.Iterators$6",
172:       "com.google.common.collect.BiMap",
173:       "com.google.common.collect.IndexedImmutableSet",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.collect.Lists$AbstractListWrapper",
177:       "com.google.common.collect.AbstractMapBasedMultiset",
178:       "com.google.common.collect.Iterators$1",
179:       "com.google.common.collect.CompactHashMap",
180:       "com.google.common.collect.Iterators$4",
181:       "com.google.common.collect.Iterators$5",
182:       "com.google.common.base.Converter$ReverseConverter",
183:       "com.google.common.base.ExtraObjectsMethodsForWeb",
184:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
185:       "com.google.common.truth.Platform",
186:       "com.google.common.collect.Lists$StringAsImmutableList",
187:       "com.google.common.collect.Lists$2",
188:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
189:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
190:       "com.google.common.collect.CompactHashMap$EntrySetView",
191:       "com.google.common.truth.LazyMessage",
192:       "com.google.common.collect.Lists$1",
193:       "com.google.common.collect.ImmutableMultimap$Builder",
194:       "com.google.common.base.Equivalence$Identity",
195:       "com.google.common.truth.Subject$ComparisonResult",
196:       "com.google.common.collect.Multiset",
197:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
198:       "com.google.common.collect.AbstractMultimap",
199:       "com.google.common.base.Supplier",
200:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
201:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
202:       "com.google.common.collect.HashBiMap$View",
203:       "com.google.common.truth.IterableSubject$PairwiseChecker",
204:       "com.google.common.collect.ImmutableList",
205:       "com.google.common.collect.ReverseOrdering",
206:       "com.google.common.collect.FluentIterable$1",
207:       "com.google.common.collect.FluentIterable$2",
208:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
209:       "com.google.common.truth.Fact",
210:       "com.google.common.collect.FluentIterable$3",
211:       "org.checkerframework.checker.nullness.qual.Nullable",
212:       "com.google.common.collect.NullnessCasts",
213:       "org.checkerframework.framework.qual.DefaultFor",
214:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
215:       "com.google.common.collect.SortedMultisetBridge",
216:       "com.google.common.collect.ImmutableMap$Builder",
217:       "com.google.common.base.Converter$FunctionBasedConverter",
218:       "com.google.common.collect.HashBiMap",
219:       "com.google.common.collect.Maps$EntryTransformer",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.collect.FluentIterable$3$1",
222:       "com.google.common.collect.NaturalOrdering",
223:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
224:       "com.google.common.collect.LinkedListMultimap$Node",
225:       "com.google.common.collect.TreeMultiset$Aggregate$2",
226:       "com.google.common.collect.TreeMultiset$Aggregate$1",
227:       "com.google.common.collect.AllEqualOrdering",
228:       "com.google.common.collect.Hashing",
229:       "com.google.common.collect.ImmutableList$SubList",
230:       "com.google.common.collect.ListMultimap",
231:       "com.google.common.base.FunctionalEquivalence",
232:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
233:       "com.google.common.truth.ErrorWithFacts",
234:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
235:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
236:       "com.google.common.collect.RegularImmutableList",
237:       "com.google.common.collect.SortedMultiset",
238:       "com.google.common.truth.IterableSubject",
239:       "com.google.common.collect.FluentIterable",
240:       "com.google.common.base.Optional",
241:       "com.google.common.collect.Lists$TransformingRandomAccessList",
242:       "com.google.common.collect.Iterators$ArrayItr",
243:       "com.google.common.collect.RegularImmutableMap$KeySet",
244:       "com.google.common.collect.BaseImmutableMultimap",
245:       "com.google.common.collect.Multisets",
246:       "com.google.common.collect.CompactHashMap$MapEntry",
247:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
248:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
249:       "com.google.common.collect.SortedMapDifference",
250:       "com.google.common.collect.CompactHashMap$2",
251:       "com.google.common.collect.RegularImmutableSet",
252:       "com.google.common.truth.Subject$EqualityCheck",
253:       "com.google.common.collect.LexicographicalOrdering",
254:       "com.google.common.collect.ImmutableListMultimap",
255:       "com.google.common.base.ParametricNullness",
256:       "com.google.common.collect.ImmutableMultimap$1",
257:       "com.google.common.base.Present",
258:       "com.google.common.collect.ImmutableMultimap$2",
259:       "com.google.common.collect.Iterables",
260:       "com.google.common.collect.LinkedListMultimap$1",
261:       "com.google.common.collect.Sets$SetView",
262:       "com.google.common.collect.ImmutableSet$Builder",
263:       "com.google.common.truth.Correspondence$DiffFormatter",
264:       "com.google.common.collect.SingletonImmutableSet",
265:       "com.google.common.collect.ImmutableSetMultimap$Builder",
266:       "com.google.common.truth.Correspondence$Transforming",
267:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
268:       "com.google.common.collect.ImmutableMultiset",
269:       "com.google.common.truth.Correspondence$ExceptionStore",
270:       "com.google.common.collect.UsingToStringOrdering",
271:       "com.google.common.truth.ComparableSubject",
272:       "com.google.common.collect.Multisets$AbstractEntry",
273:       "com.google.common.collect.ImmutableMultimap$Keys",
274:       "com.google.common.base.Functions$IdentityFunction",
275:       "com.google.common.truth.FailureMetadata",
276:       "com.google.common.collect.Lists$TransformingSequentialList",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.collect.ObjectArrays",
279:       "com.google.common.collect.AbstractIterator",
280:       "com.google.common.truth.Correspondence$FormattingDiffs",
281:       "com.google.common.truth.Correspondence$Equality",
282:       "com.google.common.base.MoreObjects",
283:       "com.google.common.collect.IndexedImmutableSet$1",
284:       "com.google.common.base.Suppliers$MemoizingSupplier",
285:       "com.google.common.collect.MapDifference",
286:       "com.google.common.collect.ObjectCountLinkedHashMap",
287:       "com.google.common.collect.SortedIterable",
288:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
289:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
290:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.ImmutableSortedMultiset",
293:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
294:       "com.google.common.collect.TreeMultiset$Aggregate",
295:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
296:       "com.google.common.collect.Lists$RandomAccessListWrapper",
297:       "com.google.common.collect.ImmutableEnumSet",
298:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
299:       "com.google.common.collect.HashBiMap$View$1",
300:       "com.google.common.collect.ImmutableMultiset$EntrySet",
301:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
302:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
303:       "com.google.common.base.Converter",
304:       "com.google.common.collect.LinkedListMultimap",
305:       "com.google.common.collect.Maps$8",
306:       "com.google.common.base.Function",
307:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ComparatorOrdering",
310:       "com.google.common.collect.AbstractIndexedListIterator",
311:       "com.google.common.collect.HashBiMap$EntryForKey",
312:       "com.google.common.collect.CollectPreconditions",
313:       "com.google.common.collect.Multiset$Entry",
314:       "com.google.common.truth.Subject",
315:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
316:       "com.google.common.primitives.Ints$IntConverter",
317:       "com.google.common.collect.Sets",
318:       "com.google.common.collect.ObjectCountHashMap",
319:       "com.google.common.collect.BoundType",
320:       "com.google.common.collect.ExplicitOrdering",
321:       "com.google.common.collect.CompactHashSet",
322:       "com.google.common.collect.TreeMultiset$Reference",
323:       "com.google.common.collect.ImmutableList$Builder",
324:       "com.google.common.collect.ImmutableMap$1",
325:       "com.google.common.collect.Iterables$5",
326:       "com.google.common.collect.AbstractMultiset",
327:       "com.google.common.collect.Multimap",
328:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
329:       "com.google.common.collect.Iterators",
330:       "com.google.common.collect.CompoundOrdering",
331:       "com.google.common.collect.ImmutableBiMap",
332:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
333:       "com.google.common.collect.ImmutableMultiset$Builder",
334:       "com.google.common.collect.Multisets$EntrySet",
335:       "com.google.common.base.PairwiseEquivalence",
336:       "com.google.common.collect.CompactHashing",
337:       "com.google.common.collect.ImmutableMultiset$1",
338:       "com.google.common.base.Suppliers",
339:       "com.google.common.collect.RegularImmutableMap$EntrySet",
340:       "com.google.common.base.Equivalence",
341:       "com.google.common.collect.ReverseNaturalOrdering",
342:       "com.google.common.truth.StandardSubjectBuilder",
343:       "com.google.common.primitives.Ints",
344:       "com.google.common.collect.Maps",
345:       "com.google.common.collect.SetMultimap",
346:       "com.google.common.collect.TransformedIterator",
347:       "com.google.common.truth.GraphMatching$HopcroftKarp",
348:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
349:       "com.google.common.collect.Iterators$MergingIterator",
350:       "com.google.common.truth.Correspondence$StoredException",
351:       "com.google.common.collect.RegularImmutableSortedSet"
352:     );
353:   } 
354:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
355:     mock(Class.forName("java.util.Comparator", false, IterableSubject_17_tmp__ESTest_scaffolding.class.getClassLoader()));
356:   }
357: 
358:   private static void resetClasses() {
359:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
360: 
361:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
362:       "com.google.common.truth.Subject",
363:       "com.google.common.truth.IterableSubject",
364:       "com.google.common.truth.IterableSubject$2",
365:       "com.google.common.truth.IterableSubject$1",
366:       "com.google.common.truth.IterableSubject$3",
367:       "com.google.common.truth.IterableSubject$4",
368:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
369:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
370:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
371:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
372:       "com.google.common.base.Optional",
373:       "com.google.common.base.Absent",
374:       "com.google.common.collect.ImmutableCollection",
375:       "com.google.common.collect.UnmodifiableIterator",
376:       "com.google.common.collect.UnmodifiableListIterator",
377:       "com.google.common.collect.AbstractIndexedListIterator",
378:       "com.google.common.collect.ImmutableList$Itr",
379:       "com.google.common.collect.ImmutableList",
380:       "com.google.common.collect.Ordering",
381:       "com.google.common.collect.NaturalOrdering",
382:       "com.google.common.truth.Correspondence",
383:       "com.google.common.truth.Correspondence$Equality",
384:       "com.google.common.truth.FailureMetadata",
385:       "com.google.common.truth.Subject$ComparisonResult",
386:       "com.google.common.base.Preconditions",
387:       "com.google.common.collect.Lists",
388:       "com.google.common.collect.Iterables",
389:       "com.google.common.truth.SubjectUtils",
390:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
391:       "com.google.common.collect.ImmutableMultiset",
392:       "com.google.common.collect.ImmutableCollection$Builder",
393:       "com.google.common.collect.ImmutableMultiset$Builder",
394:       "com.google.common.collect.ObjectCountHashMap",
395:       "com.google.common.collect.Hashing",
396:       "com.google.common.primitives.IntsMethodsForWeb",
397:       "com.google.common.primitives.Ints",
398:       "com.google.common.collect.RegularImmutableMultiset",
399:       "com.google.common.collect.ImmutableSet",
400:       "com.google.common.collect.RegularImmutableSet",
401:       "com.google.common.collect.AbstractMultiset",
402:       "com.google.common.collect.ConcurrentHashMultiset",
403:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
404:       "com.google.common.collect.ImmutableSortedMultiset",
405:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
406:       "com.google.common.collect.Sets$ImprovedAbstractSet",
407:       "com.google.common.collect.Multisets$EntrySet",
408:       "com.google.common.collect.AbstractMultiset$EntrySet",
409:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
410:       "com.google.common.collect.AbstractIterator",
411:       "com.google.common.collect.ConcurrentHashMultiset$2",
412:       "com.google.common.collect.AbstractIterator$State",
413:       "com.google.common.collect.ForwardingObject",
414:       "com.google.common.collect.ForwardingIterator",
415:       "com.google.common.collect.ConcurrentHashMultiset$3",
416:       "com.google.common.collect.AbstractIterator$1",
417:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
418:       "com.google.common.collect.ImmutableSortedSet",
419:       "com.google.common.collect.RegularImmutableSortedSet",
420:       "com.google.common.collect.RegularImmutableSortedMultiset",
421:       "com.google.common.collect.Sets",
422:       "com.google.common.collect.AbstractMapBasedMultiset",
423:       "com.google.common.collect.LinkedHashMultiset",
424:       "com.google.common.collect.Multisets",
425:       "com.google.common.collect.ObjectCountLinkedHashMap",
426:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
427:       "com.google.common.collect.AbstractMapBasedMultiset$2",
428:       "com.google.common.collect.Iterators",
429:       "com.google.common.truth.Correspondence$Transforming",
430:       "com.google.common.base.Functions",
431:       "com.google.common.base.Functions$IdentityFunction",
432:       "com.google.common.truth.Correspondence$FormattingDiffs",
433:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
434:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
435:       "com.google.common.base.Present",
436:       "com.google.common.truth.Correspondence$ExceptionStore",
437:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
438:       "com.google.common.collect.AbstractMultimap",
439:       "com.google.common.collect.LinkedListMultimap",
440:       "com.google.common.collect.Platform",
441:       "com.google.common.collect.CompactHashMap",
442:       "com.google.common.collect.Collections2",
443:       "com.google.common.collect.CollectPreconditions",
444:       "com.google.common.truth.Fact",
445:       "com.google.common.collect.ObjectArrays",
446:       "com.google.common.collect.IndexedImmutableSet",
447:       "com.google.common.collect.ImmutableMultiset$EntrySet",
448:       "com.google.common.base.Suppliers",
449:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
450:       "com.google.common.truth.Platform",
451:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
452:       "com.google.common.collect.ImmutableList$Builder",
453:       "com.google.common.collect.AbstractMapBasedMultimap",
454:       "com.google.common.collect.AbstractListMultimap",
455:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
456:       "com.google.common.collect.ArrayListMultimap",
457:       "com.google.common.collect.CompactHashing",
458:       "com.google.common.base.Strings",
459:       "com.google.common.collect.BaseImmutableMultimap",
460:       "com.google.common.collect.ImmutableMultimap",
461:       "com.google.common.collect.ImmutableSetMultimap",
462:       "com.google.common.collect.ImmutableMultimap$Builder",
463:       "com.google.common.collect.ImmutableSetMultimap$Builder",
464:       "com.google.common.collect.CompactHashMap$EntrySetView",
465:       "com.google.common.collect.ImmutableMap",
466:       "com.google.common.collect.RegularImmutableMap",
467:       "com.google.common.collect.EmptyImmutableSetMultimap",
468:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
469:       "com.google.common.collect.ImmutableMultimap$1",
470:       "com.google.common.collect.RegularImmutableMap$EntrySet",
471:       "com.google.common.base.Converter",
472:       "com.google.common.base.Converter$IdentityConverter",
473:       "com.google.common.truth.LazyMessage",
474:       "com.google.common.truth.StandardSubjectBuilder",
475:       "com.google.common.collect.Lists$OnePlusArrayList",
476:       "com.google.common.base.ExtraObjectsMethodsForWeb",
477:       "com.google.common.base.Objects",
478:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
479:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
480:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
481:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
482:       "com.google.common.base.CharMatcher",
483:       "com.google.common.base.CharMatcher$FastMatcher",
484:       "com.google.common.base.CharMatcher$Is",
485:       "com.google.common.base.CharMatcher$InRange",
486:       "com.google.common.base.CaseFormat",
487:       "com.google.common.base.Ascii",
488:       "com.google.common.collect.AbstractSortedMultiset",
489:       "com.google.common.collect.TreeMultiset",
490:       "com.google.common.collect.GeneralRange",
491:       "com.google.common.collect.TreeMultiset$AvlNode",
492:       "com.google.common.collect.TreeMultiset$Reference",
493:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
494:       "com.google.common.collect.TreeMultiset$2",
495:       "com.google.common.collect.CompactHashSet",
496:       "com.google.common.collect.ImmutableMap$Builder",
497:       "com.google.common.collect.CompactHashMap$Itr",
498:       "com.google.common.collect.CompactHashMap$2",
499:       "com.google.common.collect.AbstractMapEntry",
500:       "com.google.common.collect.CompactHashMap$MapEntry",
501:       "com.google.common.base.Converter$FunctionBasedConverter",
502:       "com.google.common.base.Converter$ConverterComposition",
503:       "com.google.common.base.Joiner",
504:       "com.google.common.base.Joiner$1",
505:       "com.google.common.truth.Correspondence$StoredException",
506:       "com.google.common.collect.HashMultiset",
507:       "com.google.common.base.Converter$ReverseConverter",
508:       "com.google.common.truth.Subject$EqualityCheck",
509:       "com.google.common.collect.LinkedListMultimap$Node",
510:       "com.google.common.collect.LinkedListMultimap$KeyList",
511:       "com.google.common.collect.NullnessCasts",
512:       "com.google.common.collect.TreeMultiset$Aggregate",
513:       "com.google.common.base.Equivalence",
514:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
515:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
516:       "com.google.common.base.Equivalence$Wrapper",
517:       "com.google.common.collect.FluentIterable",
518:       "com.google.common.collect.Iterables$5",
519:       "com.google.common.collect.TransformedIterator",
520:       "com.google.common.collect.Iterators$6",
521:       "com.google.common.collect.Multisets$AbstractEntry",
522:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
523:       "com.google.common.collect.Multisets$ImmutableEntry",
524:       "com.google.common.collect.TreeMultiset$1",
525:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
526:       "com.google.common.collect.SingletonImmutableSet",
527:       "com.google.common.base.NullnessCasts",
528:       "com.google.common.collect.BoundType",
529:       "com.google.common.collect.RegularImmutableList",
530:       "com.google.common.math.IntMath",
531:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
532:       "com.google.common.collect.FluentIterable$3",
533:       "com.google.common.collect.FluentIterable$3$1",
534:       "com.google.common.collect.Iterators$ConcatenatedIterator",
535:       "com.google.common.collect.Iterators$ArrayItr",
536:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
537:       "com.google.common.collect.RegularImmutableMap$KeySet",
538:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
539:       "com.google.common.truth.GraphMatching",
540:       "com.google.common.truth.GraphMatching$HopcroftKarp",
541:       "com.google.common.collect.HashBiMap",
542:       "com.google.common.collect.ImmutableBiMap",
543:       "com.google.common.collect.HashBiMap$View",
544:       "com.google.common.collect.HashBiMap$EntrySet",
545:       "com.google.common.collect.ImmutableBiMap$Builder",
546:       "com.google.common.collect.HashBiMap$View$1",
547:       "com.google.common.collect.RegularImmutableBiMap",
548:       "com.google.common.collect.Maps",
549:       "com.google.common.base.MoreObjects",
550:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
551:       "com.google.common.collect.Iterators$9",
552:       "com.google.common.collect.ImmutableEntry",
553:       "com.google.common.collect.HashBiMap$EntryForKey",
554:       "com.google.common.collect.LinkedListMultimap$1",
555:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
556:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
557:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
558:       "com.google.common.base.Throwables",
559:       "com.google.common.collect.ImmutableMultiset$1",
560:       "com.google.common.collect.IndexedImmutableSet$1"
561:     );
562:   }
563: }

[MASTER] 16:10:36.021 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
iterableSubject0.isEqualTo((Object) null);

[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_46_1731035437155/com/google/common/truth/IterableSubject_46_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_46_1731035437155/com/google/common/truth/IterableSubject_46_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 26
[MASTER] 16:10:37.191 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 19
[MASTER] 16:10:37.192 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkState
  location: class: 21
[MASTER] 16:10:37.192 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 20
[MASTER] 16:10:37.192 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 19
[MASTER] 16:10:37.192 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:37.192 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:37.193 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:37.193 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_46_1731035437155/com/google/common/truth/IterableSubject_46_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:37 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.TreeMultiset;
12: import com.google.common.truth.Correspondence;
13: import com.google.common.truth.FailureMetadata;
14: import com.google.common.truth.IterableSubject;
15: import com.google.common.truth.Ordered;
16: import java.util.Comparator;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class IterableSubject_46_tmp__ESTest extends IterableSubject_46_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
28:       TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
29:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
30:       Correspondence.DiffFormatter<Object, Object> correspondence_DiffFormatter0 = (Correspondence.DiffFormatter<Object, Object>) mock(Correspondence.DiffFormatter.class, new ViolatedAssumptionAnswer());
31:       IterableSubject.UsingCorrespondence<Object, Object> iterableSubject_UsingCorrespondence0 = iterableSubject0.formattingDiffsUsing((Correspondence.DiffFormatter<? super Object, ? super Object>) correspondence_DiffFormatter0);
32:       Ordered ordered0 = iterableSubject_UsingCorrespondence0.containsExactlyElementsIn((Iterable<?>) treeMultiset0);
33:       assertNotNull(ordered0);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_46_1731035437155/com/google/common/truth/IterableSubject_46_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:37 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class IterableSubject_46_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_46_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.ArrayListMultimap",
84:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
85:       "com.google.common.collect.Lists$RandomAccessPartition",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
89:       "com.google.common.truth.SubjectUtils",
90:       "com.google.common.math.IntMath",
91:       "com.google.common.collect.LinkedHashMultiset",
92:       "com.google.common.truth.GraphMatching",
93:       "com.google.common.collect.AbstractMapBasedMultiset$2",
94:       "com.google.common.collect.Sets$2",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.collect.NullsLastOrdering",
100:       "com.google.common.collect.RegularImmutableMultiset",
101:       "com.google.common.collect.RegularImmutableMap",
102:       "com.google.common.collect.RegularImmutableBiMap",
103:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.collect.ImmutableMultimap$Values",
106:       "com.google.common.collect.ByFunctionOrdering",
107:       "com.google.common.collect.AbstractSortedMultiset",
108:       "com.google.common.collect.Iterators$10",
109:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
110:       "com.google.common.collect.AbstractMapEntry",
111:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
112:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
113:       "com.google.common.collect.ImmutableBiMap$Builder",
114:       "com.google.common.base.Predicate",
115:       "com.google.common.collect.Iterators$ConcatenatedIterator",
116:       "com.google.common.base.Joiner",
117:       "com.google.common.collect.GeneralRange",
118:       "com.google.common.collect.AbstractListMultimap",
119:       "com.google.common.collect.NullsFirstOrdering",
120:       "com.google.common.truth.Correspondence$BinaryPredicate",
121:       "org.checkerframework.framework.qual.QualifierForLiterals",
122:       "com.google.common.truth.AssertionErrorWithFacts",
123:       "com.google.common.base.Strings",
124:       "com.google.common.truth.IterableSubject$3",
125:       "com.google.common.collect.Lists$Partition",
126:       "com.google.common.collect.AbstractMapBasedMultimap",
127:       "com.google.common.collect.Lists",
128:       "com.google.common.truth.IterableSubject$1",
129:       "com.google.common.truth.IterableSubject$4",
130:       "com.google.common.collect.Multisets$ImmutableEntry",
131:       "com.google.common.collect.UnmodifiableListIterator",
132:       "com.google.common.collect.TreeMultiset$AvlNode",
133:       "com.google.common.collect.ImmutableMultimap",
134:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
135:       "com.google.common.collect.TreeMultiset$2",
136:       "com.google.common.collect.ImmutableSortedSet",
137:       "com.google.common.base.Functions",
138:       "com.google.common.collect.Sets$4",
139:       "com.google.common.base.Absent",
140:       "com.google.common.collect.Maps$BiMapConverter",
141:       "org.checkerframework.framework.qual.SubtypeOf",
142:       "com.google.common.base.Throwables",
143:       "com.google.common.collect.ImmutableSortedSet$Builder",
144:       "com.google.common.base.Equivalence$Equals",
145:       "com.google.common.truth.Correspondence",
146:       "com.google.common.base.ElementTypesAreNonnullByDefault",
147:       "com.google.common.collect.AbstractMultiset$EntrySet",
148:       "com.google.common.base.Equivalence$Wrapper",
149:       "com.google.common.collect.Sets$ImprovedAbstractSet",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
152:       "com.google.common.truth.StandardSubjectBuilder$1",
153:       "com.google.common.collect.ImmutableEntry",
154:       "com.google.common.base.Joiner$1",
155:       "com.google.common.base.Converter$ConverterComposition",
156:       "com.google.common.collect.EmptyImmutableSetMultimap",
157:       "com.google.common.collect.HashBiMap$EntrySet",
158:       "com.google.common.base.Joiner$2",
159:       "com.google.common.collect.ImmutableList$Itr",
160:       "com.google.common.collect.ImmutableCollection",
161:       "com.google.common.collect.ImmutableEnumMap",
162:       "com.google.common.truth.Ordered",
163:       "com.google.common.collect.TreeMultiset",
164:       "com.google.common.collect.LinkedListMultimap$KeyList",
165:       "com.google.common.collect.Lists$OnePlusArrayList",
166:       "com.google.common.base.Objects",
167:       "com.google.common.collect.CompactHashMap$Itr",
168:       "com.google.common.collect.ImmutableSetMultimap",
169:       "com.google.common.collect.ImmutableCollection$Builder",
170:       "com.google.errorprone.annotations.DoNotMock",
171:       "com.google.common.collect.Iterators$6",
172:       "com.google.common.collect.BiMap",
173:       "com.google.common.collect.IndexedImmutableSet",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.collect.Lists$AbstractListWrapper",
177:       "com.google.common.collect.AbstractMapBasedMultiset",
178:       "com.google.common.collect.Iterators$1",
179:       "com.google.common.collect.CompactHashMap",
180:       "com.google.common.collect.Iterators$4",
181:       "com.google.common.collect.Iterators$5",
182:       "com.google.common.base.Converter$ReverseConverter",
183:       "com.google.common.base.ExtraObjectsMethodsForWeb",
184:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
185:       "com.google.common.truth.Platform",
186:       "com.google.common.collect.Lists$StringAsImmutableList",
187:       "com.google.common.collect.Lists$2",
188:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
189:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
190:       "com.google.common.collect.CompactHashMap$EntrySetView",
191:       "com.google.common.truth.LazyMessage",
192:       "com.google.common.collect.Lists$1",
193:       "com.google.common.collect.ImmutableMultimap$Builder",
194:       "com.google.common.base.Equivalence$Identity",
195:       "com.google.common.truth.Subject$ComparisonResult",
196:       "com.google.common.collect.Multiset",
197:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
198:       "com.google.common.collect.AbstractMultimap",
199:       "com.google.common.base.Supplier",
200:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
201:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
202:       "com.google.common.collect.HashBiMap$View",
203:       "com.google.common.truth.IterableSubject$PairwiseChecker",
204:       "com.google.common.collect.ImmutableList",
205:       "com.google.common.collect.ReverseOrdering",
206:       "com.google.common.collect.FluentIterable$1",
207:       "com.google.common.collect.FluentIterable$2",
208:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
209:       "com.google.common.truth.Fact",
210:       "com.google.common.collect.FluentIterable$3",
211:       "org.checkerframework.checker.nullness.qual.Nullable",
212:       "com.google.common.collect.NullnessCasts",
213:       "org.checkerframework.framework.qual.DefaultFor",
214:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
215:       "com.google.common.collect.SortedMultisetBridge",
216:       "com.google.common.collect.ImmutableMap$Builder",
217:       "com.google.common.base.Converter$FunctionBasedConverter",
218:       "com.google.common.collect.HashBiMap",
219:       "com.google.common.collect.Maps$EntryTransformer",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.collect.FluentIterable$3$1",
222:       "com.google.common.collect.NaturalOrdering",
223:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
224:       "com.google.common.collect.LinkedListMultimap$Node",
225:       "com.google.common.collect.TreeMultiset$Aggregate$2",
226:       "com.google.common.collect.TreeMultiset$Aggregate$1",
227:       "com.google.common.collect.AllEqualOrdering",
228:       "com.google.common.collect.Hashing",
229:       "com.google.common.collect.ImmutableList$SubList",
230:       "com.google.common.collect.ListMultimap",
231:       "com.google.common.base.FunctionalEquivalence",
232:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
233:       "com.google.common.truth.ErrorWithFacts",
234:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
235:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
236:       "com.google.common.collect.RegularImmutableList",
237:       "com.google.common.collect.SortedMultiset",
238:       "com.google.common.truth.IterableSubject",
239:       "com.google.common.collect.FluentIterable",
240:       "com.google.common.base.Optional",
241:       "com.google.common.collect.Lists$TransformingRandomAccessList",
242:       "com.google.common.collect.Iterators$ArrayItr",
243:       "com.google.common.collect.RegularImmutableMap$KeySet",
244:       "com.google.common.collect.BaseImmutableMultimap",
245:       "com.google.common.collect.Multisets",
246:       "com.google.common.collect.CompactHashMap$MapEntry",
247:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
248:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
249:       "com.google.common.collect.SortedMapDifference",
250:       "com.google.common.collect.CompactHashMap$2",
251:       "com.google.common.collect.RegularImmutableSet",
252:       "com.google.common.truth.Subject$EqualityCheck",
253:       "com.google.common.collect.LexicographicalOrdering",
254:       "com.google.common.collect.ImmutableListMultimap",
255:       "com.google.common.base.ParametricNullness",
256:       "com.google.common.collect.ImmutableMultimap$1",
257:       "com.google.common.base.Present",
258:       "com.google.common.collect.ImmutableMultimap$2",
259:       "com.google.common.collect.Iterables",
260:       "com.google.common.collect.LinkedListMultimap$1",
261:       "com.google.common.collect.Sets$SetView",
262:       "com.google.common.collect.ImmutableSet$Builder",
263:       "com.google.common.truth.Correspondence$DiffFormatter",
264:       "com.google.common.collect.SingletonImmutableSet",
265:       "com.google.common.collect.ImmutableSetMultimap$Builder",
266:       "com.google.common.truth.Correspondence$Transforming",
267:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
268:       "com.google.common.collect.ImmutableMultiset",
269:       "com.google.common.truth.Correspondence$ExceptionStore",
270:       "com.google.common.collect.UsingToStringOrdering",
271:       "com.google.common.truth.ComparableSubject",
272:       "com.google.common.collect.Multisets$AbstractEntry",
273:       "com.google.common.collect.ImmutableMultimap$Keys",
274:       "com.google.common.base.Functions$IdentityFunction",
275:       "com.google.common.truth.FailureMetadata",
276:       "com.google.common.collect.Lists$TransformingSequentialList",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.collect.ObjectArrays",
279:       "com.google.common.collect.AbstractIterator",
280:       "com.google.common.truth.Correspondence$FormattingDiffs",
281:       "com.google.common.truth.Correspondence$Equality",
282:       "com.google.common.base.MoreObjects",
283:       "com.google.common.collect.IndexedImmutableSet$1",
284:       "com.google.common.base.Suppliers$MemoizingSupplier",
285:       "com.google.common.collect.MapDifference",
286:       "com.google.common.collect.ObjectCountLinkedHashMap",
287:       "com.google.common.collect.SortedIterable",
288:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
289:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
290:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.ImmutableSortedMultiset",
293:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
294:       "com.google.common.collect.TreeMultiset$Aggregate",
295:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
296:       "com.google.common.collect.Lists$RandomAccessListWrapper",
297:       "com.google.common.collect.ImmutableEnumSet",
298:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
299:       "com.google.common.collect.HashBiMap$View$1",
300:       "com.google.common.collect.ImmutableMultiset$EntrySet",
301:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
302:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
303:       "com.google.common.base.Converter",
304:       "com.google.common.collect.LinkedListMultimap",
305:       "com.google.common.collect.Maps$8",
306:       "com.google.common.base.Function",
307:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ComparatorOrdering",
310:       "com.google.common.collect.AbstractIndexedListIterator",
311:       "com.google.common.collect.HashBiMap$EntryForKey",
312:       "com.google.common.collect.CollectPreconditions",
313:       "com.google.common.collect.Multiset$Entry",
314:       "com.google.common.truth.Subject",
315:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
316:       "com.google.common.primitives.Ints$IntConverter",
317:       "com.google.common.collect.Sets",
318:       "com.google.common.collect.ObjectCountHashMap",
319:       "com.google.common.collect.BoundType",
320:       "com.google.common.collect.ExplicitOrdering",
321:       "com.google.common.collect.CompactHashSet",
322:       "com.google.common.collect.TreeMultiset$Reference",
323:       "com.google.common.collect.ImmutableList$Builder",
324:       "com.google.common.collect.ImmutableMap$1",
325:       "com.google.common.collect.Iterables$5",
326:       "com.google.common.collect.AbstractMultiset",
327:       "com.google.common.collect.Multimap",
328:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
329:       "com.google.common.collect.Iterators",
330:       "com.google.common.collect.CompoundOrdering",
331:       "com.google.common.collect.ImmutableBiMap",
332:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
333:       "com.google.common.collect.ImmutableMultiset$Builder",
334:       "com.google.common.collect.Multisets$EntrySet",
335:       "com.google.common.base.PairwiseEquivalence",
336:       "com.google.common.collect.CompactHashing",
337:       "com.google.common.collect.ImmutableMultiset$1",
338:       "com.google.common.base.Suppliers",
339:       "com.google.common.collect.RegularImmutableMap$EntrySet",
340:       "com.google.common.base.Equivalence",
341:       "com.google.common.collect.ReverseNaturalOrdering",
342:       "com.google.common.truth.StandardSubjectBuilder",
343:       "com.google.common.primitives.Ints",
344:       "com.google.common.collect.Maps",
345:       "com.google.common.collect.SetMultimap",
346:       "com.google.common.collect.TransformedIterator",
347:       "com.google.common.truth.GraphMatching$HopcroftKarp",
348:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
349:       "com.google.common.collect.Iterators$MergingIterator",
350:       "com.google.common.truth.Correspondence$StoredException",
351:       "com.google.common.collect.RegularImmutableSortedSet"
352:     );
353:   } 
354:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
355:     mock(Class.forName("com.google.common.truth.Correspondence$DiffFormatter", false, IterableSubject_46_tmp__ESTest_scaffolding.class.getClassLoader()));
356:     mock(Class.forName("java.util.Comparator", false, IterableSubject_46_tmp__ESTest_scaffolding.class.getClassLoader()));
357:   }
358: 
359:   private static void resetClasses() {
360:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_46_tmp__ESTest_scaffolding.class.getClassLoader()); 
361: 
362:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
363:       "com.google.common.truth.Subject",
364:       "com.google.common.truth.IterableSubject",
365:       "com.google.common.truth.IterableSubject$2",
366:       "com.google.common.truth.IterableSubject$1",
367:       "com.google.common.truth.IterableSubject$3",
368:       "com.google.common.truth.IterableSubject$4",
369:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
370:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
371:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
372:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
373:       "com.google.common.base.Optional",
374:       "com.google.common.base.Absent",
375:       "com.google.common.collect.ImmutableCollection",
376:       "com.google.common.collect.UnmodifiableIterator",
377:       "com.google.common.collect.UnmodifiableListIterator",
378:       "com.google.common.collect.AbstractIndexedListIterator",
379:       "com.google.common.collect.ImmutableList$Itr",
380:       "com.google.common.collect.ImmutableList",
381:       "com.google.common.collect.Ordering",
382:       "com.google.common.collect.NaturalOrdering",
383:       "com.google.common.truth.Correspondence",
384:       "com.google.common.truth.Correspondence$Equality",
385:       "com.google.common.truth.FailureMetadata",
386:       "com.google.common.truth.Subject$ComparisonResult",
387:       "com.google.common.base.Preconditions",
388:       "com.google.common.collect.Lists",
389:       "com.google.common.collect.Iterables",
390:       "com.google.common.truth.SubjectUtils",
391:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
392:       "com.google.common.collect.ImmutableMultiset",
393:       "com.google.common.collect.ImmutableCollection$Builder",
394:       "com.google.common.collect.ImmutableMultiset$Builder",
395:       "com.google.common.collect.ObjectCountHashMap",
396:       "com.google.common.collect.Hashing",
397:       "com.google.common.primitives.IntsMethodsForWeb",
398:       "com.google.common.primitives.Ints",
399:       "com.google.common.collect.RegularImmutableMultiset",
400:       "com.google.common.collect.ImmutableSet",
401:       "com.google.common.collect.RegularImmutableSet",
402:       "com.google.common.collect.AbstractMultiset",
403:       "com.google.common.collect.ConcurrentHashMultiset",
404:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
405:       "com.google.common.collect.ImmutableSortedMultiset",
406:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
407:       "com.google.common.collect.Sets$ImprovedAbstractSet",
408:       "com.google.common.collect.Multisets$EntrySet",
409:       "com.google.common.collect.AbstractMultiset$EntrySet",
410:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
411:       "com.google.common.collect.AbstractIterator",
412:       "com.google.common.collect.ConcurrentHashMultiset$2",
413:       "com.google.common.collect.AbstractIterator$State",
414:       "com.google.common.collect.ForwardingObject",
415:       "com.google.common.collect.ForwardingIterator",
416:       "com.google.common.collect.ConcurrentHashMultiset$3",
417:       "com.google.common.collect.AbstractIterator$1",
418:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
419:       "com.google.common.collect.ImmutableSortedSet",
420:       "com.google.common.collect.RegularImmutableSortedSet",
421:       "com.google.common.collect.RegularImmutableSortedMultiset",
422:       "com.google.common.collect.Sets",
423:       "com.google.common.collect.AbstractMapBasedMultiset",
424:       "com.google.common.collect.LinkedHashMultiset",
425:       "com.google.common.collect.Multisets",
426:       "com.google.common.collect.ObjectCountLinkedHashMap",
427:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
428:       "com.google.common.collect.AbstractMapBasedMultiset$2",
429:       "com.google.common.collect.Iterators",
430:       "com.google.common.truth.Correspondence$Transforming",
431:       "com.google.common.base.Functions",
432:       "com.google.common.base.Functions$IdentityFunction",
433:       "com.google.common.truth.Correspondence$FormattingDiffs",
434:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
435:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
436:       "com.google.common.base.Present",
437:       "com.google.common.truth.Correspondence$ExceptionStore",
438:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
439:       "com.google.common.collect.AbstractMultimap",
440:       "com.google.common.collect.LinkedListMultimap",
441:       "com.google.common.collect.Platform",
442:       "com.google.common.collect.CompactHashMap",
443:       "com.google.common.collect.Collections2",
444:       "com.google.common.collect.CollectPreconditions",
445:       "com.google.common.truth.Fact",
446:       "com.google.common.collect.ObjectArrays",
447:       "com.google.common.collect.IndexedImmutableSet",
448:       "com.google.common.collect.ImmutableMultiset$EntrySet",
449:       "com.google.common.base.Suppliers",
450:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
451:       "com.google.common.truth.Platform",
452:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
453:       "com.google.common.collect.ImmutableList$Builder",
454:       "com.google.common.collect.AbstractMapBasedMultimap",
455:       "com.google.common.collect.AbstractListMultimap",
456:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
457:       "com.google.common.collect.ArrayListMultimap",
458:       "com.google.common.collect.CompactHashing",
459:       "com.google.common.base.Strings",
460:       "com.google.common.collect.BaseImmutableMultimap",
461:       "com.google.common.collect.ImmutableMultimap",
462:       "com.google.common.collect.ImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableMultimap$Builder",
464:       "com.google.common.collect.ImmutableSetMultimap$Builder",
465:       "com.google.common.collect.CompactHashMap$EntrySetView",
466:       "com.google.common.collect.ImmutableMap",
467:       "com.google.common.collect.RegularImmutableMap",
468:       "com.google.common.collect.EmptyImmutableSetMultimap",
469:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
470:       "com.google.common.collect.ImmutableMultimap$1",
471:       "com.google.common.collect.RegularImmutableMap$EntrySet",
472:       "com.google.common.base.Converter",
473:       "com.google.common.base.Converter$IdentityConverter",
474:       "com.google.common.truth.LazyMessage",
475:       "com.google.common.truth.StandardSubjectBuilder",
476:       "com.google.common.collect.Lists$OnePlusArrayList",
477:       "com.google.common.base.ExtraObjectsMethodsForWeb",
478:       "com.google.common.base.Objects",
479:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
480:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
481:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
482:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
483:       "com.google.common.base.CharMatcher",
484:       "com.google.common.base.CharMatcher$FastMatcher",
485:       "com.google.common.base.CharMatcher$Is",
486:       "com.google.common.base.CharMatcher$InRange",
487:       "com.google.common.base.CaseFormat",
488:       "com.google.common.base.Ascii",
489:       "com.google.common.collect.AbstractSortedMultiset",
490:       "com.google.common.collect.TreeMultiset",
491:       "com.google.common.collect.GeneralRange",
492:       "com.google.common.collect.TreeMultiset$AvlNode",
493:       "com.google.common.collect.TreeMultiset$Reference",
494:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
495:       "com.google.common.collect.TreeMultiset$2",
496:       "com.google.common.collect.CompactHashSet",
497:       "com.google.common.collect.ImmutableMap$Builder",
498:       "com.google.common.collect.CompactHashMap$Itr",
499:       "com.google.common.collect.CompactHashMap$2",
500:       "com.google.common.collect.AbstractMapEntry",
501:       "com.google.common.collect.CompactHashMap$MapEntry",
502:       "com.google.common.base.Converter$FunctionBasedConverter",
503:       "com.google.common.base.Converter$ConverterComposition",
504:       "com.google.common.base.Joiner",
505:       "com.google.common.base.Joiner$1",
506:       "com.google.common.truth.Correspondence$StoredException",
507:       "com.google.common.collect.HashMultiset",
508:       "com.google.common.base.Converter$ReverseConverter",
509:       "com.google.common.truth.Subject$EqualityCheck",
510:       "com.google.common.collect.LinkedListMultimap$Node",
511:       "com.google.common.collect.LinkedListMultimap$KeyList",
512:       "com.google.common.collect.NullnessCasts",
513:       "com.google.common.collect.TreeMultiset$Aggregate",
514:       "com.google.common.base.Equivalence",
515:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
516:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
517:       "com.google.common.base.Equivalence$Wrapper",
518:       "com.google.common.collect.FluentIterable",
519:       "com.google.common.collect.Iterables$5",
520:       "com.google.common.collect.TransformedIterator",
521:       "com.google.common.collect.Iterators$6",
522:       "com.google.common.collect.Multisets$AbstractEntry",
523:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
524:       "com.google.common.collect.Multisets$ImmutableEntry",
525:       "com.google.common.collect.TreeMultiset$1",
526:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
527:       "com.google.common.collect.SingletonImmutableSet",
528:       "com.google.common.base.NullnessCasts",
529:       "com.google.common.collect.BoundType",
530:       "com.google.common.collect.RegularImmutableList",
531:       "com.google.common.math.IntMath",
532:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
533:       "com.google.common.collect.FluentIterable$3",
534:       "com.google.common.collect.FluentIterable$3$1",
535:       "com.google.common.collect.Iterators$ConcatenatedIterator",
536:       "com.google.common.collect.Iterators$ArrayItr",
537:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
538:       "com.google.common.collect.RegularImmutableMap$KeySet",
539:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
540:       "com.google.common.truth.GraphMatching",
541:       "com.google.common.truth.GraphMatching$HopcroftKarp",
542:       "com.google.common.collect.HashBiMap",
543:       "com.google.common.collect.ImmutableBiMap",
544:       "com.google.common.collect.HashBiMap$View",
545:       "com.google.common.collect.HashBiMap$EntrySet",
546:       "com.google.common.collect.ImmutableBiMap$Builder",
547:       "com.google.common.collect.HashBiMap$View$1",
548:       "com.google.common.collect.RegularImmutableBiMap",
549:       "com.google.common.collect.Maps",
550:       "com.google.common.base.MoreObjects",
551:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
552:       "com.google.common.collect.Iterators$9",
553:       "com.google.common.collect.ImmutableEntry",
554:       "com.google.common.collect.HashBiMap$EntryForKey",
555:       "com.google.common.collect.LinkedListMultimap$1",
556:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
557:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
558:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
559:       "com.google.common.base.Throwables",
560:       "com.google.common.collect.ImmutableMultiset$1",
561:       "com.google.common.collect.IndexedImmutableSet$1"
562:     );
563:   }
564: }

[MASTER] 16:10:37.194 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
TreeMultiset<Object> treeMultiset0 = TreeMultiset.create((Comparator<? super Object>) comparator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, treeMultiset0);
Correspondence.DiffFormatter<Object, Object> correspondence_DiffFormatter0 = (Correspondence.DiffFormatter<Object, Object>) mock(Correspondence.DiffFormatter.class, new ViolatedAssumptionAnswer());
IterableSubject.UsingCorrespondence<Object, Object> iterableSubject_UsingCorrespondence0 = iterableSubject0.formattingDiffsUsing((Correspondence.DiffFormatter<? super Object, ? super Object>) correspondence_DiffFormatter0);
Ordered ordered0 = iterableSubject_UsingCorrespondence0.containsExactlyElementsIn((Iterable<?>) treeMultiset0);
assertNotNull(ordered0);


[MASTER] 16:10:38.311 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_62_1731035438266/com/google/common/truth/IterableSubject_62_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_62_1731035438266/com/google/common/truth/IterableSubject_62_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:38.311 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.311 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.311 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:38.312 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 169
[MASTER] 16:10:38.312 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.313 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.313 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:38.314 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:38.314 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:38.315 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_62_1731035438266/com/google/common/truth/IterableSubject_62_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:38 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableMultiset;
11: import com.google.common.truth.FailureMetadata;
12: import com.google.common.truth.IterableSubject;
13: import java.sql.SQLNonTransientConnectionException;
14: import java.util.Iterator;
15: import java.util.LinkedList;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class IterableSubject_62_tmp__ESTest extends IterableSubject_62_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
26:       Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
27:       ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
28:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
29:       String string0 = iterableSubject0.actualCustomStringRepresentation();
30:       assertEquals("[]", string0);
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_62_1731035438266/com/google/common/truth/IterableSubject_62_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:38 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class IterableSubject_62_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_62_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ArrayListMultimap",
82:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.collect.Collections2",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
87:       "com.google.common.truth.SubjectUtils",
88:       "com.google.common.math.IntMath",
89:       "com.google.common.collect.LinkedHashMultiset",
90:       "com.google.common.truth.GraphMatching",
91:       "com.google.common.collect.AbstractMapBasedMultiset$2",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Sets$3",
94:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.Platform",
97:       "com.google.common.collect.NullsLastOrdering",
98:       "com.google.common.collect.RegularImmutableMultiset",
99:       "com.google.common.collect.RegularImmutableMap",
100:       "com.google.common.collect.RegularImmutableBiMap",
101:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
102:       "com.google.common.base.Converter$IdentityConverter",
103:       "com.google.common.collect.ImmutableMultimap$Values",
104:       "com.google.common.collect.ByFunctionOrdering",
105:       "com.google.common.collect.AbstractSortedMultiset",
106:       "com.google.common.collect.Iterators$10",
107:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
108:       "com.google.common.collect.AbstractMapEntry",
109:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
110:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
111:       "com.google.common.collect.ImmutableBiMap$Builder",
112:       "com.google.common.base.Predicate",
113:       "com.google.common.collect.Iterators$ConcatenatedIterator",
114:       "com.google.common.base.Joiner",
115:       "com.google.common.collect.GeneralRange",
116:       "com.google.common.collect.AbstractListMultimap",
117:       "com.google.common.collect.NullsFirstOrdering",
118:       "com.google.common.truth.Correspondence$BinaryPredicate",
119:       "org.checkerframework.framework.qual.QualifierForLiterals",
120:       "com.google.common.truth.AssertionErrorWithFacts",
121:       "com.google.common.base.Strings",
122:       "com.google.common.truth.IterableSubject$3",
123:       "com.google.common.collect.Lists$Partition",
124:       "com.google.common.collect.AbstractMapBasedMultimap",
125:       "com.google.common.collect.Lists",
126:       "com.google.common.truth.IterableSubject$1",
127:       "com.google.common.truth.IterableSubject$4",
128:       "com.google.common.collect.Multisets$ImmutableEntry",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.collect.TreeMultiset$AvlNode",
131:       "com.google.common.collect.ImmutableMultimap",
132:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
133:       "com.google.common.collect.TreeMultiset$2",
134:       "com.google.common.collect.ImmutableSortedSet",
135:       "com.google.common.base.Functions",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "org.checkerframework.framework.qual.SubtypeOf",
140:       "com.google.common.base.Throwables",
141:       "com.google.common.collect.ImmutableSortedSet$Builder",
142:       "com.google.common.base.Equivalence$Equals",
143:       "com.google.common.truth.Correspondence",
144:       "com.google.common.base.ElementTypesAreNonnullByDefault",
145:       "com.google.common.collect.AbstractMultiset$EntrySet",
146:       "com.google.common.base.Equivalence$Wrapper",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.base.Preconditions",
149:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
150:       "com.google.common.truth.StandardSubjectBuilder$1",
151:       "com.google.common.collect.ImmutableEntry",
152:       "com.google.common.base.Joiner$1",
153:       "com.google.common.base.Converter$ConverterComposition",
154:       "com.google.common.collect.EmptyImmutableSetMultimap",
155:       "com.google.common.collect.HashBiMap$EntrySet",
156:       "com.google.common.base.Joiner$2",
157:       "com.google.common.collect.ImmutableList$Itr",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.collect.ImmutableEnumMap",
160:       "com.google.common.truth.Ordered",
161:       "com.google.common.collect.TreeMultiset",
162:       "com.google.common.collect.LinkedListMultimap$KeyList",
163:       "com.google.common.collect.Lists$OnePlusArrayList",
164:       "com.google.common.base.Objects",
165:       "com.google.common.collect.CompactHashMap$Itr",
166:       "com.google.common.collect.ImmutableSetMultimap",
167:       "com.google.common.collect.ImmutableCollection$Builder",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Iterators$6",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.collect.ImmutableSet",
173:       "com.google.common.collect.Iterators$9",
174:       "com.google.common.collect.Lists$AbstractListWrapper",
175:       "com.google.common.collect.AbstractMapBasedMultiset",
176:       "com.google.common.collect.Iterators$1",
177:       "com.google.common.collect.CompactHashMap",
178:       "com.google.common.collect.Iterators$4",
179:       "com.google.common.collect.Iterators$5",
180:       "com.google.common.base.Converter$ReverseConverter",
181:       "com.google.common.base.ExtraObjectsMethodsForWeb",
182:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
183:       "com.google.common.truth.Platform",
184:       "com.google.common.collect.Lists$StringAsImmutableList",
185:       "com.google.common.collect.Lists$2",
186:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
187:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
188:       "com.google.common.collect.CompactHashMap$EntrySetView",
189:       "com.google.common.truth.LazyMessage",
190:       "com.google.common.collect.Lists$1",
191:       "com.google.common.collect.ImmutableMultimap$Builder",
192:       "com.google.common.base.Equivalence$Identity",
193:       "com.google.common.truth.Subject$ComparisonResult",
194:       "com.google.common.collect.Multiset",
195:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
196:       "com.google.common.collect.AbstractMultimap",
197:       "com.google.common.base.Supplier",
198:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
199:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
200:       "com.google.common.collect.HashBiMap$View",
201:       "com.google.common.truth.IterableSubject$PairwiseChecker",
202:       "com.google.common.collect.ImmutableList",
203:       "com.google.common.collect.ReverseOrdering",
204:       "com.google.common.collect.FluentIterable$1",
205:       "com.google.common.collect.FluentIterable$2",
206:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
207:       "com.google.common.truth.Fact",
208:       "com.google.common.collect.FluentIterable$3",
209:       "org.checkerframework.checker.nullness.qual.Nullable",
210:       "com.google.common.collect.NullnessCasts",
211:       "org.checkerframework.framework.qual.DefaultFor",
212:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
213:       "com.google.common.collect.SortedMultisetBridge",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.base.Converter$FunctionBasedConverter",
216:       "com.google.common.collect.HashBiMap",
217:       "com.google.common.collect.Maps$EntryTransformer",
218:       "com.google.common.collect.Ordering",
219:       "com.google.common.collect.FluentIterable$3$1",
220:       "com.google.common.collect.NaturalOrdering",
221:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
222:       "com.google.common.collect.LinkedListMultimap$Node",
223:       "com.google.common.collect.TreeMultiset$Aggregate$2",
224:       "com.google.common.collect.TreeMultiset$Aggregate$1",
225:       "com.google.common.collect.AllEqualOrdering",
226:       "com.google.common.collect.Hashing",
227:       "com.google.common.collect.ImmutableList$SubList",
228:       "com.google.common.collect.ListMultimap",
229:       "com.google.common.base.FunctionalEquivalence",
230:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
231:       "com.google.common.truth.ErrorWithFacts",
232:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
233:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
234:       "com.google.common.collect.RegularImmutableList",
235:       "com.google.common.collect.SortedMultiset",
236:       "com.google.common.truth.IterableSubject",
237:       "com.google.common.collect.FluentIterable",
238:       "com.google.common.base.Optional",
239:       "com.google.common.collect.Lists$TransformingRandomAccessList",
240:       "com.google.common.collect.Iterators$ArrayItr",
241:       "com.google.common.collect.RegularImmutableMap$KeySet",
242:       "com.google.common.collect.BaseImmutableMultimap",
243:       "com.google.common.collect.Multisets",
244:       "com.google.common.collect.CompactHashMap$MapEntry",
245:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
246:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
247:       "com.google.common.collect.SortedMapDifference",
248:       "com.google.common.collect.CompactHashMap$2",
249:       "com.google.common.collect.RegularImmutableSet",
250:       "com.google.common.truth.Subject$EqualityCheck",
251:       "com.google.common.collect.LexicographicalOrdering",
252:       "com.google.common.collect.ImmutableListMultimap",
253:       "com.google.common.base.ParametricNullness",
254:       "com.google.common.collect.ImmutableMultimap$1",
255:       "com.google.common.base.Present",
256:       "com.google.common.collect.ImmutableMultimap$2",
257:       "com.google.common.collect.Iterables",
258:       "com.google.common.collect.LinkedListMultimap$1",
259:       "com.google.common.collect.Sets$SetView",
260:       "com.google.common.collect.ImmutableSet$Builder",
261:       "com.google.common.truth.Correspondence$DiffFormatter",
262:       "com.google.common.collect.SingletonImmutableSet",
263:       "com.google.common.collect.ImmutableSetMultimap$Builder",
264:       "com.google.common.truth.Correspondence$Transforming",
265:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
266:       "com.google.common.collect.ImmutableMultiset",
267:       "com.google.common.truth.Correspondence$ExceptionStore",
268:       "com.google.common.collect.UsingToStringOrdering",
269:       "com.google.common.truth.ComparableSubject",
270:       "com.google.common.collect.Multisets$AbstractEntry",
271:       "com.google.common.collect.ImmutableMultimap$Keys",
272:       "com.google.common.base.Functions$IdentityFunction",
273:       "com.google.common.truth.FailureMetadata",
274:       "com.google.common.collect.Lists$TransformingSequentialList",
275:       "com.google.common.primitives.IntsMethodsForWeb",
276:       "com.google.common.collect.ObjectArrays",
277:       "com.google.common.collect.AbstractIterator",
278:       "com.google.common.truth.Correspondence$FormattingDiffs",
279:       "com.google.common.truth.Correspondence$Equality",
280:       "com.google.common.base.MoreObjects",
281:       "com.google.common.collect.IndexedImmutableSet$1",
282:       "com.google.common.base.Suppliers$MemoizingSupplier",
283:       "com.google.common.collect.MapDifference",
284:       "com.google.common.collect.ObjectCountLinkedHashMap",
285:       "com.google.common.collect.SortedIterable",
286:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
287:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
288:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
289:       "com.google.common.collect.UnmodifiableIterator",
290:       "com.google.common.collect.ImmutableSortedMultiset",
291:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
292:       "com.google.common.collect.TreeMultiset$Aggregate",
293:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
294:       "com.google.common.collect.Lists$RandomAccessListWrapper",
295:       "com.google.common.collect.ImmutableEnumSet",
296:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
297:       "com.google.common.collect.HashBiMap$View$1",
298:       "com.google.common.collect.ImmutableMultiset$EntrySet",
299:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
300:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
301:       "com.google.common.base.Converter",
302:       "com.google.common.collect.LinkedListMultimap",
303:       "com.google.common.collect.Maps$8",
304:       "com.google.common.base.Function",
305:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ComparatorOrdering",
308:       "com.google.common.collect.AbstractIndexedListIterator",
309:       "com.google.common.collect.HashBiMap$EntryForKey",
310:       "com.google.common.collect.CollectPreconditions",
311:       "com.google.common.collect.Multiset$Entry",
312:       "com.google.common.truth.Subject",
313:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
314:       "com.google.common.primitives.Ints$IntConverter",
315:       "com.google.common.collect.Sets",
316:       "com.google.common.collect.ObjectCountHashMap",
317:       "com.google.common.collect.BoundType",
318:       "com.google.common.collect.ExplicitOrdering",
319:       "com.google.common.collect.CompactHashSet",
320:       "com.google.common.collect.TreeMultiset$Reference",
321:       "com.google.common.collect.ImmutableList$Builder",
322:       "com.google.common.collect.ImmutableMap$1",
323:       "com.google.common.collect.Iterables$5",
324:       "com.google.common.collect.AbstractMultiset",
325:       "com.google.common.collect.Multimap",
326:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
327:       "com.google.common.collect.Iterators",
328:       "com.google.common.collect.CompoundOrdering",
329:       "com.google.common.collect.ImmutableBiMap",
330:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
331:       "com.google.common.collect.ImmutableMultiset$Builder",
332:       "com.google.common.collect.Multisets$EntrySet",
333:       "com.google.common.base.PairwiseEquivalence",
334:       "com.google.common.collect.CompactHashing",
335:       "com.google.common.collect.ImmutableMultiset$1",
336:       "com.google.common.base.Suppliers",
337:       "com.google.common.collect.RegularImmutableMap$EntrySet",
338:       "com.google.common.base.Equivalence",
339:       "com.google.common.collect.ReverseNaturalOrdering",
340:       "com.google.common.truth.StandardSubjectBuilder",
341:       "com.google.common.primitives.Ints",
342:       "com.google.common.collect.Maps",
343:       "com.google.common.collect.SetMultimap",
344:       "com.google.common.collect.TransformedIterator",
345:       "com.google.common.truth.GraphMatching$HopcroftKarp",
346:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
347:       "com.google.common.collect.Iterators$MergingIterator",
348:       "com.google.common.truth.Correspondence$StoredException",
349:       "com.google.common.collect.RegularImmutableSortedSet"
350:     );
351:   } 
352: 
353:   private static void resetClasses() {
354:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_62_tmp__ESTest_scaffolding.class.getClassLoader()); 
355: 
356:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
357:       "com.google.common.truth.Subject",
358:       "com.google.common.truth.IterableSubject",
359:       "com.google.common.truth.IterableSubject$2",
360:       "com.google.common.truth.IterableSubject$1",
361:       "com.google.common.truth.IterableSubject$3",
362:       "com.google.common.truth.IterableSubject$4",
363:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
364:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
365:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
366:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
367:       "com.google.common.base.Optional",
368:       "com.google.common.base.Absent",
369:       "com.google.common.collect.ImmutableCollection",
370:       "com.google.common.collect.UnmodifiableIterator",
371:       "com.google.common.collect.UnmodifiableListIterator",
372:       "com.google.common.collect.AbstractIndexedListIterator",
373:       "com.google.common.collect.ImmutableList$Itr",
374:       "com.google.common.collect.ImmutableList",
375:       "com.google.common.collect.Ordering",
376:       "com.google.common.collect.NaturalOrdering",
377:       "com.google.common.truth.Correspondence",
378:       "com.google.common.truth.Correspondence$Equality",
379:       "com.google.common.truth.FailureMetadata",
380:       "com.google.common.truth.Subject$ComparisonResult",
381:       "com.google.common.base.Preconditions",
382:       "com.google.common.collect.Lists",
383:       "com.google.common.collect.Iterables",
384:       "com.google.common.truth.SubjectUtils",
385:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
386:       "com.google.common.collect.ImmutableMultiset",
387:       "com.google.common.collect.ImmutableCollection$Builder",
388:       "com.google.common.collect.ImmutableMultiset$Builder",
389:       "com.google.common.collect.ObjectCountHashMap",
390:       "com.google.common.collect.Hashing",
391:       "com.google.common.primitives.IntsMethodsForWeb",
392:       "com.google.common.primitives.Ints",
393:       "com.google.common.collect.RegularImmutableMultiset",
394:       "com.google.common.collect.ImmutableSet",
395:       "com.google.common.collect.RegularImmutableSet",
396:       "com.google.common.collect.AbstractMultiset",
397:       "com.google.common.collect.ConcurrentHashMultiset",
398:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
399:       "com.google.common.collect.ImmutableSortedMultiset",
400:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
401:       "com.google.common.collect.Sets$ImprovedAbstractSet",
402:       "com.google.common.collect.Multisets$EntrySet",
403:       "com.google.common.collect.AbstractMultiset$EntrySet",
404:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
405:       "com.google.common.collect.AbstractIterator",
406:       "com.google.common.collect.ConcurrentHashMultiset$2",
407:       "com.google.common.collect.AbstractIterator$State",
408:       "com.google.common.collect.ForwardingObject",
409:       "com.google.common.collect.ForwardingIterator",
410:       "com.google.common.collect.ConcurrentHashMultiset$3",
411:       "com.google.common.collect.AbstractIterator$1",
412:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
413:       "com.google.common.collect.ImmutableSortedSet",
414:       "com.google.common.collect.RegularImmutableSortedSet",
415:       "com.google.common.collect.RegularImmutableSortedMultiset",
416:       "com.google.common.collect.Sets",
417:       "com.google.common.collect.AbstractMapBasedMultiset",
418:       "com.google.common.collect.LinkedHashMultiset",
419:       "com.google.common.collect.Multisets",
420:       "com.google.common.collect.ObjectCountLinkedHashMap",
421:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
422:       "com.google.common.collect.AbstractMapBasedMultiset$2",
423:       "com.google.common.collect.Iterators",
424:       "com.google.common.truth.Correspondence$Transforming",
425:       "com.google.common.base.Functions",
426:       "com.google.common.base.Functions$IdentityFunction",
427:       "com.google.common.truth.Correspondence$FormattingDiffs",
428:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
429:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
430:       "com.google.common.base.Present",
431:       "com.google.common.truth.Correspondence$ExceptionStore",
432:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
433:       "com.google.common.collect.AbstractMultimap",
434:       "com.google.common.collect.LinkedListMultimap",
435:       "com.google.common.collect.Platform",
436:       "com.google.common.collect.CompactHashMap",
437:       "com.google.common.collect.Collections2",
438:       "com.google.common.collect.CollectPreconditions",
439:       "com.google.common.truth.Fact",
440:       "com.google.common.collect.ObjectArrays",
441:       "com.google.common.collect.IndexedImmutableSet",
442:       "com.google.common.collect.ImmutableMultiset$EntrySet",
443:       "com.google.common.base.Suppliers",
444:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
445:       "com.google.common.truth.Platform",
446:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
447:       "com.google.common.collect.ImmutableList$Builder",
448:       "com.google.common.collect.AbstractMapBasedMultimap",
449:       "com.google.common.collect.AbstractListMultimap",
450:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
451:       "com.google.common.collect.ArrayListMultimap",
452:       "com.google.common.collect.CompactHashing",
453:       "com.google.common.base.Strings",
454:       "com.google.common.collect.BaseImmutableMultimap",
455:       "com.google.common.collect.ImmutableMultimap",
456:       "com.google.common.collect.ImmutableSetMultimap",
457:       "com.google.common.collect.ImmutableMultimap$Builder",
458:       "com.google.common.collect.ImmutableSetMultimap$Builder",
459:       "com.google.common.collect.CompactHashMap$EntrySetView",
460:       "com.google.common.collect.ImmutableMap",
461:       "com.google.common.collect.RegularImmutableMap",
462:       "com.google.common.collect.EmptyImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
464:       "com.google.common.collect.ImmutableMultimap$1",
465:       "com.google.common.collect.RegularImmutableMap$EntrySet",
466:       "com.google.common.base.Converter",
467:       "com.google.common.base.Converter$IdentityConverter",
468:       "com.google.common.truth.LazyMessage",
469:       "com.google.common.truth.StandardSubjectBuilder",
470:       "com.google.common.collect.Lists$OnePlusArrayList",
471:       "com.google.common.base.ExtraObjectsMethodsForWeb",
472:       "com.google.common.base.Objects",
473:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
474:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
475:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
476:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
477:       "com.google.common.base.CharMatcher",
478:       "com.google.common.base.CharMatcher$FastMatcher",
479:       "com.google.common.base.CharMatcher$Is",
480:       "com.google.common.base.CharMatcher$InRange",
481:       "com.google.common.base.CaseFormat",
482:       "com.google.common.base.Ascii",
483:       "com.google.common.collect.AbstractSortedMultiset",
484:       "com.google.common.collect.TreeMultiset",
485:       "com.google.common.collect.GeneralRange",
486:       "com.google.common.collect.TreeMultiset$AvlNode",
487:       "com.google.common.collect.TreeMultiset$Reference",
488:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
489:       "com.google.common.collect.TreeMultiset$2",
490:       "com.google.common.collect.CompactHashSet",
491:       "com.google.common.collect.ImmutableMap$Builder",
492:       "com.google.common.collect.CompactHashMap$Itr",
493:       "com.google.common.collect.CompactHashMap$2",
494:       "com.google.common.collect.AbstractMapEntry",
495:       "com.google.common.collect.CompactHashMap$MapEntry",
496:       "com.google.common.base.Converter$FunctionBasedConverter",
497:       "com.google.common.base.Converter$ConverterComposition",
498:       "com.google.common.base.Joiner",
499:       "com.google.common.base.Joiner$1",
500:       "com.google.common.truth.Correspondence$StoredException",
501:       "com.google.common.collect.HashMultiset",
502:       "com.google.common.base.Converter$ReverseConverter",
503:       "com.google.common.truth.Subject$EqualityCheck",
504:       "com.google.common.collect.LinkedListMultimap$Node",
505:       "com.google.common.collect.LinkedListMultimap$KeyList",
506:       "com.google.common.collect.NullnessCasts",
507:       "com.google.common.collect.TreeMultiset$Aggregate",
508:       "com.google.common.base.Equivalence",
509:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
510:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
511:       "com.google.common.base.Equivalence$Wrapper",
512:       "com.google.common.collect.FluentIterable",
513:       "com.google.common.collect.Iterables$5",
514:       "com.google.common.collect.TransformedIterator",
515:       "com.google.common.collect.Iterators$6",
516:       "com.google.common.collect.Multisets$AbstractEntry",
517:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
518:       "com.google.common.collect.Multisets$ImmutableEntry",
519:       "com.google.common.collect.TreeMultiset$1",
520:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
521:       "com.google.common.collect.SingletonImmutableSet",
522:       "com.google.common.base.NullnessCasts",
523:       "com.google.common.collect.BoundType",
524:       "com.google.common.collect.RegularImmutableList",
525:       "com.google.common.math.IntMath",
526:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
527:       "com.google.common.collect.FluentIterable$3",
528:       "com.google.common.collect.FluentIterable$3$1",
529:       "com.google.common.collect.Iterators$ConcatenatedIterator",
530:       "com.google.common.collect.Iterators$ArrayItr",
531:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
532:       "com.google.common.collect.RegularImmutableMap$KeySet",
533:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
534:       "com.google.common.truth.GraphMatching",
535:       "com.google.common.truth.GraphMatching$HopcroftKarp",
536:       "com.google.common.collect.HashBiMap",
537:       "com.google.common.collect.ImmutableBiMap",
538:       "com.google.common.collect.HashBiMap$View",
539:       "com.google.common.collect.HashBiMap$EntrySet",
540:       "com.google.common.collect.ImmutableBiMap$Builder",
541:       "com.google.common.collect.HashBiMap$View$1",
542:       "com.google.common.collect.RegularImmutableBiMap",
543:       "com.google.common.collect.Maps",
544:       "com.google.common.base.MoreObjects",
545:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
546:       "com.google.common.collect.Iterators$9",
547:       "com.google.common.collect.ImmutableEntry",
548:       "com.google.common.collect.HashBiMap$EntryForKey",
549:       "com.google.common.collect.LinkedListMultimap$1",
550:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
551:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
552:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
553:       "com.google.common.base.Throwables",
554:       "com.google.common.collect.ImmutableMultiset$1",
555:       "com.google.common.collect.IndexedImmutableSet$1"
556:     );
557:   }
558: }

[MASTER] 16:10:38.315 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
String string0 = iterableSubject0.actualCustomStringRepresentation();
assertEquals("[]", string0);


[MASTER] 16:10:38.664 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_74_1731035438631/com/google/common/truth/IterableSubject_74_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_74_1731035438631/com/google/common/truth/IterableSubject_74_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:38.664 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.664 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.664 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:38.665 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 169
[MASTER] 16:10:38.665 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.666 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.666 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:38.667 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:38.667 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:38.668 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_74_1731035438631/com/google/common/truth/IterableSubject_74_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:38 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableMultiset;
11: import com.google.common.truth.FailureMetadata;
12: import com.google.common.truth.IterableSubject;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class IterableSubject_74_tmp__ESTest extends IterableSubject_74_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       IterableSubject.ElementFactGrouping iterableSubject_ElementFactGrouping0 = IterableSubject.ElementFactGrouping.ALL_IN_ONE_FACT;
23:       ImmutableMultiset<IterableSubject.ElementFactGrouping> immutableMultiset0 = ImmutableMultiset.of(iterableSubject_ElementFactGrouping0);
24:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
25:       iterableSubject0.containsNoDuplicates();
26:   }
27: }
RegularFileObject[/tmp/EvoSuite_74_1731035438631/com/google/common/truth/IterableSubject_74_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:38 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class IterableSubject_74_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_74_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ArrayListMultimap",
82:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.collect.Collections2",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
87:       "com.google.common.truth.SubjectUtils",
88:       "com.google.common.math.IntMath",
89:       "com.google.common.collect.LinkedHashMultiset",
90:       "com.google.common.truth.GraphMatching",
91:       "com.google.common.collect.AbstractMapBasedMultiset$2",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Sets$3",
94:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.Platform",
97:       "com.google.common.collect.NullsLastOrdering",
98:       "com.google.common.collect.RegularImmutableMultiset",
99:       "com.google.common.collect.RegularImmutableMap",
100:       "com.google.common.collect.RegularImmutableBiMap",
101:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
102:       "com.google.common.base.Converter$IdentityConverter",
103:       "com.google.common.collect.ImmutableMultimap$Values",
104:       "com.google.common.collect.ByFunctionOrdering",
105:       "com.google.common.collect.AbstractSortedMultiset",
106:       "com.google.common.collect.Iterators$10",
107:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
108:       "com.google.common.collect.AbstractMapEntry",
109:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
110:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
111:       "com.google.common.collect.ImmutableBiMap$Builder",
112:       "com.google.common.base.Predicate",
113:       "com.google.common.collect.Iterators$ConcatenatedIterator",
114:       "com.google.common.base.Joiner",
115:       "com.google.common.collect.GeneralRange",
116:       "com.google.common.collect.AbstractListMultimap",
117:       "com.google.common.collect.NullsFirstOrdering",
118:       "com.google.common.truth.Correspondence$BinaryPredicate",
119:       "org.checkerframework.framework.qual.QualifierForLiterals",
120:       "com.google.common.truth.AssertionErrorWithFacts",
121:       "com.google.common.base.Strings",
122:       "com.google.common.truth.IterableSubject$3",
123:       "com.google.common.collect.Lists$Partition",
124:       "com.google.common.collect.AbstractMapBasedMultimap",
125:       "com.google.common.collect.Lists",
126:       "com.google.common.truth.IterableSubject$1",
127:       "com.google.common.truth.IterableSubject$4",
128:       "com.google.common.collect.Multisets$ImmutableEntry",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.collect.TreeMultiset$AvlNode",
131:       "com.google.common.collect.ImmutableMultimap",
132:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
133:       "com.google.common.collect.TreeMultiset$2",
134:       "com.google.common.collect.ImmutableSortedSet",
135:       "com.google.common.base.Functions",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "org.checkerframework.framework.qual.SubtypeOf",
140:       "com.google.common.base.Throwables",
141:       "com.google.common.collect.ImmutableSortedSet$Builder",
142:       "com.google.common.base.Equivalence$Equals",
143:       "com.google.common.truth.Correspondence",
144:       "com.google.common.base.ElementTypesAreNonnullByDefault",
145:       "com.google.common.collect.AbstractMultiset$EntrySet",
146:       "com.google.common.base.Equivalence$Wrapper",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.base.Preconditions",
149:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
150:       "com.google.common.truth.StandardSubjectBuilder$1",
151:       "com.google.common.collect.ImmutableEntry",
152:       "com.google.common.base.Joiner$1",
153:       "com.google.common.base.Converter$ConverterComposition",
154:       "com.google.common.collect.EmptyImmutableSetMultimap",
155:       "com.google.common.collect.HashBiMap$EntrySet",
156:       "com.google.common.base.Joiner$2",
157:       "com.google.common.collect.ImmutableList$Itr",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.collect.ImmutableEnumMap",
160:       "com.google.common.truth.Ordered",
161:       "com.google.common.collect.TreeMultiset",
162:       "com.google.common.collect.LinkedListMultimap$KeyList",
163:       "com.google.common.collect.Lists$OnePlusArrayList",
164:       "com.google.common.base.Objects",
165:       "com.google.common.collect.CompactHashMap$Itr",
166:       "com.google.common.collect.ImmutableSetMultimap",
167:       "com.google.common.collect.ImmutableCollection$Builder",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Iterators$6",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.collect.ImmutableSet",
173:       "com.google.common.collect.Iterators$9",
174:       "com.google.common.collect.Lists$AbstractListWrapper",
175:       "com.google.common.collect.AbstractMapBasedMultiset",
176:       "com.google.common.collect.Iterators$1",
177:       "com.google.common.collect.CompactHashMap",
178:       "com.google.common.collect.Iterators$4",
179:       "com.google.common.collect.Iterators$5",
180:       "com.google.common.base.Converter$ReverseConverter",
181:       "com.google.common.base.ExtraObjectsMethodsForWeb",
182:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
183:       "com.google.common.truth.Platform",
184:       "com.google.common.collect.Lists$StringAsImmutableList",
185:       "com.google.common.collect.Lists$2",
186:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
187:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
188:       "com.google.common.collect.CompactHashMap$EntrySetView",
189:       "com.google.common.truth.LazyMessage",
190:       "com.google.common.collect.Lists$1",
191:       "com.google.common.collect.ImmutableMultimap$Builder",
192:       "com.google.common.base.Equivalence$Identity",
193:       "com.google.common.truth.Subject$ComparisonResult",
194:       "com.google.common.collect.Multiset",
195:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
196:       "com.google.common.collect.AbstractMultimap",
197:       "com.google.common.base.Supplier",
198:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
199:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
200:       "com.google.common.collect.HashBiMap$View",
201:       "com.google.common.truth.IterableSubject$PairwiseChecker",
202:       "com.google.common.collect.ImmutableList",
203:       "com.google.common.collect.ReverseOrdering",
204:       "com.google.common.collect.FluentIterable$1",
205:       "com.google.common.collect.FluentIterable$2",
206:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
207:       "com.google.common.truth.Fact",
208:       "com.google.common.collect.FluentIterable$3",
209:       "org.checkerframework.checker.nullness.qual.Nullable",
210:       "com.google.common.collect.NullnessCasts",
211:       "org.checkerframework.framework.qual.DefaultFor",
212:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
213:       "com.google.common.collect.SortedMultisetBridge",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.base.Converter$FunctionBasedConverter",
216:       "com.google.common.collect.HashBiMap",
217:       "com.google.common.collect.Maps$EntryTransformer",
218:       "com.google.common.collect.Ordering",
219:       "com.google.common.collect.FluentIterable$3$1",
220:       "com.google.common.collect.NaturalOrdering",
221:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
222:       "com.google.common.collect.LinkedListMultimap$Node",
223:       "com.google.common.collect.TreeMultiset$Aggregate$2",
224:       "com.google.common.collect.TreeMultiset$Aggregate$1",
225:       "com.google.common.collect.AllEqualOrdering",
226:       "com.google.common.collect.Hashing",
227:       "com.google.common.collect.ImmutableList$SubList",
228:       "com.google.common.collect.ListMultimap",
229:       "com.google.common.base.FunctionalEquivalence",
230:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
231:       "com.google.common.truth.ErrorWithFacts",
232:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
233:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
234:       "com.google.common.collect.RegularImmutableList",
235:       "com.google.common.collect.SortedMultiset",
236:       "com.google.common.truth.IterableSubject",
237:       "com.google.common.collect.FluentIterable",
238:       "com.google.common.base.Optional",
239:       "com.google.common.collect.Lists$TransformingRandomAccessList",
240:       "com.google.common.collect.Iterators$ArrayItr",
241:       "com.google.common.collect.RegularImmutableMap$KeySet",
242:       "com.google.common.collect.BaseImmutableMultimap",
243:       "com.google.common.collect.Multisets",
244:       "com.google.common.collect.CompactHashMap$MapEntry",
245:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
246:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
247:       "com.google.common.collect.SortedMapDifference",
248:       "com.google.common.collect.CompactHashMap$2",
249:       "com.google.common.collect.RegularImmutableSet",
250:       "com.google.common.truth.Subject$EqualityCheck",
251:       "com.google.common.collect.LexicographicalOrdering",
252:       "com.google.common.collect.ImmutableListMultimap",
253:       "com.google.common.base.ParametricNullness",
254:       "com.google.common.collect.ImmutableMultimap$1",
255:       "com.google.common.base.Present",
256:       "com.google.common.collect.ImmutableMultimap$2",
257:       "com.google.common.collect.Iterables",
258:       "com.google.common.collect.LinkedListMultimap$1",
259:       "com.google.common.collect.Sets$SetView",
260:       "com.google.common.collect.ImmutableSet$Builder",
261:       "com.google.common.truth.Correspondence$DiffFormatter",
262:       "com.google.common.collect.SingletonImmutableSet",
263:       "com.google.common.collect.ImmutableSetMultimap$Builder",
264:       "com.google.common.truth.Correspondence$Transforming",
265:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
266:       "com.google.common.collect.ImmutableMultiset",
267:       "com.google.common.truth.Correspondence$ExceptionStore",
268:       "com.google.common.collect.UsingToStringOrdering",
269:       "com.google.common.truth.ComparableSubject",
270:       "com.google.common.collect.Multisets$AbstractEntry",
271:       "com.google.common.collect.ImmutableMultimap$Keys",
272:       "com.google.common.base.Functions$IdentityFunction",
273:       "com.google.common.truth.FailureMetadata",
274:       "com.google.common.collect.Lists$TransformingSequentialList",
275:       "com.google.common.primitives.IntsMethodsForWeb",
276:       "com.google.common.collect.ObjectArrays",
277:       "com.google.common.collect.AbstractIterator",
278:       "com.google.common.truth.Correspondence$FormattingDiffs",
279:       "com.google.common.truth.Correspondence$Equality",
280:       "com.google.common.base.MoreObjects",
281:       "com.google.common.collect.IndexedImmutableSet$1",
282:       "com.google.common.base.Suppliers$MemoizingSupplier",
283:       "com.google.common.collect.MapDifference",
284:       "com.google.common.collect.ObjectCountLinkedHashMap",
285:       "com.google.common.collect.SortedIterable",
286:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
287:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
288:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
289:       "com.google.common.collect.UnmodifiableIterator",
290:       "com.google.common.collect.ImmutableSortedMultiset",
291:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
292:       "com.google.common.collect.TreeMultiset$Aggregate",
293:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
294:       "com.google.common.collect.Lists$RandomAccessListWrapper",
295:       "com.google.common.collect.ImmutableEnumSet",
296:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
297:       "com.google.common.collect.HashBiMap$View$1",
298:       "com.google.common.collect.ImmutableMultiset$EntrySet",
299:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
300:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
301:       "com.google.common.base.Converter",
302:       "com.google.common.collect.LinkedListMultimap",
303:       "com.google.common.collect.Maps$8",
304:       "com.google.common.base.Function",
305:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ComparatorOrdering",
308:       "com.google.common.collect.AbstractIndexedListIterator",
309:       "com.google.common.collect.HashBiMap$EntryForKey",
310:       "com.google.common.collect.CollectPreconditions",
311:       "com.google.common.collect.Multiset$Entry",
312:       "com.google.common.truth.Subject",
313:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
314:       "com.google.common.primitives.Ints$IntConverter",
315:       "com.google.common.collect.Sets",
316:       "com.google.common.collect.ObjectCountHashMap",
317:       "com.google.common.collect.BoundType",
318:       "com.google.common.collect.ExplicitOrdering",
319:       "com.google.common.collect.CompactHashSet",
320:       "com.google.common.collect.TreeMultiset$Reference",
321:       "com.google.common.collect.ImmutableList$Builder",
322:       "com.google.common.collect.ImmutableMap$1",
323:       "com.google.common.collect.Iterables$5",
324:       "com.google.common.collect.AbstractMultiset",
325:       "com.google.common.collect.Multimap",
326:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
327:       "com.google.common.collect.Iterators",
328:       "com.google.common.collect.CompoundOrdering",
329:       "com.google.common.collect.ImmutableBiMap",
330:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
331:       "com.google.common.collect.ImmutableMultiset$Builder",
332:       "com.google.common.collect.Multisets$EntrySet",
333:       "com.google.common.base.PairwiseEquivalence",
334:       "com.google.common.collect.CompactHashing",
335:       "com.google.common.collect.ImmutableMultiset$1",
336:       "com.google.common.base.Suppliers",
337:       "com.google.common.collect.RegularImmutableMap$EntrySet",
338:       "com.google.common.base.Equivalence",
339:       "com.google.common.collect.ReverseNaturalOrdering",
340:       "com.google.common.truth.StandardSubjectBuilder",
341:       "com.google.common.primitives.Ints",
342:       "com.google.common.collect.Maps",
343:       "com.google.common.collect.SetMultimap",
344:       "com.google.common.collect.TransformedIterator",
345:       "com.google.common.truth.GraphMatching$HopcroftKarp",
346:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
347:       "com.google.common.collect.Iterators$MergingIterator",
348:       "com.google.common.truth.Correspondence$StoredException",
349:       "com.google.common.collect.RegularImmutableSortedSet"
350:     );
351:   } 
352: 
353:   private static void resetClasses() {
354:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_74_tmp__ESTest_scaffolding.class.getClassLoader()); 
355: 
356:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
357:       "com.google.common.truth.Subject",
358:       "com.google.common.truth.IterableSubject",
359:       "com.google.common.truth.IterableSubject$2",
360:       "com.google.common.truth.IterableSubject$1",
361:       "com.google.common.truth.IterableSubject$3",
362:       "com.google.common.truth.IterableSubject$4",
363:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
364:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
365:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
366:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
367:       "com.google.common.base.Optional",
368:       "com.google.common.base.Absent",
369:       "com.google.common.collect.ImmutableCollection",
370:       "com.google.common.collect.UnmodifiableIterator",
371:       "com.google.common.collect.UnmodifiableListIterator",
372:       "com.google.common.collect.AbstractIndexedListIterator",
373:       "com.google.common.collect.ImmutableList$Itr",
374:       "com.google.common.collect.ImmutableList",
375:       "com.google.common.collect.Ordering",
376:       "com.google.common.collect.NaturalOrdering",
377:       "com.google.common.truth.Correspondence",
378:       "com.google.common.truth.Correspondence$Equality",
379:       "com.google.common.truth.FailureMetadata",
380:       "com.google.common.truth.Subject$ComparisonResult",
381:       "com.google.common.base.Preconditions",
382:       "com.google.common.collect.Lists",
383:       "com.google.common.collect.Iterables",
384:       "com.google.common.truth.SubjectUtils",
385:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
386:       "com.google.common.collect.ImmutableMultiset",
387:       "com.google.common.collect.ImmutableCollection$Builder",
388:       "com.google.common.collect.ImmutableMultiset$Builder",
389:       "com.google.common.collect.ObjectCountHashMap",
390:       "com.google.common.collect.Hashing",
391:       "com.google.common.primitives.IntsMethodsForWeb",
392:       "com.google.common.primitives.Ints",
393:       "com.google.common.collect.RegularImmutableMultiset",
394:       "com.google.common.collect.ImmutableSet",
395:       "com.google.common.collect.RegularImmutableSet",
396:       "com.google.common.collect.AbstractMultiset",
397:       "com.google.common.collect.ConcurrentHashMultiset",
398:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
399:       "com.google.common.collect.ImmutableSortedMultiset",
400:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
401:       "com.google.common.collect.Sets$ImprovedAbstractSet",
402:       "com.google.common.collect.Multisets$EntrySet",
403:       "com.google.common.collect.AbstractMultiset$EntrySet",
404:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
405:       "com.google.common.collect.AbstractIterator",
406:       "com.google.common.collect.ConcurrentHashMultiset$2",
407:       "com.google.common.collect.AbstractIterator$State",
408:       "com.google.common.collect.ForwardingObject",
409:       "com.google.common.collect.ForwardingIterator",
410:       "com.google.common.collect.ConcurrentHashMultiset$3",
411:       "com.google.common.collect.AbstractIterator$1",
412:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
413:       "com.google.common.collect.ImmutableSortedSet",
414:       "com.google.common.collect.RegularImmutableSortedSet",
415:       "com.google.common.collect.RegularImmutableSortedMultiset",
416:       "com.google.common.collect.Sets",
417:       "com.google.common.collect.AbstractMapBasedMultiset",
418:       "com.google.common.collect.LinkedHashMultiset",
419:       "com.google.common.collect.Multisets",
420:       "com.google.common.collect.ObjectCountLinkedHashMap",
421:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
422:       "com.google.common.collect.AbstractMapBasedMultiset$2",
423:       "com.google.common.collect.Iterators",
424:       "com.google.common.truth.Correspondence$Transforming",
425:       "com.google.common.base.Functions",
426:       "com.google.common.base.Functions$IdentityFunction",
427:       "com.google.common.truth.Correspondence$FormattingDiffs",
428:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
429:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
430:       "com.google.common.base.Present",
431:       "com.google.common.truth.Correspondence$ExceptionStore",
432:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
433:       "com.google.common.collect.AbstractMultimap",
434:       "com.google.common.collect.LinkedListMultimap",
435:       "com.google.common.collect.Platform",
436:       "com.google.common.collect.CompactHashMap",
437:       "com.google.common.collect.Collections2",
438:       "com.google.common.collect.CollectPreconditions",
439:       "com.google.common.truth.Fact",
440:       "com.google.common.collect.ObjectArrays",
441:       "com.google.common.collect.IndexedImmutableSet",
442:       "com.google.common.collect.ImmutableMultiset$EntrySet",
443:       "com.google.common.base.Suppliers",
444:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
445:       "com.google.common.truth.Platform",
446:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
447:       "com.google.common.collect.ImmutableList$Builder",
448:       "com.google.common.collect.AbstractMapBasedMultimap",
449:       "com.google.common.collect.AbstractListMultimap",
450:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
451:       "com.google.common.collect.ArrayListMultimap",
452:       "com.google.common.collect.CompactHashing",
453:       "com.google.common.base.Strings",
454:       "com.google.common.collect.BaseImmutableMultimap",
455:       "com.google.common.collect.ImmutableMultimap",
456:       "com.google.common.collect.ImmutableSetMultimap",
457:       "com.google.common.collect.ImmutableMultimap$Builder",
458:       "com.google.common.collect.ImmutableSetMultimap$Builder",
459:       "com.google.common.collect.CompactHashMap$EntrySetView",
460:       "com.google.common.collect.ImmutableMap",
461:       "com.google.common.collect.RegularImmutableMap",
462:       "com.google.common.collect.EmptyImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
464:       "com.google.common.collect.ImmutableMultimap$1",
465:       "com.google.common.collect.RegularImmutableMap$EntrySet",
466:       "com.google.common.base.Converter",
467:       "com.google.common.base.Converter$IdentityConverter",
468:       "com.google.common.truth.LazyMessage",
469:       "com.google.common.truth.StandardSubjectBuilder",
470:       "com.google.common.collect.Lists$OnePlusArrayList",
471:       "com.google.common.base.ExtraObjectsMethodsForWeb",
472:       "com.google.common.base.Objects",
473:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
474:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
475:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
476:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
477:       "com.google.common.base.CharMatcher",
478:       "com.google.common.base.CharMatcher$FastMatcher",
479:       "com.google.common.base.CharMatcher$Is",
480:       "com.google.common.base.CharMatcher$InRange",
481:       "com.google.common.base.CaseFormat",
482:       "com.google.common.base.Ascii",
483:       "com.google.common.collect.AbstractSortedMultiset",
484:       "com.google.common.collect.TreeMultiset",
485:       "com.google.common.collect.GeneralRange",
486:       "com.google.common.collect.TreeMultiset$AvlNode",
487:       "com.google.common.collect.TreeMultiset$Reference",
488:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
489:       "com.google.common.collect.TreeMultiset$2",
490:       "com.google.common.collect.CompactHashSet",
491:       "com.google.common.collect.ImmutableMap$Builder",
492:       "com.google.common.collect.CompactHashMap$Itr",
493:       "com.google.common.collect.CompactHashMap$2",
494:       "com.google.common.collect.AbstractMapEntry",
495:       "com.google.common.collect.CompactHashMap$MapEntry",
496:       "com.google.common.base.Converter$FunctionBasedConverter",
497:       "com.google.common.base.Converter$ConverterComposition",
498:       "com.google.common.base.Joiner",
499:       "com.google.common.base.Joiner$1",
500:       "com.google.common.truth.Correspondence$StoredException",
501:       "com.google.common.collect.HashMultiset",
502:       "com.google.common.base.Converter$ReverseConverter",
503:       "com.google.common.truth.Subject$EqualityCheck",
504:       "com.google.common.collect.LinkedListMultimap$Node",
505:       "com.google.common.collect.LinkedListMultimap$KeyList",
506:       "com.google.common.collect.NullnessCasts",
507:       "com.google.common.collect.TreeMultiset$Aggregate",
508:       "com.google.common.base.Equivalence",
509:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
510:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
511:       "com.google.common.base.Equivalence$Wrapper",
512:       "com.google.common.collect.FluentIterable",
513:       "com.google.common.collect.Iterables$5",
514:       "com.google.common.collect.TransformedIterator",
515:       "com.google.common.collect.Iterators$6",
516:       "com.google.common.collect.Multisets$AbstractEntry",
517:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
518:       "com.google.common.collect.Multisets$ImmutableEntry",
519:       "com.google.common.collect.TreeMultiset$1",
520:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
521:       "com.google.common.collect.SingletonImmutableSet",
522:       "com.google.common.base.NullnessCasts",
523:       "com.google.common.collect.BoundType",
524:       "com.google.common.collect.RegularImmutableList",
525:       "com.google.common.math.IntMath",
526:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
527:       "com.google.common.collect.FluentIterable$3",
528:       "com.google.common.collect.FluentIterable$3$1",
529:       "com.google.common.collect.Iterators$ConcatenatedIterator",
530:       "com.google.common.collect.Iterators$ArrayItr",
531:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
532:       "com.google.common.collect.RegularImmutableMap$KeySet",
533:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
534:       "com.google.common.truth.GraphMatching",
535:       "com.google.common.truth.GraphMatching$HopcroftKarp",
536:       "com.google.common.collect.HashBiMap",
537:       "com.google.common.collect.ImmutableBiMap",
538:       "com.google.common.collect.HashBiMap$View",
539:       "com.google.common.collect.HashBiMap$EntrySet",
540:       "com.google.common.collect.ImmutableBiMap$Builder",
541:       "com.google.common.collect.HashBiMap$View$1",
542:       "com.google.common.collect.RegularImmutableBiMap",
543:       "com.google.common.collect.Maps",
544:       "com.google.common.base.MoreObjects",
545:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
546:       "com.google.common.collect.Iterators$9",
547:       "com.google.common.collect.ImmutableEntry",
548:       "com.google.common.collect.HashBiMap$EntryForKey",
549:       "com.google.common.collect.LinkedListMultimap$1",
550:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
551:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
552:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
553:       "com.google.common.base.Throwables",
554:       "com.google.common.collect.ImmutableMultiset$1",
555:       "com.google.common.collect.IndexedImmutableSet$1"
556:     );
557:   }
558: }

[MASTER] 16:10:38.668 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
IterableSubject.ElementFactGrouping iterableSubject_ElementFactGrouping0 = IterableSubject.ElementFactGrouping.ALL_IN_ONE_FACT;
ImmutableMultiset<IterableSubject.ElementFactGrouping> immutableMultiset0 = ImmutableMultiset.of(iterableSubject_ElementFactGrouping0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
iterableSubject0.containsNoDuplicates();

[MASTER] 16:10:38.741 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_76_1731035438697/com/google/common/truth/IterableSubject_76_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_76_1731035438697/com/google/common/truth/IterableSubject_76_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:38.741 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.741 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.742 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:38.742 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 169
[MASTER] 16:10:38.742 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.742 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.743 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:38.743 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:38.743 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:38.744 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_76_1731035438697/com/google/common/truth/IterableSubject_76_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:38 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableMultiset;
11: import com.google.common.truth.FailureMetadata;
12: import com.google.common.truth.IterableSubject;
13: import java.sql.SQLNonTransientConnectionException;
14: import java.util.Iterator;
15: import java.util.LinkedList;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class IterableSubject_76_tmp__ESTest extends IterableSubject_76_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
26:       Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
27:       ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
28:       Object[] objectArray0 = new Object[8];
29:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
30:       iterableSubject0.containsNoneIn(objectArray0);
31:       assertEquals(8, objectArray0.length);
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_76_1731035438697/com/google/common/truth/IterableSubject_76_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:38 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class IterableSubject_76_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_76_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ArrayListMultimap",
82:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.collect.Collections2",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
87:       "com.google.common.truth.SubjectUtils",
88:       "com.google.common.math.IntMath",
89:       "com.google.common.collect.LinkedHashMultiset",
90:       "com.google.common.truth.GraphMatching",
91:       "com.google.common.collect.AbstractMapBasedMultiset$2",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Sets$3",
94:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.Platform",
97:       "com.google.common.collect.NullsLastOrdering",
98:       "com.google.common.collect.RegularImmutableMultiset",
99:       "com.google.common.collect.RegularImmutableMap",
100:       "com.google.common.collect.RegularImmutableBiMap",
101:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
102:       "com.google.common.base.Converter$IdentityConverter",
103:       "com.google.common.collect.ImmutableMultimap$Values",
104:       "com.google.common.collect.ByFunctionOrdering",
105:       "com.google.common.collect.AbstractSortedMultiset",
106:       "com.google.common.collect.Iterators$10",
107:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
108:       "com.google.common.collect.AbstractMapEntry",
109:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
110:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
111:       "com.google.common.collect.ImmutableBiMap$Builder",
112:       "com.google.common.base.Predicate",
113:       "com.google.common.collect.Iterators$ConcatenatedIterator",
114:       "com.google.common.base.Joiner",
115:       "com.google.common.collect.GeneralRange",
116:       "com.google.common.collect.AbstractListMultimap",
117:       "com.google.common.collect.NullsFirstOrdering",
118:       "com.google.common.truth.Correspondence$BinaryPredicate",
119:       "org.checkerframework.framework.qual.QualifierForLiterals",
120:       "com.google.common.truth.AssertionErrorWithFacts",
121:       "com.google.common.base.Strings",
122:       "com.google.common.truth.IterableSubject$3",
123:       "com.google.common.collect.Lists$Partition",
124:       "com.google.common.collect.AbstractMapBasedMultimap",
125:       "com.google.common.collect.Lists",
126:       "com.google.common.truth.IterableSubject$1",
127:       "com.google.common.truth.IterableSubject$4",
128:       "com.google.common.collect.Multisets$ImmutableEntry",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.collect.TreeMultiset$AvlNode",
131:       "com.google.common.collect.ImmutableMultimap",
132:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
133:       "com.google.common.collect.TreeMultiset$2",
134:       "com.google.common.collect.ImmutableSortedSet",
135:       "com.google.common.base.Functions",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "org.checkerframework.framework.qual.SubtypeOf",
140:       "com.google.common.base.Throwables",
141:       "com.google.common.collect.ImmutableSortedSet$Builder",
142:       "com.google.common.base.Equivalence$Equals",
143:       "com.google.common.truth.Correspondence",
144:       "com.google.common.base.ElementTypesAreNonnullByDefault",
145:       "com.google.common.collect.AbstractMultiset$EntrySet",
146:       "com.google.common.base.Equivalence$Wrapper",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.base.Preconditions",
149:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
150:       "com.google.common.truth.StandardSubjectBuilder$1",
151:       "com.google.common.collect.ImmutableEntry",
152:       "com.google.common.base.Joiner$1",
153:       "com.google.common.base.Converter$ConverterComposition",
154:       "com.google.common.collect.EmptyImmutableSetMultimap",
155:       "com.google.common.collect.HashBiMap$EntrySet",
156:       "com.google.common.base.Joiner$2",
157:       "com.google.common.collect.ImmutableList$Itr",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.collect.ImmutableEnumMap",
160:       "com.google.common.truth.Ordered",
161:       "com.google.common.collect.TreeMultiset",
162:       "com.google.common.collect.LinkedListMultimap$KeyList",
163:       "com.google.common.collect.Lists$OnePlusArrayList",
164:       "com.google.common.base.Objects",
165:       "com.google.common.collect.CompactHashMap$Itr",
166:       "com.google.common.collect.ImmutableSetMultimap",
167:       "com.google.common.collect.ImmutableCollection$Builder",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Iterators$6",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.collect.ImmutableSet",
173:       "com.google.common.collect.Iterators$9",
174:       "com.google.common.collect.Lists$AbstractListWrapper",
175:       "com.google.common.collect.AbstractMapBasedMultiset",
176:       "com.google.common.collect.Iterators$1",
177:       "com.google.common.collect.CompactHashMap",
178:       "com.google.common.collect.Iterators$4",
179:       "com.google.common.collect.Iterators$5",
180:       "com.google.common.base.Converter$ReverseConverter",
181:       "com.google.common.base.ExtraObjectsMethodsForWeb",
182:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
183:       "com.google.common.truth.Platform",
184:       "com.google.common.collect.Lists$StringAsImmutableList",
185:       "com.google.common.collect.Lists$2",
186:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
187:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
188:       "com.google.common.collect.CompactHashMap$EntrySetView",
189:       "com.google.common.truth.LazyMessage",
190:       "com.google.common.collect.Lists$1",
191:       "com.google.common.collect.ImmutableMultimap$Builder",
192:       "com.google.common.base.Equivalence$Identity",
193:       "com.google.common.truth.Subject$ComparisonResult",
194:       "com.google.common.collect.Multiset",
195:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
196:       "com.google.common.collect.AbstractMultimap",
197:       "com.google.common.base.Supplier",
198:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
199:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
200:       "com.google.common.collect.HashBiMap$View",
201:       "com.google.common.truth.IterableSubject$PairwiseChecker",
202:       "com.google.common.collect.ImmutableList",
203:       "com.google.common.collect.ReverseOrdering",
204:       "com.google.common.collect.FluentIterable$1",
205:       "com.google.common.collect.FluentIterable$2",
206:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
207:       "com.google.common.truth.Fact",
208:       "com.google.common.collect.FluentIterable$3",
209:       "org.checkerframework.checker.nullness.qual.Nullable",
210:       "com.google.common.collect.NullnessCasts",
211:       "org.checkerframework.framework.qual.DefaultFor",
212:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
213:       "com.google.common.collect.SortedMultisetBridge",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.base.Converter$FunctionBasedConverter",
216:       "com.google.common.collect.HashBiMap",
217:       "com.google.common.collect.Maps$EntryTransformer",
218:       "com.google.common.collect.Ordering",
219:       "com.google.common.collect.FluentIterable$3$1",
220:       "com.google.common.collect.NaturalOrdering",
221:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
222:       "com.google.common.collect.LinkedListMultimap$Node",
223:       "com.google.common.collect.TreeMultiset$Aggregate$2",
224:       "com.google.common.collect.TreeMultiset$Aggregate$1",
225:       "com.google.common.collect.AllEqualOrdering",
226:       "com.google.common.collect.Hashing",
227:       "com.google.common.collect.ImmutableList$SubList",
228:       "com.google.common.collect.ListMultimap",
229:       "com.google.common.base.FunctionalEquivalence",
230:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
231:       "com.google.common.truth.ErrorWithFacts",
232:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
233:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
234:       "com.google.common.collect.RegularImmutableList",
235:       "com.google.common.collect.SortedMultiset",
236:       "com.google.common.truth.IterableSubject",
237:       "com.google.common.collect.FluentIterable",
238:       "com.google.common.base.Optional",
239:       "com.google.common.collect.Lists$TransformingRandomAccessList",
240:       "com.google.common.collect.Iterators$ArrayItr",
241:       "com.google.common.collect.RegularImmutableMap$KeySet",
242:       "com.google.common.collect.BaseImmutableMultimap",
243:       "com.google.common.collect.Multisets",
244:       "com.google.common.collect.CompactHashMap$MapEntry",
245:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
246:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
247:       "com.google.common.collect.SortedMapDifference",
248:       "com.google.common.collect.CompactHashMap$2",
249:       "com.google.common.collect.RegularImmutableSet",
250:       "com.google.common.truth.Subject$EqualityCheck",
251:       "com.google.common.collect.LexicographicalOrdering",
252:       "com.google.common.collect.ImmutableListMultimap",
253:       "com.google.common.base.ParametricNullness",
254:       "com.google.common.collect.ImmutableMultimap$1",
255:       "com.google.common.base.Present",
256:       "com.google.common.collect.ImmutableMultimap$2",
257:       "com.google.common.collect.Iterables",
258:       "com.google.common.collect.LinkedListMultimap$1",
259:       "com.google.common.collect.Sets$SetView",
260:       "com.google.common.collect.ImmutableSet$Builder",
261:       "com.google.common.truth.Correspondence$DiffFormatter",
262:       "com.google.common.collect.SingletonImmutableSet",
263:       "com.google.common.collect.ImmutableSetMultimap$Builder",
264:       "com.google.common.truth.Correspondence$Transforming",
265:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
266:       "com.google.common.collect.ImmutableMultiset",
267:       "com.google.common.truth.Correspondence$ExceptionStore",
268:       "com.google.common.collect.UsingToStringOrdering",
269:       "com.google.common.truth.ComparableSubject",
270:       "com.google.common.collect.Multisets$AbstractEntry",
271:       "com.google.common.collect.ImmutableMultimap$Keys",
272:       "com.google.common.base.Functions$IdentityFunction",
273:       "com.google.common.truth.FailureMetadata",
274:       "com.google.common.collect.Lists$TransformingSequentialList",
275:       "com.google.common.primitives.IntsMethodsForWeb",
276:       "com.google.common.collect.ObjectArrays",
277:       "com.google.common.collect.AbstractIterator",
278:       "com.google.common.truth.Correspondence$FormattingDiffs",
279:       "com.google.common.truth.Correspondence$Equality",
280:       "com.google.common.base.MoreObjects",
281:       "com.google.common.collect.IndexedImmutableSet$1",
282:       "com.google.common.base.Suppliers$MemoizingSupplier",
283:       "com.google.common.collect.MapDifference",
284:       "com.google.common.collect.ObjectCountLinkedHashMap",
285:       "com.google.common.collect.SortedIterable",
286:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
287:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
288:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
289:       "com.google.common.collect.UnmodifiableIterator",
290:       "com.google.common.collect.ImmutableSortedMultiset",
291:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
292:       "com.google.common.collect.TreeMultiset$Aggregate",
293:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
294:       "com.google.common.collect.Lists$RandomAccessListWrapper",
295:       "com.google.common.collect.ImmutableEnumSet",
296:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
297:       "com.google.common.collect.HashBiMap$View$1",
298:       "com.google.common.collect.ImmutableMultiset$EntrySet",
299:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
300:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
301:       "com.google.common.base.Converter",
302:       "com.google.common.collect.LinkedListMultimap",
303:       "com.google.common.collect.Maps$8",
304:       "com.google.common.base.Function",
305:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ComparatorOrdering",
308:       "com.google.common.collect.AbstractIndexedListIterator",
309:       "com.google.common.collect.HashBiMap$EntryForKey",
310:       "com.google.common.collect.CollectPreconditions",
311:       "com.google.common.collect.Multiset$Entry",
312:       "com.google.common.truth.Subject",
313:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
314:       "com.google.common.primitives.Ints$IntConverter",
315:       "com.google.common.collect.Sets",
316:       "com.google.common.collect.ObjectCountHashMap",
317:       "com.google.common.collect.BoundType",
318:       "com.google.common.collect.ExplicitOrdering",
319:       "com.google.common.collect.CompactHashSet",
320:       "com.google.common.collect.TreeMultiset$Reference",
321:       "com.google.common.collect.ImmutableList$Builder",
322:       "com.google.common.collect.ImmutableMap$1",
323:       "com.google.common.collect.Iterables$5",
324:       "com.google.common.collect.AbstractMultiset",
325:       "com.google.common.collect.Multimap",
326:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
327:       "com.google.common.collect.Iterators",
328:       "com.google.common.collect.CompoundOrdering",
329:       "com.google.common.collect.ImmutableBiMap",
330:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
331:       "com.google.common.collect.ImmutableMultiset$Builder",
332:       "com.google.common.collect.Multisets$EntrySet",
333:       "com.google.common.base.PairwiseEquivalence",
334:       "com.google.common.collect.CompactHashing",
335:       "com.google.common.collect.ImmutableMultiset$1",
336:       "com.google.common.base.Suppliers",
337:       "com.google.common.collect.RegularImmutableMap$EntrySet",
338:       "com.google.common.base.Equivalence",
339:       "com.google.common.collect.ReverseNaturalOrdering",
340:       "com.google.common.truth.StandardSubjectBuilder",
341:       "com.google.common.primitives.Ints",
342:       "com.google.common.collect.Maps",
343:       "com.google.common.collect.SetMultimap",
344:       "com.google.common.collect.TransformedIterator",
345:       "com.google.common.truth.GraphMatching$HopcroftKarp",
346:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
347:       "com.google.common.collect.Iterators$MergingIterator",
348:       "com.google.common.truth.Correspondence$StoredException",
349:       "com.google.common.collect.RegularImmutableSortedSet"
350:     );
351:   } 
352: 
353:   private static void resetClasses() {
354:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_76_tmp__ESTest_scaffolding.class.getClassLoader()); 
355: 
356:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
357:       "com.google.common.truth.Subject",
358:       "com.google.common.truth.IterableSubject",
359:       "com.google.common.truth.IterableSubject$2",
360:       "com.google.common.truth.IterableSubject$1",
361:       "com.google.common.truth.IterableSubject$3",
362:       "com.google.common.truth.IterableSubject$4",
363:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
364:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
365:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
366:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
367:       "com.google.common.base.Optional",
368:       "com.google.common.base.Absent",
369:       "com.google.common.collect.ImmutableCollection",
370:       "com.google.common.collect.UnmodifiableIterator",
371:       "com.google.common.collect.UnmodifiableListIterator",
372:       "com.google.common.collect.AbstractIndexedListIterator",
373:       "com.google.common.collect.ImmutableList$Itr",
374:       "com.google.common.collect.ImmutableList",
375:       "com.google.common.collect.Ordering",
376:       "com.google.common.collect.NaturalOrdering",
377:       "com.google.common.truth.Correspondence",
378:       "com.google.common.truth.Correspondence$Equality",
379:       "com.google.common.truth.FailureMetadata",
380:       "com.google.common.truth.Subject$ComparisonResult",
381:       "com.google.common.base.Preconditions",
382:       "com.google.common.collect.Lists",
383:       "com.google.common.collect.Iterables",
384:       "com.google.common.truth.SubjectUtils",
385:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
386:       "com.google.common.collect.ImmutableMultiset",
387:       "com.google.common.collect.ImmutableCollection$Builder",
388:       "com.google.common.collect.ImmutableMultiset$Builder",
389:       "com.google.common.collect.ObjectCountHashMap",
390:       "com.google.common.collect.Hashing",
391:       "com.google.common.primitives.IntsMethodsForWeb",
392:       "com.google.common.primitives.Ints",
393:       "com.google.common.collect.RegularImmutableMultiset",
394:       "com.google.common.collect.ImmutableSet",
395:       "com.google.common.collect.RegularImmutableSet",
396:       "com.google.common.collect.AbstractMultiset",
397:       "com.google.common.collect.ConcurrentHashMultiset",
398:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
399:       "com.google.common.collect.ImmutableSortedMultiset",
400:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
401:       "com.google.common.collect.Sets$ImprovedAbstractSet",
402:       "com.google.common.collect.Multisets$EntrySet",
403:       "com.google.common.collect.AbstractMultiset$EntrySet",
404:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
405:       "com.google.common.collect.AbstractIterator",
406:       "com.google.common.collect.ConcurrentHashMultiset$2",
407:       "com.google.common.collect.AbstractIterator$State",
408:       "com.google.common.collect.ForwardingObject",
409:       "com.google.common.collect.ForwardingIterator",
410:       "com.google.common.collect.ConcurrentHashMultiset$3",
411:       "com.google.common.collect.AbstractIterator$1",
412:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
413:       "com.google.common.collect.ImmutableSortedSet",
414:       "com.google.common.collect.RegularImmutableSortedSet",
415:       "com.google.common.collect.RegularImmutableSortedMultiset",
416:       "com.google.common.collect.Sets",
417:       "com.google.common.collect.AbstractMapBasedMultiset",
418:       "com.google.common.collect.LinkedHashMultiset",
419:       "com.google.common.collect.Multisets",
420:       "com.google.common.collect.ObjectCountLinkedHashMap",
421:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
422:       "com.google.common.collect.AbstractMapBasedMultiset$2",
423:       "com.google.common.collect.Iterators",
424:       "com.google.common.truth.Correspondence$Transforming",
425:       "com.google.common.base.Functions",
426:       "com.google.common.base.Functions$IdentityFunction",
427:       "com.google.common.truth.Correspondence$FormattingDiffs",
428:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
429:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
430:       "com.google.common.base.Present",
431:       "com.google.common.truth.Correspondence$ExceptionStore",
432:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
433:       "com.google.common.collect.AbstractMultimap",
434:       "com.google.common.collect.LinkedListMultimap",
435:       "com.google.common.collect.Platform",
436:       "com.google.common.collect.CompactHashMap",
437:       "com.google.common.collect.Collections2",
438:       "com.google.common.collect.CollectPreconditions",
439:       "com.google.common.truth.Fact",
440:       "com.google.common.collect.ObjectArrays",
441:       "com.google.common.collect.IndexedImmutableSet",
442:       "com.google.common.collect.ImmutableMultiset$EntrySet",
443:       "com.google.common.base.Suppliers",
444:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
445:       "com.google.common.truth.Platform",
446:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
447:       "com.google.common.collect.ImmutableList$Builder",
448:       "com.google.common.collect.AbstractMapBasedMultimap",
449:       "com.google.common.collect.AbstractListMultimap",
450:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
451:       "com.google.common.collect.ArrayListMultimap",
452:       "com.google.common.collect.CompactHashing",
453:       "com.google.common.base.Strings",
454:       "com.google.common.collect.BaseImmutableMultimap",
455:       "com.google.common.collect.ImmutableMultimap",
456:       "com.google.common.collect.ImmutableSetMultimap",
457:       "com.google.common.collect.ImmutableMultimap$Builder",
458:       "com.google.common.collect.ImmutableSetMultimap$Builder",
459:       "com.google.common.collect.CompactHashMap$EntrySetView",
460:       "com.google.common.collect.ImmutableMap",
461:       "com.google.common.collect.RegularImmutableMap",
462:       "com.google.common.collect.EmptyImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
464:       "com.google.common.collect.ImmutableMultimap$1",
465:       "com.google.common.collect.RegularImmutableMap$EntrySet",
466:       "com.google.common.base.Converter",
467:       "com.google.common.base.Converter$IdentityConverter",
468:       "com.google.common.truth.LazyMessage",
469:       "com.google.common.truth.StandardSubjectBuilder",
470:       "com.google.common.collect.Lists$OnePlusArrayList",
471:       "com.google.common.base.ExtraObjectsMethodsForWeb",
472:       "com.google.common.base.Objects",
473:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
474:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
475:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
476:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
477:       "com.google.common.base.CharMatcher",
478:       "com.google.common.base.CharMatcher$FastMatcher",
479:       "com.google.common.base.CharMatcher$Is",
480:       "com.google.common.base.CharMatcher$InRange",
481:       "com.google.common.base.CaseFormat",
482:       "com.google.common.base.Ascii",
483:       "com.google.common.collect.AbstractSortedMultiset",
484:       "com.google.common.collect.TreeMultiset",
485:       "com.google.common.collect.GeneralRange",
486:       "com.google.common.collect.TreeMultiset$AvlNode",
487:       "com.google.common.collect.TreeMultiset$Reference",
488:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
489:       "com.google.common.collect.TreeMultiset$2",
490:       "com.google.common.collect.CompactHashSet",
491:       "com.google.common.collect.ImmutableMap$Builder",
492:       "com.google.common.collect.CompactHashMap$Itr",
493:       "com.google.common.collect.CompactHashMap$2",
494:       "com.google.common.collect.AbstractMapEntry",
495:       "com.google.common.collect.CompactHashMap$MapEntry",
496:       "com.google.common.base.Converter$FunctionBasedConverter",
497:       "com.google.common.base.Converter$ConverterComposition",
498:       "com.google.common.base.Joiner",
499:       "com.google.common.base.Joiner$1",
500:       "com.google.common.truth.Correspondence$StoredException",
501:       "com.google.common.collect.HashMultiset",
502:       "com.google.common.base.Converter$ReverseConverter",
503:       "com.google.common.truth.Subject$EqualityCheck",
504:       "com.google.common.collect.LinkedListMultimap$Node",
505:       "com.google.common.collect.LinkedListMultimap$KeyList",
506:       "com.google.common.collect.NullnessCasts",
507:       "com.google.common.collect.TreeMultiset$Aggregate",
508:       "com.google.common.base.Equivalence",
509:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
510:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
511:       "com.google.common.base.Equivalence$Wrapper",
512:       "com.google.common.collect.FluentIterable",
513:       "com.google.common.collect.Iterables$5",
514:       "com.google.common.collect.TransformedIterator",
515:       "com.google.common.collect.Iterators$6",
516:       "com.google.common.collect.Multisets$AbstractEntry",
517:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
518:       "com.google.common.collect.Multisets$ImmutableEntry",
519:       "com.google.common.collect.TreeMultiset$1",
520:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
521:       "com.google.common.collect.SingletonImmutableSet",
522:       "com.google.common.base.NullnessCasts",
523:       "com.google.common.collect.BoundType",
524:       "com.google.common.collect.RegularImmutableList",
525:       "com.google.common.math.IntMath",
526:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
527:       "com.google.common.collect.FluentIterable$3",
528:       "com.google.common.collect.FluentIterable$3$1",
529:       "com.google.common.collect.Iterators$ConcatenatedIterator",
530:       "com.google.common.collect.Iterators$ArrayItr",
531:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
532:       "com.google.common.collect.RegularImmutableMap$KeySet",
533:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
534:       "com.google.common.truth.GraphMatching",
535:       "com.google.common.truth.GraphMatching$HopcroftKarp",
536:       "com.google.common.collect.HashBiMap",
537:       "com.google.common.collect.ImmutableBiMap",
538:       "com.google.common.collect.HashBiMap$View",
539:       "com.google.common.collect.HashBiMap$EntrySet",
540:       "com.google.common.collect.ImmutableBiMap$Builder",
541:       "com.google.common.collect.HashBiMap$View$1",
542:       "com.google.common.collect.RegularImmutableBiMap",
543:       "com.google.common.collect.Maps",
544:       "com.google.common.base.MoreObjects",
545:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
546:       "com.google.common.collect.Iterators$9",
547:       "com.google.common.collect.ImmutableEntry",
548:       "com.google.common.collect.HashBiMap$EntryForKey",
549:       "com.google.common.collect.LinkedListMultimap$1",
550:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
551:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
552:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
553:       "com.google.common.base.Throwables",
554:       "com.google.common.collect.ImmutableMultiset$1",
555:       "com.google.common.collect.IndexedImmutableSet$1"
556:     );
557:   }
558: }

[MASTER] 16:10:38.745 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
Object[] objectArray0 = new Object[8];
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
iterableSubject0.containsNoneIn(objectArray0);
assertEquals(8, objectArray0.length);


[MASTER] 16:10:38.897 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_81_1731035438864/com/google/common/truth/IterableSubject_81_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_81_1731035438864/com/google/common/truth/IterableSubject_81_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:38.897 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.897 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:38.897 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:38.899 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 169
[MASTER] 16:10:38.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.900 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:38.901 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:38.901 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:38.901 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:38.902 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_81_1731035438864/com/google/common/truth/IterableSubject_81_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:38 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableMultiset;
11: import com.google.common.truth.FailureMetadata;
12: import com.google.common.truth.IterableSubject;
13: import java.sql.SQLNonTransientConnectionException;
14: import java.util.Iterator;
15: import java.util.LinkedList;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class IterableSubject_81_tmp__ESTest extends IterableSubject_81_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
26:       Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
27:       ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
28:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
29:       iterableSubject0.isInStrictOrder();
30:   }
31: }
RegularFileObject[/tmp/EvoSuite_81_1731035438864/com/google/common/truth/IterableSubject_81_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:38 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class IterableSubject_81_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_81_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ArrayListMultimap",
82:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.collect.Collections2",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
87:       "com.google.common.truth.SubjectUtils",
88:       "com.google.common.math.IntMath",
89:       "com.google.common.collect.LinkedHashMultiset",
90:       "com.google.common.truth.GraphMatching",
91:       "com.google.common.collect.AbstractMapBasedMultiset$2",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Sets$3",
94:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.Platform",
97:       "com.google.common.collect.NullsLastOrdering",
98:       "com.google.common.collect.RegularImmutableMultiset",
99:       "com.google.common.collect.RegularImmutableMap",
100:       "com.google.common.collect.RegularImmutableBiMap",
101:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
102:       "com.google.common.base.Converter$IdentityConverter",
103:       "com.google.common.collect.ImmutableMultimap$Values",
104:       "com.google.common.collect.ByFunctionOrdering",
105:       "com.google.common.collect.AbstractSortedMultiset",
106:       "com.google.common.collect.Iterators$10",
107:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
108:       "com.google.common.collect.AbstractMapEntry",
109:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
110:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
111:       "com.google.common.collect.ImmutableBiMap$Builder",
112:       "com.google.common.base.Predicate",
113:       "com.google.common.collect.Iterators$ConcatenatedIterator",
114:       "com.google.common.base.Joiner",
115:       "com.google.common.collect.GeneralRange",
116:       "com.google.common.collect.AbstractListMultimap",
117:       "com.google.common.collect.NullsFirstOrdering",
118:       "com.google.common.truth.Correspondence$BinaryPredicate",
119:       "org.checkerframework.framework.qual.QualifierForLiterals",
120:       "com.google.common.truth.AssertionErrorWithFacts",
121:       "com.google.common.base.Strings",
122:       "com.google.common.truth.IterableSubject$3",
123:       "com.google.common.collect.Lists$Partition",
124:       "com.google.common.collect.AbstractMapBasedMultimap",
125:       "com.google.common.collect.Lists",
126:       "com.google.common.truth.IterableSubject$1",
127:       "com.google.common.truth.IterableSubject$4",
128:       "com.google.common.collect.Multisets$ImmutableEntry",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.collect.TreeMultiset$AvlNode",
131:       "com.google.common.collect.ImmutableMultimap",
132:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
133:       "com.google.common.collect.TreeMultiset$2",
134:       "com.google.common.collect.ImmutableSortedSet",
135:       "com.google.common.base.Functions",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "org.checkerframework.framework.qual.SubtypeOf",
140:       "com.google.common.base.Throwables",
141:       "com.google.common.collect.ImmutableSortedSet$Builder",
142:       "com.google.common.base.Equivalence$Equals",
143:       "com.google.common.truth.Correspondence",
144:       "com.google.common.base.ElementTypesAreNonnullByDefault",
145:       "com.google.common.collect.AbstractMultiset$EntrySet",
146:       "com.google.common.base.Equivalence$Wrapper",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.base.Preconditions",
149:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
150:       "com.google.common.truth.StandardSubjectBuilder$1",
151:       "com.google.common.collect.ImmutableEntry",
152:       "com.google.common.base.Joiner$1",
153:       "com.google.common.base.Converter$ConverterComposition",
154:       "com.google.common.collect.EmptyImmutableSetMultimap",
155:       "com.google.common.collect.HashBiMap$EntrySet",
156:       "com.google.common.base.Joiner$2",
157:       "com.google.common.collect.ImmutableList$Itr",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.collect.ImmutableEnumMap",
160:       "com.google.common.truth.Ordered",
161:       "com.google.common.collect.TreeMultiset",
162:       "com.google.common.collect.LinkedListMultimap$KeyList",
163:       "com.google.common.collect.Lists$OnePlusArrayList",
164:       "com.google.common.base.Objects",
165:       "com.google.common.collect.CompactHashMap$Itr",
166:       "com.google.common.collect.ImmutableSetMultimap",
167:       "com.google.common.collect.ImmutableCollection$Builder",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Iterators$6",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.collect.ImmutableSet",
173:       "com.google.common.collect.Iterators$9",
174:       "com.google.common.collect.Lists$AbstractListWrapper",
175:       "com.google.common.collect.AbstractMapBasedMultiset",
176:       "com.google.common.collect.Iterators$1",
177:       "com.google.common.collect.CompactHashMap",
178:       "com.google.common.collect.Iterators$4",
179:       "com.google.common.collect.Iterators$5",
180:       "com.google.common.base.Converter$ReverseConverter",
181:       "com.google.common.base.ExtraObjectsMethodsForWeb",
182:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
183:       "com.google.common.truth.Platform",
184:       "com.google.common.collect.Lists$StringAsImmutableList",
185:       "com.google.common.collect.Lists$2",
186:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
187:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
188:       "com.google.common.collect.CompactHashMap$EntrySetView",
189:       "com.google.common.truth.LazyMessage",
190:       "com.google.common.collect.Lists$1",
191:       "com.google.common.collect.ImmutableMultimap$Builder",
192:       "com.google.common.base.Equivalence$Identity",
193:       "com.google.common.truth.Subject$ComparisonResult",
194:       "com.google.common.collect.Multiset",
195:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
196:       "com.google.common.collect.AbstractMultimap",
197:       "com.google.common.base.Supplier",
198:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
199:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
200:       "com.google.common.collect.HashBiMap$View",
201:       "com.google.common.truth.IterableSubject$PairwiseChecker",
202:       "com.google.common.collect.ImmutableList",
203:       "com.google.common.collect.ReverseOrdering",
204:       "com.google.common.collect.FluentIterable$1",
205:       "com.google.common.collect.FluentIterable$2",
206:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
207:       "com.google.common.truth.Fact",
208:       "com.google.common.collect.FluentIterable$3",
209:       "org.checkerframework.checker.nullness.qual.Nullable",
210:       "com.google.common.collect.NullnessCasts",
211:       "org.checkerframework.framework.qual.DefaultFor",
212:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
213:       "com.google.common.collect.SortedMultisetBridge",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.base.Converter$FunctionBasedConverter",
216:       "com.google.common.collect.HashBiMap",
217:       "com.google.common.collect.Maps$EntryTransformer",
218:       "com.google.common.collect.Ordering",
219:       "com.google.common.collect.FluentIterable$3$1",
220:       "com.google.common.collect.NaturalOrdering",
221:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
222:       "com.google.common.collect.LinkedListMultimap$Node",
223:       "com.google.common.collect.TreeMultiset$Aggregate$2",
224:       "com.google.common.collect.TreeMultiset$Aggregate$1",
225:       "com.google.common.collect.AllEqualOrdering",
226:       "com.google.common.collect.Hashing",
227:       "com.google.common.collect.ImmutableList$SubList",
228:       "com.google.common.collect.ListMultimap",
229:       "com.google.common.base.FunctionalEquivalence",
230:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
231:       "com.google.common.truth.ErrorWithFacts",
232:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
233:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
234:       "com.google.common.collect.RegularImmutableList",
235:       "com.google.common.collect.SortedMultiset",
236:       "com.google.common.truth.IterableSubject",
237:       "com.google.common.collect.FluentIterable",
238:       "com.google.common.base.Optional",
239:       "com.google.common.collect.Lists$TransformingRandomAccessList",
240:       "com.google.common.collect.Iterators$ArrayItr",
241:       "com.google.common.collect.RegularImmutableMap$KeySet",
242:       "com.google.common.collect.BaseImmutableMultimap",
243:       "com.google.common.collect.Multisets",
244:       "com.google.common.collect.CompactHashMap$MapEntry",
245:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
246:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
247:       "com.google.common.collect.SortedMapDifference",
248:       "com.google.common.collect.CompactHashMap$2",
249:       "com.google.common.collect.RegularImmutableSet",
250:       "com.google.common.truth.Subject$EqualityCheck",
251:       "com.google.common.collect.LexicographicalOrdering",
252:       "com.google.common.collect.ImmutableListMultimap",
253:       "com.google.common.base.ParametricNullness",
254:       "com.google.common.collect.ImmutableMultimap$1",
255:       "com.google.common.base.Present",
256:       "com.google.common.collect.ImmutableMultimap$2",
257:       "com.google.common.collect.Iterables",
258:       "com.google.common.collect.LinkedListMultimap$1",
259:       "com.google.common.collect.Sets$SetView",
260:       "com.google.common.collect.ImmutableSet$Builder",
261:       "com.google.common.truth.Correspondence$DiffFormatter",
262:       "com.google.common.collect.SingletonImmutableSet",
263:       "com.google.common.collect.ImmutableSetMultimap$Builder",
264:       "com.google.common.truth.Correspondence$Transforming",
265:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
266:       "com.google.common.collect.ImmutableMultiset",
267:       "com.google.common.truth.Correspondence$ExceptionStore",
268:       "com.google.common.collect.UsingToStringOrdering",
269:       "com.google.common.truth.ComparableSubject",
270:       "com.google.common.collect.Multisets$AbstractEntry",
271:       "com.google.common.collect.ImmutableMultimap$Keys",
272:       "com.google.common.base.Functions$IdentityFunction",
273:       "com.google.common.truth.FailureMetadata",
274:       "com.google.common.collect.Lists$TransformingSequentialList",
275:       "com.google.common.primitives.IntsMethodsForWeb",
276:       "com.google.common.collect.ObjectArrays",
277:       "com.google.common.collect.AbstractIterator",
278:       "com.google.common.truth.Correspondence$FormattingDiffs",
279:       "com.google.common.truth.Correspondence$Equality",
280:       "com.google.common.base.MoreObjects",
281:       "com.google.common.collect.IndexedImmutableSet$1",
282:       "com.google.common.base.Suppliers$MemoizingSupplier",
283:       "com.google.common.collect.MapDifference",
284:       "com.google.common.collect.ObjectCountLinkedHashMap",
285:       "com.google.common.collect.SortedIterable",
286:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
287:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
288:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
289:       "com.google.common.collect.UnmodifiableIterator",
290:       "com.google.common.collect.ImmutableSortedMultiset",
291:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
292:       "com.google.common.collect.TreeMultiset$Aggregate",
293:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
294:       "com.google.common.collect.Lists$RandomAccessListWrapper",
295:       "com.google.common.collect.ImmutableEnumSet",
296:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
297:       "com.google.common.collect.HashBiMap$View$1",
298:       "com.google.common.collect.ImmutableMultiset$EntrySet",
299:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
300:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
301:       "com.google.common.base.Converter",
302:       "com.google.common.collect.LinkedListMultimap",
303:       "com.google.common.collect.Maps$8",
304:       "com.google.common.base.Function",
305:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ComparatorOrdering",
308:       "com.google.common.collect.AbstractIndexedListIterator",
309:       "com.google.common.collect.HashBiMap$EntryForKey",
310:       "com.google.common.collect.CollectPreconditions",
311:       "com.google.common.collect.Multiset$Entry",
312:       "com.google.common.truth.Subject",
313:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
314:       "com.google.common.primitives.Ints$IntConverter",
315:       "com.google.common.collect.Sets",
316:       "com.google.common.collect.ObjectCountHashMap",
317:       "com.google.common.collect.BoundType",
318:       "com.google.common.collect.ExplicitOrdering",
319:       "com.google.common.collect.CompactHashSet",
320:       "com.google.common.collect.TreeMultiset$Reference",
321:       "com.google.common.collect.ImmutableList$Builder",
322:       "com.google.common.collect.ImmutableMap$1",
323:       "com.google.common.collect.Iterables$5",
324:       "com.google.common.collect.AbstractMultiset",
325:       "com.google.common.collect.Multimap",
326:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
327:       "com.google.common.collect.Iterators",
328:       "com.google.common.collect.CompoundOrdering",
329:       "com.google.common.collect.ImmutableBiMap",
330:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
331:       "com.google.common.collect.ImmutableMultiset$Builder",
332:       "com.google.common.collect.Multisets$EntrySet",
333:       "com.google.common.base.PairwiseEquivalence",
334:       "com.google.common.collect.CompactHashing",
335:       "com.google.common.collect.ImmutableMultiset$1",
336:       "com.google.common.base.Suppliers",
337:       "com.google.common.collect.RegularImmutableMap$EntrySet",
338:       "com.google.common.base.Equivalence",
339:       "com.google.common.collect.ReverseNaturalOrdering",
340:       "com.google.common.truth.StandardSubjectBuilder",
341:       "com.google.common.primitives.Ints",
342:       "com.google.common.collect.Maps",
343:       "com.google.common.collect.SetMultimap",
344:       "com.google.common.collect.TransformedIterator",
345:       "com.google.common.truth.GraphMatching$HopcroftKarp",
346:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
347:       "com.google.common.collect.Iterators$MergingIterator",
348:       "com.google.common.truth.Correspondence$StoredException",
349:       "com.google.common.collect.RegularImmutableSortedSet"
350:     );
351:   } 
352: 
353:   private static void resetClasses() {
354:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_81_tmp__ESTest_scaffolding.class.getClassLoader()); 
355: 
356:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
357:       "com.google.common.truth.Subject",
358:       "com.google.common.truth.IterableSubject",
359:       "com.google.common.truth.IterableSubject$2",
360:       "com.google.common.truth.IterableSubject$1",
361:       "com.google.common.truth.IterableSubject$3",
362:       "com.google.common.truth.IterableSubject$4",
363:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
364:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
365:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
366:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
367:       "com.google.common.base.Optional",
368:       "com.google.common.base.Absent",
369:       "com.google.common.collect.ImmutableCollection",
370:       "com.google.common.collect.UnmodifiableIterator",
371:       "com.google.common.collect.UnmodifiableListIterator",
372:       "com.google.common.collect.AbstractIndexedListIterator",
373:       "com.google.common.collect.ImmutableList$Itr",
374:       "com.google.common.collect.ImmutableList",
375:       "com.google.common.collect.Ordering",
376:       "com.google.common.collect.NaturalOrdering",
377:       "com.google.common.truth.Correspondence",
378:       "com.google.common.truth.Correspondence$Equality",
379:       "com.google.common.truth.FailureMetadata",
380:       "com.google.common.truth.Subject$ComparisonResult",
381:       "com.google.common.base.Preconditions",
382:       "com.google.common.collect.Lists",
383:       "com.google.common.collect.Iterables",
384:       "com.google.common.truth.SubjectUtils",
385:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
386:       "com.google.common.collect.ImmutableMultiset",
387:       "com.google.common.collect.ImmutableCollection$Builder",
388:       "com.google.common.collect.ImmutableMultiset$Builder",
389:       "com.google.common.collect.ObjectCountHashMap",
390:       "com.google.common.collect.Hashing",
391:       "com.google.common.primitives.IntsMethodsForWeb",
392:       "com.google.common.primitives.Ints",
393:       "com.google.common.collect.RegularImmutableMultiset",
394:       "com.google.common.collect.ImmutableSet",
395:       "com.google.common.collect.RegularImmutableSet",
396:       "com.google.common.collect.AbstractMultiset",
397:       "com.google.common.collect.ConcurrentHashMultiset",
398:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
399:       "com.google.common.collect.ImmutableSortedMultiset",
400:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
401:       "com.google.common.collect.Sets$ImprovedAbstractSet",
402:       "com.google.common.collect.Multisets$EntrySet",
403:       "com.google.common.collect.AbstractMultiset$EntrySet",
404:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
405:       "com.google.common.collect.AbstractIterator",
406:       "com.google.common.collect.ConcurrentHashMultiset$2",
407:       "com.google.common.collect.AbstractIterator$State",
408:       "com.google.common.collect.ForwardingObject",
409:       "com.google.common.collect.ForwardingIterator",
410:       "com.google.common.collect.ConcurrentHashMultiset$3",
411:       "com.google.common.collect.AbstractIterator$1",
412:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
413:       "com.google.common.collect.ImmutableSortedSet",
414:       "com.google.common.collect.RegularImmutableSortedSet",
415:       "com.google.common.collect.RegularImmutableSortedMultiset",
416:       "com.google.common.collect.Sets",
417:       "com.google.common.collect.AbstractMapBasedMultiset",
418:       "com.google.common.collect.LinkedHashMultiset",
419:       "com.google.common.collect.Multisets",
420:       "com.google.common.collect.ObjectCountLinkedHashMap",
421:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
422:       "com.google.common.collect.AbstractMapBasedMultiset$2",
423:       "com.google.common.collect.Iterators",
424:       "com.google.common.truth.Correspondence$Transforming",
425:       "com.google.common.base.Functions",
426:       "com.google.common.base.Functions$IdentityFunction",
427:       "com.google.common.truth.Correspondence$FormattingDiffs",
428:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
429:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
430:       "com.google.common.base.Present",
431:       "com.google.common.truth.Correspondence$ExceptionStore",
432:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
433:       "com.google.common.collect.AbstractMultimap",
434:       "com.google.common.collect.LinkedListMultimap",
435:       "com.google.common.collect.Platform",
436:       "com.google.common.collect.CompactHashMap",
437:       "com.google.common.collect.Collections2",
438:       "com.google.common.collect.CollectPreconditions",
439:       "com.google.common.truth.Fact",
440:       "com.google.common.collect.ObjectArrays",
441:       "com.google.common.collect.IndexedImmutableSet",
442:       "com.google.common.collect.ImmutableMultiset$EntrySet",
443:       "com.google.common.base.Suppliers",
444:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
445:       "com.google.common.truth.Platform",
446:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
447:       "com.google.common.collect.ImmutableList$Builder",
448:       "com.google.common.collect.AbstractMapBasedMultimap",
449:       "com.google.common.collect.AbstractListMultimap",
450:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
451:       "com.google.common.collect.ArrayListMultimap",
452:       "com.google.common.collect.CompactHashing",
453:       "com.google.common.base.Strings",
454:       "com.google.common.collect.BaseImmutableMultimap",
455:       "com.google.common.collect.ImmutableMultimap",
456:       "com.google.common.collect.ImmutableSetMultimap",
457:       "com.google.common.collect.ImmutableMultimap$Builder",
458:       "com.google.common.collect.ImmutableSetMultimap$Builder",
459:       "com.google.common.collect.CompactHashMap$EntrySetView",
460:       "com.google.common.collect.ImmutableMap",
461:       "com.google.common.collect.RegularImmutableMap",
462:       "com.google.common.collect.EmptyImmutableSetMultimap",
463:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
464:       "com.google.common.collect.ImmutableMultimap$1",
465:       "com.google.common.collect.RegularImmutableMap$EntrySet",
466:       "com.google.common.base.Converter",
467:       "com.google.common.base.Converter$IdentityConverter",
468:       "com.google.common.truth.LazyMessage",
469:       "com.google.common.truth.StandardSubjectBuilder",
470:       "com.google.common.collect.Lists$OnePlusArrayList",
471:       "com.google.common.base.ExtraObjectsMethodsForWeb",
472:       "com.google.common.base.Objects",
473:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
474:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
475:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
476:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
477:       "com.google.common.base.CharMatcher",
478:       "com.google.common.base.CharMatcher$FastMatcher",
479:       "com.google.common.base.CharMatcher$Is",
480:       "com.google.common.base.CharMatcher$InRange",
481:       "com.google.common.base.CaseFormat",
482:       "com.google.common.base.Ascii",
483:       "com.google.common.collect.AbstractSortedMultiset",
484:       "com.google.common.collect.TreeMultiset",
485:       "com.google.common.collect.GeneralRange",
486:       "com.google.common.collect.TreeMultiset$AvlNode",
487:       "com.google.common.collect.TreeMultiset$Reference",
488:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
489:       "com.google.common.collect.TreeMultiset$2",
490:       "com.google.common.collect.CompactHashSet",
491:       "com.google.common.collect.ImmutableMap$Builder",
492:       "com.google.common.collect.CompactHashMap$Itr",
493:       "com.google.common.collect.CompactHashMap$2",
494:       "com.google.common.collect.AbstractMapEntry",
495:       "com.google.common.collect.CompactHashMap$MapEntry",
496:       "com.google.common.base.Converter$FunctionBasedConverter",
497:       "com.google.common.base.Converter$ConverterComposition",
498:       "com.google.common.base.Joiner",
499:       "com.google.common.base.Joiner$1",
500:       "com.google.common.truth.Correspondence$StoredException",
501:       "com.google.common.collect.HashMultiset",
502:       "com.google.common.base.Converter$ReverseConverter",
503:       "com.google.common.truth.Subject$EqualityCheck",
504:       "com.google.common.collect.LinkedListMultimap$Node",
505:       "com.google.common.collect.LinkedListMultimap$KeyList",
506:       "com.google.common.collect.NullnessCasts",
507:       "com.google.common.collect.TreeMultiset$Aggregate",
508:       "com.google.common.base.Equivalence",
509:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
510:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
511:       "com.google.common.base.Equivalence$Wrapper",
512:       "com.google.common.collect.FluentIterable",
513:       "com.google.common.collect.Iterables$5",
514:       "com.google.common.collect.TransformedIterator",
515:       "com.google.common.collect.Iterators$6",
516:       "com.google.common.collect.Multisets$AbstractEntry",
517:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
518:       "com.google.common.collect.Multisets$ImmutableEntry",
519:       "com.google.common.collect.TreeMultiset$1",
520:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
521:       "com.google.common.collect.SingletonImmutableSet",
522:       "com.google.common.base.NullnessCasts",
523:       "com.google.common.collect.BoundType",
524:       "com.google.common.collect.RegularImmutableList",
525:       "com.google.common.math.IntMath",
526:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
527:       "com.google.common.collect.FluentIterable$3",
528:       "com.google.common.collect.FluentIterable$3$1",
529:       "com.google.common.collect.Iterators$ConcatenatedIterator",
530:       "com.google.common.collect.Iterators$ArrayItr",
531:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
532:       "com.google.common.collect.RegularImmutableMap$KeySet",
533:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
534:       "com.google.common.truth.GraphMatching",
535:       "com.google.common.truth.GraphMatching$HopcroftKarp",
536:       "com.google.common.collect.HashBiMap",
537:       "com.google.common.collect.ImmutableBiMap",
538:       "com.google.common.collect.HashBiMap$View",
539:       "com.google.common.collect.HashBiMap$EntrySet",
540:       "com.google.common.collect.ImmutableBiMap$Builder",
541:       "com.google.common.collect.HashBiMap$View$1",
542:       "com.google.common.collect.RegularImmutableBiMap",
543:       "com.google.common.collect.Maps",
544:       "com.google.common.base.MoreObjects",
545:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
546:       "com.google.common.collect.Iterators$9",
547:       "com.google.common.collect.ImmutableEntry",
548:       "com.google.common.collect.HashBiMap$EntryForKey",
549:       "com.google.common.collect.LinkedListMultimap$1",
550:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
551:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
552:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
553:       "com.google.common.base.Throwables",
554:       "com.google.common.collect.ImmutableMultiset$1",
555:       "com.google.common.collect.IndexedImmutableSet$1"
556:     );
557:   }
558: }

[MASTER] 16:10:38.902 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
iterableSubject0.isInStrictOrder();

[MASTER] 16:10:39.579 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_94_1731035439538/com/google/common/truth/IterableSubject_94_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_94_1731035439538/com/google/common/truth/IterableSubject_94_tmp__ESTest_scaffolding.java]]
[MASTER] 16:10:39.579 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:t/dependency/asm-9.5.jar:t/dependency/auto-value-annotations-1.10.1.jar:t/dependency/checker-qual-3.35.0.jar:t/dependency/error_prone_annotations-2.19.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-32.0.1-android.jar:t/dependency/guava-gwt-32.0.0-jre.jar:t/dependency/guava-testlib-32.0.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-2.8.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:39.579 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.5/truth-1.1.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/asm-9.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/auto-value-annotations-1.10.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/checker-qual-3.35.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/error_prone_annotations-2.19.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-gwt-32.0.0-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/guava-testlib-32.0.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/j2objc-annotations-2.8.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:10:39.580 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.ElementTypesAreNonnullByDefault: 41
[MASTER] 16:10:39.580 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.ElementTypesAreNonnullByDefault
  bad source file: t/dependency/guava-gwt-32.0.0-jre.jar(com/google/common/collect/ElementTypesAreNonnullByDefault.java)
    file does not contain class com.google.common.collect.ElementTypesAreNonnullByDefault
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 169
[MASTER] 16:10:39.580 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:39.580 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 19
[MASTER] 16:10:39.581 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static lenientFormat
  location: class: 17
[MASTER] 16:10:39.581 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkNotNull
  location: class: 18
[MASTER] 16:10:39.581 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   static checkArgument
  location: class: 17
[MASTER] 16:10:39.582 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_94_1731035439538/com/google/common/truth/IterableSubject_94_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:10:39 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.collect.ImmutableMultiset;
13: import com.google.common.truth.Correspondence;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.IterableSubject;
16: import java.sql.SQLFeatureNotSupportedException;
17: import java.sql.SQLNonTransientConnectionException;
18: import java.util.Iterator;
19: import java.util.LinkedList;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.evosuite.runtime.ViolatedAssumptionAnswer;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
26: public class IterableSubject_94_tmp__ESTest extends IterableSubject_94_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
31:       Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
32:       ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
33:       IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
34:       Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> correspondence_BinaryPredicate0 = (Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException>) mock(Correspondence.BinaryPredicate.class, new ViolatedAssumptionAnswer());
35:       Correspondence<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> correspondence0 = Correspondence.from((Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException>) correspondence_BinaryPredicate0, "---");
36:       IterableSubject.UsingCorrespondence<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> iterableSubject_UsingCorrespondence0 = iterableSubject0.comparingElementsUsing((Correspondence<? super SQLFeatureNotSupportedException, ? super SQLFeatureNotSupportedException>) correspondence0);
37:       SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
38:       SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException(sQLFeatureNotSupportedException0);
39:       SQLFeatureNotSupportedException[] sQLFeatureNotSupportedExceptionArray0 = new SQLFeatureNotSupportedException[5];
40:       // Undeclared exception!
41:       try { 
42:         iterableSubject_UsingCorrespondence0.containsAtLeast(sQLFeatureNotSupportedException0, sQLFeatureNotSupportedException1, sQLFeatureNotSupportedExceptionArray0);
43:         fail("Expecting exception: NullPointerException");
44:       
45:       } catch(NullPointerException e) {
46:          //
47:          // no message in exception (getMessage() returned null)
48:          //
49:          verifyException("com.google.common.base.Preconditions", e);
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_94_1731035439538/com/google/common/truth/IterableSubject_94_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:10:39 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class IterableSubject_94_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.IterableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.5"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IterableSubject_94_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.ArrayListMultimap",
84:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
85:       "com.google.common.collect.Lists$RandomAccessPartition",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
89:       "com.google.common.truth.SubjectUtils",
90:       "com.google.common.math.IntMath",
91:       "com.google.common.collect.LinkedHashMultiset",
92:       "com.google.common.truth.GraphMatching",
93:       "com.google.common.collect.AbstractMapBasedMultiset$2",
94:       "com.google.common.collect.Sets$2",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.collect.NullsLastOrdering",
100:       "com.google.common.collect.RegularImmutableMultiset",
101:       "com.google.common.collect.RegularImmutableMap",
102:       "com.google.common.collect.RegularImmutableBiMap",
103:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.collect.ImmutableMultimap$Values",
106:       "com.google.common.collect.ByFunctionOrdering",
107:       "com.google.common.collect.AbstractSortedMultiset",
108:       "com.google.common.collect.Iterators$10",
109:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
110:       "com.google.common.collect.AbstractMapEntry",
111:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
112:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
113:       "com.google.common.collect.ImmutableBiMap$Builder",
114:       "com.google.common.base.Predicate",
115:       "com.google.common.collect.Iterators$ConcatenatedIterator",
116:       "com.google.common.base.Joiner",
117:       "com.google.common.collect.GeneralRange",
118:       "com.google.common.collect.AbstractListMultimap",
119:       "com.google.common.collect.NullsFirstOrdering",
120:       "com.google.common.truth.Correspondence$BinaryPredicate",
121:       "org.checkerframework.framework.qual.QualifierForLiterals",
122:       "com.google.common.truth.AssertionErrorWithFacts",
123:       "com.google.common.base.Strings",
124:       "com.google.common.truth.IterableSubject$3",
125:       "com.google.common.collect.Lists$Partition",
126:       "com.google.common.collect.AbstractMapBasedMultimap",
127:       "com.google.common.collect.Lists",
128:       "com.google.common.truth.IterableSubject$1",
129:       "com.google.common.truth.IterableSubject$4",
130:       "com.google.common.collect.Multisets$ImmutableEntry",
131:       "com.google.common.collect.UnmodifiableListIterator",
132:       "com.google.common.collect.TreeMultiset$AvlNode",
133:       "com.google.common.collect.ImmutableMultimap",
134:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
135:       "com.google.common.collect.TreeMultiset$2",
136:       "com.google.common.collect.ImmutableSortedSet",
137:       "com.google.common.base.Functions",
138:       "com.google.common.collect.Sets$4",
139:       "com.google.common.base.Absent",
140:       "com.google.common.collect.Maps$BiMapConverter",
141:       "org.checkerframework.framework.qual.SubtypeOf",
142:       "com.google.common.base.Throwables",
143:       "com.google.common.collect.ImmutableSortedSet$Builder",
144:       "com.google.common.base.Equivalence$Equals",
145:       "com.google.common.truth.Correspondence",
146:       "com.google.common.base.ElementTypesAreNonnullByDefault",
147:       "com.google.common.collect.AbstractMultiset$EntrySet",
148:       "com.google.common.base.Equivalence$Wrapper",
149:       "com.google.common.collect.Sets$ImprovedAbstractSet",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
152:       "com.google.common.truth.StandardSubjectBuilder$1",
153:       "com.google.common.collect.ImmutableEntry",
154:       "com.google.common.base.Joiner$1",
155:       "com.google.common.base.Converter$ConverterComposition",
156:       "com.google.common.collect.EmptyImmutableSetMultimap",
157:       "com.google.common.collect.HashBiMap$EntrySet",
158:       "com.google.common.base.Joiner$2",
159:       "com.google.common.collect.ImmutableList$Itr",
160:       "com.google.common.collect.ImmutableCollection",
161:       "com.google.common.collect.ImmutableEnumMap",
162:       "com.google.common.truth.Ordered",
163:       "com.google.common.collect.TreeMultiset",
164:       "com.google.common.collect.LinkedListMultimap$KeyList",
165:       "com.google.common.collect.Lists$OnePlusArrayList",
166:       "com.google.common.base.Objects",
167:       "com.google.common.collect.CompactHashMap$Itr",
168:       "com.google.common.collect.ImmutableSetMultimap",
169:       "com.google.common.collect.ImmutableCollection$Builder",
170:       "com.google.errorprone.annotations.DoNotMock",
171:       "com.google.common.collect.Iterators$6",
172:       "com.google.common.collect.BiMap",
173:       "com.google.common.collect.IndexedImmutableSet",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.collect.Lists$AbstractListWrapper",
177:       "com.google.common.collect.AbstractMapBasedMultiset",
178:       "com.google.common.collect.Iterators$1",
179:       "com.google.common.collect.CompactHashMap",
180:       "com.google.common.collect.Iterators$4",
181:       "com.google.common.collect.Iterators$5",
182:       "com.google.common.base.Converter$ReverseConverter",
183:       "com.google.common.base.ExtraObjectsMethodsForWeb",
184:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
185:       "com.google.common.truth.Platform",
186:       "com.google.common.collect.Lists$StringAsImmutableList",
187:       "com.google.common.collect.Lists$2",
188:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
189:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
190:       "com.google.common.collect.CompactHashMap$EntrySetView",
191:       "com.google.common.truth.LazyMessage",
192:       "com.google.common.collect.Lists$1",
193:       "com.google.common.collect.ImmutableMultimap$Builder",
194:       "com.google.common.base.Equivalence$Identity",
195:       "com.google.common.truth.Subject$ComparisonResult",
196:       "com.google.common.collect.Multiset",
197:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
198:       "com.google.common.collect.AbstractMultimap",
199:       "com.google.common.base.Supplier",
200:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
201:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
202:       "com.google.common.collect.HashBiMap$View",
203:       "com.google.common.truth.IterableSubject$PairwiseChecker",
204:       "com.google.common.collect.ImmutableList",
205:       "com.google.common.collect.ReverseOrdering",
206:       "com.google.common.collect.FluentIterable$1",
207:       "com.google.common.collect.FluentIterable$2",
208:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
209:       "com.google.common.truth.Fact",
210:       "com.google.common.collect.FluentIterable$3",
211:       "org.checkerframework.checker.nullness.qual.Nullable",
212:       "com.google.common.collect.NullnessCasts",
213:       "org.checkerframework.framework.qual.DefaultFor",
214:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
215:       "com.google.common.collect.SortedMultisetBridge",
216:       "com.google.common.collect.ImmutableMap$Builder",
217:       "com.google.common.base.Converter$FunctionBasedConverter",
218:       "com.google.common.collect.HashBiMap",
219:       "com.google.common.collect.Maps$EntryTransformer",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.collect.FluentIterable$3$1",
222:       "com.google.common.collect.NaturalOrdering",
223:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
224:       "com.google.common.collect.LinkedListMultimap$Node",
225:       "com.google.common.collect.TreeMultiset$Aggregate$2",
226:       "com.google.common.collect.TreeMultiset$Aggregate$1",
227:       "com.google.common.collect.AllEqualOrdering",
228:       "com.google.common.collect.Hashing",
229:       "com.google.common.collect.ImmutableList$SubList",
230:       "com.google.common.collect.ListMultimap",
231:       "com.google.common.base.FunctionalEquivalence",
232:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
233:       "com.google.common.truth.ErrorWithFacts",
234:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
235:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
236:       "com.google.common.collect.RegularImmutableList",
237:       "com.google.common.collect.SortedMultiset",
238:       "com.google.common.truth.IterableSubject",
239:       "com.google.common.collect.FluentIterable",
240:       "com.google.common.base.Optional",
241:       "com.google.common.collect.Lists$TransformingRandomAccessList",
242:       "com.google.common.collect.Iterators$ArrayItr",
243:       "com.google.common.collect.RegularImmutableMap$KeySet",
244:       "com.google.common.collect.BaseImmutableMultimap",
245:       "com.google.common.collect.Multisets",
246:       "com.google.common.collect.CompactHashMap$MapEntry",
247:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
248:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
249:       "com.google.common.collect.SortedMapDifference",
250:       "com.google.common.collect.CompactHashMap$2",
251:       "com.google.common.collect.RegularImmutableSet",
252:       "com.google.common.truth.Subject$EqualityCheck",
253:       "com.google.common.collect.LexicographicalOrdering",
254:       "com.google.common.collect.ImmutableListMultimap",
255:       "com.google.common.base.ParametricNullness",
256:       "com.google.common.collect.ImmutableMultimap$1",
257:       "com.google.common.base.Present",
258:       "com.google.common.collect.ImmutableMultimap$2",
259:       "com.google.common.collect.Iterables",
260:       "com.google.common.collect.LinkedListMultimap$1",
261:       "com.google.common.collect.Sets$SetView",
262:       "com.google.common.collect.ImmutableSet$Builder",
263:       "com.google.common.truth.Correspondence$DiffFormatter",
264:       "com.google.common.collect.SingletonImmutableSet",
265:       "com.google.common.collect.ImmutableSetMultimap$Builder",
266:       "com.google.common.truth.Correspondence$Transforming",
267:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
268:       "com.google.common.collect.ImmutableMultiset",
269:       "com.google.common.truth.Correspondence$ExceptionStore",
270:       "com.google.common.collect.UsingToStringOrdering",
271:       "com.google.common.truth.ComparableSubject",
272:       "com.google.common.collect.Multisets$AbstractEntry",
273:       "com.google.common.collect.ImmutableMultimap$Keys",
274:       "com.google.common.base.Functions$IdentityFunction",
275:       "com.google.common.truth.FailureMetadata",
276:       "com.google.common.collect.Lists$TransformingSequentialList",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.collect.ObjectArrays",
279:       "com.google.common.collect.AbstractIterator",
280:       "com.google.common.truth.Correspondence$FormattingDiffs",
281:       "com.google.common.truth.Correspondence$Equality",
282:       "com.google.common.base.MoreObjects",
283:       "com.google.common.collect.IndexedImmutableSet$1",
284:       "com.google.common.base.Suppliers$MemoizingSupplier",
285:       "com.google.common.collect.MapDifference",
286:       "com.google.common.collect.ObjectCountLinkedHashMap",
287:       "com.google.common.collect.SortedIterable",
288:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
289:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
290:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.ImmutableSortedMultiset",
293:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
294:       "com.google.common.collect.TreeMultiset$Aggregate",
295:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
296:       "com.google.common.collect.Lists$RandomAccessListWrapper",
297:       "com.google.common.collect.ImmutableEnumSet",
298:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
299:       "com.google.common.collect.HashBiMap$View$1",
300:       "com.google.common.collect.ImmutableMultiset$EntrySet",
301:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
302:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
303:       "com.google.common.base.Converter",
304:       "com.google.common.collect.LinkedListMultimap",
305:       "com.google.common.collect.Maps$8",
306:       "com.google.common.base.Function",
307:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ComparatorOrdering",
310:       "com.google.common.collect.AbstractIndexedListIterator",
311:       "com.google.common.collect.HashBiMap$EntryForKey",
312:       "com.google.common.collect.CollectPreconditions",
313:       "com.google.common.collect.Multiset$Entry",
314:       "com.google.common.truth.Subject",
315:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
316:       "com.google.common.primitives.Ints$IntConverter",
317:       "com.google.common.collect.Sets",
318:       "com.google.common.collect.ObjectCountHashMap",
319:       "com.google.common.collect.BoundType",
320:       "com.google.common.collect.ExplicitOrdering",
321:       "com.google.common.collect.CompactHashSet",
322:       "com.google.common.collect.TreeMultiset$Reference",
323:       "com.google.common.collect.ImmutableList$Builder",
324:       "com.google.common.collect.ImmutableMap$1",
325:       "com.google.common.collect.Iterables$5",
326:       "com.google.common.collect.AbstractMultiset",
327:       "com.google.common.collect.Multimap",
328:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
329:       "com.google.common.collect.Iterators",
330:       "com.google.common.collect.CompoundOrdering",
331:       "com.google.common.collect.ImmutableBiMap",
332:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
333:       "com.google.common.collect.ImmutableMultiset$Builder",
334:       "com.google.common.collect.Multisets$EntrySet",
335:       "com.google.common.base.PairwiseEquivalence",
336:       "com.google.common.collect.CompactHashing",
337:       "com.google.common.collect.ImmutableMultiset$1",
338:       "com.google.common.base.Suppliers",
339:       "com.google.common.collect.RegularImmutableMap$EntrySet",
340:       "com.google.common.base.Equivalence",
341:       "com.google.common.collect.ReverseNaturalOrdering",
342:       "com.google.common.truth.StandardSubjectBuilder",
343:       "com.google.common.primitives.Ints",
344:       "com.google.common.collect.Maps",
345:       "com.google.common.collect.SetMultimap",
346:       "com.google.common.collect.TransformedIterator",
347:       "com.google.common.truth.GraphMatching$HopcroftKarp",
348:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
349:       "com.google.common.collect.Iterators$MergingIterator",
350:       "com.google.common.truth.Correspondence$StoredException",
351:       "com.google.common.collect.RegularImmutableSortedSet"
352:     );
353:   } 
354:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
355:     mock(Class.forName("com.google.common.truth.Correspondence$BinaryPredicate", false, IterableSubject_94_tmp__ESTest_scaffolding.class.getClassLoader()));
356:   }
357: 
358:   private static void resetClasses() {
359:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IterableSubject_94_tmp__ESTest_scaffolding.class.getClassLoader()); 
360: 
361:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
362:       "com.google.common.truth.Subject",
363:       "com.google.common.truth.IterableSubject",
364:       "com.google.common.truth.IterableSubject$2",
365:       "com.google.common.truth.IterableSubject$1",
366:       "com.google.common.truth.IterableSubject$3",
367:       "com.google.common.truth.IterableSubject$4",
368:       "com.google.common.truth.IterableSubject$UsingCorrespondence",
369:       "com.google.common.truth.IterableSubject$UsingCorrespondence$1",
370:       "com.google.common.truth.IterableSubject$UsingCorrespondence$2",
371:       "com.google.common.truth.IterableSubject$ElementFactGrouping",
372:       "com.google.common.base.Optional",
373:       "com.google.common.base.Absent",
374:       "com.google.common.collect.ImmutableCollection",
375:       "com.google.common.collect.UnmodifiableIterator",
376:       "com.google.common.collect.UnmodifiableListIterator",
377:       "com.google.common.collect.AbstractIndexedListIterator",
378:       "com.google.common.collect.ImmutableList$Itr",
379:       "com.google.common.collect.ImmutableList",
380:       "com.google.common.collect.Ordering",
381:       "com.google.common.collect.NaturalOrdering",
382:       "com.google.common.truth.Correspondence",
383:       "com.google.common.truth.Correspondence$Equality",
384:       "com.google.common.truth.FailureMetadata",
385:       "com.google.common.truth.Subject$ComparisonResult",
386:       "com.google.common.base.Preconditions",
387:       "com.google.common.collect.Lists",
388:       "com.google.common.collect.Iterables",
389:       "com.google.common.truth.SubjectUtils",
390:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
391:       "com.google.common.collect.ImmutableMultiset",
392:       "com.google.common.collect.ImmutableCollection$Builder",
393:       "com.google.common.collect.ImmutableMultiset$Builder",
394:       "com.google.common.collect.ObjectCountHashMap",
395:       "com.google.common.collect.Hashing",
396:       "com.google.common.primitives.IntsMethodsForWeb",
397:       "com.google.common.primitives.Ints",
398:       "com.google.common.collect.RegularImmutableMultiset",
399:       "com.google.common.collect.ImmutableSet",
400:       "com.google.common.collect.RegularImmutableSet",
401:       "com.google.common.collect.AbstractMultiset",
402:       "com.google.common.collect.ConcurrentHashMultiset",
403:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
404:       "com.google.common.collect.ImmutableSortedMultiset",
405:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
406:       "com.google.common.collect.Sets$ImprovedAbstractSet",
407:       "com.google.common.collect.Multisets$EntrySet",
408:       "com.google.common.collect.AbstractMultiset$EntrySet",
409:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
410:       "com.google.common.collect.AbstractIterator",
411:       "com.google.common.collect.ConcurrentHashMultiset$2",
412:       "com.google.common.collect.AbstractIterator$State",
413:       "com.google.common.collect.ForwardingObject",
414:       "com.google.common.collect.ForwardingIterator",
415:       "com.google.common.collect.ConcurrentHashMultiset$3",
416:       "com.google.common.collect.AbstractIterator$1",
417:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
418:       "com.google.common.collect.ImmutableSortedSet",
419:       "com.google.common.collect.RegularImmutableSortedSet",
420:       "com.google.common.collect.RegularImmutableSortedMultiset",
421:       "com.google.common.collect.Sets",
422:       "com.google.common.collect.AbstractMapBasedMultiset",
423:       "com.google.common.collect.LinkedHashMultiset",
424:       "com.google.common.collect.Multisets",
425:       "com.google.common.collect.ObjectCountLinkedHashMap",
426:       "com.google.common.collect.AbstractMapBasedMultiset$Itr",
427:       "com.google.common.collect.AbstractMapBasedMultiset$2",
428:       "com.google.common.collect.Iterators",
429:       "com.google.common.truth.Correspondence$Transforming",
430:       "com.google.common.base.Functions",
431:       "com.google.common.base.Functions$IdentityFunction",
432:       "com.google.common.truth.Correspondence$FormattingDiffs",
433:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
434:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairer",
435:       "com.google.common.base.Present",
436:       "com.google.common.truth.Correspondence$ExceptionStore",
437:       "com.google.common.truth.IterableSubject$UsingCorrespondence$Pairing",
438:       "com.google.common.collect.AbstractMultimap",
439:       "com.google.common.collect.LinkedListMultimap",
440:       "com.google.common.collect.Platform",
441:       "com.google.common.collect.CompactHashMap",
442:       "com.google.common.collect.Collections2",
443:       "com.google.common.collect.CollectPreconditions",
444:       "com.google.common.truth.Fact",
445:       "com.google.common.collect.ObjectArrays",
446:       "com.google.common.collect.IndexedImmutableSet",
447:       "com.google.common.collect.ImmutableMultiset$EntrySet",
448:       "com.google.common.base.Suppliers",
449:       "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier",
450:       "com.google.common.truth.Platform",
451:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
452:       "com.google.common.collect.ImmutableList$Builder",
453:       "com.google.common.collect.AbstractMapBasedMultimap",
454:       "com.google.common.collect.AbstractListMultimap",
455:       "com.google.common.collect.ArrayListMultimapGwtSerializationDependencies",
456:       "com.google.common.collect.ArrayListMultimap",
457:       "com.google.common.collect.CompactHashing",
458:       "com.google.common.base.Strings",
459:       "com.google.common.collect.BaseImmutableMultimap",
460:       "com.google.common.collect.ImmutableMultimap",
461:       "com.google.common.collect.ImmutableSetMultimap",
462:       "com.google.common.collect.ImmutableMultimap$Builder",
463:       "com.google.common.collect.ImmutableSetMultimap$Builder",
464:       "com.google.common.collect.CompactHashMap$EntrySetView",
465:       "com.google.common.collect.ImmutableMap",
466:       "com.google.common.collect.RegularImmutableMap",
467:       "com.google.common.collect.EmptyImmutableSetMultimap",
468:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
469:       "com.google.common.collect.ImmutableMultimap$1",
470:       "com.google.common.collect.RegularImmutableMap$EntrySet",
471:       "com.google.common.base.Converter",
472:       "com.google.common.base.Converter$IdentityConverter",
473:       "com.google.common.truth.LazyMessage",
474:       "com.google.common.truth.StandardSubjectBuilder",
475:       "com.google.common.collect.Lists$OnePlusArrayList",
476:       "com.google.common.base.ExtraObjectsMethodsForWeb",
477:       "com.google.common.base.Objects",
478:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
479:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
480:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
481:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
482:       "com.google.common.base.CharMatcher",
483:       "com.google.common.base.CharMatcher$FastMatcher",
484:       "com.google.common.base.CharMatcher$Is",
485:       "com.google.common.base.CharMatcher$InRange",
486:       "com.google.common.base.CaseFormat",
487:       "com.google.common.base.Ascii",
488:       "com.google.common.collect.AbstractSortedMultiset",
489:       "com.google.common.collect.TreeMultiset",
490:       "com.google.common.collect.GeneralRange",
491:       "com.google.common.collect.TreeMultiset$AvlNode",
492:       "com.google.common.collect.TreeMultiset$Reference",
493:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
494:       "com.google.common.collect.TreeMultiset$2",
495:       "com.google.common.collect.CompactHashSet",
496:       "com.google.common.collect.ImmutableMap$Builder",
497:       "com.google.common.collect.CompactHashMap$Itr",
498:       "com.google.common.collect.CompactHashMap$2",
499:       "com.google.common.collect.AbstractMapEntry",
500:       "com.google.common.collect.CompactHashMap$MapEntry",
501:       "com.google.common.base.Converter$FunctionBasedConverter",
502:       "com.google.common.base.Converter$ConverterComposition",
503:       "com.google.common.base.Joiner",
504:       "com.google.common.base.Joiner$1",
505:       "com.google.common.truth.Correspondence$StoredException",
506:       "com.google.common.collect.HashMultiset",
507:       "com.google.common.base.Converter$ReverseConverter",
508:       "com.google.common.truth.Subject$EqualityCheck",
509:       "com.google.common.collect.LinkedListMultimap$Node",
510:       "com.google.common.collect.LinkedListMultimap$KeyList",
511:       "com.google.common.collect.NullnessCasts",
512:       "com.google.common.collect.TreeMultiset$Aggregate",
513:       "com.google.common.base.Equivalence",
514:       "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
515:       "com.google.common.truth.SubjectUtils$NonHashingMultiset",
516:       "com.google.common.base.Equivalence$Wrapper",
517:       "com.google.common.collect.FluentIterable",
518:       "com.google.common.collect.Iterables$5",
519:       "com.google.common.collect.TransformedIterator",
520:       "com.google.common.collect.Iterators$6",
521:       "com.google.common.collect.Multisets$AbstractEntry",
522:       "com.google.common.collect.ObjectCountHashMap$MapEntry",
523:       "com.google.common.collect.Multisets$ImmutableEntry",
524:       "com.google.common.collect.TreeMultiset$1",
525:       "com.google.common.collect.RegularImmutableMultiset$ElementSet",
526:       "com.google.common.collect.SingletonImmutableSet",
527:       "com.google.common.base.NullnessCasts",
528:       "com.google.common.collect.BoundType",
529:       "com.google.common.collect.RegularImmutableList",
530:       "com.google.common.math.IntMath",
531:       "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
532:       "com.google.common.collect.FluentIterable$3",
533:       "com.google.common.collect.FluentIterable$3$1",
534:       "com.google.common.collect.Iterators$ConcatenatedIterator",
535:       "com.google.common.collect.Iterators$ArrayItr",
536:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
537:       "com.google.common.collect.RegularImmutableMap$KeySet",
538:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
539:       "com.google.common.truth.GraphMatching",
540:       "com.google.common.truth.GraphMatching$HopcroftKarp",
541:       "com.google.common.collect.HashBiMap",
542:       "com.google.common.collect.ImmutableBiMap",
543:       "com.google.common.collect.HashBiMap$View",
544:       "com.google.common.collect.HashBiMap$EntrySet",
545:       "com.google.common.collect.ImmutableBiMap$Builder",
546:       "com.google.common.collect.HashBiMap$View$1",
547:       "com.google.common.collect.RegularImmutableBiMap",
548:       "com.google.common.collect.Maps",
549:       "com.google.common.base.MoreObjects",
550:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
551:       "com.google.common.collect.Iterators$9",
552:       "com.google.common.collect.ImmutableEntry",
553:       "com.google.common.collect.HashBiMap$EntryForKey",
554:       "com.google.common.collect.LinkedListMultimap$1",
555:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
556:       "com.google.common.collect.LinkedListMultimap$1KeySetImpl",
557:       "com.google.common.collect.LinkedListMultimap$DistinctKeyIterator",
558:       "com.google.common.base.Throwables",
559:       "com.google.common.collect.ImmutableMultiset$1",
560:       "com.google.common.collect.IndexedImmutableSet$1"
561:     );
562:   }
563: }

[MASTER] 16:10:39.582 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedList<SQLNonTransientConnectionException> linkedList0 = new LinkedList<SQLNonTransientConnectionException>();
Iterator<SQLNonTransientConnectionException> iterator0 = linkedList0.iterator();
ImmutableMultiset<SQLNonTransientConnectionException> immutableMultiset0 = ImmutableMultiset.copyOf((Iterator<? extends SQLNonTransientConnectionException>) iterator0);
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, immutableMultiset0);
Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> correspondence_BinaryPredicate0 = (Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException>) mock(Correspondence.BinaryPredicate.class, new ViolatedAssumptionAnswer());
Correspondence<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> correspondence0 = Correspondence.from((Correspondence.BinaryPredicate<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException>) correspondence_BinaryPredicate0, "---");
IterableSubject.UsingCorrespondence<SQLFeatureNotSupportedException, SQLFeatureNotSupportedException> iterableSubject_UsingCorrespondence0 = iterableSubject0.comparingElementsUsing((Correspondence<? super SQLFeatureNotSupportedException, ? super SQLFeatureNotSupportedException>) correspondence0);
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException(sQLFeatureNotSupportedException0);
SQLFeatureNotSupportedException[] sQLFeatureNotSupportedExceptionArray0 = new SQLFeatureNotSupportedException[5];
iterableSubject_UsingCorrespondence0.containsAtLeast(sQLFeatureNotSupportedException0, sQLFeatureNotSupportedException1, sQLFeatureNotSupportedExceptionArray0);

[MASTER] 16:10:42.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 16:10:42.046 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ConcurrentSkipListMap<ImmutableSortedMultiset<SQLNonTransientConnectionException>, SQLNonTransientConnectionException> concurrentSkipListMap0 = new ConcurrentSkipListMap<ImmutableSortedMultiset<SQLNonTransientConnectionException>, SQLNonTransientConnectionException>();
Collection<SQLNonTransientConnectionException> collection0 = concurrentSkipListMap0.values();
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, collection0);
Object[] objectArray0 = new Object[4];
iterableSubject0.containsNoneIn(objectArray0);
assertEquals(4, objectArray0.length);


[MASTER] 16:10:55.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 16:10:55.442 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ConcurrentSkipListMap<ImmutableSortedMultiset<SQLNonTransientConnectionException>, SQLNonTransientConnectionException> concurrentSkipListMap0 = new ConcurrentSkipListMap<ImmutableSortedMultiset<SQLNonTransientConnectionException>, SQLNonTransientConnectionException>();
Collection<SQLNonTransientConnectionException> collection0 = concurrentSkipListMap0.values();
IterableSubject iterableSubject0 = new IterableSubject((FailureMetadata) null, collection0);
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
Object[] objectArray0 = new Object[3];
iterableSubject0.containsAnyOf(iterableSubject0, sQLFeatureNotSupportedException0, objectArray0);

* Writing tests to file
* Writing JUnit test case 'IterableSubject_ESTest' to evosuite-tests
* Done!

* Computation finished
