/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 08 03:09:02 GMT 2024
 */

package com.google.common.truth;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ThrowableSubject_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.collect.ListMultimap",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.base.CharMatcher$Whitespace",
      "com.google.common.base.CharMatcher$ForPredicate",
      "com.google.common.truth.ErrorWithFacts",
      "com.google.common.collect.PeekingIterator",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.truth.StackTraceCleaner",
      "com.google.common.truth.SubjectUtils",
      "com.google.common.base.CharMatcher$JavaDigit",
      "com.google.common.collect.FluentIterable",
      "com.google.common.base.Optional",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.Sets$2",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.Sets$3",
      "com.google.common.truth.ThrowableSubject",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.Sets$1",
      "com.google.common.base.CharMatcher$IsNot",
      "com.google.common.base.CharMatcher$JavaLetter",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.collect.Platform",
      "com.google.common.base.CharMatcher$JavaLetterOrDigit",
      "com.google.common.base.Verify",
      "com.google.common.collect.BaseImmutableMultimap",
      "com.google.common.base.CharMatcher$NegatedFastMatcher",
      "com.google.common.collect.ImmutableMultimap$Values",
      "com.google.common.collect.Range",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.collect.Iterators$10",
      "com.google.common.truth.Subject$EqualityCheck",
      "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.base.Predicate",
      "com.google.common.base.CharMatcher$IsEither",
      "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
      "com.google.common.collect.ImmutableListMultimap",
      "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
      "com.google.common.collect.ImmutableMultimap$1",
      "com.google.common.base.CharMatcher$Invisible",
      "com.google.common.base.CharMatcher$None",
      "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
      "com.google.common.base.Present",
      "com.google.common.base.Joiner",
      "com.google.common.collect.ImmutableMultimap$2",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.truth.Subject$2",
      "com.google.common.truth.Subject$3",
      "com.google.common.collect.Iterables",
      "com.google.common.base.CharMatcher$Any",
      "com.google.common.truth.Subject$1",
      "com.google.common.collect.Sets$SetView",
      "com.google.common.collect.ImmutableSet$Builder",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.truth.Platform$PlatformComparisonFailure",
      "com.google.common.collect.ImmutableSetMultimap$Builder",
      "com.google.common.truth.AssertionErrorWithFacts",
      "com.google.common.base.Strings",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.truth.ActualValueInference$InferredType",
      "com.google.common.collect.ImmutableMultiset",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.truth.ComparableSubject",
      "com.google.common.collect.ImmutableMultimap$Keys",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.truth.FailureMetadata",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.common.truth.FailureMetadata$Step",
      "com.google.common.truth.StackTraceCleaner$StackFrameType",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.collect.RangeGwtSerializationDependencies",
      "com.google.common.collect.Sets$4",
      "com.google.common.base.Absent",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.base.CaseFormat$1",
      "com.google.common.base.CaseFormat$2",
      "com.google.common.base.CaseFormat$3",
      "com.google.common.base.CharMatcher",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.base.MoreObjects",
      "com.google.common.base.CaseFormat$4",
      "com.google.common.base.CaseFormat$5",
      "com.google.common.collect.ImmutableSortedSet$Builder",
      "com.google.common.base.CharMatcher$And",
      "com.google.common.collect.MapDifference",
      "com.google.common.collect.SortedIterable",
      "com.google.common.base.CharMatcher$AnyOf",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.base.CharMatcher$1",
      "com.google.common.truth.StandardSubjectBuilder$1",
      "com.google.common.truth.ActualValueInference$OpaqueEntry",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.CharMatcher$JavaIsoControl",
      "com.google.common.base.Joiner$2",
      "org.objectweb.asm.MethodVisitor",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.base.Java8Usage",
      "com.google.common.truth.ActualValueInference",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "com.google.common.base.Joiner$3",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.collect.ImmutableEnumSet",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
      "com.google.common.base.CharMatcher$BitSetMatcher",
      "com.google.common.truth.Platform$JUnitTestRule",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "org.objectweb.asm.ClassVisitor",
      "com.google.common.base.CharMatcher$JavaUpperCase",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.errorprone.annotations.DoNotMock",
      "com.google.common.base.Converter",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.Maps$8",
      "com.google.common.collect.BiMap",
      "com.google.common.base.Function",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.truth.Subject",
      "com.google.common.collect.Sets",
      "com.google.common.primitives.Ints$IntConverter",
      "com.google.common.collect.Iterators$4",
      "com.google.common.collect.Iterators$5",
      "com.google.common.collect.ImmutableMultimap$EntryCollection",
      "org.objectweb.asm.ClassReader",
      "com.google.common.truth.Platform",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.collect.Lists$2",
      "com.google.common.base.CharMatcher$SingleWidth",
      "com.google.common.base.CharMatcher$JavaLowerCase",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.Lists$1",
      "com.google.common.truth.LazyMessage",
      "com.google.common.collect.ImmutableMultimap$Builder",
      "com.google.common.truth.Subject$ComparisonResult",
      "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.ImmutableSetMultimap$EntrySet",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.truth.ComparisonFailureWithFacts",
      "com.google.common.collect.Multimap",
      "com.google.common.collect.Iterators",
      "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.FluentIterable$1",
      "com.google.common.collect.FluentIterable$2",
      "com.google.common.truth.ThrowableSubject$1",
      "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
      "com.google.common.truth.Fact",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.base.VerifyException",
      "com.google.common.base.CharMatcher$Negated",
      "com.google.common.truth.ActualValueInference$DescribedEntry",
      "com.google.common.base.CaseFormat",
      "com.google.common.base.Ascii",
      "com.google.common.truth.ActualValueInference$SubjectEntry",
      "com.google.common.base.CharMatcher$Ascii",
      "com.google.common.truth.StandardSubjectBuilder",
      "com.google.common.collect.Maps",
      "com.google.common.primitives.Ints",
      "com.google.common.truth.StringSubject",
      "com.google.common.collect.SetMultimap",
      "com.google.common.base.CharMatcher$Or",
      "com.google.common.base.CaseFormat$StringConverter",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.truth.FailureStrategy",
      "com.google.common.base.CharMatcher$Digit",
      "com.google.common.collect.Iterators$MergingIterator",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.truth.ActualValueInference$StackEntry"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.truth.Subject$1",
      "com.google.common.truth.Subject$2",
      "com.google.common.truth.Subject",
      "com.google.common.truth.ThrowableSubject",
      "com.google.common.truth.ThrowableSubject$1",
      "com.google.common.truth.FailureMetadata",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.base.Java8Usage",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.ImmutableList",
      "com.google.common.truth.FailureMetadata$Step",
      "com.google.common.truth.SubjectUtils",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.truth.LazyMessage",
      "com.google.common.truth.Subject$3",
      "com.google.common.truth.StandardSubjectBuilder",
      "com.google.common.truth.Fact",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.truth.AssertionErrorWithFacts",
      "com.google.common.truth.Platform",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.truth.StackTraceCleaner",
      "com.google.common.collect.Sets",
      "com.google.common.collect.Maps",
      "com.google.common.base.MoreObjects",
      "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
      "com.google.common.truth.StackTraceCleaner$StackFrameType",
      "com.google.common.base.Joiner",
      "com.google.common.base.Joiner$3",
      "com.google.common.truth.ActualValueInference",
      "org.objectweb.asm.ClassVisitor",
      "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.BaseImmutableMultimap",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.ImmutableMultimap$Builder",
      "com.google.common.collect.ImmutableSetMultimap$Builder",
      "com.google.common.collect.Platform",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.primitives.Ints",
      "org.objectweb.asm.ClassReader",
      "com.google.common.collect.FluentIterable",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.base.Strings",
      "com.google.common.truth.ComparableSubject",
      "com.google.common.truth.StringSubject",
      "com.google.common.base.Converter",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.common.truth.ComparisonFailures",
      "com.google.common.base.Splitter",
      "com.google.common.base.Platform$JdkPatternCompiler",
      "com.google.common.base.Platform",
      "com.google.common.base.CommonPattern",
      "com.google.common.base.JdkPattern",
      "com.google.common.base.CommonMatcher",
      "com.google.common.base.JdkPattern$JdkMatcher",
      "com.google.common.base.Splitter$3",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "com.google.common.base.CharMatcher$None",
      "com.google.common.base.Splitter$5",
      "com.google.common.base.AbstractIterator",
      "com.google.common.base.Splitter$SplittingIterator",
      "com.google.common.base.Splitter$3$1",
      "com.google.common.base.AbstractIterator$State",
      "com.google.common.base.AbstractIterator$1",
      "com.google.common.truth.DiffUtils",
      "com.google.common.truth.Platform$PlatformComparisonFailure",
      "com.google.common.truth.ComparisonFailureWithFacts",
      "com.google.common.truth.Subject$EqualityCheck",
      "com.google.common.truth.Subject$ComparisonResult",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CaseFormat",
      "com.google.common.base.Ascii",
      "com.google.common.base.Verify",
      "com.google.common.collect.Lists",
      "com.google.common.collect.Lists$OnePlusArrayList",
      "com.google.common.math.IntMath",
      "com.google.common.base.Converter$1",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.base.Converter$ConverterComposition",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
      "autovalue.shaded.com.google$.common.collect.$Cut",
      "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
      "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
      "autovalue.shaded.com.google$.common.base.$Preconditions",
      "autovalue.shaded.com.google$.common.collect.$Range",
      "autovalue.shaded.com.google$.common.collect.$Range$1",
      "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
    );
  }
}
