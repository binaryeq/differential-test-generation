/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 08 03:07:48 GMT 2024
 */

package com.google.common.truth;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SubjectUtils_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.SubjectUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SubjectUtils_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.base.FunctionalEquivalence",
      "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.PeekingIterator",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.truth.SubjectUtils",
      "com.google.common.collect.SortedMultiset",
      "com.google.common.collect.FluentIterable",
      "com.google.common.base.Optional",
      "com.google.common.collect.LinkedHashMultiset",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.AbstractMapBasedMultiset$2",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.Platform",
      "com.google.common.collect.Multisets",
      "com.google.common.collect.AbstractMapBasedMultiset$Itr",
      "com.google.common.collect.Iterators$10",
      "com.google.common.base.Predicate",
      "com.google.common.base.Present",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.collect.Iterables",
      "com.google.common.base.Strings",
      "com.google.common.collect.CompactHashSet$1",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.Lists",
      "com.google.common.collect.Multisets$ImmutableEntry",
      "com.google.common.collect.UnmodifiableListIterator",
      "autovalue.shaded.com.google$.common.collect.$BoundType",
      "com.google.common.collect.Multisets$AbstractEntry",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.common.collect.ObjectCountHashMap$MapEntry",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.base.Absent",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.base.Equivalence$Equals",
      "com.google.common.collect.ObjectCountLinkedHashMap",
      "com.google.common.collect.AbstractMultiset$EntrySet",
      "com.google.common.collect.SortedIterable",
      "com.google.common.base.Equivalence$Wrapper",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset",
      "com.google.common.base.Preconditions",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$2",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
      "com.google.common.base.Java8Usage",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
      "com.google.common.collect.HashMultimap",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.base.Objects",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.base.Converter",
      "com.google.errorprone.annotations.DoNotMock",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.AbstractSetMultimap",
      "com.google.common.collect.HashMultimapGwtSerializationDependencies",
      "com.google.common.base.Function",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.AbstractMapBasedMultiset",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Multiset$Entry",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.collect.Iterators$4",
      "com.google.common.primitives.Ints$IntConverter",
      "com.google.common.collect.Iterators$5",
      "com.google.common.collect.ObjectCountHashMap",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.collect.CompactHashSet",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.collect.Lists$2",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.Lists$1",
      "com.google.common.base.Equivalence$Identity",
      "com.google.common.collect.Iterables$5",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.AbstractMultiset",
      "com.google.common.collect.Multimap",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.ImmutableList",
      "com.google.common.base.PairwiseEquivalence",
      "com.google.common.collect.Multisets$EntrySet",
      "com.google.common.collect.CompactHashing",
      "com.google.common.collect.FluentIterable$1",
      "com.google.common.collect.FluentIterable$2",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.base.Equivalence",
      "com.google.common.collect.SortedMultisetBridge",
      "com.google.common.primitives.Ints",
      "com.google.common.collect.SetMultimap",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.collect.Iterators$MergingIterator"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SubjectUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.truth.SubjectUtils",
      "com.google.common.base.Equivalence",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$2",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset",
      "com.google.common.truth.SubjectUtils$NonHashingMultiset$1",
      "com.google.common.truth.SubjectUtils$DuplicateGroupedAndTyped",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.ImmutableList$Itr",
      "com.google.common.collect.ImmutableList",
      "com.google.common.base.Present",
      "com.google.common.base.Java8Usage",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.AbstractMultiset",
      "com.google.common.collect.AbstractMapBasedMultiset",
      "com.google.common.collect.LinkedHashMultiset",
      "com.google.common.collect.ObjectCountHashMap",
      "com.google.common.collect.ObjectCountLinkedHashMap",
      "com.google.common.collect.Hashing",
      "com.google.common.base.Equivalence$Wrapper",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.collect.Multisets$EntrySet",
      "com.google.common.collect.AbstractMultiset$EntrySet",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.FluentIterable",
      "com.google.common.collect.Iterables$5",
      "com.google.common.collect.AbstractMapBasedMultiset$Itr",
      "com.google.common.collect.AbstractMapBasedMultiset$2",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.Multisets$AbstractEntry",
      "com.google.common.collect.ObjectCountHashMap$MapEntry",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.base.Objects",
      "com.google.common.collect.Multisets",
      "com.google.common.collect.Multisets$ImmutableEntry",
      "com.google.common.base.Strings",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.primitives.Ints",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.AbstractSetMultimap",
      "com.google.common.collect.HashMultimapGwtSerializationDependencies",
      "com.google.common.collect.HashMultimap",
      "com.google.common.collect.Platform",
      "com.google.common.collect.CompactHashMap",
      "com.google.common.collect.CompactHashSet",
      "com.google.common.collect.CompactHashing",
      "com.google.common.collect.Lists",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
      "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
      "com.google.common.collect.CompactHashSet$1",
      "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
      "autovalue.shaded.com.google$.common.collect.$Cut",
      "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
      "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
      "autovalue.shaded.com.google$.common.base.$Preconditions",
      "autovalue.shaded.com.google$.common.collect.$Range",
      "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
      "autovalue.shaded.com.google$.common.primitives.$Booleans",
      "com.google.common.collect.Collections2",
      "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
      "autovalue.shaded.com.google$.common.collect.$Range$1",
      "autovalue.shaded.com.google$.common.collect.$Ordering",
      "autovalue.shaded.com.google$.common.collect.$NaturalOrdering",
      "com.google.common.base.Converter",
      "com.google.common.base.Converter$IdentityConverter",
      "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
      "com.google.common.base.Optional$1",
      "com.google.common.base.AbstractIterator",
      "com.google.common.base.Optional$1$1",
      "com.google.common.base.AbstractIterator$State",
      "com.google.common.base.AbstractIterator$1",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.base.Converter$ConverterComposition",
      "autovalue.shaded.com.google$.common.base.$Converter",
      "autovalue.shaded.com.google$.common.base.$Converter$FunctionBasedConverter",
      "autovalue.shaded.com.google$.common.base.$Converter$IdentityConverter",
      "autovalue.shaded.com.google$.common.base.$Converter$ConverterComposition",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.FluentIterable$3$1",
      "com.google.common.collect.Iterators$ConcatenatedIterator",
      "com.google.common.collect.Iterators$ArrayItr"
    );
  }
}
