/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 02:53:00 GMT 2024
 */

package com.google.common.truth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.truth.ActualValueInference;
import com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry;
import com.google.common.truth.AutoValue_ActualValueInference_InferredType;
import com.google.common.truth.AutoValue_ActualValueInference_Invocation;
import com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AutoValue_ActualValueInference_Invocation_ESTest extends AutoValue_ActualValueInference_Invocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("n");
      ActualValueInference.Invocation actualValueInference_Invocation0 = autoValue_ActualValueInference_Invocation_Builder0.build();
      actualValueInference_Invocation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setReceiver(autoValue_ActualValueInference_OpaqueEntry0);
      autoValue_ActualValueInference_Invocation_Builder1.setActualValue(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      autoValue_ActualValueInference_Invocation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("gULOZ\",cw\"<:");
      ActualValueInference.Invocation actualValueInference_Invocation0 = autoValue_ActualValueInference_Invocation_Builder0.build();
      String string0 = ((AutoValue_ActualValueInference_Invocation) actualValueInference_Invocation0).toString();
      assertEquals("Invocation{receiver=null, actualValue=null, boxingInput=null, name=gULOZ\",cw\"<:}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      ActualValueInference.StackEntry actualValueInference_StackEntry0 = autoValue_ActualValueInference_Invocation0.receiver();
      assertNull(actualValueInference_StackEntry0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setReceiver(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry1 = (AutoValue_ActualValueInference_OpaqueEntry)autoValue_ActualValueInference_Invocation0.receiver();
      assertSame(autoValue_ActualValueInference_OpaqueEntry1, autoValue_ActualValueInference_OpaqueEntry0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName(".(s;lgg%}[iC6%IvM");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      String string0 = autoValue_ActualValueInference_Invocation0.name();
      assertEquals(".(s;lgg%}[iC6%IvM", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      String string0 = autoValue_ActualValueInference_Invocation0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("gULOZ\",cw\"<:");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      ActualValueInference.StackEntry actualValueInference_StackEntry0 = autoValue_ActualValueInference_Invocation0.boxingInput();
      assertNull(actualValueInference_StackEntry0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setBoxingInput(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry1 = (AutoValue_ActualValueInference_OpaqueEntry)autoValue_ActualValueInference_Invocation0.boxingInput();
      assertEquals("unknown", autoValue_ActualValueInference_OpaqueEntry1.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("gULOZ\",cw\"<:");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      ActualValueInference.StackEntry actualValueInference_StackEntry0 = autoValue_ActualValueInference_Invocation0.actualValue();
      assertNull(actualValueInference_StackEntry0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "o/y");
      autoValue_ActualValueInference_Invocation_Builder0.setActualValue(autoValue_ActualValueInference_DescribedEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry1 = (AutoValue_ActualValueInference_DescribedEntry)autoValue_ActualValueInference_Invocation0.actualValue();
      assertSame(autoValue_ActualValueInference_DescribedEntry1, autoValue_ActualValueInference_DescribedEntry0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      // Undeclared exception!
      try { 
        autoValue_ActualValueInference_Invocation_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Missing required properties: name
         //
         verifyException("com.google.common.truth.AutoValue_ActualValueInference_Invocation$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      // Undeclared exception!
      try { 
        autoValue_ActualValueInference_Invocation_Builder0.setName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null name
         //
         verifyException("com.google.common.truth.AutoValue_ActualValueInference_Invocation$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder1.setBoxingInput(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      autoValue_ActualValueInference_Invocation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("@s");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      autoValue_ActualValueInference_Invocation_Builder1.setName("Y9,>sT\"+");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("?");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.DOUBLE;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setBoxingInput(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation1.equals(autoValue_ActualValueInference_Invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.BOOLEAN;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "@s");
      autoValue_ActualValueInference_Invocation_Builder0.setName("@s");
      ActualValueInference.Invocation actualValueInference_Invocation0 = autoValue_ActualValueInference_Invocation_Builder0.build();
      autoValue_ActualValueInference_Invocation_Builder0.setBoxingInput(autoValue_ActualValueInference_DescribedEntry0);
      ActualValueInference.Invocation actualValueInference_Invocation1 = autoValue_ActualValueInference_Invocation_Builder0.build();
      boolean boolean0 = ((AutoValue_ActualValueInference_Invocation) actualValueInference_Invocation0).equals(actualValueInference_Invocation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "0j");
      autoValue_ActualValueInference_Invocation_Builder0.setBoxingInput(autoValue_ActualValueInference_DescribedEntry0);
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("0j");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("?");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setActualValue(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation1.equals(autoValue_ActualValueInference_Invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName(">");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder0.setActualValue(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.BOOLEAN;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "");
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      autoValue_ActualValueInference_Invocation_Builder0.setActualValue(autoValue_ActualValueInference_DescribedEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("?");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.LONG;
      AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
      autoValue_ActualValueInference_Invocation_Builder1.setReceiver(autoValue_ActualValueInference_OpaqueEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation1.equals(autoValue_ActualValueInference_Invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.BOOLEAN;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "");
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      autoValue_ActualValueInference_Invocation_Builder0.setReceiver(autoValue_ActualValueInference_DescribedEntry0);
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertFalse(boolean0);
      assertFalse(autoValue_ActualValueInference_Invocation1.equals((Object)autoValue_ActualValueInference_Invocation0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("");
      ActualValueInference.Invocation actualValueInference_Invocation0 = autoValue_ActualValueInference_Invocation_Builder0.build();
      Object object0 = new Object();
      boolean boolean0 = ((AutoValue_ActualValueInference_Invocation) actualValueInference_Invocation0).equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      autoValue_ActualValueInference_Invocation_Builder0.setName("0j");
      ActualValueInference.Invocation actualValueInference_Invocation0 = autoValue_ActualValueInference_Invocation_Builder0.build();
      boolean boolean0 = ((AutoValue_ActualValueInference_Invocation) actualValueInference_Invocation0).equals(actualValueInference_Invocation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder0 = new AutoValue_ActualValueInference_Invocation.Builder();
      AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.BOOLEAN;
      AutoValue_ActualValueInference_DescribedEntry autoValue_ActualValueInference_DescribedEntry0 = new AutoValue_ActualValueInference_DescribedEntry(autoValue_ActualValueInference_InferredType0, "@s");
      autoValue_ActualValueInference_Invocation_Builder0.setReceiver(autoValue_ActualValueInference_DescribedEntry0);
      AutoValue_ActualValueInference_Invocation.Builder autoValue_ActualValueInference_Invocation_Builder1 = (AutoValue_ActualValueInference_Invocation.Builder)autoValue_ActualValueInference_Invocation_Builder0.setName("@s");
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation0 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder0.build();
      AutoValue_ActualValueInference_Invocation autoValue_ActualValueInference_Invocation1 = (AutoValue_ActualValueInference_Invocation)autoValue_ActualValueInference_Invocation_Builder1.build();
      boolean boolean0 = autoValue_ActualValueInference_Invocation0.equals(autoValue_ActualValueInference_Invocation1);
      assertTrue(boolean0);
  }
}
