* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.Subject
* Starting Client-0
* Connecting to master process on port 20795
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar
  - t/dependency/asm-9.1.jar
  - t/dependency/auto-common-0.11.jar
  - t/dependency/auto-value-1.7.4.jar
  - t/dependency/auto-value-annotations-1.8.1.jar
  - t/dependency/base-1.0.0.jar
  - t/dependency/checker-compat-qual-2.5.5.jar
  - t/dependency/checker-qual-3.13.0.jar
  - t/dependency/compile-testing-0.19.jar
  - t/dependency/elemental2-promise-1.1.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-30.1.1-android.jar
  - t/dependency/guava-gwt-30.1.1-jre.jar
  - t/dependency/guava-testlib-30.1.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/tools-1.8.0_382.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.Subject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1840
* Using seed 1731035085871
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 572 / 1840
[MASTER] 16:04:49.352 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             1%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:=>                            6%] [Cov:==============>                    40%][Progress:=>                            6%] [Cov:===============>                   43%][MASTER] 16:04:54.053 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 51%][Progress:===>                          10%] [Cov:==================>                53%][Progress:===>                          10%] [Cov:==================>                54%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:==================>                54%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:=====================>             60%][Progress:=======>                      26%] [Cov:=====================>             60%][Progress:=======>                      26%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:=====================>             60%][Progress:=========>                    31%] [Cov:=====================>             60%][Progress:=========>                    31%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][MASTER] 16:05:40.595 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 61s and 326 generations, 143578 statements, best individual has fitness: 932.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 373
* Number of covered goals: 223
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 305
* Number of covered goals: 163
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 61
* Number of covered goals: 61
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 43%
* Total number of goals: 749
* Number of covered goals: 320
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 26
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 41
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 41
* Number of covered goals: 36
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 305
* Number of covered goals: 163
* Generated 112 tests with total length 579
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 16:06:02.442 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1731035162091/com/google/common/truth/Subject_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1731035162091/com/google/common/truth/Subject_11_tmp__ESTest_scaffolding.java]]
[MASTER] 16:06:02.442 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:02.442 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:02.445 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 16:06:02.445 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 16:06:02.446 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1731035162091/com/google/common/truth/Subject_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:06:02 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.collect.ImmutableList;
13: import com.google.common.truth.FailureMetadata;
14: import com.google.common.truth.FailureStrategy;
15: import com.google.common.truth.Subject;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class Subject_11_tmp__ESTest extends Subject_11_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
27:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
28:       Subject subject0 = new Subject(failureMetadata0, failureMetadata0);
29:       ImmutableList<Object> immutableList0 = ImmutableList.of((Object) subject0);
30:       // Undeclared exception!
31:       try { 
32:         subject0.isIn(immutableList0);
33:         fail("Expecting exception: UnsupportedOperationException");
34:       
35:       } catch(UnsupportedOperationException e) {
36:          //
37:          // Subject.toString() is not supported. Did you mean to call assertThat(foo.toString()) instead of assertThat(foo).toString()?
38:          //
39:          verifyException("com.google.common.truth.Subject", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_11_1731035162091/com/google/common/truth/Subject_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:06:02 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Subject_11_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Subject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Subject_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.truth.PrimitiveDoubleArraySubject",
84:       "com.google.common.collect.Lists$RandomAccessPartition",
85:       "com.google.common.base.CharMatcher$ForPredicate",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.base.JdkPattern",
89:       "com.google.common.truth.LongSubject",
90:       "com.google.common.truth.SubjectUtils",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.base.Platform$JdkPatternCompiler",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.truth.ThrowableSubject",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
100:       "com.google.common.base.Converter$IdentityConverter",
101:       "com.google.common.collect.ImmutableMultimap$Values",
102:       "com.google.common.truth.CustomSubjectBuilder",
103:       "com.google.common.truth.SimpleSubjectBuilder",
104:       "com.google.common.truth.TableSubject",
105:       "com.google.common.collect.Iterators$10",
106:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
107:       "com.google.common.base.Predicate",
108:       "com.google.common.truth.PrimitiveBooleanArraySubject",
109:       "com.google.common.base.CharMatcher$Invisible",
110:       "com.google.common.base.CharMatcher$None",
111:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
112:       "com.google.common.collect.Iterators$ConcatenatedIterator",
113:       "com.google.common.base.Joiner",
114:       "com.google.common.truth.PrimitiveShortArraySubject",
115:       "com.google.common.truth.Platform$PlatformComparisonFailure",
116:       "com.google.common.truth.AssertionErrorWithFacts",
117:       "com.google.common.base.Strings",
118:       "com.google.common.collect.Lists$Partition",
119:       "com.google.common.collect.Lists",
120:       "com.google.common.collect.UnmodifiableListIterator",
121:       "com.google.common.collect.ImmutableMultimap",
122:       "com.google.common.truth.FailureMetadata$Step",
123:       "com.google.common.truth.BooleanSubject",
124:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
125:       "com.google.common.collect.ImmutableSortedSet",
126:       "com.google.common.collect.Sets$4",
127:       "com.google.common.base.Absent",
128:       "com.google.common.collect.Maps$BiMapConverter",
129:       "com.google.common.base.CharMatcher",
130:       "com.google.common.collect.ImmutableSortedSet$Builder",
131:       "com.google.common.truth.DoubleSubject",
132:       "com.google.common.base.Preconditions",
133:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
134:       "com.google.common.base.CharMatcher$1",
135:       "com.google.common.truth.StandardSubjectBuilder$1",
136:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
137:       "com.google.common.base.CharMatcher$FastMatcher",
138:       "com.google.common.truth.MultisetSubject",
139:       "com.google.common.base.Joiner$1",
140:       "com.google.common.base.CharMatcher$JavaIsoControl",
141:       "com.google.common.base.Converter$ConverterComposition",
142:       "com.google.common.base.Joiner$2",
143:       "org.objectweb.asm.MethodVisitor",
144:       "com.google.common.collect.EmptyImmutableSetMultimap",
145:       "com.google.common.collect.ImmutableList$Itr",
146:       "com.google.common.truth.ComparisonFailures",
147:       "com.google.common.truth.ActualValueInference",
148:       "com.google.common.collect.ImmutableCollection",
149:       "com.google.common.collect.ImmutableEnumMap",
150:       "com.google.common.base.Joiner$3",
151:       "com.google.common.collect.Lists$OnePlusArrayList",
152:       "com.google.common.base.CharMatcher$BitSetMatcher",
153:       "com.google.common.base.CharMatcher$JavaUpperCase",
154:       "com.google.common.collect.ImmutableCollection$Builder",
155:       "com.google.common.collect.ImmutableSetMultimap",
156:       "com.google.errorprone.annotations.DoNotMock",
157:       "com.google.common.collect.Iterators$6",
158:       "com.google.common.collect.BiMap",
159:       "com.google.common.truth.IntegerSubject",
160:       "com.google.common.collect.Iterators$9",
161:       "com.google.common.collect.ImmutableSet",
162:       "com.google.common.collect.Lists$AbstractListWrapper",
163:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
164:       "com.google.common.base.CharMatcher$NamedFastMatcher",
165:       "com.google.common.collect.Iterators$1",
166:       "com.google.common.collect.CompactHashMap",
167:       "com.google.common.truth.ClassSubject",
168:       "com.google.common.collect.Iterators$4",
169:       "com.google.common.collect.Iterators$5",
170:       "com.google.common.base.Converter$ReverseConverter",
171:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
172:       "org.objectweb.asm.ClassReader",
173:       "com.google.common.truth.Platform",
174:       "com.google.common.collect.Lists$StringAsImmutableList",
175:       "com.google.common.base.CharMatcher$Is",
176:       "com.google.common.collect.Lists$2",
177:       "com.google.common.truth.MapSubject",
178:       "com.google.common.base.CharMatcher$SingleWidth",
179:       "com.google.common.base.Splitter$Strategy",
180:       "com.google.common.collect.Lists$1",
181:       "com.google.common.truth.LazyMessage",
182:       "com.google.common.collect.ImmutableMultimap$Builder",
183:       "com.google.common.truth.BigDecimalSubject",
184:       "com.google.common.truth.Subject$ComparisonResult",
185:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
186:       "com.google.common.collect.Multiset",
187:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
188:       "com.google.common.collect.AbstractMultimap",
189:       "com.google.common.base.AbstractIterator$1",
190:       "com.google.common.truth.ComparisonFailureWithFacts",
191:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
192:       "com.google.common.collect.ImmutableList",
193:       "com.google.common.collect.FluentIterable$1",
194:       "com.google.common.collect.FluentIterable$2",
195:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
196:       "com.google.common.truth.GuavaOptionalSubject",
197:       "com.google.common.truth.PrimitiveFloatArraySubject",
198:       "com.google.common.truth.Fact",
199:       "com.google.common.collect.FluentIterable$3",
200:       "com.google.common.truth.ObjectArraySubject",
201:       "com.google.common.base.CharMatcher$Negated",
202:       "com.google.common.truth.ActualValueInference$DescribedEntry",
203:       "com.google.common.base.CharMatcher$Ascii",
204:       "com.google.common.truth.CustomSubjectBuilder$Factory",
205:       "com.google.common.base.Converter$FunctionBasedConverter",
206:       "com.google.common.truth.StringSubject",
207:       "com.google.common.collect.Maps$EntryTransformer",
208:       "com.google.common.collect.FluentIterable$3$1",
209:       "com.google.common.truth.FailureStrategy",
210:       "com.google.common.base.CharMatcher$Digit",
211:       "com.google.common.collect.Hashing",
212:       "com.google.common.collect.ImmutableList$SubList",
213:       "com.google.common.collect.ListMultimap",
214:       "com.google.common.base.CharMatcher$Whitespace",
215:       "com.google.common.truth.ErrorWithFacts",
216:       "com.google.common.collect.RegularImmutableList",
217:       "com.google.common.truth.StackTraceCleaner",
218:       "com.google.common.base.CharMatcher$JavaDigit",
219:       "com.google.common.truth.IterableSubject",
220:       "com.google.common.collect.FluentIterable",
221:       "com.google.common.base.Optional",
222:       "com.google.common.collect.Lists$TransformingRandomAccessList",
223:       "com.google.common.collect.Iterators$ArrayItr",
224:       "com.google.common.base.CharMatcher$IsNot",
225:       "com.google.common.base.CharMatcher$InRange",
226:       "com.google.common.base.CharMatcher$JavaLetter",
227:       "com.google.common.collect.BaseImmutableMultimap",
228:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
229:       "com.google.common.collect.SortedMapDifference",
230:       "com.google.common.collect.RegularImmutableSet",
231:       "com.google.common.base.CommonPattern",
232:       "com.google.common.truth.Subject$EqualityCheck",
233:       "com.google.common.base.CharMatcher$IsEither",
234:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
235:       "com.google.common.collect.ImmutableListMultimap",
236:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
237:       "com.google.common.collect.ImmutableMultimap$1",
238:       "com.google.common.truth.PrimitiveByteArraySubject",
239:       "com.google.common.base.Present",
240:       "com.google.common.truth.PrimitiveIntArraySubject",
241:       "com.google.common.collect.ImmutableMultimap$2",
242:       "com.google.common.truth.PrimitiveCharArraySubject",
243:       "com.google.common.truth.Subject$2",
244:       "com.google.common.truth.Subject$3",
245:       "com.google.common.collect.Iterables",
246:       "com.google.common.truth.Subject$Factory",
247:       "com.google.common.base.CharMatcher$Any",
248:       "com.google.common.truth.FloatSubject",
249:       "com.google.common.truth.Subject$1",
250:       "com.google.common.collect.Sets$SetView",
251:       "com.google.common.collect.ImmutableSet$Builder",
252:       "com.google.common.base.JdkPattern$JdkMatcher",
253:       "com.google.common.truth.PrimitiveLongArraySubject",
254:       "com.google.common.collect.SingletonImmutableSet",
255:       "com.google.common.collect.ImmutableSetMultimap$Builder",
256:       "com.google.common.base.PatternCompiler",
257:       "com.google.common.truth.ActualValueInference$InferredType",
258:       "com.google.common.base.Splitter$3$1",
259:       "com.google.common.collect.ImmutableMultiset",
260:       "com.google.common.truth.ComparableSubject",
261:       "com.google.common.collect.ImmutableMultimap$Keys",
262:       "com.google.common.truth.FailureMetadata",
263:       "com.google.common.collect.Lists$TransformingSequentialList",
264:       "com.google.common.primitives.IntsMethodsForWeb",
265:       "com.google.common.collect.ObjectArrays",
266:       "com.google.common.base.CaseFormat$1",
267:       "com.google.common.base.CaseFormat$2",
268:       "com.google.common.collect.AbstractIterator",
269:       "com.google.common.base.CaseFormat$3",
270:       "com.google.common.base.MoreObjects",
271:       "com.google.common.base.CaseFormat$4",
272:       "com.google.common.base.CaseFormat$5",
273:       "com.google.common.base.CharMatcher$And",
274:       "com.google.common.collect.MapDifference",
275:       "com.google.common.collect.SortedIterable",
276:       "com.google.common.base.CharMatcher$AnyOf",
277:       "com.google.common.collect.UnmodifiableIterator",
278:       "com.google.common.truth.AbstractArraySubject",
279:       "com.google.common.base.Java8Usage",
280:       "com.google.common.collect.Lists$RandomAccessListWrapper",
281:       "com.google.common.collect.ImmutableEnumSet",
282:       "com.google.common.base.Platform",
283:       "com.google.common.base.CommonMatcher",
284:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
285:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
286:       "com.google.common.base.CharMatcher$RangesMatcher",
287:       "org.objectweb.asm.ClassVisitor",
288:       "com.google.common.base.Splitter",
289:       "com.google.common.base.Converter",
290:       "com.google.common.collect.Maps$8",
291:       "com.google.common.base.Function",
292:       "com.google.common.collect.ImmutableMap",
293:       "com.google.common.collect.AbstractIndexedListIterator",
294:       "com.google.common.collect.CollectPreconditions",
295:       "com.google.common.truth.Subject",
296:       "com.google.common.primitives.Ints$IntConverter",
297:       "com.google.common.collect.Sets",
298:       "com.google.common.base.CharMatcher$JavaLowerCase",
299:       "com.google.common.truth.MultimapSubject",
300:       "com.google.common.collect.ImmutableList$Builder",
301:       "com.google.common.collect.Iterables$5",
302:       "com.google.common.collect.Multimap",
303:       "com.google.common.collect.Iterators",
304:       "com.google.common.base.AbstractIterator$State",
305:       "com.google.common.base.Splitter$3",
306:       "com.google.common.base.Splitter$5",
307:       "com.google.common.base.CaseFormat",
308:       "com.google.common.base.Ascii",
309:       "com.google.common.truth.ActualValueInference$SubjectEntry",
310:       "com.google.common.truth.StandardSubjectBuilder",
311:       "com.google.common.primitives.Ints",
312:       "com.google.common.collect.Maps",
313:       "com.google.common.collect.SetMultimap",
314:       "com.google.common.base.CharMatcher$Or",
315:       "com.google.common.collect.TransformedIterator",
316:       "com.google.common.base.CaseFormat$StringConverter",
317:       "com.google.common.base.Splitter$SplittingIterator",
318:       "com.google.common.base.AbstractIterator",
319:       "com.google.common.truth.DiffUtils",
320:       "com.google.common.collect.Iterators$MergingIterator",
321:       "com.google.common.collect.RegularImmutableSortedSet",
322:       "com.google.common.collect.Table",
323:       "com.google.common.truth.ActualValueInference$StackEntry"
324:     );
325:   } 
326:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
327:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, Subject_11_tmp__ESTest_scaffolding.class.getClassLoader()));
328:   }
329: 
330:   private static void resetClasses() {
331:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Subject_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
332: 
333:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
334:       "com.google.common.truth.Subject$1",
335:       "com.google.common.truth.Subject$2",
336:       "com.google.common.truth.Subject",
337:       "com.google.common.collect.ImmutableCollection",
338:       "com.google.common.collect.UnmodifiableIterator",
339:       "com.google.common.collect.UnmodifiableListIterator",
340:       "com.google.common.collect.AbstractIndexedListIterator",
341:       "com.google.common.collect.ImmutableList$Itr",
342:       "com.google.common.collect.RegularImmutableList",
343:       "com.google.common.base.Java8Usage",
344:       "com.google.common.base.Preconditions",
345:       "com.google.common.collect.ImmutableList",
346:       "com.google.common.truth.Subject$ComparisonResult",
347:       "com.google.common.truth.Subject$3",
348:       "com.google.common.truth.Subject$EqualityCheck",
349:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
350:       "com.google.common.base.CharMatcher",
351:       "com.google.common.base.CharMatcher$FastMatcher",
352:       "com.google.common.base.CharMatcher$NamedFastMatcher",
353:       "com.google.common.base.CharMatcher$Whitespace",
354:       "com.google.common.base.CharMatcher$Is",
355:       "com.google.common.base.CharMatcher$InRange",
356:       "com.google.common.base.CaseFormat",
357:       "com.google.common.truth.FailureMetadata",
358:       "com.google.common.truth.FailureMetadata$Step",
359:       "com.google.common.truth.SubjectUtils",
360:       "com.google.common.collect.ImmutableCollection$Builder",
361:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
362:       "com.google.common.collect.ImmutableList$Builder",
363:       "com.google.common.collect.CollectPreconditions",
364:       "com.google.common.truth.Fact",
365:       "com.google.common.truth.LazyMessage",
366:       "com.google.common.base.Strings",
367:       "com.google.common.collect.Lists",
368:       "com.google.common.collect.Lists$OnePlusArrayList",
369:       "com.google.common.math.IntMath",
370:       "com.google.common.primitives.IntsMethodsForWeb",
371:       "com.google.common.primitives.Ints",
372:       "com.google.common.collect.ObjectArrays",
373:       "com.google.common.collect.Iterables",
374:       "com.google.common.collect.FluentIterable",
375:       "com.google.common.collect.FluentIterable$3",
376:       "com.google.common.base.Optional",
377:       "com.google.common.base.Absent",
378:       "com.google.common.collect.FluentIterable$3$1",
379:       "com.google.common.collect.Iterators",
380:       "com.google.common.collect.Iterators$ConcatenatedIterator",
381:       "com.google.common.collect.Iterators$ArrayItr",
382:       "com.google.common.truth.AssertionErrorWithFacts",
383:       "com.google.common.truth.Platform",
384:       "com.google.common.collect.ImmutableSet",
385:       "com.google.common.collect.SingletonImmutableSet",
386:       "com.google.common.collect.Hashing",
387:       "com.google.common.collect.RegularImmutableSet",
388:       "com.google.common.truth.StackTraceCleaner",
389:       "com.google.common.collect.Sets",
390:       "com.google.common.collect.Maps",
391:       "com.google.common.base.MoreObjects",
392:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
393:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
394:       "com.google.common.base.Joiner",
395:       "com.google.common.base.Joiner$3",
396:       "com.google.common.truth.ActualValueInference",
397:       "org.objectweb.asm.ClassVisitor",
398:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
399:       "com.google.common.collect.AbstractMultimap",
400:       "com.google.common.collect.BaseImmutableMultimap",
401:       "com.google.common.collect.ImmutableMultimap",
402:       "com.google.common.collect.ImmutableSetMultimap",
403:       "com.google.common.collect.ImmutableMultimap$Builder",
404:       "com.google.common.collect.ImmutableSetMultimap$Builder",
405:       "com.google.common.collect.Platform",
406:       "com.google.common.collect.CompactHashMap",
407:       "org.objectweb.asm.ClassReader",
408:       "com.google.common.base.Converter",
409:       "com.google.common.base.Converter$FunctionBasedConverter",
410:       "com.google.common.base.Converter$ReverseConverter",
411:       "com.google.common.base.Converter$ConverterComposition",
412:       "com.google.common.base.Converter$IdentityConverter",
413:       "com.google.common.base.Ascii",
414:       "com.google.common.truth.ComparisonFailures",
415:       "com.google.common.base.Splitter",
416:       "com.google.common.base.Platform$JdkPatternCompiler",
417:       "com.google.common.base.Platform",
418:       "com.google.common.base.CommonPattern",
419:       "com.google.common.base.JdkPattern",
420:       "com.google.common.base.CommonMatcher",
421:       "com.google.common.base.JdkPattern$JdkMatcher",
422:       "com.google.common.base.Splitter$3",
423:       "com.google.common.base.CharMatcher$None",
424:       "com.google.common.base.Splitter$5",
425:       "com.google.common.base.AbstractIterator",
426:       "com.google.common.base.Splitter$SplittingIterator",
427:       "com.google.common.base.Splitter$3$1",
428:       "com.google.common.base.AbstractIterator$State",
429:       "com.google.common.base.AbstractIterator$1",
430:       "com.google.common.truth.DiffUtils",
431:       "com.google.common.truth.Platform$PlatformComparisonFailure",
432:       "com.google.common.truth.ComparisonFailureWithFacts",
433:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
434:       "autovalue.shaded.com.google$.common.collect.$Cut",
435:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
436:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
437:       "autovalue.shaded.com.google$.common.base.$Preconditions",
438:       "autovalue.shaded.com.google$.common.collect.$Range",
439:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
440:       "com.google.common.collect.Collections2",
441:       "com.google.common.truth.StandardSubjectBuilder",
442:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
443:       "com.google.common.base.Converter$1",
444:       "com.google.common.base.Verify",
445:       "com.google.common.base.Converter$1$1",
446:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
447:       "com.google.common.collect.Iterables$5",
448:       "com.google.common.collect.TransformedIterator",
449:       "com.google.common.collect.Iterators$6"
450:     );
451:   }
452: }

[MASTER] 16:06:02.446 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
Subject subject0 = new Subject(failureMetadata0, failureMetadata0);
ImmutableList<Object> immutableList0 = ImmutableList.of((Object) subject0);
subject0.isIn(immutableList0);

[MASTER] 16:06:04.437 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1731035164237/com/google/common/truth/Subject_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1731035164237/com/google/common/truth/Subject_44_tmp__ESTest_scaffolding.java]]
[MASTER] 16:06:04.437 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:04.437 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:04.437 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 16:06:04.437 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 16:06:04.438 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1731035164237/com/google/common/truth/Subject_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:06:04 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.FailureMetadata;
13: import com.google.common.truth.FailureStrategy;
14: import com.google.common.truth.Subject;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class Subject_44_tmp__ESTest extends Subject_44_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
26:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
27:       Subject subject0 = new Subject(failureMetadata0, failureMetadata0);
28:       Class<Byte> class0 = Byte.TYPE;
29:       Byte byte0 = new Byte((byte)6);
30:       ImmutableList<Object> immutableList0 = ImmutableList.of((Object) failureMetadata0, (Object) byte0, (Object) class0, (Object) subject0, (Object) failureMetadata0, (Object) failureMetadata0, (Object) class0, (Object) byte0, (Object) "3");
31:       subject0.isIn(immutableList0);
32:       assertEquals(9, immutableList0.size());
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_44_1731035164237/com/google/common/truth/Subject_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:06:04 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Subject_44_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Subject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Subject_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.truth.PrimitiveDoubleArraySubject",
84:       "com.google.common.collect.Lists$RandomAccessPartition",
85:       "com.google.common.base.CharMatcher$ForPredicate",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.base.JdkPattern",
89:       "com.google.common.truth.LongSubject",
90:       "com.google.common.truth.SubjectUtils",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.base.Platform$JdkPatternCompiler",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.truth.ThrowableSubject",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
100:       "com.google.common.base.Converter$IdentityConverter",
101:       "com.google.common.collect.ImmutableMultimap$Values",
102:       "com.google.common.truth.CustomSubjectBuilder",
103:       "com.google.common.truth.SimpleSubjectBuilder",
104:       "com.google.common.truth.TableSubject",
105:       "com.google.common.collect.Iterators$10",
106:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
107:       "com.google.common.base.Predicate",
108:       "com.google.common.truth.PrimitiveBooleanArraySubject",
109:       "com.google.common.base.CharMatcher$Invisible",
110:       "com.google.common.base.CharMatcher$None",
111:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
112:       "com.google.common.collect.Iterators$ConcatenatedIterator",
113:       "com.google.common.base.Joiner",
114:       "com.google.common.truth.PrimitiveShortArraySubject",
115:       "com.google.common.truth.Platform$PlatformComparisonFailure",
116:       "com.google.common.truth.AssertionErrorWithFacts",
117:       "com.google.common.base.Strings",
118:       "com.google.common.collect.Lists$Partition",
119:       "com.google.common.collect.Lists",
120:       "com.google.common.collect.UnmodifiableListIterator",
121:       "com.google.common.collect.ImmutableMultimap",
122:       "com.google.common.truth.FailureMetadata$Step",
123:       "com.google.common.truth.BooleanSubject",
124:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
125:       "com.google.common.collect.ImmutableSortedSet",
126:       "com.google.common.collect.Sets$4",
127:       "com.google.common.base.Absent",
128:       "com.google.common.collect.Maps$BiMapConverter",
129:       "com.google.common.base.CharMatcher",
130:       "com.google.common.collect.ImmutableSortedSet$Builder",
131:       "com.google.common.truth.DoubleSubject",
132:       "com.google.common.base.Preconditions",
133:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
134:       "com.google.common.base.CharMatcher$1",
135:       "com.google.common.truth.StandardSubjectBuilder$1",
136:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
137:       "com.google.common.base.CharMatcher$FastMatcher",
138:       "com.google.common.truth.MultisetSubject",
139:       "com.google.common.base.Joiner$1",
140:       "com.google.common.base.CharMatcher$JavaIsoControl",
141:       "com.google.common.base.Converter$ConverterComposition",
142:       "com.google.common.base.Joiner$2",
143:       "org.objectweb.asm.MethodVisitor",
144:       "com.google.common.collect.EmptyImmutableSetMultimap",
145:       "com.google.common.collect.ImmutableList$Itr",
146:       "com.google.common.truth.ComparisonFailures",
147:       "com.google.common.truth.ActualValueInference",
148:       "com.google.common.collect.ImmutableCollection",
149:       "com.google.common.collect.ImmutableEnumMap",
150:       "com.google.common.base.Joiner$3",
151:       "com.google.common.collect.Lists$OnePlusArrayList",
152:       "com.google.common.base.CharMatcher$BitSetMatcher",
153:       "com.google.common.base.CharMatcher$JavaUpperCase",
154:       "com.google.common.collect.ImmutableCollection$Builder",
155:       "com.google.common.collect.ImmutableSetMultimap",
156:       "com.google.errorprone.annotations.DoNotMock",
157:       "com.google.common.collect.Iterators$6",
158:       "com.google.common.collect.BiMap",
159:       "com.google.common.truth.IntegerSubject",
160:       "com.google.common.collect.Iterators$9",
161:       "com.google.common.collect.ImmutableSet",
162:       "com.google.common.collect.Lists$AbstractListWrapper",
163:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
164:       "com.google.common.base.CharMatcher$NamedFastMatcher",
165:       "com.google.common.collect.Iterators$1",
166:       "com.google.common.collect.CompactHashMap",
167:       "com.google.common.truth.ClassSubject",
168:       "com.google.common.collect.Iterators$4",
169:       "com.google.common.collect.Iterators$5",
170:       "com.google.common.base.Converter$ReverseConverter",
171:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
172:       "org.objectweb.asm.ClassReader",
173:       "com.google.common.truth.Platform",
174:       "com.google.common.collect.Lists$StringAsImmutableList",
175:       "com.google.common.base.CharMatcher$Is",
176:       "com.google.common.collect.Lists$2",
177:       "com.google.common.truth.MapSubject",
178:       "com.google.common.base.CharMatcher$SingleWidth",
179:       "com.google.common.base.Splitter$Strategy",
180:       "com.google.common.collect.Lists$1",
181:       "com.google.common.truth.LazyMessage",
182:       "com.google.common.collect.ImmutableMultimap$Builder",
183:       "com.google.common.truth.BigDecimalSubject",
184:       "com.google.common.truth.Subject$ComparisonResult",
185:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
186:       "com.google.common.collect.Multiset",
187:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
188:       "com.google.common.collect.AbstractMultimap",
189:       "com.google.common.base.AbstractIterator$1",
190:       "com.google.common.truth.ComparisonFailureWithFacts",
191:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
192:       "com.google.common.collect.ImmutableList",
193:       "com.google.common.collect.FluentIterable$1",
194:       "com.google.common.collect.FluentIterable$2",
195:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
196:       "com.google.common.truth.GuavaOptionalSubject",
197:       "com.google.common.truth.PrimitiveFloatArraySubject",
198:       "com.google.common.truth.Fact",
199:       "com.google.common.collect.FluentIterable$3",
200:       "com.google.common.truth.ObjectArraySubject",
201:       "com.google.common.base.CharMatcher$Negated",
202:       "com.google.common.truth.ActualValueInference$DescribedEntry",
203:       "com.google.common.base.CharMatcher$Ascii",
204:       "com.google.common.truth.CustomSubjectBuilder$Factory",
205:       "com.google.common.base.Converter$FunctionBasedConverter",
206:       "com.google.common.truth.StringSubject",
207:       "com.google.common.collect.Maps$EntryTransformer",
208:       "com.google.common.collect.FluentIterable$3$1",
209:       "com.google.common.truth.FailureStrategy",
210:       "com.google.common.base.CharMatcher$Digit",
211:       "com.google.common.collect.Hashing",
212:       "com.google.common.collect.ImmutableList$SubList",
213:       "com.google.common.collect.ListMultimap",
214:       "com.google.common.base.CharMatcher$Whitespace",
215:       "com.google.common.truth.ErrorWithFacts",
216:       "com.google.common.collect.RegularImmutableList",
217:       "com.google.common.truth.StackTraceCleaner",
218:       "com.google.common.base.CharMatcher$JavaDigit",
219:       "com.google.common.truth.IterableSubject",
220:       "com.google.common.collect.FluentIterable",
221:       "com.google.common.base.Optional",
222:       "com.google.common.collect.Lists$TransformingRandomAccessList",
223:       "com.google.common.collect.Iterators$ArrayItr",
224:       "com.google.common.base.CharMatcher$IsNot",
225:       "com.google.common.base.CharMatcher$InRange",
226:       "com.google.common.base.CharMatcher$JavaLetter",
227:       "com.google.common.collect.BaseImmutableMultimap",
228:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
229:       "com.google.common.collect.SortedMapDifference",
230:       "com.google.common.collect.RegularImmutableSet",
231:       "com.google.common.base.CommonPattern",
232:       "com.google.common.truth.Subject$EqualityCheck",
233:       "com.google.common.base.CharMatcher$IsEither",
234:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
235:       "com.google.common.collect.ImmutableListMultimap",
236:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
237:       "com.google.common.collect.ImmutableMultimap$1",
238:       "com.google.common.truth.PrimitiveByteArraySubject",
239:       "com.google.common.base.Present",
240:       "com.google.common.truth.PrimitiveIntArraySubject",
241:       "com.google.common.collect.ImmutableMultimap$2",
242:       "com.google.common.truth.PrimitiveCharArraySubject",
243:       "com.google.common.truth.Subject$2",
244:       "com.google.common.truth.Subject$3",
245:       "com.google.common.collect.Iterables",
246:       "com.google.common.truth.Subject$Factory",
247:       "com.google.common.base.CharMatcher$Any",
248:       "com.google.common.truth.FloatSubject",
249:       "com.google.common.truth.Subject$1",
250:       "com.google.common.collect.Sets$SetView",
251:       "com.google.common.collect.ImmutableSet$Builder",
252:       "com.google.common.base.JdkPattern$JdkMatcher",
253:       "com.google.common.truth.PrimitiveLongArraySubject",
254:       "com.google.common.collect.SingletonImmutableSet",
255:       "com.google.common.collect.ImmutableSetMultimap$Builder",
256:       "com.google.common.base.PatternCompiler",
257:       "com.google.common.truth.ActualValueInference$InferredType",
258:       "com.google.common.base.Splitter$3$1",
259:       "com.google.common.collect.ImmutableMultiset",
260:       "com.google.common.truth.ComparableSubject",
261:       "com.google.common.collect.ImmutableMultimap$Keys",
262:       "com.google.common.truth.FailureMetadata",
263:       "com.google.common.collect.Lists$TransformingSequentialList",
264:       "com.google.common.primitives.IntsMethodsForWeb",
265:       "com.google.common.collect.ObjectArrays",
266:       "com.google.common.base.CaseFormat$1",
267:       "com.google.common.base.CaseFormat$2",
268:       "com.google.common.collect.AbstractIterator",
269:       "com.google.common.base.CaseFormat$3",
270:       "com.google.common.base.MoreObjects",
271:       "com.google.common.base.CaseFormat$4",
272:       "com.google.common.base.CaseFormat$5",
273:       "com.google.common.base.CharMatcher$And",
274:       "com.google.common.collect.MapDifference",
275:       "com.google.common.collect.SortedIterable",
276:       "com.google.common.base.CharMatcher$AnyOf",
277:       "com.google.common.collect.UnmodifiableIterator",
278:       "com.google.common.truth.AbstractArraySubject",
279:       "com.google.common.base.Java8Usage",
280:       "com.google.common.collect.Lists$RandomAccessListWrapper",
281:       "com.google.common.collect.ImmutableEnumSet",
282:       "com.google.common.base.Platform",
283:       "com.google.common.base.CommonMatcher",
284:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
285:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
286:       "com.google.common.base.CharMatcher$RangesMatcher",
287:       "org.objectweb.asm.ClassVisitor",
288:       "com.google.common.base.Splitter",
289:       "com.google.common.base.Converter",
290:       "com.google.common.collect.Maps$8",
291:       "com.google.common.base.Function",
292:       "com.google.common.collect.ImmutableMap",
293:       "com.google.common.collect.AbstractIndexedListIterator",
294:       "com.google.common.collect.CollectPreconditions",
295:       "com.google.common.truth.Subject",
296:       "com.google.common.primitives.Ints$IntConverter",
297:       "com.google.common.collect.Sets",
298:       "com.google.common.base.CharMatcher$JavaLowerCase",
299:       "com.google.common.truth.MultimapSubject",
300:       "com.google.common.collect.ImmutableList$Builder",
301:       "com.google.common.collect.Iterables$5",
302:       "com.google.common.collect.Multimap",
303:       "com.google.common.collect.Iterators",
304:       "com.google.common.base.AbstractIterator$State",
305:       "com.google.common.base.Splitter$3",
306:       "com.google.common.base.Splitter$5",
307:       "com.google.common.base.CaseFormat",
308:       "com.google.common.base.Ascii",
309:       "com.google.common.truth.ActualValueInference$SubjectEntry",
310:       "com.google.common.truth.StandardSubjectBuilder",
311:       "com.google.common.primitives.Ints",
312:       "com.google.common.collect.Maps",
313:       "com.google.common.collect.SetMultimap",
314:       "com.google.common.base.CharMatcher$Or",
315:       "com.google.common.collect.TransformedIterator",
316:       "com.google.common.base.CaseFormat$StringConverter",
317:       "com.google.common.base.Splitter$SplittingIterator",
318:       "com.google.common.base.AbstractIterator",
319:       "com.google.common.truth.DiffUtils",
320:       "com.google.common.collect.Iterators$MergingIterator",
321:       "com.google.common.collect.RegularImmutableSortedSet",
322:       "com.google.common.collect.Table",
323:       "com.google.common.truth.ActualValueInference$StackEntry"
324:     );
325:   } 
326:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
327:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, Subject_44_tmp__ESTest_scaffolding.class.getClassLoader()));
328:   }
329: 
330:   private static void resetClasses() {
331:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Subject_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
332: 
333:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
334:       "com.google.common.truth.Subject$1",
335:       "com.google.common.truth.Subject$2",
336:       "com.google.common.truth.Subject",
337:       "com.google.common.collect.ImmutableCollection",
338:       "com.google.common.collect.UnmodifiableIterator",
339:       "com.google.common.collect.UnmodifiableListIterator",
340:       "com.google.common.collect.AbstractIndexedListIterator",
341:       "com.google.common.collect.ImmutableList$Itr",
342:       "com.google.common.collect.RegularImmutableList",
343:       "com.google.common.base.Java8Usage",
344:       "com.google.common.base.Preconditions",
345:       "com.google.common.collect.ImmutableList",
346:       "com.google.common.truth.Subject$ComparisonResult",
347:       "com.google.common.truth.Subject$3",
348:       "com.google.common.truth.Subject$EqualityCheck",
349:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
350:       "com.google.common.base.CharMatcher",
351:       "com.google.common.base.CharMatcher$FastMatcher",
352:       "com.google.common.base.CharMatcher$NamedFastMatcher",
353:       "com.google.common.base.CharMatcher$Whitespace",
354:       "com.google.common.base.CharMatcher$Is",
355:       "com.google.common.base.CharMatcher$InRange",
356:       "com.google.common.base.CaseFormat",
357:       "com.google.common.truth.FailureMetadata",
358:       "com.google.common.truth.FailureMetadata$Step",
359:       "com.google.common.truth.SubjectUtils",
360:       "com.google.common.collect.ImmutableCollection$Builder",
361:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
362:       "com.google.common.collect.ImmutableList$Builder",
363:       "com.google.common.collect.CollectPreconditions",
364:       "com.google.common.truth.Fact",
365:       "com.google.common.truth.LazyMessage",
366:       "com.google.common.base.Strings",
367:       "com.google.common.collect.Lists",
368:       "com.google.common.collect.Lists$OnePlusArrayList",
369:       "com.google.common.math.IntMath",
370:       "com.google.common.primitives.IntsMethodsForWeb",
371:       "com.google.common.primitives.Ints",
372:       "com.google.common.collect.ObjectArrays",
373:       "com.google.common.collect.Iterables",
374:       "com.google.common.collect.FluentIterable",
375:       "com.google.common.collect.FluentIterable$3",
376:       "com.google.common.base.Optional",
377:       "com.google.common.base.Absent",
378:       "com.google.common.collect.FluentIterable$3$1",
379:       "com.google.common.collect.Iterators",
380:       "com.google.common.collect.Iterators$ConcatenatedIterator",
381:       "com.google.common.collect.Iterators$ArrayItr",
382:       "com.google.common.truth.AssertionErrorWithFacts",
383:       "com.google.common.truth.Platform",
384:       "com.google.common.collect.ImmutableSet",
385:       "com.google.common.collect.SingletonImmutableSet",
386:       "com.google.common.collect.Hashing",
387:       "com.google.common.collect.RegularImmutableSet",
388:       "com.google.common.truth.StackTraceCleaner",
389:       "com.google.common.collect.Sets",
390:       "com.google.common.collect.Maps",
391:       "com.google.common.base.MoreObjects",
392:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
393:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
394:       "com.google.common.base.Joiner",
395:       "com.google.common.base.Joiner$3",
396:       "com.google.common.truth.ActualValueInference",
397:       "org.objectweb.asm.ClassVisitor",
398:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
399:       "com.google.common.collect.AbstractMultimap",
400:       "com.google.common.collect.BaseImmutableMultimap",
401:       "com.google.common.collect.ImmutableMultimap",
402:       "com.google.common.collect.ImmutableSetMultimap",
403:       "com.google.common.collect.ImmutableMultimap$Builder",
404:       "com.google.common.collect.ImmutableSetMultimap$Builder",
405:       "com.google.common.collect.Platform",
406:       "com.google.common.collect.CompactHashMap",
407:       "org.objectweb.asm.ClassReader",
408:       "com.google.common.base.Converter",
409:       "com.google.common.base.Converter$FunctionBasedConverter",
410:       "com.google.common.base.Converter$ReverseConverter",
411:       "com.google.common.base.Converter$ConverterComposition",
412:       "com.google.common.base.Converter$IdentityConverter",
413:       "com.google.common.base.Ascii",
414:       "com.google.common.truth.ComparisonFailures",
415:       "com.google.common.base.Splitter",
416:       "com.google.common.base.Platform$JdkPatternCompiler",
417:       "com.google.common.base.Platform",
418:       "com.google.common.base.CommonPattern",
419:       "com.google.common.base.JdkPattern",
420:       "com.google.common.base.CommonMatcher",
421:       "com.google.common.base.JdkPattern$JdkMatcher",
422:       "com.google.common.base.Splitter$3",
423:       "com.google.common.base.CharMatcher$None",
424:       "com.google.common.base.Splitter$5",
425:       "com.google.common.base.AbstractIterator",
426:       "com.google.common.base.Splitter$SplittingIterator",
427:       "com.google.common.base.Splitter$3$1",
428:       "com.google.common.base.AbstractIterator$State",
429:       "com.google.common.base.AbstractIterator$1",
430:       "com.google.common.truth.DiffUtils",
431:       "com.google.common.truth.Platform$PlatformComparisonFailure",
432:       "com.google.common.truth.ComparisonFailureWithFacts",
433:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
434:       "autovalue.shaded.com.google$.common.collect.$Cut",
435:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
436:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
437:       "autovalue.shaded.com.google$.common.base.$Preconditions",
438:       "autovalue.shaded.com.google$.common.collect.$Range",
439:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
440:       "com.google.common.collect.Collections2",
441:       "com.google.common.truth.StandardSubjectBuilder",
442:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
443:       "com.google.common.base.Converter$1",
444:       "com.google.common.base.Verify",
445:       "com.google.common.base.Converter$1$1",
446:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
447:       "com.google.common.collect.Iterables$5",
448:       "com.google.common.collect.TransformedIterator",
449:       "com.google.common.collect.Iterators$6"
450:     );
451:   }
452: }

[MASTER] 16:06:04.438 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
Subject subject0 = new Subject(failureMetadata0, failureMetadata0);
Class<Byte> class0 = Byte.TYPE;
Byte byte0 = new Byte((byte)6);
ImmutableList<Object> immutableList0 = ImmutableList.of((Object) failureMetadata0, (Object) byte0, (Object) class0, (Object) subject0, (Object) failureMetadata0, (Object) failureMetadata0, (Object) class0, (Object) byte0, (Object) "3");
subject0.isIn(immutableList0);
assertEquals(9, immutableList0.size());


[MASTER] 16:06:04.590 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1731035164440/com/google/common/truth/Subject_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1731035164440/com/google/common/truth/Subject_45_tmp__ESTest_scaffolding.java]]
[MASTER] 16:06:04.590 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:04.590 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:06:04.590 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 16:06:04.591 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 16:06:04.591 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1731035164440/com/google/common/truth/Subject_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:06:04 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.FailureMetadata;
13: import com.google.common.truth.FailureStrategy;
14: import com.google.common.truth.Subject;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class Subject_45_tmp__ESTest extends Subject_45_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
26:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
27:       Byte byte0 = new Byte((byte)46);
28:       Subject subject0 = new Subject(failureMetadata0, byte0);
29:       Byte[] byteArray0 = new Byte[1];
30:       byteArray0[0] = byte0;
31:       ImmutableList<Byte> immutableList0 = ImmutableList.copyOf(byteArray0);
32:       subject0.isNotIn(immutableList0);
33:       assertTrue(immutableList0.contains(byte0));
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_45_1731035164440/com/google/common/truth/Subject_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:06:04 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Subject_45_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Subject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Subject_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.truth.PrimitiveDoubleArraySubject",
84:       "com.google.common.collect.Lists$RandomAccessPartition",
85:       "com.google.common.base.CharMatcher$ForPredicate",
86:       "com.google.common.collect.Collections2",
87:       "com.google.common.collect.PeekingIterator",
88:       "com.google.common.base.JdkPattern",
89:       "com.google.common.truth.LongSubject",
90:       "com.google.common.truth.SubjectUtils",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.base.Platform$JdkPatternCompiler",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.truth.ThrowableSubject",
97:       "com.google.common.collect.Sets$1",
98:       "com.google.common.collect.Platform",
99:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
100:       "com.google.common.base.Converter$IdentityConverter",
101:       "com.google.common.collect.ImmutableMultimap$Values",
102:       "com.google.common.truth.CustomSubjectBuilder",
103:       "com.google.common.truth.SimpleSubjectBuilder",
104:       "com.google.common.truth.TableSubject",
105:       "com.google.common.collect.Iterators$10",
106:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
107:       "com.google.common.base.Predicate",
108:       "com.google.common.truth.PrimitiveBooleanArraySubject",
109:       "com.google.common.base.CharMatcher$Invisible",
110:       "com.google.common.base.CharMatcher$None",
111:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
112:       "com.google.common.collect.Iterators$ConcatenatedIterator",
113:       "com.google.common.base.Joiner",
114:       "com.google.common.truth.PrimitiveShortArraySubject",
115:       "com.google.common.truth.Platform$PlatformComparisonFailure",
116:       "com.google.common.truth.AssertionErrorWithFacts",
117:       "com.google.common.base.Strings",
118:       "com.google.common.collect.Lists$Partition",
119:       "com.google.common.collect.Lists",
120:       "com.google.common.collect.UnmodifiableListIterator",
121:       "com.google.common.collect.ImmutableMultimap",
122:       "com.google.common.truth.FailureMetadata$Step",
123:       "com.google.common.truth.BooleanSubject",
124:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
125:       "com.google.common.collect.ImmutableSortedSet",
126:       "com.google.common.collect.Sets$4",
127:       "com.google.common.base.Absent",
128:       "com.google.common.collect.Maps$BiMapConverter",
129:       "com.google.common.base.CharMatcher",
130:       "com.google.common.collect.ImmutableSortedSet$Builder",
131:       "com.google.common.truth.DoubleSubject",
132:       "com.google.common.base.Preconditions",
133:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
134:       "com.google.common.base.CharMatcher$1",
135:       "com.google.common.truth.StandardSubjectBuilder$1",
136:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
137:       "com.google.common.base.CharMatcher$FastMatcher",
138:       "com.google.common.truth.MultisetSubject",
139:       "com.google.common.base.Joiner$1",
140:       "com.google.common.base.CharMatcher$JavaIsoControl",
141:       "com.google.common.base.Converter$ConverterComposition",
142:       "com.google.common.base.Joiner$2",
143:       "org.objectweb.asm.MethodVisitor",
144:       "com.google.common.collect.EmptyImmutableSetMultimap",
145:       "com.google.common.collect.ImmutableList$Itr",
146:       "com.google.common.truth.ComparisonFailures",
147:       "com.google.common.truth.ActualValueInference",
148:       "com.google.common.collect.ImmutableCollection",
149:       "com.google.common.collect.ImmutableEnumMap",
150:       "com.google.common.base.Joiner$3",
151:       "com.google.common.collect.Lists$OnePlusArrayList",
152:       "com.google.common.base.CharMatcher$BitSetMatcher",
153:       "com.google.common.base.CharMatcher$JavaUpperCase",
154:       "com.google.common.collect.ImmutableCollection$Builder",
155:       "com.google.common.collect.ImmutableSetMultimap",
156:       "com.google.errorprone.annotations.DoNotMock",
157:       "com.google.common.collect.Iterators$6",
158:       "com.google.common.collect.BiMap",
159:       "com.google.common.truth.IntegerSubject",
160:       "com.google.common.collect.Iterators$9",
161:       "com.google.common.collect.ImmutableSet",
162:       "com.google.common.collect.Lists$AbstractListWrapper",
163:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
164:       "com.google.common.base.CharMatcher$NamedFastMatcher",
165:       "com.google.common.collect.Iterators$1",
166:       "com.google.common.collect.CompactHashMap",
167:       "com.google.common.truth.ClassSubject",
168:       "com.google.common.collect.Iterators$4",
169:       "com.google.common.collect.Iterators$5",
170:       "com.google.common.base.Converter$ReverseConverter",
171:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
172:       "org.objectweb.asm.ClassReader",
173:       "com.google.common.truth.Platform",
174:       "com.google.common.collect.Lists$StringAsImmutableList",
175:       "com.google.common.base.CharMatcher$Is",
176:       "com.google.common.collect.Lists$2",
177:       "com.google.common.truth.MapSubject",
178:       "com.google.common.base.CharMatcher$SingleWidth",
179:       "com.google.common.base.Splitter$Strategy",
180:       "com.google.common.collect.Lists$1",
181:       "com.google.common.truth.LazyMessage",
182:       "com.google.common.collect.ImmutableMultimap$Builder",
183:       "com.google.common.truth.BigDecimalSubject",
184:       "com.google.common.truth.Subject$ComparisonResult",
185:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
186:       "com.google.common.collect.Multiset",
187:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
188:       "com.google.common.collect.AbstractMultimap",
189:       "com.google.common.base.AbstractIterator$1",
190:       "com.google.common.truth.ComparisonFailureWithFacts",
191:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
192:       "com.google.common.collect.ImmutableList",
193:       "com.google.common.collect.FluentIterable$1",
194:       "com.google.common.collect.FluentIterable$2",
195:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
196:       "com.google.common.truth.GuavaOptionalSubject",
197:       "com.google.common.truth.PrimitiveFloatArraySubject",
198:       "com.google.common.truth.Fact",
199:       "com.google.common.collect.FluentIterable$3",
200:       "com.google.common.truth.ObjectArraySubject",
201:       "com.google.common.base.CharMatcher$Negated",
202:       "com.google.common.truth.ActualValueInference$DescribedEntry",
203:       "com.google.common.base.CharMatcher$Ascii",
204:       "com.google.common.truth.CustomSubjectBuilder$Factory",
205:       "com.google.common.base.Converter$FunctionBasedConverter",
206:       "com.google.common.truth.StringSubject",
207:       "com.google.common.collect.Maps$EntryTransformer",
208:       "com.google.common.collect.FluentIterable$3$1",
209:       "com.google.common.truth.FailureStrategy",
210:       "com.google.common.base.CharMatcher$Digit",
211:       "com.google.common.collect.Hashing",
212:       "com.google.common.collect.ImmutableList$SubList",
213:       "com.google.common.collect.ListMultimap",
214:       "com.google.common.base.CharMatcher$Whitespace",
215:       "com.google.common.truth.ErrorWithFacts",
216:       "com.google.common.collect.RegularImmutableList",
217:       "com.google.common.truth.StackTraceCleaner",
218:       "com.google.common.base.CharMatcher$JavaDigit",
219:       "com.google.common.truth.IterableSubject",
220:       "com.google.common.collect.FluentIterable",
221:       "com.google.common.base.Optional",
222:       "com.google.common.collect.Lists$TransformingRandomAccessList",
223:       "com.google.common.collect.Iterators$ArrayItr",
224:       "com.google.common.base.CharMatcher$IsNot",
225:       "com.google.common.base.CharMatcher$InRange",
226:       "com.google.common.base.CharMatcher$JavaLetter",
227:       "com.google.common.collect.BaseImmutableMultimap",
228:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
229:       "com.google.common.collect.SortedMapDifference",
230:       "com.google.common.collect.RegularImmutableSet",
231:       "com.google.common.base.CommonPattern",
232:       "com.google.common.truth.Subject$EqualityCheck",
233:       "com.google.common.base.CharMatcher$IsEither",
234:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
235:       "com.google.common.collect.ImmutableListMultimap",
236:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
237:       "com.google.common.collect.ImmutableMultimap$1",
238:       "com.google.common.truth.PrimitiveByteArraySubject",
239:       "com.google.common.base.Present",
240:       "com.google.common.truth.PrimitiveIntArraySubject",
241:       "com.google.common.collect.ImmutableMultimap$2",
242:       "com.google.common.truth.PrimitiveCharArraySubject",
243:       "com.google.common.truth.Subject$2",
244:       "com.google.common.truth.Subject$3",
245:       "com.google.common.collect.Iterables",
246:       "com.google.common.truth.Subject$Factory",
247:       "com.google.common.base.CharMatcher$Any",
248:       "com.google.common.truth.FloatSubject",
249:       "com.google.common.truth.Subject$1",
250:       "com.google.common.collect.Sets$SetView",
251:       "com.google.common.collect.ImmutableSet$Builder",
252:       "com.google.common.base.JdkPattern$JdkMatcher",
253:       "com.google.common.truth.PrimitiveLongArraySubject",
254:       "com.google.common.collect.SingletonImmutableSet",
255:       "com.google.common.collect.ImmutableSetMultimap$Builder",
256:       "com.google.common.base.PatternCompiler",
257:       "com.google.common.truth.ActualValueInference$InferredType",
258:       "com.google.common.base.Splitter$3$1",
259:       "com.google.common.collect.ImmutableMultiset",
260:       "com.google.common.truth.ComparableSubject",
261:       "com.google.common.collect.ImmutableMultimap$Keys",
262:       "com.google.common.truth.FailureMetadata",
263:       "com.google.common.collect.Lists$TransformingSequentialList",
264:       "com.google.common.primitives.IntsMethodsForWeb",
265:       "com.google.common.collect.ObjectArrays",
266:       "com.google.common.base.CaseFormat$1",
267:       "com.google.common.base.CaseFormat$2",
268:       "com.google.common.collect.AbstractIterator",
269:       "com.google.common.base.CaseFormat$3",
270:       "com.google.common.base.MoreObjects",
271:       "com.google.common.base.CaseFormat$4",
272:       "com.google.common.base.CaseFormat$5",
273:       "com.google.common.base.CharMatcher$And",
274:       "com.google.common.collect.MapDifference",
275:       "com.google.common.collect.SortedIterable",
276:       "com.google.common.base.CharMatcher$AnyOf",
277:       "com.google.common.collect.UnmodifiableIterator",
278:       "com.google.common.truth.AbstractArraySubject",
279:       "com.google.common.base.Java8Usage",
280:       "com.google.common.collect.Lists$RandomAccessListWrapper",
281:       "com.google.common.collect.ImmutableEnumSet",
282:       "com.google.common.base.Platform",
283:       "com.google.common.base.CommonMatcher",
284:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
285:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
286:       "com.google.common.base.CharMatcher$RangesMatcher",
287:       "org.objectweb.asm.ClassVisitor",
288:       "com.google.common.base.Splitter",
289:       "com.google.common.base.Converter",
290:       "com.google.common.collect.Maps$8",
291:       "com.google.common.base.Function",
292:       "com.google.common.collect.ImmutableMap",
293:       "com.google.common.collect.AbstractIndexedListIterator",
294:       "com.google.common.collect.CollectPreconditions",
295:       "com.google.common.truth.Subject",
296:       "com.google.common.primitives.Ints$IntConverter",
297:       "com.google.common.collect.Sets",
298:       "com.google.common.base.CharMatcher$JavaLowerCase",
299:       "com.google.common.truth.MultimapSubject",
300:       "com.google.common.collect.ImmutableList$Builder",
301:       "com.google.common.collect.Iterables$5",
302:       "com.google.common.collect.Multimap",
303:       "com.google.common.collect.Iterators",
304:       "com.google.common.base.AbstractIterator$State",
305:       "com.google.common.base.Splitter$3",
306:       "com.google.common.base.Splitter$5",
307:       "com.google.common.base.CaseFormat",
308:       "com.google.common.base.Ascii",
309:       "com.google.common.truth.ActualValueInference$SubjectEntry",
310:       "com.google.common.truth.StandardSubjectBuilder",
311:       "com.google.common.primitives.Ints",
312:       "com.google.common.collect.Maps",
313:       "com.google.common.collect.SetMultimap",
314:       "com.google.common.base.CharMatcher$Or",
315:       "com.google.common.collect.TransformedIterator",
316:       "com.google.common.base.CaseFormat$StringConverter",
317:       "com.google.common.base.Splitter$SplittingIterator",
318:       "com.google.common.base.AbstractIterator",
319:       "com.google.common.truth.DiffUtils",
320:       "com.google.common.collect.Iterators$MergingIterator",
321:       "com.google.common.collect.RegularImmutableSortedSet",
322:       "com.google.common.collect.Table",
323:       "com.google.common.truth.ActualValueInference$StackEntry"
324:     );
325:   } 
326:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
327:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, Subject_45_tmp__ESTest_scaffolding.class.getClassLoader()));
328:   }
329: 
330:   private static void resetClasses() {
331:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Subject_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
332: 
333:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
334:       "com.google.common.truth.Subject$1",
335:       "com.google.common.truth.Subject$2",
336:       "com.google.common.truth.Subject",
337:       "com.google.common.collect.ImmutableCollection",
338:       "com.google.common.collect.UnmodifiableIterator",
339:       "com.google.common.collect.UnmodifiableListIterator",
340:       "com.google.common.collect.AbstractIndexedListIterator",
341:       "com.google.common.collect.ImmutableList$Itr",
342:       "com.google.common.collect.RegularImmutableList",
343:       "com.google.common.base.Java8Usage",
344:       "com.google.common.base.Preconditions",
345:       "com.google.common.collect.ImmutableList",
346:       "com.google.common.truth.Subject$ComparisonResult",
347:       "com.google.common.truth.Subject$3",
348:       "com.google.common.truth.Subject$EqualityCheck",
349:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
350:       "com.google.common.base.CharMatcher",
351:       "com.google.common.base.CharMatcher$FastMatcher",
352:       "com.google.common.base.CharMatcher$NamedFastMatcher",
353:       "com.google.common.base.CharMatcher$Whitespace",
354:       "com.google.common.base.CharMatcher$Is",
355:       "com.google.common.base.CharMatcher$InRange",
356:       "com.google.common.base.CaseFormat",
357:       "com.google.common.truth.FailureMetadata",
358:       "com.google.common.truth.FailureMetadata$Step",
359:       "com.google.common.truth.SubjectUtils",
360:       "com.google.common.collect.ImmutableCollection$Builder",
361:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
362:       "com.google.common.collect.ImmutableList$Builder",
363:       "com.google.common.collect.CollectPreconditions",
364:       "com.google.common.truth.Fact",
365:       "com.google.common.truth.LazyMessage",
366:       "com.google.common.base.Strings",
367:       "com.google.common.collect.Lists",
368:       "com.google.common.collect.Lists$OnePlusArrayList",
369:       "com.google.common.math.IntMath",
370:       "com.google.common.primitives.IntsMethodsForWeb",
371:       "com.google.common.primitives.Ints",
372:       "com.google.common.collect.ObjectArrays",
373:       "com.google.common.collect.Iterables",
374:       "com.google.common.collect.FluentIterable",
375:       "com.google.common.collect.FluentIterable$3",
376:       "com.google.common.base.Optional",
377:       "com.google.common.base.Absent",
378:       "com.google.common.collect.FluentIterable$3$1",
379:       "com.google.common.collect.Iterators",
380:       "com.google.common.collect.Iterators$ConcatenatedIterator",
381:       "com.google.common.collect.Iterators$ArrayItr",
382:       "com.google.common.truth.AssertionErrorWithFacts",
383:       "com.google.common.truth.Platform",
384:       "com.google.common.collect.ImmutableSet",
385:       "com.google.common.collect.SingletonImmutableSet",
386:       "com.google.common.collect.Hashing",
387:       "com.google.common.collect.RegularImmutableSet",
388:       "com.google.common.truth.StackTraceCleaner",
389:       "com.google.common.collect.Sets",
390:       "com.google.common.collect.Maps",
391:       "com.google.common.base.MoreObjects",
392:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
393:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
394:       "com.google.common.base.Joiner",
395:       "com.google.common.base.Joiner$3",
396:       "com.google.common.truth.ActualValueInference",
397:       "org.objectweb.asm.ClassVisitor",
398:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
399:       "com.google.common.collect.AbstractMultimap",
400:       "com.google.common.collect.BaseImmutableMultimap",
401:       "com.google.common.collect.ImmutableMultimap",
402:       "com.google.common.collect.ImmutableSetMultimap",
403:       "com.google.common.collect.ImmutableMultimap$Builder",
404:       "com.google.common.collect.ImmutableSetMultimap$Builder",
405:       "com.google.common.collect.Platform",
406:       "com.google.common.collect.CompactHashMap",
407:       "org.objectweb.asm.ClassReader",
408:       "com.google.common.base.Converter",
409:       "com.google.common.base.Converter$FunctionBasedConverter",
410:       "com.google.common.base.Converter$ReverseConverter",
411:       "com.google.common.base.Converter$ConverterComposition",
412:       "com.google.common.base.Converter$IdentityConverter",
413:       "com.google.common.base.Ascii",
414:       "com.google.common.truth.ComparisonFailures",
415:       "com.google.common.base.Splitter",
416:       "com.google.common.base.Platform$JdkPatternCompiler",
417:       "com.google.common.base.Platform",
418:       "com.google.common.base.CommonPattern",
419:       "com.google.common.base.JdkPattern",
420:       "com.google.common.base.CommonMatcher",
421:       "com.google.common.base.JdkPattern$JdkMatcher",
422:       "com.google.common.base.Splitter$3",
423:       "com.google.common.base.CharMatcher$None",
424:       "com.google.common.base.Splitter$5",
425:       "com.google.common.base.AbstractIterator",
426:       "com.google.common.base.Splitter$SplittingIterator",
427:       "com.google.common.base.Splitter$3$1",
428:       "com.google.common.base.AbstractIterator$State",
429:       "com.google.common.base.AbstractIterator$1",
430:       "com.google.common.truth.DiffUtils",
431:       "com.google.common.truth.Platform$PlatformComparisonFailure",
432:       "com.google.common.truth.ComparisonFailureWithFacts",
433:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
434:       "autovalue.shaded.com.google$.common.collect.$Cut",
435:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
436:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
437:       "autovalue.shaded.com.google$.common.base.$Preconditions",
438:       "autovalue.shaded.com.google$.common.collect.$Range",
439:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
440:       "com.google.common.collect.Collections2",
441:       "com.google.common.truth.StandardSubjectBuilder",
442:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
443:       "com.google.common.base.Converter$1",
444:       "com.google.common.base.Verify",
445:       "com.google.common.base.Converter$1$1",
446:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
447:       "com.google.common.collect.Iterables$5",
448:       "com.google.common.collect.TransformedIterator",
449:       "com.google.common.collect.Iterators$6"
450:     );
451:   }
452: }

[MASTER] 16:06:04.591 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
Byte byte0 = new Byte((byte)46);
Subject subject0 = new Subject(failureMetadata0, byte0);
Byte[] byteArray0 = new Byte[1];
byteArray0[0] = byte0;
ImmutableList<Byte> immutableList0 = ImmutableList.copyOf(byteArray0);
subject0.isNotIn(immutableList0);
assertTrue(immutableList0.contains(byte0));


* Writing tests to file
* Writing JUnit test case 'Subject_ESTest' to evosuite-tests
* Done!

* Computation finished
