* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.ThrowableSubject
* Starting Client-0
* Connecting to master process on port 3950
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar
  - t/dependency/asm-9.1.jar
  - t/dependency/auto-common-0.11.jar
  - t/dependency/auto-value-1.7.4.jar
  - t/dependency/auto-value-annotations-1.8.1.jar
  - t/dependency/base-1.0.0.jar
  - t/dependency/checker-compat-qual-2.5.5.jar
  - t/dependency/checker-qual-3.13.0.jar
  - t/dependency/compile-testing-0.19.jar
  - t/dependency/elemental2-promise-1.1.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-30.1.1-android.jar
  - t/dependency/guava-gwt-30.1.1-jre.jar
  - t/dependency/guava-testlib-30.1.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/tools-1.8.0_382.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.ThrowableSubject
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 64
* Using seed 1731035269131
* Starting evolution
* Initial Number of Goals in DynaMOSA = 28 / 64
[MASTER] 16:07:51.917 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             1%] [Cov:============================>      82%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:============================>      82%][MASTER] 16:07:55.060 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          11%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:====>                         16%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       20%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    85%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 61s and 494 generations, 184228 statements, best individual has fitness: 5.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 16:08:55.634 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1731035334509/com/google/common/truth/ThrowableSubject_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1731035334509/com/google/common/truth/ThrowableSubject_0_tmp__ESTest_scaffolding.java]]
[MASTER] 16:08:55.634 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:08:55.634 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:08:55.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 16:08:55.638 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 16:08:55.639 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1731035334509/com/google/common/truth/ThrowableSubject_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:08:54 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.ComparisonFailureWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.BatchUpdateException;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.ViolatedAssumptionAnswer;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class ThrowableSubject_0_tmp__ESTest extends ThrowableSubject_0_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
30:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
31:       ImmutableList<String> immutableList0 = ImmutableList.of();
32:       Fact fact0 = Fact.simpleFact(" ");
33:       ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0, fact0);
34:       BatchUpdateException batchUpdateException0 = new BatchUpdateException();
35:       ComparisonFailureWithFacts comparisonFailureWithFacts0 = new ComparisonFailureWithFacts(immutableList0, immutableList1, " ", " \n \n \n \n ", batchUpdateException0);
36:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, comparisonFailureWithFacts0, " \n \n \n \n ");
37:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
38:       assertNotNull(stringSubject0);
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_0_1731035334509/com/google/common/truth/ThrowableSubject_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:08:54 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_0_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.collect.Lists$RandomAccessPartition",
87:       "com.google.common.base.CharMatcher$Whitespace",
88:       "com.google.common.base.CharMatcher$ForPredicate",
89:       "com.google.common.truth.ErrorWithFacts",
90:       "com.google.common.collect.PeekingIterator",
91:       "com.google.common.collect.RegularImmutableList",
92:       "com.google.common.truth.StackTraceCleaner",
93:       "com.google.common.truth.SubjectUtils",
94:       "com.google.common.base.CharMatcher$JavaDigit",
95:       "com.google.common.collect.FluentIterable",
96:       "com.google.common.base.Optional",
97:       "com.google.common.collect.Lists$TransformingRandomAccessList",
98:       "com.google.common.collect.Sets$2",
99:       "com.google.common.collect.Iterators$ArrayItr",
100:       "com.google.common.collect.Sets$3",
101:       "com.google.common.truth.ThrowableSubject",
102:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
103:       "com.google.common.collect.Sets$1",
104:       "com.google.common.base.CharMatcher$IsNot",
105:       "com.google.common.base.CharMatcher$JavaLetter",
106:       "com.google.common.base.CharMatcher$InRange",
107:       "com.google.common.collect.Platform",
108:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
109:       "com.google.common.base.Verify",
110:       "com.google.common.collect.BaseImmutableMultimap",
111:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
112:       "com.google.common.collect.ImmutableMultimap$Values",
113:       "com.google.common.collect.Range",
114:       "com.google.common.collect.SortedMapDifference",
115:       "com.google.common.collect.RegularImmutableSet",
116:       "com.google.common.collect.Iterators$10",
117:       "com.google.common.truth.Subject$EqualityCheck",
118:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
119:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.common.base.CharMatcher$IsEither",
122:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
123:       "com.google.common.collect.ImmutableListMultimap",
124:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
125:       "com.google.common.collect.ImmutableMultimap$1",
126:       "com.google.common.base.CharMatcher$Invisible",
127:       "com.google.common.base.CharMatcher$None",
128:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
129:       "com.google.common.base.Present",
130:       "com.google.common.base.Joiner",
131:       "com.google.common.collect.ImmutableMultimap$2",
132:       "com.google.common.collect.Iterators$ConcatenatedIterator",
133:       "com.google.common.truth.Subject$2",
134:       "com.google.common.truth.Subject$3",
135:       "com.google.common.collect.Iterables",
136:       "com.google.common.base.CharMatcher$Any",
137:       "com.google.common.truth.Subject$1",
138:       "com.google.common.collect.Sets$SetView",
139:       "com.google.common.collect.ImmutableSet$Builder",
140:       "com.google.common.collect.SingletonImmutableSet",
141:       "com.google.common.truth.Platform$PlatformComparisonFailure",
142:       "com.google.common.collect.ImmutableSetMultimap$Builder",
143:       "com.google.common.truth.AssertionErrorWithFacts",
144:       "com.google.common.base.Strings",
145:       "com.google.common.collect.Lists$Partition",
146:       "com.google.common.collect.Lists",
147:       "com.google.common.truth.ActualValueInference$InferredType",
148:       "com.google.common.collect.ImmutableMultiset",
149:       "com.google.common.collect.UnmodifiableListIterator",
150:       "com.google.common.truth.ComparableSubject",
151:       "com.google.common.collect.ImmutableMultimap$Keys",
152:       "com.google.common.collect.ImmutableMultimap",
153:       "com.google.common.truth.FailureMetadata",
154:       "com.google.common.collect.Lists$TransformingSequentialList",
155:       "com.google.common.truth.FailureMetadata$Step",
156:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
157:       "com.google.common.collect.ImmutableSortedSet",
158:       "com.google.common.primitives.IntsMethodsForWeb",
159:       "com.google.common.collect.RangeGwtSerializationDependencies",
160:       "com.google.common.collect.Sets$4",
161:       "com.google.common.base.Absent",
162:       "com.google.common.collect.ObjectArrays",
163:       "com.google.common.collect.Maps$BiMapConverter",
164:       "com.google.common.base.CaseFormat$1",
165:       "com.google.common.base.CaseFormat$2",
166:       "com.google.common.base.CaseFormat$3",
167:       "com.google.common.base.CharMatcher",
168:       "com.google.common.collect.AbstractIterator",
169:       "com.google.common.base.MoreObjects",
170:       "com.google.common.base.CaseFormat$4",
171:       "com.google.common.base.CaseFormat$5",
172:       "com.google.common.collect.ImmutableSortedSet$Builder",
173:       "com.google.common.base.CharMatcher$And",
174:       "com.google.common.collect.MapDifference",
175:       "com.google.common.collect.SortedIterable",
176:       "com.google.common.base.CharMatcher$AnyOf",
177:       "com.google.common.base.Preconditions",
178:       "com.google.common.collect.UnmodifiableIterator",
179:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
180:       "com.google.common.base.CharMatcher$1",
181:       "com.google.common.truth.StandardSubjectBuilder$1",
182:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
183:       "com.google.common.base.CharMatcher$FastMatcher",
184:       "com.google.common.base.Joiner$1",
185:       "com.google.common.base.CharMatcher$JavaIsoControl",
186:       "com.google.common.base.Joiner$2",
187:       "org.objectweb.asm.MethodVisitor",
188:       "com.google.common.collect.EmptyImmutableSetMultimap",
189:       "com.google.common.collect.ImmutableList$Itr",
190:       "com.google.common.base.Java8Usage",
191:       "com.google.common.truth.ActualValueInference",
192:       "com.google.common.collect.ImmutableCollection",
193:       "com.google.common.collect.ImmutableEnumMap",
194:       "com.google.common.base.Joiner$3",
195:       "com.google.common.collect.Lists$RandomAccessListWrapper",
196:       "com.google.common.collect.ImmutableEnumSet",
197:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
198:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
199:       "com.google.common.base.CharMatcher$BitSetMatcher",
200:       "com.google.common.truth.Platform$JUnitTestRule",
201:       "com.google.common.base.CharMatcher$RangesMatcher",
202:       "org.objectweb.asm.ClassVisitor",
203:       "com.google.common.base.CharMatcher$JavaUpperCase",
204:       "com.google.common.collect.ImmutableCollection$Builder",
205:       "com.google.errorprone.annotations.DoNotMock",
206:       "com.google.common.base.Converter",
207:       "com.google.common.collect.ImmutableSetMultimap",
208:       "com.google.common.collect.Maps$8",
209:       "com.google.common.collect.BiMap",
210:       "com.google.common.base.Function",
211:       "com.google.common.collect.ImmutableSet",
212:       "com.google.common.collect.Iterators$9",
213:       "com.google.common.collect.Lists$AbstractListWrapper",
214:       "com.google.common.collect.ImmutableMap",
215:       "com.google.common.collect.AbstractIndexedListIterator",
216:       "com.google.common.collect.CollectPreconditions",
217:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
218:       "com.google.common.base.CharMatcher$NamedFastMatcher",
219:       "com.google.common.collect.Iterators$1",
220:       "com.google.common.collect.CompactHashMap",
221:       "com.google.common.truth.Subject",
222:       "com.google.common.collect.Sets",
223:       "com.google.common.primitives.Ints$IntConverter",
224:       "com.google.common.collect.Iterators$4",
225:       "com.google.common.collect.Iterators$5",
226:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
227:       "org.objectweb.asm.ClassReader",
228:       "com.google.common.truth.Platform",
229:       "com.google.common.collect.Lists$StringAsImmutableList",
230:       "com.google.common.base.CharMatcher$Is",
231:       "com.google.common.collect.Lists$2",
232:       "com.google.common.base.CharMatcher$SingleWidth",
233:       "com.google.common.base.CharMatcher$JavaLowerCase",
234:       "com.google.common.collect.ImmutableList$Builder",
235:       "com.google.common.collect.Lists$1",
236:       "com.google.common.truth.LazyMessage",
237:       "com.google.common.collect.ImmutableMultimap$Builder",
238:       "com.google.common.truth.Subject$ComparisonResult",
239:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
240:       "com.google.common.collect.Multiset",
241:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
242:       "com.google.common.collect.AbstractMultimap",
243:       "com.google.common.truth.ComparisonFailureWithFacts",
244:       "com.google.common.collect.Multimap",
245:       "com.google.common.collect.Iterators",
246:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
247:       "com.google.common.collect.ImmutableList",
248:       "com.google.common.collect.FluentIterable$1",
249:       "com.google.common.collect.FluentIterable$2",
250:       "com.google.common.truth.ThrowableSubject$1",
251:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
252:       "com.google.common.truth.Fact",
253:       "com.google.common.collect.FluentIterable$3",
254:       "com.google.common.base.VerifyException",
255:       "com.google.common.base.CharMatcher$Negated",
256:       "com.google.common.truth.ActualValueInference$DescribedEntry",
257:       "com.google.common.base.CaseFormat",
258:       "com.google.common.base.Ascii",
259:       "com.google.common.truth.ActualValueInference$SubjectEntry",
260:       "com.google.common.base.CharMatcher$Ascii",
261:       "com.google.common.truth.StandardSubjectBuilder",
262:       "com.google.common.collect.Maps",
263:       "com.google.common.primitives.Ints",
264:       "com.google.common.truth.StringSubject",
265:       "com.google.common.collect.SetMultimap",
266:       "com.google.common.base.CharMatcher$Or",
267:       "com.google.common.base.CaseFormat$StringConverter",
268:       "com.google.common.collect.Maps$EntryTransformer",
269:       "com.google.common.collect.FluentIterable$3$1",
270:       "com.google.common.truth.FailureStrategy",
271:       "com.google.common.base.CharMatcher$Digit",
272:       "com.google.common.collect.Iterators$MergingIterator",
273:       "com.google.common.collect.RegularImmutableSortedSet",
274:       "com.google.common.truth.ActualValueInference$StackEntry"
275:     );
276:   } 
277:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
278:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader()));
279:   }
280: 
281:   private static void resetClasses() {
282:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
283: 
284:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
285:       "com.google.common.truth.Subject$1",
286:       "com.google.common.truth.Subject$2",
287:       "com.google.common.truth.Subject",
288:       "com.google.common.truth.ThrowableSubject",
289:       "com.google.common.truth.ThrowableSubject$1",
290:       "com.google.common.truth.FailureMetadata",
291:       "com.google.common.collect.ImmutableCollection",
292:       "com.google.common.collect.UnmodifiableIterator",
293:       "com.google.common.collect.UnmodifiableListIterator",
294:       "com.google.common.collect.AbstractIndexedListIterator",
295:       "com.google.common.collect.ImmutableList$Itr",
296:       "com.google.common.collect.RegularImmutableList",
297:       "com.google.common.base.Java8Usage",
298:       "com.google.common.base.Preconditions",
299:       "com.google.common.collect.ImmutableList",
300:       "com.google.common.truth.FailureMetadata$Step",
301:       "com.google.common.truth.SubjectUtils",
302:       "com.google.common.collect.ImmutableCollection$Builder",
303:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
304:       "com.google.common.collect.ImmutableList$Builder",
305:       "com.google.common.collect.CollectPreconditions",
306:       "com.google.common.truth.LazyMessage",
307:       "com.google.common.truth.Subject$3",
308:       "com.google.common.truth.StandardSubjectBuilder",
309:       "com.google.common.truth.Fact",
310:       "com.google.common.collect.Iterables",
311:       "com.google.common.collect.Collections2",
312:       "com.google.common.collect.ObjectArrays",
313:       "com.google.common.truth.AssertionErrorWithFacts",
314:       "com.google.common.truth.Platform",
315:       "com.google.common.collect.ImmutableSet",
316:       "com.google.common.collect.SingletonImmutableSet",
317:       "com.google.common.collect.Hashing",
318:       "com.google.common.collect.RegularImmutableSet",
319:       "com.google.common.truth.StackTraceCleaner",
320:       "com.google.common.collect.Sets",
321:       "com.google.common.collect.Maps",
322:       "com.google.common.base.MoreObjects",
323:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
324:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
325:       "com.google.common.base.Joiner",
326:       "com.google.common.base.Joiner$3",
327:       "com.google.common.truth.ActualValueInference",
328:       "org.objectweb.asm.ClassVisitor",
329:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
330:       "com.google.common.collect.AbstractMultimap",
331:       "com.google.common.collect.BaseImmutableMultimap",
332:       "com.google.common.collect.ImmutableMultimap",
333:       "com.google.common.collect.ImmutableSetMultimap",
334:       "com.google.common.collect.ImmutableMultimap$Builder",
335:       "com.google.common.collect.ImmutableSetMultimap$Builder",
336:       "com.google.common.collect.Platform",
337:       "com.google.common.collect.CompactHashMap",
338:       "com.google.common.primitives.IntsMethodsForWeb",
339:       "com.google.common.primitives.Ints",
340:       "org.objectweb.asm.ClassReader",
341:       "com.google.common.collect.FluentIterable",
342:       "com.google.common.collect.FluentIterable$3",
343:       "com.google.common.base.Optional",
344:       "com.google.common.base.Absent",
345:       "com.google.common.collect.FluentIterable$3$1",
346:       "com.google.common.collect.Iterators",
347:       "com.google.common.collect.Iterators$ConcatenatedIterator",
348:       "com.google.common.collect.Iterators$ArrayItr",
349:       "com.google.common.base.Strings",
350:       "com.google.common.truth.ComparableSubject",
351:       "com.google.common.truth.StringSubject",
352:       "com.google.common.base.Converter",
353:       "com.google.common.base.Converter$IdentityConverter",
354:       "com.google.common.truth.ComparisonFailures",
355:       "com.google.common.base.Splitter",
356:       "com.google.common.base.Platform$JdkPatternCompiler",
357:       "com.google.common.base.Platform",
358:       "com.google.common.base.CommonPattern",
359:       "com.google.common.base.JdkPattern",
360:       "com.google.common.base.CommonMatcher",
361:       "com.google.common.base.JdkPattern$JdkMatcher",
362:       "com.google.common.base.Splitter$3",
363:       "com.google.common.base.CharMatcher",
364:       "com.google.common.base.CharMatcher$FastMatcher",
365:       "com.google.common.base.CharMatcher$NamedFastMatcher",
366:       "com.google.common.base.CharMatcher$None",
367:       "com.google.common.base.Splitter$5",
368:       "com.google.common.base.AbstractIterator",
369:       "com.google.common.base.Splitter$SplittingIterator",
370:       "com.google.common.base.Splitter$3$1",
371:       "com.google.common.base.AbstractIterator$State",
372:       "com.google.common.base.AbstractIterator$1",
373:       "com.google.common.truth.DiffUtils",
374:       "com.google.common.truth.Platform$PlatformComparisonFailure",
375:       "com.google.common.truth.ComparisonFailureWithFacts",
376:       "com.google.common.truth.Subject$EqualityCheck",
377:       "com.google.common.truth.Subject$ComparisonResult",
378:       "com.google.common.base.CharMatcher$Is",
379:       "com.google.common.base.CharMatcher$InRange",
380:       "com.google.common.base.CaseFormat",
381:       "com.google.common.base.Ascii",
382:       "com.google.common.base.Verify",
383:       "com.google.common.collect.Lists",
384:       "com.google.common.collect.Lists$OnePlusArrayList",
385:       "com.google.common.math.IntMath",
386:       "com.google.common.base.Converter$1",
387:       "com.google.common.base.Converter$FunctionBasedConverter",
388:       "com.google.common.base.Converter$ConverterComposition",
389:       "com.google.common.base.Converter$ReverseConverter",
390:       "com.google.common.collect.Iterators$9",
391:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
392:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
393:       "autovalue.shaded.com.google$.common.collect.$Cut",
394:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
395:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
396:       "autovalue.shaded.com.google$.common.base.$Preconditions",
397:       "autovalue.shaded.com.google$.common.collect.$Range",
398:       "autovalue.shaded.com.google$.common.collect.$Range$1",
399:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
400:       "com.google.common.collect.ImmutableList$SubList",
401:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
402:     );
403:   }
404: }

[MASTER] 16:08:55.640 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
ImmutableList<String> immutableList0 = ImmutableList.of();
Fact fact0 = Fact.simpleFact(" ");
ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0, fact0);
BatchUpdateException batchUpdateException0 = new BatchUpdateException();
ComparisonFailureWithFacts comparisonFailureWithFacts0 = new ComparisonFailureWithFacts(immutableList0, immutableList1, " ", " \n \n \n \n ", batchUpdateException0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, comparisonFailureWithFacts0, " \n \n \n \n ");
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


[MASTER] 16:08:56.089 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1731035335754/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1731035335754/com/google/common/truth/ThrowableSubject_2_tmp__ESTest_scaffolding.java]]
[MASTER] 16:08:56.089 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:08:56.089 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 16:08:56.089 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 16:08:56.091 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 16:08:56.092 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1731035335754/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 03:08:55 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.ComparisonFailureWithFacts;
13: import com.google.common.truth.Fact;
14: import com.google.common.truth.FailureMetadata;
15: import com.google.common.truth.FailureStrategy;
16: import com.google.common.truth.StringSubject;
17: import com.google.common.truth.ThrowableSubject;
18: import java.sql.BatchUpdateException;
19: import java.util.Collection;
20: import java.util.LinkedList;
21: import org.evosuite.runtime.EvoRunner;
22: import org.evosuite.runtime.EvoRunnerParameters;
23: import org.evosuite.runtime.ViolatedAssumptionAnswer;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class ThrowableSubject_2_tmp__ESTest extends ThrowableSubject_2_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
32:       FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
33:       ImmutableList<String> immutableList0 = ImmutableList.of();
34:       Fact fact0 = Fact.simpleFact("");
35:       ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0, fact0);
36:       BatchUpdateException batchUpdateException0 = new BatchUpdateException();
37:       ComparisonFailureWithFacts comparisonFailureWithFacts0 = new ComparisonFailureWithFacts(immutableList0, immutableList1, "", "", batchUpdateException0);
38:       LinkedList<Fact> linkedList0 = new LinkedList<Fact>();
39:       ImmutableList<Fact> immutableList2 = ImmutableList.copyOf((Collection<? extends Fact>) linkedList0);
40:       ComparisonFailureWithFacts comparisonFailureWithFacts1 = new ComparisonFailureWithFacts(immutableList0, immutableList2, "", "", comparisonFailureWithFacts0);
41:       ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, comparisonFailureWithFacts1, "");
42:       StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
43:       assertNotNull(stringSubject0);
44:   }
45: }
RegularFileObject[/tmp/EvoSuite_2_1731035335754/com/google/common/truth/ThrowableSubject_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 03:08:55 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class ThrowableSubject_2_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ThrowableSubject"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Hashing",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.ListMultimap",
86:       "com.google.common.collect.Lists$RandomAccessPartition",
87:       "com.google.common.base.CharMatcher$Whitespace",
88:       "com.google.common.base.CharMatcher$ForPredicate",
89:       "com.google.common.truth.ErrorWithFacts",
90:       "com.google.common.collect.PeekingIterator",
91:       "com.google.common.collect.RegularImmutableList",
92:       "com.google.common.truth.StackTraceCleaner",
93:       "com.google.common.truth.SubjectUtils",
94:       "com.google.common.base.CharMatcher$JavaDigit",
95:       "com.google.common.collect.FluentIterable",
96:       "com.google.common.base.Optional",
97:       "com.google.common.collect.Lists$TransformingRandomAccessList",
98:       "com.google.common.collect.Sets$2",
99:       "com.google.common.collect.Iterators$ArrayItr",
100:       "com.google.common.collect.Sets$3",
101:       "com.google.common.truth.ThrowableSubject",
102:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
103:       "com.google.common.collect.Sets$1",
104:       "com.google.common.base.CharMatcher$IsNot",
105:       "com.google.common.base.CharMatcher$JavaLetter",
106:       "com.google.common.base.CharMatcher$InRange",
107:       "com.google.common.collect.Platform",
108:       "com.google.common.base.CharMatcher$JavaLetterOrDigit",
109:       "com.google.common.base.Verify",
110:       "com.google.common.collect.BaseImmutableMultimap",
111:       "com.google.common.base.CharMatcher$NegatedFastMatcher",
112:       "com.google.common.collect.ImmutableMultimap$Values",
113:       "com.google.common.collect.Range",
114:       "com.google.common.collect.SortedMapDifference",
115:       "com.google.common.collect.RegularImmutableSet",
116:       "com.google.common.collect.Iterators$10",
117:       "com.google.common.truth.Subject$EqualityCheck",
118:       "com.google.common.truth.StringSubject$CaseInsensitiveStringComparison",
119:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.common.base.CharMatcher$IsEither",
122:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
123:       "com.google.common.collect.ImmutableListMultimap",
124:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
125:       "com.google.common.collect.ImmutableMultimap$1",
126:       "com.google.common.base.CharMatcher$Invisible",
127:       "com.google.common.base.CharMatcher$None",
128:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
129:       "com.google.common.base.Present",
130:       "com.google.common.base.Joiner",
131:       "com.google.common.collect.ImmutableMultimap$2",
132:       "com.google.common.collect.Iterators$ConcatenatedIterator",
133:       "com.google.common.truth.Subject$2",
134:       "com.google.common.truth.Subject$3",
135:       "com.google.common.collect.Iterables",
136:       "com.google.common.base.CharMatcher$Any",
137:       "com.google.common.truth.Subject$1",
138:       "com.google.common.collect.Sets$SetView",
139:       "com.google.common.collect.ImmutableSet$Builder",
140:       "com.google.common.collect.SingletonImmutableSet",
141:       "com.google.common.truth.Platform$PlatformComparisonFailure",
142:       "com.google.common.collect.ImmutableSetMultimap$Builder",
143:       "com.google.common.truth.AssertionErrorWithFacts",
144:       "com.google.common.base.Strings",
145:       "com.google.common.collect.Lists$Partition",
146:       "com.google.common.collect.Lists",
147:       "com.google.common.truth.ActualValueInference$InferredType",
148:       "com.google.common.collect.ImmutableMultiset",
149:       "com.google.common.collect.UnmodifiableListIterator",
150:       "com.google.common.truth.ComparableSubject",
151:       "com.google.common.collect.ImmutableMultimap$Keys",
152:       "com.google.common.collect.ImmutableMultimap",
153:       "com.google.common.truth.FailureMetadata",
154:       "com.google.common.collect.Lists$TransformingSequentialList",
155:       "com.google.common.truth.FailureMetadata$Step",
156:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
157:       "com.google.common.collect.ImmutableSortedSet",
158:       "com.google.common.primitives.IntsMethodsForWeb",
159:       "com.google.common.collect.RangeGwtSerializationDependencies",
160:       "com.google.common.collect.Sets$4",
161:       "com.google.common.base.Absent",
162:       "com.google.common.collect.ObjectArrays",
163:       "com.google.common.collect.Maps$BiMapConverter",
164:       "com.google.common.base.CaseFormat$1",
165:       "com.google.common.base.CaseFormat$2",
166:       "com.google.common.base.CaseFormat$3",
167:       "com.google.common.base.CharMatcher",
168:       "com.google.common.collect.AbstractIterator",
169:       "com.google.common.base.MoreObjects",
170:       "com.google.common.base.CaseFormat$4",
171:       "com.google.common.base.CaseFormat$5",
172:       "com.google.common.collect.ImmutableSortedSet$Builder",
173:       "com.google.common.base.CharMatcher$And",
174:       "com.google.common.collect.MapDifference",
175:       "com.google.common.collect.SortedIterable",
176:       "com.google.common.base.CharMatcher$AnyOf",
177:       "com.google.common.base.Preconditions",
178:       "com.google.common.collect.UnmodifiableIterator",
179:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
180:       "com.google.common.base.CharMatcher$1",
181:       "com.google.common.truth.StandardSubjectBuilder$1",
182:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
183:       "com.google.common.base.CharMatcher$FastMatcher",
184:       "com.google.common.base.Joiner$1",
185:       "com.google.common.base.CharMatcher$JavaIsoControl",
186:       "com.google.common.base.Joiner$2",
187:       "org.objectweb.asm.MethodVisitor",
188:       "com.google.common.collect.EmptyImmutableSetMultimap",
189:       "com.google.common.collect.ImmutableList$Itr",
190:       "com.google.common.base.Java8Usage",
191:       "com.google.common.truth.ActualValueInference",
192:       "com.google.common.collect.ImmutableCollection",
193:       "com.google.common.collect.ImmutableEnumMap",
194:       "com.google.common.base.Joiner$3",
195:       "com.google.common.collect.Lists$RandomAccessListWrapper",
196:       "com.google.common.collect.ImmutableEnumSet",
197:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
198:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
199:       "com.google.common.base.CharMatcher$BitSetMatcher",
200:       "com.google.common.truth.Platform$JUnitTestRule",
201:       "com.google.common.base.CharMatcher$RangesMatcher",
202:       "org.objectweb.asm.ClassVisitor",
203:       "com.google.common.base.CharMatcher$JavaUpperCase",
204:       "com.google.common.collect.ImmutableCollection$Builder",
205:       "com.google.errorprone.annotations.DoNotMock",
206:       "com.google.common.base.Converter",
207:       "com.google.common.collect.ImmutableSetMultimap",
208:       "com.google.common.collect.Maps$8",
209:       "com.google.common.collect.BiMap",
210:       "com.google.common.base.Function",
211:       "com.google.common.collect.ImmutableSet",
212:       "com.google.common.collect.Iterators$9",
213:       "com.google.common.collect.Lists$AbstractListWrapper",
214:       "com.google.common.collect.ImmutableMap",
215:       "com.google.common.collect.AbstractIndexedListIterator",
216:       "com.google.common.collect.CollectPreconditions",
217:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
218:       "com.google.common.base.CharMatcher$NamedFastMatcher",
219:       "com.google.common.collect.Iterators$1",
220:       "com.google.common.collect.CompactHashMap",
221:       "com.google.common.truth.Subject",
222:       "com.google.common.collect.Sets",
223:       "com.google.common.primitives.Ints$IntConverter",
224:       "com.google.common.collect.Iterators$4",
225:       "com.google.common.collect.Iterators$5",
226:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
227:       "org.objectweb.asm.ClassReader",
228:       "com.google.common.truth.Platform",
229:       "com.google.common.collect.Lists$StringAsImmutableList",
230:       "com.google.common.base.CharMatcher$Is",
231:       "com.google.common.collect.Lists$2",
232:       "com.google.common.base.CharMatcher$SingleWidth",
233:       "com.google.common.base.CharMatcher$JavaLowerCase",
234:       "com.google.common.collect.ImmutableList$Builder",
235:       "com.google.common.collect.Lists$1",
236:       "com.google.common.truth.LazyMessage",
237:       "com.google.common.collect.ImmutableMultimap$Builder",
238:       "com.google.common.truth.Subject$ComparisonResult",
239:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
240:       "com.google.common.collect.Multiset",
241:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
242:       "com.google.common.collect.AbstractMultimap",
243:       "com.google.common.truth.ComparisonFailureWithFacts",
244:       "com.google.common.collect.Multimap",
245:       "com.google.common.collect.Iterators",
246:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
247:       "com.google.common.collect.ImmutableList",
248:       "com.google.common.collect.FluentIterable$1",
249:       "com.google.common.collect.FluentIterable$2",
250:       "com.google.common.truth.ThrowableSubject$1",
251:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar",
252:       "com.google.common.truth.Fact",
253:       "com.google.common.collect.FluentIterable$3",
254:       "com.google.common.base.VerifyException",
255:       "com.google.common.base.CharMatcher$Negated",
256:       "com.google.common.truth.ActualValueInference$DescribedEntry",
257:       "com.google.common.base.CaseFormat",
258:       "com.google.common.base.Ascii",
259:       "com.google.common.truth.ActualValueInference$SubjectEntry",
260:       "com.google.common.base.CharMatcher$Ascii",
261:       "com.google.common.truth.StandardSubjectBuilder",
262:       "com.google.common.collect.Maps",
263:       "com.google.common.primitives.Ints",
264:       "com.google.common.truth.StringSubject",
265:       "com.google.common.collect.SetMultimap",
266:       "com.google.common.base.CharMatcher$Or",
267:       "com.google.common.base.CaseFormat$StringConverter",
268:       "com.google.common.collect.Maps$EntryTransformer",
269:       "com.google.common.collect.FluentIterable$3$1",
270:       "com.google.common.truth.FailureStrategy",
271:       "com.google.common.base.CharMatcher$Digit",
272:       "com.google.common.collect.Iterators$MergingIterator",
273:       "com.google.common.collect.RegularImmutableSortedSet",
274:       "com.google.common.truth.ActualValueInference$StackEntry"
275:     );
276:   } 
277:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
278:     mock(Class.forName("com.google.common.truth.FailureStrategy", false, ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()));
279:   }
280: 
281:   private static void resetClasses() {
282:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThrowableSubject_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
283: 
284:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
285:       "com.google.common.truth.Subject$1",
286:       "com.google.common.truth.Subject$2",
287:       "com.google.common.truth.Subject",
288:       "com.google.common.truth.ThrowableSubject",
289:       "com.google.common.truth.ThrowableSubject$1",
290:       "com.google.common.truth.FailureMetadata",
291:       "com.google.common.collect.ImmutableCollection",
292:       "com.google.common.collect.UnmodifiableIterator",
293:       "com.google.common.collect.UnmodifiableListIterator",
294:       "com.google.common.collect.AbstractIndexedListIterator",
295:       "com.google.common.collect.ImmutableList$Itr",
296:       "com.google.common.collect.RegularImmutableList",
297:       "com.google.common.base.Java8Usage",
298:       "com.google.common.base.Preconditions",
299:       "com.google.common.collect.ImmutableList",
300:       "com.google.common.truth.FailureMetadata$Step",
301:       "com.google.common.truth.SubjectUtils",
302:       "com.google.common.collect.ImmutableCollection$Builder",
303:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
304:       "com.google.common.collect.ImmutableList$Builder",
305:       "com.google.common.collect.CollectPreconditions",
306:       "com.google.common.truth.LazyMessage",
307:       "com.google.common.truth.Subject$3",
308:       "com.google.common.truth.StandardSubjectBuilder",
309:       "com.google.common.truth.Fact",
310:       "com.google.common.collect.Iterables",
311:       "com.google.common.collect.Collections2",
312:       "com.google.common.collect.ObjectArrays",
313:       "com.google.common.truth.AssertionErrorWithFacts",
314:       "com.google.common.truth.Platform",
315:       "com.google.common.collect.ImmutableSet",
316:       "com.google.common.collect.SingletonImmutableSet",
317:       "com.google.common.collect.Hashing",
318:       "com.google.common.collect.RegularImmutableSet",
319:       "com.google.common.truth.StackTraceCleaner",
320:       "com.google.common.collect.Sets",
321:       "com.google.common.collect.Maps",
322:       "com.google.common.base.MoreObjects",
323:       "com.google.common.truth.StackTraceCleaner$StackTraceElementWrapper",
324:       "com.google.common.truth.StackTraceCleaner$StackFrameType",
325:       "com.google.common.base.Joiner",
326:       "com.google.common.base.Joiner$3",
327:       "com.google.common.truth.ActualValueInference",
328:       "org.objectweb.asm.ClassVisitor",
329:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
330:       "com.google.common.collect.AbstractMultimap",
331:       "com.google.common.collect.BaseImmutableMultimap",
332:       "com.google.common.collect.ImmutableMultimap",
333:       "com.google.common.collect.ImmutableSetMultimap",
334:       "com.google.common.collect.ImmutableMultimap$Builder",
335:       "com.google.common.collect.ImmutableSetMultimap$Builder",
336:       "com.google.common.collect.Platform",
337:       "com.google.common.collect.CompactHashMap",
338:       "com.google.common.primitives.IntsMethodsForWeb",
339:       "com.google.common.primitives.Ints",
340:       "org.objectweb.asm.ClassReader",
341:       "com.google.common.collect.FluentIterable",
342:       "com.google.common.collect.FluentIterable$3",
343:       "com.google.common.base.Optional",
344:       "com.google.common.base.Absent",
345:       "com.google.common.collect.FluentIterable$3$1",
346:       "com.google.common.collect.Iterators",
347:       "com.google.common.collect.Iterators$ConcatenatedIterator",
348:       "com.google.common.collect.Iterators$ArrayItr",
349:       "com.google.common.base.Strings",
350:       "com.google.common.truth.ComparableSubject",
351:       "com.google.common.truth.StringSubject",
352:       "com.google.common.base.Converter",
353:       "com.google.common.base.Converter$IdentityConverter",
354:       "com.google.common.truth.ComparisonFailures",
355:       "com.google.common.base.Splitter",
356:       "com.google.common.base.Platform$JdkPatternCompiler",
357:       "com.google.common.base.Platform",
358:       "com.google.common.base.CommonPattern",
359:       "com.google.common.base.JdkPattern",
360:       "com.google.common.base.CommonMatcher",
361:       "com.google.common.base.JdkPattern$JdkMatcher",
362:       "com.google.common.base.Splitter$3",
363:       "com.google.common.base.CharMatcher",
364:       "com.google.common.base.CharMatcher$FastMatcher",
365:       "com.google.common.base.CharMatcher$NamedFastMatcher",
366:       "com.google.common.base.CharMatcher$None",
367:       "com.google.common.base.Splitter$5",
368:       "com.google.common.base.AbstractIterator",
369:       "com.google.common.base.Splitter$SplittingIterator",
370:       "com.google.common.base.Splitter$3$1",
371:       "com.google.common.base.AbstractIterator$State",
372:       "com.google.common.base.AbstractIterator$1",
373:       "com.google.common.truth.DiffUtils",
374:       "com.google.common.truth.Platform$PlatformComparisonFailure",
375:       "com.google.common.truth.ComparisonFailureWithFacts",
376:       "com.google.common.truth.Subject$EqualityCheck",
377:       "com.google.common.truth.Subject$ComparisonResult",
378:       "com.google.common.base.CharMatcher$Is",
379:       "com.google.common.base.CharMatcher$InRange",
380:       "com.google.common.base.CaseFormat",
381:       "com.google.common.base.Ascii",
382:       "com.google.common.base.Verify",
383:       "com.google.common.collect.Lists",
384:       "com.google.common.collect.Lists$OnePlusArrayList",
385:       "com.google.common.math.IntMath",
386:       "com.google.common.base.Converter$1",
387:       "com.google.common.base.Converter$FunctionBasedConverter",
388:       "com.google.common.base.Converter$ConverterComposition",
389:       "com.google.common.base.Converter$ReverseConverter",
390:       "com.google.common.collect.Iterators$9",
391:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
392:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
393:       "autovalue.shaded.com.google$.common.collect.$Cut",
394:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
395:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
396:       "autovalue.shaded.com.google$.common.base.$Preconditions",
397:       "autovalue.shaded.com.google$.common.collect.$Range",
398:       "autovalue.shaded.com.google$.common.collect.$Range$1",
399:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
400:       "com.google.common.collect.ImmutableList$SubList",
401:       "com.google.common.truth.FailureMetadata$OldAndNewValuesAreSimilar"
402:     );
403:   }
404: }

[MASTER] 16:08:56.093 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FailureStrategy failureStrategy0 = mock(FailureStrategy.class, new ViolatedAssumptionAnswer());
FailureMetadata failureMetadata0 = FailureMetadata.forFailureStrategy(failureStrategy0);
ImmutableList<String> immutableList0 = ImmutableList.of();
Fact fact0 = Fact.simpleFact("");
ImmutableList<Fact> immutableList1 = ImmutableList.of(fact0, fact0, fact0, fact0, fact0);
BatchUpdateException batchUpdateException0 = new BatchUpdateException();
ComparisonFailureWithFacts comparisonFailureWithFacts0 = new ComparisonFailureWithFacts(immutableList0, immutableList1, "", "", batchUpdateException0);
LinkedList<Fact> linkedList0 = new LinkedList<Fact>();
ImmutableList<Fact> immutableList2 = ImmutableList.copyOf((Collection<? extends Fact>) linkedList0);
ComparisonFailureWithFacts comparisonFailureWithFacts1 = new ComparisonFailureWithFacts(immutableList0, immutableList2, "", "", comparisonFailureWithFacts0);
ThrowableSubject throwableSubject0 = new ThrowableSubject(failureMetadata0, comparisonFailureWithFacts1, "");
StringSubject stringSubject0 = throwableSubject0.hasMessageThat();
assertNotNull(stringSubject0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing tests to file
* Writing JUnit test case 'ThrowableSubject_ESTest' to evosuite-tests
* Done!

* Computation finished
