* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.Correspondence
* Starting Client-0
* Connecting to master process on port 8784
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar
  - t/dependency/asm-9.1.jar
  - t/dependency/auto-common-0.11.jar
  - t/dependency/auto-value-1.7.4.jar
  - t/dependency/auto-value-annotations-1.8.1.jar
  - t/dependency/base-1.0.0.jar
  - t/dependency/checker-compat-qual-2.5.5.jar
  - t/dependency/checker-qual-3.13.0.jar
  - t/dependency/compile-testing-0.19.jar
  - t/dependency/elemental2-promise-1.1.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-30.1.1-android.jar
  - t/dependency/guava-gwt-30.1.1-jre.jar
  - t/dependency/guava-testlib-30.1.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/tools-1.8.0_382.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.Correspondence
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 533
* Using seed 1731034449309
* Starting evolution
* Initial Number of Goals in DynaMOSA = 273 / 533
[MASTER] 15:54:12.036 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.truth.Correspondence<A, E> : Type points to itself
[MASTER] 15:54:13.693 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=>                            5%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    42%][Progress:=>                            6%] [Cov:===============>                   43%][Progress:=>                            6%] [Cov:===============>                   43%][Progress:=>                            6%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 50%][Progress:===>                          11%] [Cov:=================>                 49%][MASTER] 15:54:19.283 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 50%][Progress:====>                         15%] [Cov:=================>                 50%][Progress:====>                         15%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 51%][Progress:======>                       20%] [Cov:=================>                 51%][Progress:======>                       20%] [Cov:=================>                 51%][MASTER] 15:54:25.104 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Converter<A, B> : Type points to itself
[Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:=================>                 50%][Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:=================>                 50%][Progress:======>                       21%] [Cov:=================>                 51%][Progress:======>                       23%] [Cov:=================>                 51%][Progress:======>                       23%] [Cov:=================>                 51%][Progress:======>                       23%] [Cov:=================>                 51%][Progress:======>                       23%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:===========>                  38%] [Cov:=================>                 51%][Progress:===========>                  38%] [Cov:=================>                 51%][Progress:===========>                  38%] [Cov:=================>                 51%][Progress:===========>                  38%] [Cov:=================>                 51%][Progress:============>                 40%] [Cov:=================>                 51%][Progress:============>                 40%] [Cov:=================>                 51%][Progress:============>                 40%] [Cov:=================>                 51%][Progress:============>                 40%] [Cov:=================>                 50%][Progress:============>                 40%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:=================>                 51%][Progress:============>                 43%] [Cov:=================>                 51%][Progress:============>                 43%] [Cov:=================>                 51%][Progress:============>                 43%] [Cov:=================>                 51%][Progress:============>                 43%] [Cov:=================>                 51%][Progress:=============>                45%] [Cov:=================>                 51%][Progress:=============>                45%] [Cov:=================>                 51%][Progress:=============>                45%] [Cov:=================>                 51%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 51%][Progress:================>             55%] [Cov:=================>                 51%][Progress:================>             55%] [Cov:=================>                 51%][Progress:================>             56%] [Cov:=================>                 51%][Progress:================>             56%] [Cov:=================>                 51%][Progress:================>             56%] [Cov:=================>                 51%][Progress:================>             56%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:=================>                 51%][Progress:==================>           60%] [Cov:=================>                 51%][Progress:==================>           60%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:=====================>        73%] [Cov:=================>                 50%][Progress:=====================>        73%] [Cov:=================>                 50%][Progress:=====================>        73%] [Cov:=================>                 50%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:======================>       76%] [Cov:=================>                 50%][Progress:======================>       76%] [Cov:=================>                 50%][Progress:======================>       76%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 50%]
* Search finished after 62s and 220 generations, 58683 statements, best individual has fitness: 249.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 121
* Number of covered goals: 79
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 65
* Number of covered goals: 39
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 169
* Number of covered goals: 95
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 37
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 47%
* Total number of goals: 38
* Number of covered goals: 18
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 38
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 65
* Number of covered goals: 39
* Generated 31 tests with total length 109
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 15:55:16.370 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1731034516205/com/google/common/truth/Correspondence_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1731034516205/com/google/common/truth/Correspondence_0_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:16.370 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:16.370 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:16.373 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 25
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 27
[MASTER] 15:55:16.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 27
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 27
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 27
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 27
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 27
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 28
[MASTER] 15:55:16.375 [logback-2] ERROR JUnitAnalyzer - Diagnostic: not a statement: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: not a statement: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 28
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: <identifier> expected: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 29
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 30
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 30
[MASTER] 15:55:16.377 [logback-2] ERROR JUnitAnalyzer - Diagnostic: not a statement: 30
[MASTER] 15:55:16.378 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1731034516205/com/google/common/truth/Correspondence_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:16 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.base.Converter;
12: import com.google.common.base.Function;
13: import com.google.common.truth.Correspondence;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class Correspondence_0_tmp__ESTest extends Correspondence_0_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Correspondence.ExceptionStore correspondence_ExceptionStore0 = Correspondence.ExceptionStore.forIterable();
25:       Function<.BoundType, Integer> function0 = (Function<.BoundType, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
26:       doReturn((Object) null).when(function0).apply(any(autovalue.shaded.com.google$.common.collect.$BoundType.class));
27:       Function<Integer, .BoundType> function1 = (Function<Integer, .BoundType>) mock(Function.class, new ViolatedAssumptionAnswer());
28:       Converter<.BoundType, Integer> converter0 = Converter.from((Function<? super .BoundType, ? extends Integer>) function0, (Function<? super Integer, ? extends .BoundType>) function1);
29:       Correspondence<.BoundType, .BoundType> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter0, (Function<.BoundType, ?>) converter0, (String) null);
30:       .BoundType _BoundType0 = .BoundType.CLOSED;
31:       boolean boolean0 = correspondence0.safeCompare(_BoundType0, _BoundType0, correspondence_ExceptionStore0);
32:       assertFalse(boolean0);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_0_1731034516205/com/google/common/truth/Correspondence_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:16 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Correspondence_0_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.base.Joiner$1",
84:       "com.google.common.base.Converter$ConverterComposition",
85:       "com.google.common.base.Joiner$2",
86:       "com.google.common.base.Java8Usage",
87:       "com.google.common.collect.ImmutableList$Itr",
88:       "com.google.common.collect.ImmutableList$SubList",
89:       "com.google.common.collect.ImmutableCollection",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
92:       "com.google.common.base.Objects",
93:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
94:       "com.google.common.base.Converter",
95:       "com.google.errorprone.annotations.DoNotMock",
96:       "com.google.common.collect.ImmutableCollection$Builder",
97:       "com.google.common.base.Function",
98:       "com.google.common.base.Converter$IdentityConverter",
99:       "com.google.common.collect.AbstractIndexedListIterator",
100:       "com.google.common.truth.Subject",
101:       "org.checkerframework.framework.qual.LiteralKind",
102:       "com.google.common.base.Converter$ReverseConverter",
103:       "com.google.common.base.ExtraObjectsMethodsForWeb",
104:       "com.google.common.base.Joiner",
105:       "com.google.common.collect.ImmutableList$Builder",
106:       "com.google.common.truth.Subject$2",
107:       "com.google.common.truth.Correspondence$BinaryPredicate",
108:       "com.google.common.truth.Subject$1",
109:       "com.google.common.truth.Correspondence$DiffFormatter",
110:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
111:       "org.checkerframework.framework.qual.TypeUseLocation",
112:       "org.checkerframework.framework.qual.QualifierForLiterals",
113:       "com.google.common.base.Strings",
114:       "com.google.common.truth.Correspondence$Transforming",
115:       "com.google.common.collect.ImmutableList",
116:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
117:       "com.google.common.truth.Correspondence$ExceptionStore",
118:       "com.google.common.collect.UnmodifiableListIterator",
119:       "autovalue.shaded.com.google$.common.collect.$BoundType",
120:       "com.google.common.truth.ComparableSubject",
121:       "com.google.common.truth.DoubleSubject$2",
122:       "com.google.common.truth.DoubleSubject$1",
123:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
124:       "com.google.common.base.Functions$IdentityFunction",
125:       "com.google.common.truth.Fact",
126:       "org.checkerframework.checker.nullness.qual.Nullable",
127:       "com.google.common.truth.MathUtil",
128:       "org.checkerframework.framework.qual.DefaultFor",
129:       "com.google.common.base.Functions",
130:       "com.google.common.collect.ObjectArrays",
131:       "com.google.common.truth.Correspondence$Equality",
132:       "com.google.common.truth.Correspondence$FormattingDiffs",
133:       "org.checkerframework.framework.qual.SubtypeOf",
134:       "org.checkerframework.framework.qual.TypeKind",
135:       "com.google.common.base.Converter$FunctionBasedConverter",
136:       "com.google.common.truth.Correspondence",
137:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
138:       "com.google.common.truth.DoubleSubject",
139:       "com.google.common.truth.FailureStrategy",
140:       "com.google.common.base.Preconditions",
141:       "com.google.common.collect.UnmodifiableIterator",
142:       "com.google.common.truth.Correspondence$StoredException"
143:     );
144:   } 
145:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
146:     mock(Class.forName("com.google.common.base.Function", false, Correspondence_0_tmp__ESTest_scaffolding.class.getClassLoader()));
147:   }
148: 
149:   private static void resetClasses() {
150:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
151: 
152:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
153:       "com.google.common.truth.Correspondence",
154:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
155:       "com.google.common.truth.Correspondence$Transforming",
156:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
157:       "com.google.common.truth.Correspondence$Equality",
158:       "com.google.common.truth.Correspondence$FormattingDiffs",
159:       "com.google.common.truth.Correspondence$ExceptionStore",
160:       "com.google.common.base.Joiner",
161:       "com.google.common.base.Java8Usage",
162:       "com.google.common.base.Preconditions",
163:       "com.google.common.base.Joiner$1",
164:       "com.google.common.truth.Correspondence$StoredException",
165:       "com.google.common.base.Functions$IdentityFunction",
166:       "com.google.common.collect.ImmutableCollection",
167:       "com.google.common.collect.UnmodifiableIterator",
168:       "com.google.common.collect.UnmodifiableListIterator",
169:       "com.google.common.collect.AbstractIndexedListIterator",
170:       "com.google.common.collect.ImmutableList$Itr",
171:       "com.google.common.collect.ImmutableList",
172:       "com.google.common.base.Converter",
173:       "com.google.common.base.Converter$IdentityConverter",
174:       "com.google.common.base.Converter$FunctionBasedConverter",
175:       "com.google.common.base.Converter$ConverterComposition",
176:       "com.google.common.base.Converter$ReverseConverter",
177:       "com.google.common.base.Functions",
178:       "com.google.common.truth.Fact",
179:       "org.checkerframework.framework.qual.LiteralKind",
180:       "com.google.common.truth.Subject$1",
181:       "com.google.common.truth.Subject$2",
182:       "com.google.common.truth.Subject",
183:       "com.google.common.truth.ComparableSubject",
184:       "com.google.common.truth.DoubleSubject",
185:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
186:       "autovalue.shaded.com.google$.common.collect.$Cut",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
188:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
189:       "autovalue.shaded.com.google$.common.base.$Preconditions",
190:       "autovalue.shaded.com.google$.common.collect.$Range",
191:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
192:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
193:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
194:       "com.google.common.base.Strings",
195:       "autovalue.shaded.com.google$.common.collect.$Range$1",
196:       "com.google.common.base.Converter$1",
197:       "com.google.common.base.ExtraObjectsMethodsForWeb",
198:       "com.google.common.base.Objects",
199:       "com.google.common.truth.MathUtil",
200:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
201:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
202:       "com.google.common.collect.RegularImmutableList",
203:       "com.google.common.collect.ObjectArrays"
204:     );
205:   }
206: }

[MASTER] 15:55:16.378 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence.ExceptionStore correspondence_ExceptionStore0 = Correspondence.ExceptionStore.forIterable();
Function<.BoundType, Integer> function0 = (Function<.BoundType, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
doReturn((Object) null).when(function0).apply(any(autovalue.shaded.com.google$.common.collect.$BoundType.class));
Function<Integer, .BoundType> function1 = (Function<Integer, .BoundType>) mock(Function.class, new ViolatedAssumptionAnswer());
Converter<.BoundType, Integer> converter0 = Converter.from((Function<? super .BoundType, ? extends Integer>) function0, (Function<? super Integer, ? extends .BoundType>) function1);
Correspondence<.BoundType, .BoundType> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter0, (Function<.BoundType, ?>) converter0, (String) null);
.BoundType _BoundType0 = .BoundType.CLOSED;
boolean boolean0 = correspondence0.safeCompare(_BoundType0, _BoundType0, correspondence_ExceptionStore0);
assertFalse(boolean0);


[MASTER] 15:55:17.373 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1731034516874/com/google/common/truth/Correspondence_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1731034516874/com/google/common/truth/Correspondence_3_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:17.373 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:17.373 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:17.373 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 15:55:17.374 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 15:55:17.374 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1731034516874/com/google/common/truth/Correspondence_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:16 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableList;
11: import com.google.common.truth.Correspondence;
12: import com.google.common.truth.Fact;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class Correspondence_3_tmp__ESTest extends Correspondence_3_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Correspondence<Number, Number> correspondence0 = Correspondence.tolerance(4810.0);
23:       ImmutableList<Fact> immutableList0 = correspondence0.describeForMapValues();
24:       assertEquals(1, immutableList0.size());
25:   }
26: }
RegularFileObject[/tmp/EvoSuite_3_1731034516874/com/google/common/truth/Correspondence_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:16 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Correspondence_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.base.Joiner$1",
82:       "com.google.common.base.Converter$ConverterComposition",
83:       "com.google.common.base.Joiner$2",
84:       "com.google.common.base.Java8Usage",
85:       "com.google.common.collect.ImmutableList$Itr",
86:       "com.google.common.collect.ImmutableList$SubList",
87:       "com.google.common.collect.ImmutableCollection",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
90:       "com.google.common.base.Objects",
91:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
92:       "com.google.common.base.Converter",
93:       "com.google.errorprone.annotations.DoNotMock",
94:       "com.google.common.collect.ImmutableCollection$Builder",
95:       "com.google.common.base.Function",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.AbstractIndexedListIterator",
98:       "com.google.common.truth.Subject",
99:       "org.checkerframework.framework.qual.LiteralKind",
100:       "com.google.common.base.Converter$ReverseConverter",
101:       "com.google.common.base.ExtraObjectsMethodsForWeb",
102:       "com.google.common.base.Joiner",
103:       "com.google.common.collect.ImmutableList$Builder",
104:       "com.google.common.truth.Subject$2",
105:       "com.google.common.truth.Correspondence$BinaryPredicate",
106:       "com.google.common.truth.Subject$1",
107:       "com.google.common.truth.Correspondence$DiffFormatter",
108:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
109:       "org.checkerframework.framework.qual.TypeUseLocation",
110:       "org.checkerframework.framework.qual.QualifierForLiterals",
111:       "com.google.common.base.Strings",
112:       "com.google.common.truth.Correspondence$Transforming",
113:       "com.google.common.collect.ImmutableList",
114:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
115:       "com.google.common.truth.Correspondence$ExceptionStore",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "autovalue.shaded.com.google$.common.collect.$BoundType",
118:       "com.google.common.truth.ComparableSubject",
119:       "com.google.common.truth.DoubleSubject$2",
120:       "com.google.common.truth.DoubleSubject$1",
121:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
122:       "com.google.common.base.Functions$IdentityFunction",
123:       "com.google.common.truth.Fact",
124:       "org.checkerframework.checker.nullness.qual.Nullable",
125:       "com.google.common.truth.MathUtil",
126:       "org.checkerframework.framework.qual.DefaultFor",
127:       "com.google.common.base.Functions",
128:       "com.google.common.collect.ObjectArrays",
129:       "com.google.common.truth.Correspondence$Equality",
130:       "com.google.common.truth.Correspondence$FormattingDiffs",
131:       "org.checkerframework.framework.qual.SubtypeOf",
132:       "org.checkerframework.framework.qual.TypeKind",
133:       "com.google.common.base.Converter$FunctionBasedConverter",
134:       "com.google.common.truth.Correspondence",
135:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
136:       "com.google.common.truth.DoubleSubject",
137:       "com.google.common.truth.FailureStrategy",
138:       "com.google.common.base.Preconditions",
139:       "com.google.common.collect.UnmodifiableIterator",
140:       "com.google.common.truth.Correspondence$StoredException"
141:     );
142:   } 
143: 
144:   private static void resetClasses() {
145:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
146: 
147:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
148:       "com.google.common.truth.Correspondence",
149:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
150:       "com.google.common.truth.Correspondence$Transforming",
151:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
152:       "com.google.common.truth.Correspondence$Equality",
153:       "com.google.common.truth.Correspondence$FormattingDiffs",
154:       "com.google.common.truth.Correspondence$ExceptionStore",
155:       "com.google.common.base.Joiner",
156:       "com.google.common.base.Java8Usage",
157:       "com.google.common.base.Preconditions",
158:       "com.google.common.base.Joiner$1",
159:       "com.google.common.truth.Correspondence$StoredException",
160:       "com.google.common.base.Functions$IdentityFunction",
161:       "com.google.common.collect.ImmutableCollection",
162:       "com.google.common.collect.UnmodifiableIterator",
163:       "com.google.common.collect.UnmodifiableListIterator",
164:       "com.google.common.collect.AbstractIndexedListIterator",
165:       "com.google.common.collect.ImmutableList$Itr",
166:       "com.google.common.collect.ImmutableList",
167:       "com.google.common.base.Converter",
168:       "com.google.common.base.Converter$IdentityConverter",
169:       "com.google.common.base.Converter$FunctionBasedConverter",
170:       "com.google.common.base.Converter$ConverterComposition",
171:       "com.google.common.base.Converter$ReverseConverter",
172:       "com.google.common.base.Functions",
173:       "com.google.common.truth.Fact",
174:       "org.checkerframework.framework.qual.LiteralKind",
175:       "com.google.common.truth.Subject$1",
176:       "com.google.common.truth.Subject$2",
177:       "com.google.common.truth.Subject",
178:       "com.google.common.truth.ComparableSubject",
179:       "com.google.common.truth.DoubleSubject",
180:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
181:       "autovalue.shaded.com.google$.common.collect.$Cut",
182:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
183:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
184:       "autovalue.shaded.com.google$.common.base.$Preconditions",
185:       "autovalue.shaded.com.google$.common.collect.$Range",
186:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
188:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
189:       "com.google.common.base.Strings",
190:       "autovalue.shaded.com.google$.common.collect.$Range$1",
191:       "com.google.common.base.Converter$1",
192:       "com.google.common.base.ExtraObjectsMethodsForWeb",
193:       "com.google.common.base.Objects",
194:       "com.google.common.truth.MathUtil",
195:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
196:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
197:       "com.google.common.collect.RegularImmutableList",
198:       "com.google.common.collect.ObjectArrays"
199:     );
200:   }
201: }

[MASTER] 15:55:17.375 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence<Number, Number> correspondence0 = Correspondence.tolerance(4810.0);
ImmutableList<Fact> immutableList0 = correspondence0.describeForMapValues();
assertEquals(1, immutableList0.size());


[MASTER] 15:55:17.912 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1731034517704/com/google/common/truth/Correspondence_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1731034517704/com/google/common/truth/Correspondence_9_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:17.912 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:17.912 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:17.913 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 15:55:17.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 15:55:17.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_9_1731034517704/com/google/common/truth/Correspondence_9_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 15:55:17.914 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 15:55:17.915 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1731034517704/com/google/common/truth/Correspondence_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:17 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.ImmutableList;
12: import com.google.common.truth.Correspondence;
13: import com.google.common.truth.Fact;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class Correspondence_9_tmp__ESTest extends Correspondence_9_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       Correspondence<Integer, Integer> correspondence0 = Correspondence.equality();
25:       Correspondence.DiffFormatter<Integer, Object> correspondence_DiffFormatter0 = (Correspondence.DiffFormatter<Integer, Object>) mock(Correspondence.DiffFormatter.class, new ViolatedAssumptionAnswer());
26:       Correspondence<Integer, Integer> correspondence1 = correspondence0.formattingDiffsUsing(correspondence_DiffFormatter0);
27:       ImmutableList<Fact> immutableList0 = correspondence1.describeForMapValues();
28:       assertEquals(0, immutableList0.size());
29:   }
30: }
RegularFileObject[/tmp/EvoSuite_9_1731034517704/com/google/common/truth/Correspondence_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:17 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Correspondence_9_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.base.Joiner$1",
84:       "com.google.common.base.Converter$ConverterComposition",
85:       "com.google.common.base.Joiner$2",
86:       "com.google.common.base.Java8Usage",
87:       "com.google.common.collect.ImmutableList$Itr",
88:       "com.google.common.collect.ImmutableList$SubList",
89:       "com.google.common.collect.ImmutableCollection",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
92:       "com.google.common.base.Objects",
93:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
94:       "com.google.common.base.Converter",
95:       "com.google.errorprone.annotations.DoNotMock",
96:       "com.google.common.collect.ImmutableCollection$Builder",
97:       "com.google.common.base.Function",
98:       "com.google.common.base.Converter$IdentityConverter",
99:       "com.google.common.collect.AbstractIndexedListIterator",
100:       "com.google.common.truth.Subject",
101:       "org.checkerframework.framework.qual.LiteralKind",
102:       "com.google.common.base.Converter$ReverseConverter",
103:       "com.google.common.base.ExtraObjectsMethodsForWeb",
104:       "com.google.common.base.Joiner",
105:       "com.google.common.collect.ImmutableList$Builder",
106:       "com.google.common.truth.Subject$2",
107:       "com.google.common.truth.Correspondence$BinaryPredicate",
108:       "com.google.common.truth.Subject$1",
109:       "com.google.common.truth.Correspondence$DiffFormatter",
110:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
111:       "org.checkerframework.framework.qual.TypeUseLocation",
112:       "org.checkerframework.framework.qual.QualifierForLiterals",
113:       "com.google.common.base.Strings",
114:       "com.google.common.truth.Correspondence$Transforming",
115:       "com.google.common.collect.ImmutableList",
116:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
117:       "com.google.common.truth.Correspondence$ExceptionStore",
118:       "com.google.common.collect.UnmodifiableListIterator",
119:       "autovalue.shaded.com.google$.common.collect.$BoundType",
120:       "com.google.common.truth.ComparableSubject",
121:       "com.google.common.truth.DoubleSubject$2",
122:       "com.google.common.truth.DoubleSubject$1",
123:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
124:       "com.google.common.base.Functions$IdentityFunction",
125:       "com.google.common.truth.Fact",
126:       "org.checkerframework.checker.nullness.qual.Nullable",
127:       "com.google.common.truth.MathUtil",
128:       "org.checkerframework.framework.qual.DefaultFor",
129:       "com.google.common.base.Functions",
130:       "com.google.common.collect.ObjectArrays",
131:       "com.google.common.truth.Correspondence$Equality",
132:       "com.google.common.truth.Correspondence$FormattingDiffs",
133:       "org.checkerframework.framework.qual.SubtypeOf",
134:       "org.checkerframework.framework.qual.TypeKind",
135:       "com.google.common.base.Converter$FunctionBasedConverter",
136:       "com.google.common.truth.Correspondence",
137:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
138:       "com.google.common.truth.DoubleSubject",
139:       "com.google.common.truth.FailureStrategy",
140:       "com.google.common.base.Preconditions",
141:       "com.google.common.collect.UnmodifiableIterator",
142:       "com.google.common.truth.Correspondence$StoredException"
143:     );
144:   } 
145:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
146:     mock(Class.forName("com.google.common.truth.Correspondence$DiffFormatter", false, Correspondence_9_tmp__ESTest_scaffolding.class.getClassLoader()));
147:   }
148: 
149:   private static void resetClasses() {
150:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
151: 
152:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
153:       "com.google.common.truth.Correspondence",
154:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
155:       "com.google.common.truth.Correspondence$Transforming",
156:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
157:       "com.google.common.truth.Correspondence$Equality",
158:       "com.google.common.truth.Correspondence$FormattingDiffs",
159:       "com.google.common.truth.Correspondence$ExceptionStore",
160:       "com.google.common.base.Joiner",
161:       "com.google.common.base.Java8Usage",
162:       "com.google.common.base.Preconditions",
163:       "com.google.common.base.Joiner$1",
164:       "com.google.common.truth.Correspondence$StoredException",
165:       "com.google.common.base.Functions$IdentityFunction",
166:       "com.google.common.collect.ImmutableCollection",
167:       "com.google.common.collect.UnmodifiableIterator",
168:       "com.google.common.collect.UnmodifiableListIterator",
169:       "com.google.common.collect.AbstractIndexedListIterator",
170:       "com.google.common.collect.ImmutableList$Itr",
171:       "com.google.common.collect.ImmutableList",
172:       "com.google.common.base.Converter",
173:       "com.google.common.base.Converter$IdentityConverter",
174:       "com.google.common.base.Converter$FunctionBasedConverter",
175:       "com.google.common.base.Converter$ConverterComposition",
176:       "com.google.common.base.Converter$ReverseConverter",
177:       "com.google.common.base.Functions",
178:       "com.google.common.truth.Fact",
179:       "org.checkerframework.framework.qual.LiteralKind",
180:       "com.google.common.truth.Subject$1",
181:       "com.google.common.truth.Subject$2",
182:       "com.google.common.truth.Subject",
183:       "com.google.common.truth.ComparableSubject",
184:       "com.google.common.truth.DoubleSubject",
185:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
186:       "autovalue.shaded.com.google$.common.collect.$Cut",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
188:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
189:       "autovalue.shaded.com.google$.common.base.$Preconditions",
190:       "autovalue.shaded.com.google$.common.collect.$Range",
191:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
192:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
193:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
194:       "com.google.common.base.Strings",
195:       "autovalue.shaded.com.google$.common.collect.$Range$1",
196:       "com.google.common.base.Converter$1",
197:       "com.google.common.base.ExtraObjectsMethodsForWeb",
198:       "com.google.common.base.Objects",
199:       "com.google.common.truth.MathUtil",
200:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
201:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
202:       "com.google.common.collect.RegularImmutableList",
203:       "com.google.common.collect.ObjectArrays"
204:     );
205:   }
206: }

[MASTER] 15:55:17.916 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence<Integer, Integer> correspondence0 = Correspondence.equality();
Correspondence.DiffFormatter<Integer, Object> correspondence_DiffFormatter0 = (Correspondence.DiffFormatter<Integer, Object>) mock(Correspondence.DiffFormatter.class, new ViolatedAssumptionAnswer());
Correspondence<Integer, Integer> correspondence1 = correspondence0.formattingDiffsUsing(correspondence_DiffFormatter0);
ImmutableList<Fact> immutableList0 = correspondence1.describeForMapValues();
assertEquals(0, immutableList0.size());


[MASTER] 15:55:18.275 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_13_1731034518090/com/google/common/truth/Correspondence_13_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_13_1731034518090/com/google/common/truth/Correspondence_13_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:18.275 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:18.275 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:18.275 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 15:55:18.276 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 15:55:18.276 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_13_1731034518090/com/google/common/truth/Correspondence_13_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:18 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableList;
11: import com.google.common.truth.Correspondence;
12: import com.google.common.truth.Fact;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class Correspondence_13_tmp__ESTest extends Correspondence_13_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Correspondence<Object, Object> correspondence0 = Correspondence.equality();
23:       ImmutableList<Fact> immutableList0 = correspondence0.describeForIterable();
24:       assertEquals(0, immutableList0.size());
25:   }
26: }
RegularFileObject[/tmp/EvoSuite_13_1731034518090/com/google/common/truth/Correspondence_13_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:18 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Correspondence_13_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_13_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.base.Joiner$1",
82:       "com.google.common.base.Converter$ConverterComposition",
83:       "com.google.common.base.Joiner$2",
84:       "com.google.common.base.Java8Usage",
85:       "com.google.common.collect.ImmutableList$Itr",
86:       "com.google.common.collect.ImmutableList$SubList",
87:       "com.google.common.collect.ImmutableCollection",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
90:       "com.google.common.base.Objects",
91:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
92:       "com.google.common.base.Converter",
93:       "com.google.errorprone.annotations.DoNotMock",
94:       "com.google.common.collect.ImmutableCollection$Builder",
95:       "com.google.common.base.Function",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.AbstractIndexedListIterator",
98:       "com.google.common.truth.Subject",
99:       "org.checkerframework.framework.qual.LiteralKind",
100:       "com.google.common.base.Converter$ReverseConverter",
101:       "com.google.common.base.ExtraObjectsMethodsForWeb",
102:       "com.google.common.base.Joiner",
103:       "com.google.common.collect.ImmutableList$Builder",
104:       "com.google.common.truth.Subject$2",
105:       "com.google.common.truth.Correspondence$BinaryPredicate",
106:       "com.google.common.truth.Subject$1",
107:       "com.google.common.truth.Correspondence$DiffFormatter",
108:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
109:       "org.checkerframework.framework.qual.TypeUseLocation",
110:       "org.checkerframework.framework.qual.QualifierForLiterals",
111:       "com.google.common.base.Strings",
112:       "com.google.common.truth.Correspondence$Transforming",
113:       "com.google.common.collect.ImmutableList",
114:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
115:       "com.google.common.truth.Correspondence$ExceptionStore",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "autovalue.shaded.com.google$.common.collect.$BoundType",
118:       "com.google.common.truth.ComparableSubject",
119:       "com.google.common.truth.DoubleSubject$2",
120:       "com.google.common.truth.DoubleSubject$1",
121:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
122:       "com.google.common.base.Functions$IdentityFunction",
123:       "com.google.common.truth.Fact",
124:       "org.checkerframework.checker.nullness.qual.Nullable",
125:       "com.google.common.truth.MathUtil",
126:       "org.checkerframework.framework.qual.DefaultFor",
127:       "com.google.common.base.Functions",
128:       "com.google.common.collect.ObjectArrays",
129:       "com.google.common.truth.Correspondence$Equality",
130:       "com.google.common.truth.Correspondence$FormattingDiffs",
131:       "org.checkerframework.framework.qual.SubtypeOf",
132:       "org.checkerframework.framework.qual.TypeKind",
133:       "com.google.common.base.Converter$FunctionBasedConverter",
134:       "com.google.common.truth.Correspondence",
135:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
136:       "com.google.common.truth.DoubleSubject",
137:       "com.google.common.truth.FailureStrategy",
138:       "com.google.common.base.Preconditions",
139:       "com.google.common.collect.UnmodifiableIterator",
140:       "com.google.common.truth.Correspondence$StoredException"
141:     );
142:   } 
143: 
144:   private static void resetClasses() {
145:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_13_tmp__ESTest_scaffolding.class.getClassLoader()); 
146: 
147:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
148:       "com.google.common.truth.Correspondence",
149:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
150:       "com.google.common.truth.Correspondence$Transforming",
151:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
152:       "com.google.common.truth.Correspondence$Equality",
153:       "com.google.common.truth.Correspondence$FormattingDiffs",
154:       "com.google.common.truth.Correspondence$ExceptionStore",
155:       "com.google.common.base.Joiner",
156:       "com.google.common.base.Java8Usage",
157:       "com.google.common.base.Preconditions",
158:       "com.google.common.base.Joiner$1",
159:       "com.google.common.truth.Correspondence$StoredException",
160:       "com.google.common.base.Functions$IdentityFunction",
161:       "com.google.common.collect.ImmutableCollection",
162:       "com.google.common.collect.UnmodifiableIterator",
163:       "com.google.common.collect.UnmodifiableListIterator",
164:       "com.google.common.collect.AbstractIndexedListIterator",
165:       "com.google.common.collect.ImmutableList$Itr",
166:       "com.google.common.collect.ImmutableList",
167:       "com.google.common.base.Converter",
168:       "com.google.common.base.Converter$IdentityConverter",
169:       "com.google.common.base.Converter$FunctionBasedConverter",
170:       "com.google.common.base.Converter$ConverterComposition",
171:       "com.google.common.base.Converter$ReverseConverter",
172:       "com.google.common.base.Functions",
173:       "com.google.common.truth.Fact",
174:       "org.checkerframework.framework.qual.LiteralKind",
175:       "com.google.common.truth.Subject$1",
176:       "com.google.common.truth.Subject$2",
177:       "com.google.common.truth.Subject",
178:       "com.google.common.truth.ComparableSubject",
179:       "com.google.common.truth.DoubleSubject",
180:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
181:       "autovalue.shaded.com.google$.common.collect.$Cut",
182:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
183:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
184:       "autovalue.shaded.com.google$.common.base.$Preconditions",
185:       "autovalue.shaded.com.google$.common.collect.$Range",
186:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
188:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
189:       "com.google.common.base.Strings",
190:       "autovalue.shaded.com.google$.common.collect.$Range$1",
191:       "com.google.common.base.Converter$1",
192:       "com.google.common.base.ExtraObjectsMethodsForWeb",
193:       "com.google.common.base.Objects",
194:       "com.google.common.truth.MathUtil",
195:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
196:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
197:       "com.google.common.collect.RegularImmutableList",
198:       "com.google.common.collect.ObjectArrays"
199:     );
200:   }
201: }

[MASTER] 15:55:18.276 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence<Object, Object> correspondence0 = Correspondence.equality();
ImmutableList<Fact> immutableList0 = correspondence0.describeForIterable();
assertEquals(0, immutableList0.size());


[MASTER] 15:55:18.456 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1731034518277/com/google/common/truth/Correspondence_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1731034518277/com/google/common/truth/Correspondence_14_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:18.456 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:18.456 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:18.456 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 15:55:18.457 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 15:55:18.457 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1731034518277/com/google/common/truth/Correspondence_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:18 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableList;
11: import com.google.common.truth.Correspondence;
12: import com.google.common.truth.Fact;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class Correspondence_14_tmp__ESTest extends Correspondence_14_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Correspondence<Number, Number> correspondence0 = Correspondence.tolerance(4810.0);
23:       ImmutableList<Fact> immutableList0 = correspondence0.describeForIterable();
24:       assertEquals(1, immutableList0.size());
25:   }
26: }
RegularFileObject[/tmp/EvoSuite_14_1731034518277/com/google/common/truth/Correspondence_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:18 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Correspondence_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.base.Joiner$1",
82:       "com.google.common.base.Converter$ConverterComposition",
83:       "com.google.common.base.Joiner$2",
84:       "com.google.common.base.Java8Usage",
85:       "com.google.common.collect.ImmutableList$Itr",
86:       "com.google.common.collect.ImmutableList$SubList",
87:       "com.google.common.collect.ImmutableCollection",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
90:       "com.google.common.base.Objects",
91:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
92:       "com.google.common.base.Converter",
93:       "com.google.errorprone.annotations.DoNotMock",
94:       "com.google.common.collect.ImmutableCollection$Builder",
95:       "com.google.common.base.Function",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.AbstractIndexedListIterator",
98:       "com.google.common.truth.Subject",
99:       "org.checkerframework.framework.qual.LiteralKind",
100:       "com.google.common.base.Converter$ReverseConverter",
101:       "com.google.common.base.ExtraObjectsMethodsForWeb",
102:       "com.google.common.base.Joiner",
103:       "com.google.common.collect.ImmutableList$Builder",
104:       "com.google.common.truth.Subject$2",
105:       "com.google.common.truth.Correspondence$BinaryPredicate",
106:       "com.google.common.truth.Subject$1",
107:       "com.google.common.truth.Correspondence$DiffFormatter",
108:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
109:       "org.checkerframework.framework.qual.TypeUseLocation",
110:       "org.checkerframework.framework.qual.QualifierForLiterals",
111:       "com.google.common.base.Strings",
112:       "com.google.common.truth.Correspondence$Transforming",
113:       "com.google.common.collect.ImmutableList",
114:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
115:       "com.google.common.truth.Correspondence$ExceptionStore",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "autovalue.shaded.com.google$.common.collect.$BoundType",
118:       "com.google.common.truth.ComparableSubject",
119:       "com.google.common.truth.DoubleSubject$2",
120:       "com.google.common.truth.DoubleSubject$1",
121:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
122:       "com.google.common.base.Functions$IdentityFunction",
123:       "com.google.common.truth.Fact",
124:       "org.checkerframework.checker.nullness.qual.Nullable",
125:       "com.google.common.truth.MathUtil",
126:       "org.checkerframework.framework.qual.DefaultFor",
127:       "com.google.common.base.Functions",
128:       "com.google.common.collect.ObjectArrays",
129:       "com.google.common.truth.Correspondence$Equality",
130:       "com.google.common.truth.Correspondence$FormattingDiffs",
131:       "org.checkerframework.framework.qual.SubtypeOf",
132:       "org.checkerframework.framework.qual.TypeKind",
133:       "com.google.common.base.Converter$FunctionBasedConverter",
134:       "com.google.common.truth.Correspondence",
135:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
136:       "com.google.common.truth.DoubleSubject",
137:       "com.google.common.truth.FailureStrategy",
138:       "com.google.common.base.Preconditions",
139:       "com.google.common.collect.UnmodifiableIterator",
140:       "com.google.common.truth.Correspondence$StoredException"
141:     );
142:   } 
143: 
144:   private static void resetClasses() {
145:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
146: 
147:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
148:       "com.google.common.truth.Correspondence",
149:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
150:       "com.google.common.truth.Correspondence$Transforming",
151:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
152:       "com.google.common.truth.Correspondence$Equality",
153:       "com.google.common.truth.Correspondence$FormattingDiffs",
154:       "com.google.common.truth.Correspondence$ExceptionStore",
155:       "com.google.common.base.Joiner",
156:       "com.google.common.base.Java8Usage",
157:       "com.google.common.base.Preconditions",
158:       "com.google.common.base.Joiner$1",
159:       "com.google.common.truth.Correspondence$StoredException",
160:       "com.google.common.base.Functions$IdentityFunction",
161:       "com.google.common.collect.ImmutableCollection",
162:       "com.google.common.collect.UnmodifiableIterator",
163:       "com.google.common.collect.UnmodifiableListIterator",
164:       "com.google.common.collect.AbstractIndexedListIterator",
165:       "com.google.common.collect.ImmutableList$Itr",
166:       "com.google.common.collect.ImmutableList",
167:       "com.google.common.base.Converter",
168:       "com.google.common.base.Converter$IdentityConverter",
169:       "com.google.common.base.Converter$FunctionBasedConverter",
170:       "com.google.common.base.Converter$ConverterComposition",
171:       "com.google.common.base.Converter$ReverseConverter",
172:       "com.google.common.base.Functions",
173:       "com.google.common.truth.Fact",
174:       "org.checkerframework.framework.qual.LiteralKind",
175:       "com.google.common.truth.Subject$1",
176:       "com.google.common.truth.Subject$2",
177:       "com.google.common.truth.Subject",
178:       "com.google.common.truth.ComparableSubject",
179:       "com.google.common.truth.DoubleSubject",
180:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
181:       "autovalue.shaded.com.google$.common.collect.$Cut",
182:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
183:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
184:       "autovalue.shaded.com.google$.common.base.$Preconditions",
185:       "autovalue.shaded.com.google$.common.collect.$Range",
186:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
188:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
189:       "com.google.common.base.Strings",
190:       "autovalue.shaded.com.google$.common.collect.$Range$1",
191:       "com.google.common.base.Converter$1",
192:       "com.google.common.base.ExtraObjectsMethodsForWeb",
193:       "com.google.common.base.Objects",
194:       "com.google.common.truth.MathUtil",
195:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
196:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
197:       "com.google.common.collect.RegularImmutableList",
198:       "com.google.common.collect.ObjectArrays"
199:     );
200:   }
201: }

[MASTER] 15:55:18.457 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Correspondence<Number, Number> correspondence0 = Correspondence.tolerance(4810.0);
ImmutableList<Fact> immutableList0 = correspondence0.describeForIterable();
assertEquals(1, immutableList0.size());


[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1731034519607/com/google/common/truth/Correspondence_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1731034519607/com/google/common/truth/Correspondence_28_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 24
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: <identifier> expected: 24
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:19.623 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1731034519607/com/google/common/truth/Correspondence_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:19 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.base.Converter;
11: import com.google.common.base.Function;
12: import com.google.common.truth.Correspondence;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class Correspondence_28_tmp__ESTest extends Correspondence_28_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Converter<Integer, Integer> converter0 = Converter.identity();
23:       Converter<Integer, Integer> converter1 = Converter.from((Function<? super Integer, ? extends Integer>) converter0, (Function<? super Integer, ? extends Integer>) converter0);
24:       Converter<.BoundType, .BoundType> converter2 = Converter.identity();
25:       Correspondence<.BoundType, Integer> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter2, (Function<Integer, ?>) converter1, "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList");
26:       assertNotNull(correspondence0);
27:   }
28: }
RegularFileObject[/tmp/EvoSuite_28_1731034519607/com/google/common/truth/Correspondence_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:19 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Correspondence_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.base.Joiner$1",
82:       "com.google.common.base.Converter$ConverterComposition",
83:       "com.google.common.base.Joiner$2",
84:       "com.google.common.base.Java8Usage",
85:       "com.google.common.collect.ImmutableList$Itr",
86:       "com.google.common.collect.ImmutableList$SubList",
87:       "com.google.common.collect.ImmutableCollection",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
90:       "com.google.common.base.Objects",
91:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
92:       "com.google.common.base.Converter",
93:       "com.google.errorprone.annotations.DoNotMock",
94:       "com.google.common.collect.ImmutableCollection$Builder",
95:       "com.google.common.base.Function",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.AbstractIndexedListIterator",
98:       "com.google.common.truth.Subject",
99:       "org.checkerframework.framework.qual.LiteralKind",
100:       "com.google.common.base.Converter$ReverseConverter",
101:       "com.google.common.base.ExtraObjectsMethodsForWeb",
102:       "com.google.common.base.Joiner",
103:       "com.google.common.collect.ImmutableList$Builder",
104:       "com.google.common.truth.Subject$2",
105:       "com.google.common.truth.Correspondence$BinaryPredicate",
106:       "com.google.common.truth.Subject$1",
107:       "com.google.common.truth.Correspondence$DiffFormatter",
108:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
109:       "org.checkerframework.framework.qual.TypeUseLocation",
110:       "org.checkerframework.framework.qual.QualifierForLiterals",
111:       "com.google.common.base.Strings",
112:       "com.google.common.truth.Correspondence$Transforming",
113:       "com.google.common.collect.ImmutableList",
114:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
115:       "com.google.common.truth.Correspondence$ExceptionStore",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "autovalue.shaded.com.google$.common.collect.$BoundType",
118:       "com.google.common.truth.ComparableSubject",
119:       "com.google.common.truth.DoubleSubject$2",
120:       "com.google.common.truth.DoubleSubject$1",
121:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
122:       "com.google.common.base.Functions$IdentityFunction",
123:       "com.google.common.truth.Fact",
124:       "org.checkerframework.checker.nullness.qual.Nullable",
125:       "com.google.common.truth.MathUtil",
126:       "org.checkerframework.framework.qual.DefaultFor",
127:       "com.google.common.base.Functions",
128:       "com.google.common.collect.ObjectArrays",
129:       "com.google.common.truth.Correspondence$Equality",
130:       "com.google.common.truth.Correspondence$FormattingDiffs",
131:       "org.checkerframework.framework.qual.SubtypeOf",
132:       "org.checkerframework.framework.qual.TypeKind",
133:       "com.google.common.base.Converter$FunctionBasedConverter",
134:       "com.google.common.truth.Correspondence",
135:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
136:       "com.google.common.truth.DoubleSubject",
137:       "com.google.common.truth.FailureStrategy",
138:       "com.google.common.base.Preconditions",
139:       "com.google.common.collect.UnmodifiableIterator",
140:       "com.google.common.truth.Correspondence$StoredException"
141:     );
142:   } 
143: 
144:   private static void resetClasses() {
145:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
146: 
147:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
148:       "com.google.common.truth.Correspondence",
149:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
150:       "com.google.common.truth.Correspondence$Transforming",
151:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
152:       "com.google.common.truth.Correspondence$Equality",
153:       "com.google.common.truth.Correspondence$FormattingDiffs",
154:       "com.google.common.truth.Correspondence$ExceptionStore",
155:       "com.google.common.base.Joiner",
156:       "com.google.common.base.Java8Usage",
157:       "com.google.common.base.Preconditions",
158:       "com.google.common.base.Joiner$1",
159:       "com.google.common.truth.Correspondence$StoredException",
160:       "com.google.common.base.Functions$IdentityFunction",
161:       "com.google.common.collect.ImmutableCollection",
162:       "com.google.common.collect.UnmodifiableIterator",
163:       "com.google.common.collect.UnmodifiableListIterator",
164:       "com.google.common.collect.AbstractIndexedListIterator",
165:       "com.google.common.collect.ImmutableList$Itr",
166:       "com.google.common.collect.ImmutableList",
167:       "com.google.common.base.Converter",
168:       "com.google.common.base.Converter$IdentityConverter",
169:       "com.google.common.base.Converter$FunctionBasedConverter",
170:       "com.google.common.base.Converter$ConverterComposition",
171:       "com.google.common.base.Converter$ReverseConverter",
172:       "com.google.common.base.Functions",
173:       "com.google.common.truth.Fact",
174:       "org.checkerframework.framework.qual.LiteralKind",
175:       "com.google.common.truth.Subject$1",
176:       "com.google.common.truth.Subject$2",
177:       "com.google.common.truth.Subject",
178:       "com.google.common.truth.ComparableSubject",
179:       "com.google.common.truth.DoubleSubject",
180:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
181:       "autovalue.shaded.com.google$.common.collect.$Cut",
182:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
183:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
184:       "autovalue.shaded.com.google$.common.base.$Preconditions",
185:       "autovalue.shaded.com.google$.common.collect.$Range",
186:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
188:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
189:       "com.google.common.base.Strings",
190:       "autovalue.shaded.com.google$.common.collect.$Range$1",
191:       "com.google.common.base.Converter$1",
192:       "com.google.common.base.ExtraObjectsMethodsForWeb",
193:       "com.google.common.base.Objects",
194:       "com.google.common.truth.MathUtil",
195:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
196:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
197:       "com.google.common.collect.RegularImmutableList",
198:       "com.google.common.collect.ObjectArrays"
199:     );
200:   }
201: }

[MASTER] 15:55:19.624 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Converter<Integer, Integer> converter0 = Converter.identity();
Converter<Integer, Integer> converter1 = Converter.from((Function<? super Integer, ? extends Integer>) converter0, (Function<? super Integer, ? extends Integer>) converter0);
Converter<.BoundType, .BoundType> converter2 = Converter.identity();
Correspondence<.BoundType, Integer> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter2, (Function<Integer, ?>) converter1, "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList");
assertNotNull(correspondence0);


[MASTER] 15:55:19.641 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1731034519624/com/google/common/truth/Correspondence_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1731034519624/com/google/common/truth/Correspondence_29_tmp__ESTest_scaffolding.java]]
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 23
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: <identifier> expected: 23
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ';' expected: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of type: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: ')' expected: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 24
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: illegal start of expression: 25
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: not a statement: 25
[MASTER] 15:55:19.642 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1731034519624/com/google/common/truth/Correspondence_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:55:19 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.base.Converter;
11: import com.google.common.base.Function;
12: import com.google.common.truth.Correspondence;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class Correspondence_29_tmp__ESTest extends Correspondence_29_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Converter<Integer, Integer> converter0 = Converter.identity();
23:       Converter<.BoundType, .BoundType> converter1 = Converter.identity();
24:       Correspondence<.BoundType, Integer> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter1, (Function<Integer, ?>) converter0, "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList");
25:       .BoundType _BoundType0 = .BoundType.CLOSED;
26:       Integer integer0 = new Integer(0);
27:       boolean boolean0 = correspondence0.safeCompare(_BoundType0, integer0, (Correspondence.ExceptionStore) null);
28:       assertFalse(boolean0);
29:   }
30: }
RegularFileObject[/tmp/EvoSuite_29_1731034519624/com/google/common/truth/Correspondence_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:55:19 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Correspondence_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.Correspondence"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Correspondence_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.base.Joiner$1",
82:       "com.google.common.base.Converter$ConverterComposition",
83:       "com.google.common.base.Joiner$2",
84:       "com.google.common.base.Java8Usage",
85:       "com.google.common.collect.ImmutableList$Itr",
86:       "com.google.common.collect.ImmutableList$SubList",
87:       "com.google.common.collect.ImmutableCollection",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
90:       "com.google.common.base.Objects",
91:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
92:       "com.google.common.base.Converter",
93:       "com.google.errorprone.annotations.DoNotMock",
94:       "com.google.common.collect.ImmutableCollection$Builder",
95:       "com.google.common.base.Function",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.AbstractIndexedListIterator",
98:       "com.google.common.truth.Subject",
99:       "org.checkerframework.framework.qual.LiteralKind",
100:       "com.google.common.base.Converter$ReverseConverter",
101:       "com.google.common.base.ExtraObjectsMethodsForWeb",
102:       "com.google.common.base.Joiner",
103:       "com.google.common.collect.ImmutableList$Builder",
104:       "com.google.common.truth.Subject$2",
105:       "com.google.common.truth.Correspondence$BinaryPredicate",
106:       "com.google.common.truth.Subject$1",
107:       "com.google.common.truth.Correspondence$DiffFormatter",
108:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
109:       "org.checkerframework.framework.qual.TypeUseLocation",
110:       "org.checkerframework.framework.qual.QualifierForLiterals",
111:       "com.google.common.base.Strings",
112:       "com.google.common.truth.Correspondence$Transforming",
113:       "com.google.common.collect.ImmutableList",
114:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
115:       "com.google.common.truth.Correspondence$ExceptionStore",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "autovalue.shaded.com.google$.common.collect.$BoundType",
118:       "com.google.common.truth.ComparableSubject",
119:       "com.google.common.truth.DoubleSubject$2",
120:       "com.google.common.truth.DoubleSubject$1",
121:       "com.google.common.truth.DoubleSubject$TolerantDoubleComparison",
122:       "com.google.common.base.Functions$IdentityFunction",
123:       "com.google.common.truth.Fact",
124:       "org.checkerframework.checker.nullness.qual.Nullable",
125:       "com.google.common.truth.MathUtil",
126:       "org.checkerframework.framework.qual.DefaultFor",
127:       "com.google.common.base.Functions",
128:       "com.google.common.collect.ObjectArrays",
129:       "com.google.common.truth.Correspondence$Equality",
130:       "com.google.common.truth.Correspondence$FormattingDiffs",
131:       "org.checkerframework.framework.qual.SubtypeOf",
132:       "org.checkerframework.framework.qual.TypeKind",
133:       "com.google.common.base.Converter$FunctionBasedConverter",
134:       "com.google.common.truth.Correspondence",
135:       "org.checkerframework.checker.nullness.compatqual.NullableDecl",
136:       "com.google.common.truth.DoubleSubject",
137:       "com.google.common.truth.FailureStrategy",
138:       "com.google.common.base.Preconditions",
139:       "com.google.common.collect.UnmodifiableIterator",
140:       "com.google.common.truth.Correspondence$StoredException"
141:     );
142:   } 
143: 
144:   private static void resetClasses() {
145:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Correspondence_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
146: 
147:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
148:       "com.google.common.truth.Correspondence",
149:       "com.google.common.truth.Correspondence$FromBinaryPredicate",
150:       "com.google.common.truth.Correspondence$Transforming",
151:       "com.google.common.truth.Correspondence$TolerantNumericEquality",
152:       "com.google.common.truth.Correspondence$Equality",
153:       "com.google.common.truth.Correspondence$FormattingDiffs",
154:       "com.google.common.truth.Correspondence$ExceptionStore",
155:       "com.google.common.base.Joiner",
156:       "com.google.common.base.Java8Usage",
157:       "com.google.common.base.Preconditions",
158:       "com.google.common.base.Joiner$1",
159:       "com.google.common.truth.Correspondence$StoredException",
160:       "com.google.common.base.Functions$IdentityFunction",
161:       "com.google.common.collect.ImmutableCollection",
162:       "com.google.common.collect.UnmodifiableIterator",
163:       "com.google.common.collect.UnmodifiableListIterator",
164:       "com.google.common.collect.AbstractIndexedListIterator",
165:       "com.google.common.collect.ImmutableList$Itr",
166:       "com.google.common.collect.ImmutableList",
167:       "com.google.common.base.Converter",
168:       "com.google.common.base.Converter$IdentityConverter",
169:       "com.google.common.base.Converter$FunctionBasedConverter",
170:       "com.google.common.base.Converter$ConverterComposition",
171:       "com.google.common.base.Converter$ReverseConverter",
172:       "com.google.common.base.Functions",
173:       "com.google.common.truth.Fact",
174:       "org.checkerframework.framework.qual.LiteralKind",
175:       "com.google.common.truth.Subject$1",
176:       "com.google.common.truth.Subject$2",
177:       "com.google.common.truth.Subject",
178:       "com.google.common.truth.ComparableSubject",
179:       "com.google.common.truth.DoubleSubject",
180:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
181:       "autovalue.shaded.com.google$.common.collect.$Cut",
182:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
183:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
184:       "autovalue.shaded.com.google$.common.base.$Preconditions",
185:       "autovalue.shaded.com.google$.common.collect.$Range",
186:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
187:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
188:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
189:       "com.google.common.base.Strings",
190:       "autovalue.shaded.com.google$.common.collect.$Range$1",
191:       "com.google.common.base.Converter$1",
192:       "com.google.common.base.ExtraObjectsMethodsForWeb",
193:       "com.google.common.base.Objects",
194:       "com.google.common.truth.MathUtil",
195:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain",
196:       "autovalue.shaded.com.google$.common.collect.$DiscreteDomain$IntegerDomain",
197:       "com.google.common.collect.RegularImmutableList",
198:       "com.google.common.collect.ObjectArrays"
199:     );
200:   }
201: }

[MASTER] 15:55:19.643 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Converter<Integer, Integer> converter0 = Converter.identity();
Converter<.BoundType, .BoundType> converter1 = Converter.identity();
Correspondence<.BoundType, Integer> correspondence0 = Correspondence.transforming((Function<.BoundType, ?>) converter1, (Function<Integer, ?>) converter0, "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList");
.BoundType _BoundType0 = .BoundType.CLOSED;
Integer integer0 = new Integer(0);
boolean boolean0 = correspondence0.safeCompare(_BoundType0, integer0, (Correspondence.ExceptionStore) null);
assertFalse(boolean0);


* Writing tests to file
* Writing JUnit test case 'Correspondence_ESTest' to evosuite-tests
* Done!

* Computation finished
