* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.truth.ActualValueInference
* Starting Client-0
* Connecting to master process on port 5433
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar
  - t/dependency/asm-9.1.jar
  - t/dependency/auto-common-0.11.jar
  - t/dependency/auto-value-1.7.4.jar
  - t/dependency/auto-value-annotations-1.8.1.jar
  - t/dependency/base-1.0.0.jar
  - t/dependency/checker-compat-qual-2.5.5.jar
  - t/dependency/checker-qual-3.13.0.jar
  - t/dependency/compile-testing-0.19.jar
  - t/dependency/elemental2-promise-1.1.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-30.1.1-android.jar
  - t/dependency/guava-gwt-30.1.1-jre.jar
  - t/dependency/guava-testlib-30.1.1-android.jar
  - t/dependency/gwt-user-2.9.0.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/javax.servlet-api-3.1.0.jar
  - t/dependency/jsinterop-annotations-2.0.0.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/sac-1.3.jar
  - t/dependency/tools-1.8.0_382.jar
  - t/dependency/validation-api-1.0.0.GA.jar
  - t/dependency/validation-api-1.0.0.GA-sources.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.truth.ActualValueInference
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 3491
* Using seed 1731034161730
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1254 / 3491
[MASTER] 15:49:25.071 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 15:49:26.443 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             1%] [Cov:======>                            19%][Progress:=>                            5%] [Cov:======>                            19%][Progress:=>                            5%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:============================> 96%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       33%]
* Search finished after 62s and 462 generations, 95642 statements, best individual has fitness: 2043.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 588
* Number of covered goals: 195
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 949
* Number of covered goals: 417
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 926
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 38
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 34%
* Total number of goals: 38
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 949
* Number of covered goals: 414
* Generated 31 tests with total length 58
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 15:50:32.983 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1731034232625/com/google/common/truth/ActualValueInference_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1731034232625/com/google/common/truth/ActualValueInference_26_tmp__ESTest_scaffolding.java]]
[MASTER] 15:50:32.983 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:t/dependency/asm-9.1.jar:t/dependency/auto-common-0.11.jar:t/dependency/auto-value-1.7.4.jar:t/dependency/auto-value-annotations-1.8.1.jar:t/dependency/base-1.0.0.jar:t/dependency/checker-compat-qual-2.5.5.jar:t/dependency/checker-qual-3.13.0.jar:t/dependency/compile-testing-0.19.jar:t/dependency/elemental2-promise-1.1.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/guava-30.1.1-android.jar:t/dependency/guava-gwt-30.1.1-jre.jar:t/dependency/guava-testlib-30.1.1-android.jar:t/dependency/gwt-user-2.9.0.jar:t/dependency/hamcrest-core-1.3.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/javax.servlet-api-3.1.0.jar:t/dependency/jsinterop-annotations-2.0.0.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/junit-4.13.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:t/dependency/sac-1.3.jar:t/dependency/tools-1.8.0_382.jar:t/dependency/validation-api-1.0.0.GA.jar:t/dependency/validation-api-1.0.0.GA-sources.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:50:32.983 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/truth/truth/1.1.3/truth-1.1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/asm-9.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-common-0.11.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-1.7.4.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/auto-value-annotations-1.8.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/base-1.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-compat-qual-2.5.5.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/checker-qual-3.13.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/compile-testing-0.19.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/elemental2-promise-1.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-gwt-30.1.1-jre.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/guava-testlib-30.1.1-android.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/gwt-user-2.9.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/hamcrest-core-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/javax.servlet-api-3.1.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsinterop-annotations-2.0.0.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/junit-4.13.2.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/sac-1.3.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/tools-1.8.0_382.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA.jar:/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3/t/dependency/validation-api-1.0.0.GA-sources.jar
[MASTER] 15:50:32.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: duplicate class: com.google.common.base.Platform: 32
[MASTER] 15:50:32.985 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot access com.google.common.collect.Platform
  bad source file: t/dependency/guava-gwt-30.1.1-jre.jar(com/google/common/collect/Platform.java)
    file does not contain class com.google.common.collect.Platform
    Please remove or make sure it appears in the correct subdirectory of the sourcepath.: 59
[MASTER] 15:50:32.986 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1731034232625/com/google/common/truth/ActualValueInference_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Nov 08 02:50:32 GMT 2024
4:  */
5: 
6: package com.google.common.truth;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ImmutableList;
11: import com.google.common.truth.ActualValueInference;
12: import com.google.common.truth.AutoValue_ActualValueInference_InferredType;
13: import com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry;
14: import com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.junit.runner.RunWith;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
20: public class ActualValueInference_26_tmp__ESTest extends ActualValueInference_26_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.UNINITIALIZED_THIS;
25:       AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
26:       AutoValue_ActualValueInference_SubjectEntry autoValue_ActualValueInference_SubjectEntry0 = new AutoValue_ActualValueInference_SubjectEntry(autoValue_ActualValueInference_InferredType0, autoValue_ActualValueInference_OpaqueEntry0);
27:       ImmutableList<ActualValueInference.StackEntry> immutableList0 = ImmutableList.of((ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0);
28:       ActualValueInference.FrameInfo actualValueInference_FrameInfo0 = ActualValueInference.FrameInfo.create(immutableList0, immutableList0);
29:       assertNotNull(actualValueInference_FrameInfo0);
30:   }
31: }
RegularFileObject[/tmp/EvoSuite_26_1731034232625/com/google/common/truth/ActualValueInference_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Nov 08 02:50:32 GMT 2024
5:  */
6: 
7: package com.google.common.truth;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ActualValueInference_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.truth.ActualValueInference"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/com/google/truth/truth/1.1.3"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ActualValueInference_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.Hashing",
82:       "com.google.common.collect.ImmutableList$SubList",
83:       "com.google.common.collect.ListMultimap",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.RegularImmutableMap$KeySet",
87:       "com.google.common.collect.Iterators$ArrayItr",
88:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
89:       "com.google.common.collect.Platform",
90:       "com.google.common.truth.AutoValue_ActualValueInference_FrameInfo",
91:       "com.google.common.collect.BaseImmutableMultimap",
92:       "com.google.common.collect.RegularImmutableMap",
93:       "com.google.common.truth.ActualValueInference$Nullable",
94:       "com.google.common.collect.ImmutableMultimap$Values",
95:       "com.google.common.collect.CompactHashMap$MapEntry",
96:       "com.google.common.collect.CompactHashMap$2",
97:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
98:       "com.google.common.collect.RegularImmutableSet",
99:       "com.google.common.collect.Iterators$10",
100:       "com.google.common.collect.AbstractMapEntry",
101:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
102:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
103:       "com.google.common.collect.ImmutableListMultimap",
104:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
105:       "com.google.common.collect.ImmutableMultimap$1",
106:       "org.objectweb.asm.MethodWriter",
107:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
108:       "com.google.common.collect.ImmutableMultimap$2",
109:       "com.google.common.collect.Iterables",
110:       "com.google.common.truth.AutoValue_ActualValueInference_InferredType",
111:       "com.google.common.truth.ActualValueInference$FrameInfo",
112:       "com.google.common.collect.ImmutableSet$Builder",
113:       "com.google.common.collect.SingletonImmutableSet",
114:       "com.google.common.collect.ImmutableSetMultimap$Builder",
115:       "com.google.common.base.Strings",
116:       "org.objectweb.asm.Context",
117:       "com.google.common.truth.ActualValueInference$InferredType",
118:       "com.google.common.collect.ImmutableMultiset",
119:       "com.google.common.collect.UnmodifiableListIterator",
120:       "org.objectweb.asm.Attribute",
121:       "com.google.common.collect.ImmutableMultimap$Keys",
122:       "com.google.common.collect.ImmutableMultimap",
123:       "com.google.common.collect.ImmutableSortedSet",
124:       "com.google.common.primitives.IntsMethodsForWeb",
125:       "org.objectweb.asm.Opcodes",
126:       "com.google.common.collect.ObjectArrays",
127:       "com.google.common.collect.AbstractIterator",
128:       "com.google.common.base.MoreObjects",
129:       "com.google.common.collect.ImmutableSortedSet$Builder",
130:       "com.google.common.collect.SortedIterable",
131:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
132:       "com.google.common.truth.ActualValueInference$Invocation",
133:       "com.google.common.base.Preconditions",
134:       "com.google.common.collect.UnmodifiableIterator",
135:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
136:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
137:       "org.objectweb.asm.MethodVisitor",
138:       "com.google.common.collect.EmptyImmutableSetMultimap",
139:       "com.google.common.base.Java8Usage",
140:       "com.google.common.collect.ImmutableList$Itr",
141:       "com.google.common.truth.ActualValueInference",
142:       "com.google.common.collect.ImmutableCollection",
143:       "org.objectweb.asm.Type",
144:       "com.google.common.truth.ActualValueInference$Invocation$Builder",
145:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
146:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
147:       "com.google.common.collect.CompactHashMap$Itr",
148:       "com.google.common.base.Objects",
149:       "org.objectweb.asm.ClassVisitor",
150:       "com.google.common.collect.ImmutableCollection$Builder",
151:       "com.google.common.collect.ImmutableSetMultimap",
152:       "com.google.common.base.Converter",
153:       "com.google.errorprone.annotations.DoNotMock",
154:       "com.google.common.collect.ImmutableSet",
155:       "com.google.common.base.Function",
156:       "com.google.common.collect.Iterators$9",
157:       "com.google.common.collect.ImmutableMap",
158:       "com.google.common.collect.AbstractIndexedListIterator",
159:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
160:       "com.google.common.collect.CollectPreconditions",
161:       "com.google.common.collect.Iterators$1",
162:       "com.google.common.collect.CompactHashMap",
163:       "com.google.common.primitives.Ints$IntConverter",
164:       "com.google.common.collect.Iterators$4",
165:       "com.google.common.collect.Iterators$5",
166:       "com.google.common.collect.ImmutableMultimap$EntryCollection",
167:       "org.objectweb.asm.ClassReader",
168:       "com.google.common.base.ExtraObjectsMethodsForWeb",
169:       "com.google.common.collect.CompactHashSet",
170:       "com.google.common.collect.CompactHashMap$EntrySetView",
171:       "com.google.common.collect.ImmutableList$Builder",
172:       "com.google.common.collect.ImmutableMap$1",
173:       "com.google.common.collect.ImmutableMultimap$Builder",
174:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
175:       "com.google.common.truth.AutoValue_ActualValueInference_Invocation$Builder",
176:       "com.google.common.collect.Multiset",
177:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
178:       "com.google.common.collect.AbstractMultimap",
179:       "org.objectweb.asm.Label",
180:       "com.google.common.collect.Multimap",
181:       "com.google.common.collect.Iterators",
182:       "com.google.common.truth.AutoValue_ActualValueInference_Invocation",
183:       "com.google.common.collect.ImmutableList",
184:       "com.google.common.collect.CompactHashing",
185:       "com.google.common.collect.RegularImmutableMap$EntrySet",
186:       "com.google.common.truth.ActualValueInference$DescribedEntry",
187:       "com.google.common.truth.ActualValueInference$SubjectEntry",
188:       "com.google.common.primitives.Ints",
189:       "com.google.common.collect.ImmutableMap$Builder",
190:       "com.google.common.collect.SetMultimap",
191:       "com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList",
192:       "com.google.common.collect.Iterators$MergingIterator",
193:       "com.google.common.collect.RegularImmutableSortedSet",
194:       "com.google.common.truth.ActualValueInference$StackEntry"
195:     );
196:   } 
197: 
198:   private static void resetClasses() {
199:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ActualValueInference_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
200: 
201:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
202:       "com.google.common.collect.ImmutableCollection",
203:       "com.google.common.collect.ImmutableSet",
204:       "com.google.common.base.Java8Usage",
205:       "com.google.common.base.Preconditions",
206:       "com.google.common.collect.ObjectArrays",
207:       "com.google.common.collect.Hashing",
208:       "com.google.common.collect.RegularImmutableSet",
209:       "com.google.common.truth.ActualValueInference",
210:       "org.objectweb.asm.ClassVisitor",
211:       "com.google.common.truth.ActualValueInference$InferenceClassVisitor",
212:       "com.google.common.truth.ActualValueInference$StackEntry",
213:       "com.google.common.truth.ActualValueInference$OpaqueEntry",
214:       "com.google.common.truth.ActualValueInference$DescribedEntry",
215:       "com.google.common.truth.ActualValueInference$SubjectEntry",
216:       "org.objectweb.asm.MethodVisitor",
217:       "com.google.common.truth.ActualValueInference$InferenceMethodVisitor",
218:       "com.google.common.truth.AutoValue_ActualValueInference_InferredType",
219:       "com.google.common.truth.ActualValueInference$InferredType",
220:       "org.objectweb.asm.Type",
221:       "com.google.common.collect.AbstractMultimap",
222:       "com.google.common.collect.BaseImmutableMultimap",
223:       "com.google.common.collect.ImmutableMultimap",
224:       "com.google.common.collect.ImmutableSetMultimap",
225:       "com.google.common.collect.ImmutableMultimap$Builder",
226:       "com.google.common.collect.ImmutableSetMultimap$Builder",
227:       "com.google.common.collect.Platform",
228:       "com.google.common.collect.CompactHashMap",
229:       "com.google.common.primitives.IntsMethodsForWeb",
230:       "com.google.common.primitives.Ints",
231:       "com.google.common.base.MoreObjects",
232:       "org.objectweb.asm.ClassReader",
233:       "com.google.common.truth.AutoValue_ActualValueInference_DescribedEntry",
234:       "com.google.common.base.Strings",
235:       "com.google.common.truth.ActualValueInference$Invocation",
236:       "com.google.common.truth.ActualValueInference$Invocation$Builder",
237:       "com.google.common.truth.AutoValue_ActualValueInference_Invocation$Builder",
238:       "com.google.common.collect.UnmodifiableIterator",
239:       "com.google.common.collect.UnmodifiableListIterator",
240:       "com.google.common.collect.AbstractIndexedListIterator",
241:       "com.google.common.collect.ImmutableList$Itr",
242:       "com.google.common.collect.RegularImmutableList",
243:       "com.google.common.collect.ImmutableList",
244:       "com.google.common.truth.AutoValue_ActualValueInference_OpaqueEntry",
245:       "com.google.common.truth.AutoValue_ActualValueInference_SubjectEntry",
246:       "autovalue.shaded.com.google$.common.collect.$RangeGwtSerializationDependencies",
247:       "autovalue.shaded.com.google$.common.collect.$Cut",
248:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowAll",
249:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveAll",
250:       "autovalue.shaded.com.google$.common.base.$Preconditions",
251:       "autovalue.shaded.com.google$.common.collect.$Range",
252:       "autovalue.shaded.com.google$.common.collect.$Cut$AboveValue",
253:       "autovalue.shaded.com.google$.common.collect.$Cut$BelowValue",
254:       "autovalue.shaded.com.google$.common.primitives.$Booleans",
255:       "org.objectweb.asm.Context",
256:       "com.google.common.collect.CompactHashMap$EntrySetView",
257:       "com.google.common.collect.ImmutableMap",
258:       "com.google.common.collect.RegularImmutableMap",
259:       "com.google.common.collect.EmptyImmutableSetMultimap",
260:       "com.google.common.truth.ActualValueInference$FrameInfo",
261:       "com.google.common.truth.AutoValue_ActualValueInference_FrameInfo",
262:       "com.google.common.collect.ImmutableCollection$Builder",
263:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
264:       "com.google.common.collect.ImmutableList$Builder",
265:       "com.google.common.collect.CollectPreconditions",
266:       "org.objectweb.asm.Label",
267:       "com.google.common.collect.CompactHashSet",
268:       "com.google.common.collect.CompactHashing",
269:       "com.google.common.truth.AutoValue_ActualValueInference_Invocation",
270:       "com.google.common.collect.ImmutableMap$Builder",
271:       "com.google.common.collect.CompactHashMap$Itr",
272:       "com.google.common.collect.CompactHashMap$2",
273:       "com.google.common.collect.AbstractMapEntry",
274:       "com.google.common.collect.CompactHashMap$MapEntry",
275:       "com.google.common.base.ExtraObjectsMethodsForWeb",
276:       "com.google.common.base.Objects",
277:       "com.google.common.collect.SingletonImmutableSet",
278:       "com.google.common.collect.ImmutableSetMultimap$EntrySet",
279:       "com.google.common.collect.ImmutableMultimap$1",
280:       "com.google.common.collect.RegularImmutableMap$EntrySet",
281:       "com.google.common.collect.RegularImmutableMap$EntrySet$1",
282:       "com.google.common.collect.Iterators",
283:       "com.google.common.collect.Iterators$ArrayItr",
284:       "com.google.common.collect.Iterables",
285:       "org.objectweb.asm.Opcodes",
286:       "com.google.common.collect.ImmutableList$SubList"
287:     );
288:   }
289: }

[MASTER] 15:50:32.987 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
AutoValue_ActualValueInference_InferredType autoValue_ActualValueInference_InferredType0 = (AutoValue_ActualValueInference_InferredType)ActualValueInference.InferredType.UNINITIALIZED_THIS;
AutoValue_ActualValueInference_OpaqueEntry autoValue_ActualValueInference_OpaqueEntry0 = new AutoValue_ActualValueInference_OpaqueEntry(autoValue_ActualValueInference_InferredType0);
AutoValue_ActualValueInference_SubjectEntry autoValue_ActualValueInference_SubjectEntry0 = new AutoValue_ActualValueInference_SubjectEntry(autoValue_ActualValueInference_InferredType0, autoValue_ActualValueInference_OpaqueEntry0);
ImmutableList<ActualValueInference.StackEntry> immutableList0 = ImmutableList.of((ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0, (ActualValueInference.StackEntry) autoValue_ActualValueInference_SubjectEntry0);
ActualValueInference.FrameInfo actualValueInference_FrameInfo0 = ActualValueInference.FrameInfo.create(immutableList0, immutableList0);
assertNotNull(actualValueInference_FrameInfo0);


* Writing tests to file
* Writing JUnit test case 'ActualValueInference_ESTest' to evosuite-tests
* Done!

* Computation finished
