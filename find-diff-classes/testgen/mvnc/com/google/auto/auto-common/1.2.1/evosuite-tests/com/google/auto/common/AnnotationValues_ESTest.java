/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:22:42 GMT 2024
 */

package com.google.auto.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.auto.common.AnnotationValues;
import com.google.auto.common.SimpleTypeAnnotationValue;
import com.google.common.base.Equivalence;
import javax.lang.model.element.AnnotationValue;
import javax.lang.model.type.DeclaredType;
import org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnnotationValues_ESTest extends AnnotationValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AnnotationValue annotationValue0 = mock(AnnotationValue.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(annotationValue0).accept(any(javax.lang.model.element.AnnotationValueVisitor.class) , any());
      DeclaredType declaredType0 = AnnotationValues.getTypeMirror(annotationValue0);
      assertNull(declaredType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.SHORT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.toString(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // short cannot be converted to an Element
         //
         verifyException("com.google.auto.common.MoreTypes$AsElementVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getTypeMirrors(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getTypeMirror((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      AnnotationValue annotationValue0 = mock(AnnotationValue.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(annotationValue0).accept(any(javax.lang.model.element.AnnotationValueVisitor.class) , any());
      // Undeclared exception!
      try { 
        AnnotationValues.getTypeMirror(annotationValue0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to javax.lang.model.type.DeclaredType
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getStrings(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.INT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getString(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected String, got instead: int
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.DOUBLE;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getShorts(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: double
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getShort((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.INT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getLongs(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: int
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.BOOLEAN;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getLong(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Long, got instead: boolean
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getInt(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Integer, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.DOUBLE;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getFloats(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: double
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getFloat((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.FLOAT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getEnums(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: float
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getEnum((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.FLOAT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getDoubles(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: float
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getDouble((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getChars(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getChar(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Character, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.FLOAT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getBytes(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: float
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getByte((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.BYTE;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getBooleans(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: byte
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.BOOLEAN;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getBoolean(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Boolean, got instead: boolean
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.INT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationValues(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: int
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationMirrors(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationMirror(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected a AnnotationMirror, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues$DefaultVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.BOOLEAN;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getInts(annotationValue0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected an array, got instead: boolean
         //
         verifyException("com.google.auto.common.AnnotationValues$ArrayVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getChars((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.LONG;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getByte(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Byte, got instead: long
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.INT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getFloat(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Float, got instead: int
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.SHORT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getShort(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Short, got instead: short
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.INT;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getEnum(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected a VariableElement, got instead: int
         //
         verifyException("com.google.auto.common.AnnotationValues$DefaultVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.toString((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getInt((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getBooleans((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationValues((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationMirrors((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getString((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getEnums((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getDoubles((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getStrings((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getLongs((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getChar((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getAnnotationMirror((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getTypeMirrors((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getFloats((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getBytes((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getInts((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getLong((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.DOUBLE;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getTypeMirror(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // double does not represent a declared type
         //
         verifyException("com.google.auto.common.MoreTypes$CastingTypeVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Equivalence<AnnotationValue> equivalence0 = AnnotationValues.equivalence();
      assertNotNull(equivalence0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getShorts((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.lang.model.util.AbstractAnnotationValueVisitor6", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        AnnotationValues.getBoolean((AnnotationValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PrimitiveTypeImpl primitiveTypeImpl0 = PrimitiveTypeImpl.DOUBLE;
      AnnotationValue annotationValue0 = SimpleTypeAnnotationValue.of(primitiveTypeImpl0);
      // Undeclared exception!
      try { 
        AnnotationValues.getDouble(annotationValue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected Double, got instead: double
         //
         verifyException("com.google.auto.common.AnnotationValues", e);
      }
  }
}
