* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.testing.google.MultimapPutIterableTester
* Starting Client-0
* Connecting to master process on port 4131
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava-testlib/32.1.2-jre/guava-testlib-32.1.2-jre.jar
  - t/dependency/asm-9.1.jar
  - t/dependency/auto-value-annotations-1.8.1.jar
  - t/dependency/checker-qual-3.33.0.jar
  - t/dependency/error_prone_annotations-2.18.0.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/guava-32.1.2-jre.jar
  - t/dependency/hamcrest-core-1.3.jar
  - t/dependency/j2objc-annotations-2.8.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/junit-4.13.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
  - t/dependency/truth-1.1.3.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.testing.google.MultimapPutIterableTester
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 334
* Using seed 1729691133560
* Starting evolution
* Initial Number of Goals in DynaMOSA = 253 / 334
[MASTER] 02:45:35.853 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableMultimap<K, V> : Type points to itself
[Progress:>                             3%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                53%][Progress:==>                           8%] [Cov:==================>                53%][Progress:==>                           8%] [Cov:==================>                53%][Progress:===>                          10%] [Cov:==================>                53%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:==================>                53%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                53%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:==================>                53%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                52%][MASTER] 02:45:51.978 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.lang.Integer, java.lang.Integer>
[MASTER] 02:45:51.979 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.lang.Integer, java.lang.Integer>
[MASTER] 02:45:52.077 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=======>                      26%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][MASTER] 02:45:55.817 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.util.Locale$FilteringMode, java.lang.Integer>
[MASTER] 02:45:55.818 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.util.Locale$FilteringMode, java.lang.Integer>
[MASTER] 02:45:55.856 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.util.Map<java.lang.Integer, java.util.Locale$FilteringMode>.Entry<java.util.Map<K, V>.Entry<K, V>, java.lang.Integer>, java.lang.Integer>
[MASTER] 02:45:55.877 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.util.Map<K, V>.Entry<K, V> for wildcard ? extends java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.util.Map<java.lang.Integer, java.util.Locale$FilteringMode>.Entry<java.util.Map<K, V>.Entry<K, V>, java.lang.Integer>, java.lang.Integer>
[Progress:=========>                    33%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%]
* Search finished after 61s and 239 generations, 26253 statements, best individual has fitness: 265.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 83
* Number of covered goals: 25
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 27
* Number of covered goals: 18
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 3%
* Total number of goals: 163
* Number of covered goals: 5
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 12%
* Total number of goals: 17
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 27
* Number of covered goals: 18
* Generated 16 tests with total length 32
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'MultimapPutIterableTester_ESTest' to evosuite-tests
* Done!

* Computation finished
