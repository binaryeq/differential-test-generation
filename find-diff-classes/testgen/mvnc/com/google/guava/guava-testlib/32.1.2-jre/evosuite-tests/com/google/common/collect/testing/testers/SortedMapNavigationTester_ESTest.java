/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:51:11 GMT 2024
 */

package com.google.common.collect.testing.testers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.testing.OneSizeTestContainerGenerator;
import com.google.common.collect.testing.SampleElements;
import com.google.common.collect.testing.features.CollectionSize;
import com.google.common.collect.testing.testers.SortedMapNavigationTester;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import junit.framework.AssertionFailedError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SortedMapNavigationTester_ESTest extends SortedMapNavigationTester_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortedMapNavigationTester<Integer, CollectionSize> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, CollectionSize>();
      CollectionSize collectionSize0 = CollectionSize.ZERO;
      SampleElements<Map.Entry<Integer, CollectionSize>> sampleElements0 = (SampleElements<Map.Entry<Integer, CollectionSize>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      HashMap<Integer, CollectionSize> hashMap0 = new HashMap<Integer, CollectionSize>();
      OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn(collectionSize0).when(oneSizeTestContainerGenerator0).getCollectionSize();
      doReturn((Collection) null).when(oneSizeTestContainerGenerator0).getSampleElements(anyInt());
      sortedMapNavigationTester0.init(oneSizeTestContainerGenerator0, "g@wHjh/51+|9?");
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testSubMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.Helpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testTailMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testOrderedByComparator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testHeadMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      try { 
        sortedMapNavigationTester0.setUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.AbstractContainerTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortedMapNavigationTester<Integer, CollectionSize> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, CollectionSize>();
      CollectionSize collectionSize0 = CollectionSize.ZERO;
      SampleElements<Map.Entry<Integer, CollectionSize>> sampleElements0 = (SampleElements<Map.Entry<Integer, CollectionSize>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      TreeMap<Integer, CollectionSize> treeMap0 = new TreeMap<Integer, CollectionSize>();
      HashMap<Integer, CollectionSize> hashMap0 = new HashMap<Integer, CollectionSize>();
      Integer integer0 = new Integer(0);
      hashMap0.put(integer0, collectionSize0);
      Set<Map.Entry<Integer, CollectionSize>> set0 = (Set<Map.Entry<Integer, CollectionSize>>)hashMap0.entrySet();
      OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn(collectionSize0).when(oneSizeTestContainerGenerator0).getCollectionSize();
      doReturn(set0).when(oneSizeTestContainerGenerator0).getSampleElements(anyInt());
      doReturn(sampleElements0).when(oneSizeTestContainerGenerator0).samples();
      doReturn(treeMap0).when(oneSizeTestContainerGenerator0).createTestSubject();
      sortedMapNavigationTester0.init(oneSizeTestContainerGenerator0, "g@wHjh/51+|9?");
      try { 
        sortedMapNavigationTester0.runBare();
        fail("Expecting exception: AssertionFailedError");
      
      } catch(AssertionFailedError e) {
         //
         // TestCase.fName cannot be null
         //
         verifyException("junit.framework.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortedMapNavigationTester<Integer, CollectionSize> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, CollectionSize>();
      CollectionSize collectionSize0 = CollectionSize.ONE;
      SampleElements<Map.Entry<Integer, CollectionSize>> sampleElements0 = (SampleElements<Map.Entry<Integer, CollectionSize>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      TreeMap<Integer, CollectionSize> treeMap0 = new TreeMap<Integer, CollectionSize>();
      HashMap<Integer, CollectionSize> hashMap0 = new HashMap<Integer, CollectionSize>();
      Set<Map.Entry<Integer, CollectionSize>> set0 = (Set<Map.Entry<Integer, CollectionSize>>)hashMap0.entrySet();
      OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, CollectionSize>, Map.Entry<Integer, CollectionSize>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn(collectionSize0).when(oneSizeTestContainerGenerator0).getCollectionSize();
      doReturn(set0).when(oneSizeTestContainerGenerator0).getSampleElements(anyInt());
      doReturn(sampleElements0).when(oneSizeTestContainerGenerator0).samples();
      doReturn(treeMap0).when(oneSizeTestContainerGenerator0).createTestSubject();
      sortedMapNavigationTester0.init(oneSizeTestContainerGenerator0, "g@wHjh/51+|9?");
      try { 
        sortedMapNavigationTester0.runBare();
        fail("Expecting exception: AssertionFailedError");
      
      } catch(AssertionFailedError e) {
         //
         // TestCase.fName cannot be null
         //
         verifyException("junit.framework.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SortedMapNavigationTester<TreeMap<Integer, Integer>, TreeMap<Integer, Integer>> sortedMapNavigationTester0 = new SortedMapNavigationTester<TreeMap<Integer, Integer>, TreeMap<Integer, Integer>>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testSubMapIllegal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testEmptyMapLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, TreeMap<Integer, Integer>>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testTailMapInclusive();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortedMapNavigationTester<TreeMap<Integer, Integer>, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<TreeMap<Integer, Integer>, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testHeadMapExclusive();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testSingletonMapFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testSingletonMapLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SortedMapNavigationTester<Integer, Integer> sortedMapNavigationTester0 = new SortedMapNavigationTester<Integer, Integer>();
      // Undeclared exception!
      try { 
        sortedMapNavigationTester0.testEmptyMapFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.testers.SortedMapNavigationTester", e);
      }
  }
}
