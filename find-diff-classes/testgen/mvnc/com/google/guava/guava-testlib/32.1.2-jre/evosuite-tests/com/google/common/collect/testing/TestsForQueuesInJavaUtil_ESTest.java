/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:43:12 GMT 2024
 */

package com.google.common.collect.testing;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.common.collect.testing.TestsForQueuesInJavaUtil;
import java.lang.reflect.Method;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TestsForQueuesInJavaUtil_ESTest extends TestsForQueuesInJavaUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForPriorityBlockingQueue();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForLinkedList();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForArrayDeque();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForLinkedBlockingDeque();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForLinkedBlockingQueue();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForPriorityQueue();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForCheckedQueue();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForConcurrentLinkedDeque();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForConcurrentLinkedQueue();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TestsForQueuesInJavaUtil testsForQueuesInJavaUtil0 = new TestsForQueuesInJavaUtil();
      Collection<Method> collection0 = testsForQueuesInJavaUtil0.suppressForArrayBlockingQueue();
      assertNotNull(collection0);
  }
}
