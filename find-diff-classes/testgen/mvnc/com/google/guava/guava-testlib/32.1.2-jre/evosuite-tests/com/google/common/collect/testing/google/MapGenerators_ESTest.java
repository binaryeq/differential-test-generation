/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:45:32 GMT 2024
 */

package com.google.common.collect.testing.google;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.testing.AnEnum;
import com.google.common.collect.testing.SampleElements;
import com.google.common.collect.testing.UnhashableObject;
import com.google.common.collect.testing.google.MapGenerators;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapGenerators_ESTest extends MapGenerators_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.create(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.google.MapGenerators$ImmutableMapValuesAsSingletonSetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 0);
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      Map<String, Collection<Integer>> map0 = mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.create(map_EntryArray0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfEnumMapGenerator mapGenerators_ImmutableMapCopyOfEnumMapGenerator0 = new MapGenerators.ImmutableMapCopyOfEnumMapGenerator();
      Map.Entry<AnEnum, String>[] map_EntryArray0 = (Map.Entry<AnEnum, String>[]) Array.newInstance(Map.Entry.class, 1);
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapCopyOfEnumMapGenerator0.create(map_EntryArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.google.MapGenerators$ImmutableMapCopyOfEnumMapGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfEnumMapGenerator mapGenerators_ImmutableMapCopyOfEnumMapGenerator0 = new MapGenerators.ImmutableMapCopyOfEnumMapGenerator();
      Map.Entry<AnEnum, String>[] map_EntryArray0 = (Map.Entry<AnEnum, String>[]) Array.newInstance(Map.Entry.class, 0);
      Map<AnEnum, String> map0 = mapGenerators_ImmutableMapCopyOfEnumMapGenerator0.create(map_EntryArray0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Map.Entry<AnEnum, String>[] map_EntryArray0 = (Map.Entry<AnEnum, String>[]) Array.newInstance(Map.Entry.class, 1);
      MapGenerators.ImmutableEnumMapGenerator mapGenerators_ImmutableEnumMapGenerator0 = new MapGenerators.ImmutableEnumMapGenerator();
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableEnumMapGenerator0.create(map_EntryArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.google.MapGenerators$ImmutableEnumMapGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MapGenerators.ImmutableMapEntryListGenerator mapGenerators_ImmutableMapEntryListGenerator0 = new MapGenerators.ImmutableMapEntryListGenerator();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapEntryListGenerator0.create(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableMap$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MapGenerators.ImmutableMapValueListGenerator mapGenerators_ImmutableMapValueListGenerator0 = new MapGenerators.ImmutableMapValueListGenerator();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapValueListGenerator0.create(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null value in entry: 0=null
         //
         verifyException("com.google.common.collect.CollectPreconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MapGenerators.ImmutableMapKeyListGenerator mapGenerators_ImmutableMapKeyListGenerator0 = new MapGenerators.ImmutableMapKeyListGenerator();
      String[] stringArray0 = new String[12];
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapKeyListGenerator0.create(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null key in entry: null=0
         //
         verifyException("com.google.common.collect.CollectPreconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfGenerator mapGenerators_ImmutableMapCopyOfGenerator0 = new MapGenerators.ImmutableMapCopyOfGenerator();
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 1);
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapCopyOfGenerator0.create(map_EntryArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.google.MapGenerators$ImmutableMapCopyOfGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 0);
      MapGenerators.ImmutableMapGenerator mapGenerators_ImmutableMapGenerator0 = new MapGenerators.ImmutableMapGenerator();
      Map<String, String> map0 = mapGenerators_ImmutableMapGenerator0.create(map_EntryArray0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfEntriesGenerator mapGenerators_ImmutableMapCopyOfEntriesGenerator0 = new MapGenerators.ImmutableMapCopyOfEntriesGenerator();
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 9);
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapCopyOfEntriesGenerator0.create(map_EntryArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MapGenerators mapGenerators0 = new MapGenerators();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfEnumMapGenerator mapGenerators_ImmutableMapCopyOfEnumMapGenerator0 = new MapGenerators.ImmutableMapCopyOfEnumMapGenerator();
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapCopyOfEnumMapGenerator0.order((List<Map.Entry<AnEnum, String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.Iterables", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MapGenerators.ImmutableMapUnhashableValuesGenerator mapGenerators_ImmutableMapUnhashableValuesGenerator0 = new MapGenerators.ImmutableMapUnhashableValuesGenerator();
      UnhashableObject[] unhashableObjectArray0 = new UnhashableObject[2];
      UnhashableObject unhashableObject0 = new UnhashableObject(8);
      unhashableObjectArray0[0] = unhashableObject0;
      unhashableObjectArray0[1] = unhashableObjectArray0[0];
      Collection<UnhashableObject> collection0 = mapGenerators_ImmutableMapUnhashableValuesGenerator0.create(unhashableObjectArray0);
      assertTrue(collection0.contains(unhashableObject0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MapGenerators.ImmutableMapCopyOfGenerator mapGenerators_ImmutableMapCopyOfGenerator0 = new MapGenerators.ImmutableMapCopyOfGenerator();
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 0);
      Map<String, String> map0 = mapGenerators_ImmutableMapCopyOfGenerator0.create(map_EntryArray0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MapGenerators.ImmutableMapGenerator mapGenerators_ImmutableMapGenerator0 = new MapGenerators.ImmutableMapGenerator();
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 2);
      // Undeclared exception!
      try { 
        mapGenerators_ImmutableMapGenerator0.create(map_EntryArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.google.MapGenerators$ImmutableMapGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MapGenerators.ImmutableMapEntryListGenerator mapGenerators_ImmutableMapEntryListGenerator0 = new MapGenerators.ImmutableMapEntryListGenerator();
      Map.Entry<String, Integer>[] map_EntryArray0 = mapGenerators_ImmutableMapEntryListGenerator0.createArray(1);
      assertEquals(1, map_EntryArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MapGenerators.ImmutableMapEntryListGenerator mapGenerators_ImmutableMapEntryListGenerator0 = new MapGenerators.ImmutableMapEntryListGenerator();
      SampleElements<Map.Entry<String, Integer>> sampleElements0 = (SampleElements<Map.Entry<String, Integer>>)mapGenerators_ImmutableMapEntryListGenerator0.samples();
      assertNotNull(sampleElements0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Map.Entry<String, String>[] map_EntryArray0 = (Map.Entry<String, String>[]) Array.newInstance(Map.Entry.class, 0);
      MapGenerators.ImmutableMapEntryListGenerator mapGenerators_ImmutableMapEntryListGenerator0 = new MapGenerators.ImmutableMapEntryListGenerator();
      List<Map.Entry<String, Integer>> list0 = (List<Map.Entry<String, Integer>>)mapGenerators_ImmutableMapEntryListGenerator0.create(map_EntryArray0);
      Iterable<Map.Entry<String, Integer>> iterable0 = (Iterable<Map.Entry<String, Integer>>)mapGenerators_ImmutableMapEntryListGenerator0.order(list0);
      assertNotNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MapGenerators.ImmutableMapValueListGenerator mapGenerators_ImmutableMapValueListGenerator0 = new MapGenerators.ImmutableMapValueListGenerator();
      String[] stringArray0 = new String[0];
      List<String> list0 = mapGenerators_ImmutableMapValueListGenerator0.create(stringArray0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      String[] stringArray0 = mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.createKeyArray(12);
      assertEquals(12, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      Map.Entry<String, Collection<Integer>>[] map_EntryArray0 = mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.createArray(32);
      assertEquals(32, map_EntryArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      SampleElements<Map.Entry<String, Collection<Integer>>> sampleElements0 = (SampleElements<Map.Entry<String, Collection<Integer>>>)mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.samples();
      assertNotNull(sampleElements0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      ImmutableSet<Integer>[] immutableSetArray0 = mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.createValueArray(728);
      assertEquals(728, immutableSetArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MapGenerators.ImmutableMapValuesAsSingletonSetGenerator mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0 = new MapGenerators.ImmutableMapValuesAsSingletonSetGenerator();
      Iterable<Map.Entry<String, Collection<Integer>>> iterable0 = (Iterable<Map.Entry<String, Collection<Integer>>>)mapGenerators_ImmutableMapValuesAsSingletonSetGenerator0.order((List<Map.Entry<String, Collection<Integer>>>) null);
      assertNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MapGenerators.ImmutableMapKeyListGenerator mapGenerators_ImmutableMapKeyListGenerator0 = new MapGenerators.ImmutableMapKeyListGenerator();
      String[] stringArray0 = new String[0];
      List<String> list0 = mapGenerators_ImmutableMapKeyListGenerator0.create(stringArray0);
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MapGenerators.ImmutableEnumMapGenerator mapGenerators_ImmutableEnumMapGenerator0 = new MapGenerators.ImmutableEnumMapGenerator();
      Map.Entry<AnEnum, String>[] map_EntryArray0 = (Map.Entry<AnEnum, String>[]) Array.newInstance(Map.Entry.class, 0);
      Map<AnEnum, String> map0 = mapGenerators_ImmutableEnumMapGenerator0.create(map_EntryArray0);
      assertTrue(map0.isEmpty());
  }
}
