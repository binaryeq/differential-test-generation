/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:38:22 GMT 2024
 */

package com.google.common.collect.testing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.testing.AbstractTester;
import com.google.common.collect.testing.DerivedCollectionGenerators;
import com.google.common.collect.testing.NavigableSetTestSuiteBuilder;
import com.google.common.collect.testing.SetTestSuiteBuilder;
import com.google.common.collect.testing.TestSortedSetGenerator;
import com.google.common.collect.testing.features.CollectionFeature;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NavigableSetTestSuiteBuilder_ESTest extends NavigableSetTestSuiteBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NavigableSetTestSuiteBuilder<SetTestSuiteBuilder<Integer>> navigableSetTestSuiteBuilder0 = new NavigableSetTestSuiteBuilder<SetTestSuiteBuilder<Integer>>();
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound0 = DerivedCollectionGenerators.Bound.NO_BOUND;
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound1 = DerivedCollectionGenerators.Bound.EXCLUSIVE;
      // Undeclared exception!
      try { 
        navigableSetTestSuiteBuilder0.newBuilderUsing((TestSortedSetGenerator<SetTestSuiteBuilder<Integer>>) null, derivedCollectionGenerators_Bound0, derivedCollectionGenerators_Bound1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$SortedSetSubsetTestSetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound0 = DerivedCollectionGenerators.Bound.NO_BOUND;
      NavigableSetTestSuiteBuilder.NavigableSetSubsetTestSetGenerator<Object> navigableSetTestSuiteBuilder_NavigableSetSubsetTestSetGenerator0 = null;
      try {
        navigableSetTestSuiteBuilder_NavigableSetSubsetTestSetGenerator0 = new NavigableSetTestSuiteBuilder.NavigableSetSubsetTestSetGenerator<Object>((TestSortedSetGenerator<Object>) null, derivedCollectionGenerators_Bound0, derivedCollectionGenerators_Bound0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$SortedSetSubsetTestSetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NavigableSetTestSuiteBuilder<Object> navigableSetTestSuiteBuilder0 = new NavigableSetTestSuiteBuilder<Object>();
      List<Class<? extends AbstractTester>> list0 = (List<Class<? extends AbstractTester>>)navigableSetTestSuiteBuilder0.getTesters();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NavigableSetTestSuiteBuilder<CollectionFeature> navigableSetTestSuiteBuilder0 = NavigableSetTestSuiteBuilder.using((TestSortedSetGenerator<CollectionFeature>) null);
      assertNull(navigableSetTestSuiteBuilder0.getName());
  }
}
