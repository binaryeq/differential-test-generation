/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:35:53 GMT 2024
 */

package com.google.common.collect.testing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.testing.DerivedCollectionGenerators;
import com.google.common.collect.testing.NavigableMapTestSuiteBuilder;
import com.google.common.collect.testing.OneSizeTestContainerGenerator;
import com.google.common.collect.testing.SampleElements;
import com.google.common.collect.testing.TestContainerGenerator;
import com.google.common.collect.testing.TestSortedMapGenerator;
import com.google.common.collect.testing.TestSortedSetGenerator;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DerivedCollectionGenerators_ESTest extends DerivedCollectionGenerators_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestSortedMapGenerator<TreeSet<Integer>, Locale.Category> testSortedMapGenerator0 = (TestSortedMapGenerator<TreeSet<Integer>, Locale.Category>) mock(TestSortedMapGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((SampleElements) null).when(testSortedMapGenerator0).samples();
      doReturn((SortedMap) null).when(testSortedMapGenerator0).create(any(java.lang.Object[].class));
      NavigableMapTestSuiteBuilder.DescendingTestMapGenerator<TreeSet<Integer>, Locale.Category> navigableMapTestSuiteBuilder_DescendingTestMapGenerator0 = new NavigableMapTestSuiteBuilder.DescendingTestMapGenerator<TreeSet<Integer>, Locale.Category>(testSortedMapGenerator0);
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound0 = DerivedCollectionGenerators.Bound.EXCLUSIVE;
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound1 = DerivedCollectionGenerators.Bound.INCLUSIVE;
      DerivedCollectionGenerators.SortedMapSubmapTestMapGenerator<TreeSet<Integer>, Locale.Category> derivedCollectionGenerators_SortedMapSubmapTestMapGenerator0 = null;
      try {
        derivedCollectionGenerators_SortedMapSubmapTestMapGenerator0 = new DerivedCollectionGenerators.SortedMapSubmapTestMapGenerator<TreeSet<Integer>, Locale.Category>(navigableMapTestSuiteBuilder_DescendingTestMapGenerator0, derivedCollectionGenerators_Bound0, derivedCollectionGenerators_Bound1);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound0 = DerivedCollectionGenerators.Bound.EXCLUSIVE;
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound1 = DerivedCollectionGenerators.Bound.NO_BOUND;
      DerivedCollectionGenerators.SortedSetSubsetTestSetGenerator<HashMap<Integer, Integer>> derivedCollectionGenerators_SortedSetSubsetTestSetGenerator0 = null;
      try {
        derivedCollectionGenerators_SortedSetSubsetTestSetGenerator0 = new DerivedCollectionGenerators.SortedSetSubsetTestSetGenerator<HashMap<Integer, Integer>>((TestSortedSetGenerator<HashMap<Integer, Integer>>) null, derivedCollectionGenerators_Bound0, derivedCollectionGenerators_Bound1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$SortedSetSubsetTestSetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedCollectionGenerators.MapKeySetGenerator<Integer, HashMap<Locale.Category, Integer>> derivedCollectionGenerators_MapKeySetGenerator0 = null;
      try {
        derivedCollectionGenerators_MapKeySetGenerator0 = new DerivedCollectionGenerators.MapKeySetGenerator<Integer, HashMap<Locale.Category, Integer>>((OneSizeTestContainerGenerator<Map<Integer, HashMap<Locale.Category, Integer>>, Map.Entry<Integer, HashMap<Locale.Category, Integer>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$MapKeySetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SampleElements<Map.Entry<Locale.Category, TreeSet<Locale.Category>>> sampleElements0 = (SampleElements<Map.Entry<Locale.Category, TreeSet<Locale.Category>>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(sampleElements0).e0();
      doReturn((Object) null).when(sampleElements0).e1();
      doReturn((Object) null).when(sampleElements0).e2();
      doReturn((Object) null).when(sampleElements0).e3();
      doReturn((Object) null).when(sampleElements0).e4();
      TreeMap<Locale.Category, TreeSet<Locale.Category>> treeMap0 = new TreeMap<Locale.Category, TreeSet<Locale.Category>>();
      TestSortedMapGenerator<Locale.Category, TreeSet<Locale.Category>> testSortedMapGenerator0 = (TestSortedMapGenerator<Locale.Category, TreeSet<Locale.Category>>) mock(TestSortedMapGenerator.class, new ViolatedAssumptionAnswer());
      doReturn(sampleElements0).when(testSortedMapGenerator0).samples();
      doReturn(treeMap0).when(testSortedMapGenerator0).create(any(java.lang.Object[].class));
      DerivedCollectionGenerators.Bound derivedCollectionGenerators_Bound0 = DerivedCollectionGenerators.Bound.EXCLUSIVE;
      NavigableMapTestSuiteBuilder.NavigableMapSubmapTestMapGenerator<Locale.Category, TreeSet<Locale.Category>> navigableMapTestSuiteBuilder_NavigableMapSubmapTestMapGenerator0 = null;
      try {
        navigableMapTestSuiteBuilder_NavigableMapSubmapTestMapGenerator0 = new NavigableMapTestSuiteBuilder.NavigableMapSubmapTestMapGenerator<Locale.Category, TreeSet<Locale.Category>>(testSortedMapGenerator0, derivedCollectionGenerators_Bound0, derivedCollectionGenerators_Bound0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.Helpers$EntryComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      AbstractMap.SimpleEntry<HashMap<Integer, Integer>, HashMap<Integer, Integer>> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<HashMap<Integer, Integer>, HashMap<Integer, Integer>>(hashMap0, hashMap0);
      SampleElements<Map.Entry<HashMap<Integer, Integer>, HashMap<Integer, Integer>>> sampleElements0 = (SampleElements<Map.Entry<HashMap<Integer, Integer>, HashMap<Integer, Integer>>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e0();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e1();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e2();
      doReturn((Object) null).when(sampleElements0).e3();
      OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, HashMap<Integer, Integer>>, Map.Entry<HashMap<Integer, Integer>, HashMap<Integer, Integer>>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, HashMap<Integer, Integer>>, Map.Entry<HashMap<Integer, Integer>, HashMap<Integer, Integer>>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn(sampleElements0).when(oneSizeTestContainerGenerator0).samples();
      DerivedCollectionGenerators.MapValueCollectionGenerator<HashMap<Integer, Integer>, HashMap<Integer, Integer>> derivedCollectionGenerators_MapValueCollectionGenerator0 = null;
      try {
        derivedCollectionGenerators_MapValueCollectionGenerator0 = new DerivedCollectionGenerators.MapValueCollectionGenerator<HashMap<Integer, Integer>, HashMap<Integer, Integer>>(oneSizeTestContainerGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$MapValueCollectionGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((TestContainerGenerator) null).when(oneSizeTestContainerGenerator0).getInnerGenerator();
      doReturn((SampleElements) null).when(oneSizeTestContainerGenerator0).samples();
      // Undeclared exception!
      try { 
        DerivedCollectionGenerators.keySetGenerator((OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>>) oneSizeTestContainerGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$MapKeySetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>, Map.Entry<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>, Map.Entry<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((SampleElements) null).when(oneSizeTestContainerGenerator0).samples();
      DerivedCollectionGenerators.MapEntrySetGenerator<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>> derivedCollectionGenerators_MapEntrySetGenerator0 = new DerivedCollectionGenerators.MapEntrySetGenerator<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>(oneSizeTestContainerGenerator0);
      SampleElements<Map.Entry<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>> sampleElements0 = (SampleElements<Map.Entry<HashMap<Integer, Integer>, HashMap<Locale.Category, Locale.Category>>>)derivedCollectionGenerators_MapEntrySetGenerator0.samples();
      assertNull(sampleElements0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(oneSizeTestContainerGenerator0).create(any(java.lang.Object[].class));
      DerivedCollectionGenerators.MapEntrySetGenerator<Integer, Integer> derivedCollectionGenerators_MapEntrySetGenerator0 = new DerivedCollectionGenerators.MapEntrySetGenerator<Integer, Integer>(oneSizeTestContainerGenerator0);
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        derivedCollectionGenerators_MapEntrySetGenerator0.create(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.testing.DerivedCollectionGenerators$MapEntrySetGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<Integer, HashMap<Integer, Locale.Category>>, Map.Entry<Integer, HashMap<Integer, Locale.Category>>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, HashMap<Integer, Locale.Category>>, Map.Entry<Integer, HashMap<Integer, Locale.Category>>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((Iterable) null).when(oneSizeTestContainerGenerator0).order(anyList());
      DerivedCollectionGenerators.MapEntrySetGenerator<Integer, HashMap<Integer, Locale.Category>> derivedCollectionGenerators_MapEntrySetGenerator0 = new DerivedCollectionGenerators.MapEntrySetGenerator<Integer, HashMap<Integer, Locale.Category>>(oneSizeTestContainerGenerator0);
      Iterable<Map.Entry<Integer, HashMap<Integer, Locale.Category>>> iterable0 = (Iterable<Map.Entry<Integer, HashMap<Integer, Locale.Category>>>)derivedCollectionGenerators_MapEntrySetGenerator0.order((List<Map.Entry<Integer, HashMap<Integer, Locale.Category>>>) null);
      assertNotNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<HashMap<Locale.Category, Integer>, Integer>, Map.Entry<HashMap<Locale.Category, Integer>, Integer>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<HashMap<Locale.Category, Integer>, Integer>, Map.Entry<HashMap<Locale.Category, Integer>, Integer>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(oneSizeTestContainerGenerator0).createArray(anyInt());
      DerivedCollectionGenerators.MapEntrySetGenerator<HashMap<Locale.Category, Integer>, Integer> derivedCollectionGenerators_MapEntrySetGenerator0 = new DerivedCollectionGenerators.MapEntrySetGenerator<HashMap<Locale.Category, Integer>, Integer>(oneSizeTestContainerGenerator0);
      Map.Entry<HashMap<Locale.Category, Integer>, Integer>[] map_EntryArray0 = derivedCollectionGenerators_MapEntrySetGenerator0.createArray(1134);
      assertNull(map_EntryArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(oneSizeTestContainerGenerator0).toString();
      DerivedCollectionGenerators.MapEntrySetGenerator<Integer, Integer> derivedCollectionGenerators_MapEntrySetGenerator0 = new DerivedCollectionGenerators.MapEntrySetGenerator<Integer, Integer>(oneSizeTestContainerGenerator0);
      OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>> oneSizeTestContainerGenerator1 = (OneSizeTestContainerGenerator<Map<Integer, Integer>, Map.Entry<Integer, Integer>>)derivedCollectionGenerators_MapEntrySetGenerator0.getInnerGenerator();
      assertSame(oneSizeTestContainerGenerator1, oneSizeTestContainerGenerator0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestSortedMapGenerator<TreeSet<Integer>, Locale.Category> testSortedMapGenerator0 = (TestSortedMapGenerator<TreeSet<Integer>, Locale.Category>) mock(TestSortedMapGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(testSortedMapGenerator0).createArray(anyInt());
      NavigableMapTestSuiteBuilder.DescendingTestMapGenerator<TreeSet<Integer>, Locale.Category> navigableMapTestSuiteBuilder_DescendingTestMapGenerator0 = new NavigableMapTestSuiteBuilder.DescendingTestMapGenerator<TreeSet<Integer>, Locale.Category>(testSortedMapGenerator0);
      Map.Entry<TreeSet<Integer>, Locale.Category>[] map_EntryArray0 = navigableMapTestSuiteBuilder_DescendingTestMapGenerator0.createArray(0);
      assertNull(map_EntryArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer(0);
      AbstractMap.SimpleEntry<HashMap<Integer, Integer>, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<HashMap<Integer, Integer>, Integer>(hashMap0, integer0);
      SampleElements<Map.Entry<HashMap<Integer, Integer>, Integer>> sampleElements0 = (SampleElements<Map.Entry<HashMap<Integer, Integer>, Integer>>) mock(SampleElements.class, new ViolatedAssumptionAnswer());
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e0();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e1();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e2();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e3();
      doReturn(abstractMap_SimpleEntry0).when(sampleElements0).e4();
      OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, Integer>, Map.Entry<HashMap<Integer, Integer>, Integer>> oneSizeTestContainerGenerator0 = (OneSizeTestContainerGenerator<Map<HashMap<Integer, Integer>, Integer>, Map.Entry<HashMap<Integer, Integer>, Integer>>) mock(OneSizeTestContainerGenerator.class, new ViolatedAssumptionAnswer());
      doReturn((TestContainerGenerator) null).when(oneSizeTestContainerGenerator0).getInnerGenerator();
      doReturn(sampleElements0).when(oneSizeTestContainerGenerator0).samples();
      DerivedCollectionGenerators.MapSortedKeySetGenerator<HashMap<Integer, Integer>, Integer> derivedCollectionGenerators_MapSortedKeySetGenerator0 = new DerivedCollectionGenerators.MapSortedKeySetGenerator<HashMap<Integer, Integer>, Integer>(oneSizeTestContainerGenerator0);
  }
}
