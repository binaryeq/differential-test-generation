* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.ImmutableRangeMap
* Starting Client-0
* Connecting to master process on port 8713
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.ImmutableRangeMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 589
* Using seed 1729696401428
* Starting evolution
* Initial Number of Goals in DynaMOSA = 202 / 589
[MASTER] 04:13:26.633 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:13:27.592 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.Range<com.google.common.collect.BoundType>> : Invalid generic instance
[MASTER] 04:13:28.289 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<java.lang.Integer> : Type points to itself
[MASTER] 04:13:28.425 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<java.lang.Object, com.google.common.collect.Range<java.lang.Comparable<java.lang.Object>>> : Type points to itself
[MASTER] 04:13:28.552 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 04:13:28.798 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<java.lang.Integer, com.google.common.collect.Range<java.lang.Comparable<java.lang.Object>>> : Type points to itself
[MASTER] 04:13:30.195 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<java.lang.Integer> : Invalid generic instance
[MASTER] 04:13:30.844 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<java.lang.Integer> : Type points to itself
[MASTER] 04:13:32.513 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<java.lang.Integer, com.google.common.collect.Range<java.lang.Integer>> : Type points to itself
[MASTER] 04:13:33.038 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedSet#copyOf. The owner var map is {E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, C=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Object, E=class java.lang.Integer, E=class java.lang.Object, E=com.google.common.collect.Range<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>, E=class java.lang.Integer, E=class java.lang.Integer}
[MASTER] 04:13:34.522 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:13:35.021 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.Range<java.lang.Integer>> : Type points to itself
[MASTER] 04:13:35.803 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableList#sortedCopyOf. The owner var map is {E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Object, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Object, E=com.google.common.collect.Range<java.lang.Integer>, E=class java.lang.Integer, E=class java.lang.Integer, E=com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>, E=com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=java.lang.Comparable<java.lang.Object>, E=class java.lang.Object, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Object, E=class java.lang.Integer}
[MASTER] 04:13:35.877 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable K with bounds [java.lang.Comparable<? super K>] of declaration ImmutableRangeMap#toImmutableRangeMap. The owner var map is {K=java.lang.Comparable<java.lang.Integer>, V=class java.lang.Object, K=class java.lang.Integer, V=class java.lang.Integer, K=class java.lang.Integer, V=java.lang.Comparable<java.lang.Integer>, K=java.lang.Comparable<java.lang.Integer>, V=class java.lang.Object, T=java.lang.Comparable<java.lang.Object>}
[MASTER] 04:13:36.837 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.Range<java.lang.Comparable<java.lang.Object>>> : Type points to itself
[MASTER] 04:13:37.327 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<com.google.common.collect.Range<java.lang.Integer>> : Type points to itself
[MASTER] 04:13:38.901 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:13:40.455 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableList#sortedCopyOf. The owner var map is {E=java.lang.Comparable<com.google.common.collect.BoundType>, E=java.lang.Comparable<com.google.common.collect.BoundType>, E=java.lang.Comparable<com.google.common.collect.BoundType>, E=com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=java.lang.Comparable<com.google.common.collect.Range<java.lang.Integer>>, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=java.lang.Comparable<java.lang.Object>, E=class java.lang.Object, E=com.google.common.collect.Range<java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=java.lang.Comparable<java.lang.Comparable<T>>, E=com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>, E=com.google.common.collect.Range<java.lang.Integer>, E=java.lang.Comparable<java.lang.Object>, E=java.lang.Comparable<com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Object>>}
[MASTER] 04:13:40.487 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<java.lang.Integer, com.google.common.collect.Range<java.util.Locale$Category>> : Type points to itself
[MASTER] 04:13:42.086 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:13:42.449 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[MASTER] 04:13:45.179 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 04:13:45.545 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:13:45.979 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.DiscreteDomain<C> : Type points to itself
[Progress:==========>                   35%] [Cov:===============>                   43%][MASTER] 04:13:47.262 [logback-1] WARN  CastClassManager - Nothing is assignable after adding class java.lang.Integer for type Variable K with bounds [java.lang.Comparable<? super K>] of declaration ImmutableRangeMap#toImmutableRangeMap. The owner var map is {K=class java.lang.Integer, V=class java.lang.Integer, K=java.lang.Comparable<java.lang.Integer>, V=class java.lang.Integer, K=class java.lang.Integer, V=java.lang.Comparable<com.google.common.collect.Range<java.lang.Integer>>, K=class java.lang.Integer, V=class java.lang.Integer, T=class java.lang.Integer}
[MASTER] 04:13:47.274 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<java.lang.Comparable<java.lang.Object>> : Type points to itself
[MASTER] 04:13:48.078 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:13:48.648 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.Range<java.lang.Comparable<java.nio.CharBuffer>>> : Invalid generic instance
[MASTER] 04:13:48.990 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedMultiset#of. The owner var map is {E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Object, E=class java.lang.Object, E=class java.lang.Object, E=java.lang.Comparable<java.lang.Object>, E=java.lang.Comparable<java.lang.Object>, E=class java.lang.Object, T=class java.lang.Object, E=class java.lang.Object, E=class java.lang.Object, E=java.lang.Comparable<java.lang.Comparable<T>>, E=class java.lang.Object, E=class java.lang.Object, T=class java.lang.Object, E=class java.lang.Object, E=class java.lang.Object, E=java.lang.Comparable<java.lang.Object>, E=class java.lang.Object, E=class java.lang.Object, E=java.lang.Comparable<java.lang.Object>, E=java.lang.Comparable<java.lang.Object>}
[MASTER] 04:13:49.321 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Range<java.nio.CharBuffer>> : Type points to itself
[Progress:============>                 41%] [Cov:===============>                   43%][MASTER] 04:13:51.671 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:13:52.895 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.lang.Object, java.lang.Object>.Entry<java.lang.Object, java.lang.Object>> : Type points to itself
[MASTER] 04:13:54.466 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.Range<java.lang.Comparable<java.lang.Object>>> : Invalid generic instance
[Progress:===============>              51%] [Cov:===============>                   45%][MASTER] 04:13:55.544 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 04:13:59.536 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:14:01.454 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[Progress:==================>           61%] [Cov:=================>                 50%][MASTER] 04:14:02.500 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:14:02.905 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<com.google.common.collect.BoundType> : Type points to itself
[MASTER] 04:14:04.368 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:14:05.066 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:14:06.208 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:14:06.771 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[Progress:=====================>        71%] [Cov:===================>               55%][MASTER] 04:14:09.369 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.EmptyContiguousSet<C> : Type points to itself
[Progress:======================>       75%] [Cov:====================>              59%][MASTER] 04:14:12.251 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<java.util.Map<java.lang.Object, java.lang.Object>.Entry<java.lang.Object, java.lang.Object>> : Invalid generic instance
[MASTER] 04:14:14.964 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:======================>            63%][MASTER] 04:14:17.102 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<java.lang.Object> : Invalid generic instance
[MASTER] 04:14:18.301 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<java.lang.Comparable<java.nio.CharBuffer>> : Type points to itself
[MASTER] 04:14:19.355 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.ImmutableRangeMap<java.lang.Integer, java.lang.Integer>> : Type points to itself
[Progress:===========================>  91%] [Cov:======================>            63%][MASTER] 04:14:20.306 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableRangeMap<K, V> : Type points to itself
[MASTER] 04:14:21.229 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[Progress:============================> 95%] [Cov:=======================>           66%][MASTER] 04:14:22.828 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[Progress:=============================>98%] [Cov:=======================>           66%][MASTER] 04:14:24.459 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<F, T> : Type points to itself
[MASTER] 04:14:24.736 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.Range<java.nio.CharBuffer>> : Type points to itself
[Progress:==============================100%] [Cov:=======================>           68%][MASTER] 04:14:25.567 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<java.util.Locale$Category> : Type points to itself
[MASTER] 04:14:25.786 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<java.util.Locale$FilteringMode> : Type points to itself
[MASTER] 04:14:25.874 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<com.google.common.collect.Range<java.util.Locale$FilteringMode>> : Type points to itself
[Progress:==============================100%] [Cov:=======================>           68%]
* Search finished after 62s and 12 generations, 5983 statements, best individual has fitness: 173.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 125
* Number of covered goals: 110
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 71
* Number of covered goals: 57
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 18
* Number of covered goals: 18
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 228
* Number of covered goals: 150
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 36
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 29
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 29
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 71
* Number of covered goals: 57
* Generated 44 tests with total length 191
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 04:14:32.292 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1729696472265/com/google/common/collect/ImmutableRangeMap_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1729696472265/com/google/common/collect/ImmutableRangeMap_36_tmp__ESTest_scaffolding.java]]
[MASTER] 04:14:32.292 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:14:32.292 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:14:32.294 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Object cannot be converted to java.lang.Integer: 26
[MASTER] 04:14:32.294 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 04:14:32.294 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1729696472265/com/google/common/collect/ImmutableRangeMap_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 15:14:32 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.common.collect.ImmutableRangeMap;
12: import com.google.common.collect.RangeMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class ImmutableRangeMap_36_tmp__ESTest extends ImmutableRangeMap_36_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       ImmutableRangeMap<Integer, Integer> immutableRangeMap0 = ImmutableRangeMap.of();
23:       ImmutableRangeMap<Integer, Comparable<Integer>> immutableRangeMap1 = ImmutableRangeMap.copyOf((RangeMap<Integer, ? extends Comparable<Integer>>) immutableRangeMap0);
24:       // Undeclared exception!
25:       try { 
26:         immutableRangeMap1.get((Object) null);
27:         fail("Expecting exception: NullPointerException");
28:       
29:       } catch(NullPointerException e) {
30:          //
31:          // no message in exception (getMessage() returned null)
32:          //
33:          verifyException("com.google.common.base.Preconditions", e);
34:       }
35:   }
36: }
RegularFileObject[/tmp/EvoSuite_36_1729696472265/com/google/common/collect/ImmutableRangeMap_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 15:14:32 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ImmutableRangeMap_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.ImmutableRangeMap"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ImmutableRangeMap_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.RangeSet",
82:       "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.collect.Collections2",
85:       "com.google.common.collect.ImmutableRangeMap$2",
86:       "com.google.common.collect.PeekingIterator",
87:       "com.google.common.collect.ImmutableSet$Indexed",
88:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
89:       "com.google.common.collect.ImmutableRangeMap$1",
90:       "com.google.common.math.IntMath",
91:       "com.google.common.collect.SortedLists",
92:       "com.google.common.collect.Multisets$FilteredMultiset",
93:       "com.google.common.collect.LinkedHashMultiset",
94:       "com.google.common.collect.ImmutableRangeSet",
95:       "com.google.common.collect.AbstractMapBasedMultiset$2",
96:       "com.google.common.collect.Sets$2",
97:       "com.google.common.collect.Sets$3",
98:       "com.google.common.collect.ImmutableSortedMap$1EntrySet",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.NullsLastOrdering",
101:       "com.google.common.collect.Platform",
102:       "com.google.common.collect.RegularImmutableMultiset",
103:       "com.google.common.collect.RegularImmutableMap",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.collect.ByFunctionOrdering",
106:       "com.google.common.collect.Iterators$10",
107:       "com.google.common.collect.AbstractMapEntry",
108:       "com.google.common.collect.Multisets$DecreasingCount",
109:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
110:       "com.google.common.base.Predicate",
111:       "com.google.common.collect.ImmutableRangeSet$ComplementRanges",
112:       "com.google.common.collect.ImmutableSet$Indexed$1",
113:       "com.google.common.collect.ImmutableMultiset$ElementSet",
114:       "com.google.common.collect.NullsFirstOrdering",
115:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
116:       "com.google.common.base.Strings",
117:       "com.google.common.collect.Lists$Partition",
118:       "com.google.common.collect.Lists",
119:       "com.google.common.math.MathPreconditions",
120:       "com.google.common.collect.Multisets$ImmutableEntry",
121:       "com.google.common.collect.UnmodifiableListIterator",
122:       "com.google.common.collect.DiscreteDomain",
123:       "com.google.common.collect.Count",
124:       "com.google.common.collect.ImmutableMultimap",
125:       "com.google.common.collect.Cut",
126:       "com.google.common.collect.ImmutableSortedSet",
127:       "com.google.common.collect.Sets$4",
128:       "com.google.common.collect.ImmutableRangeSet$Builder",
129:       "com.google.common.collect.Maps$BiMapConverter",
130:       "com.google.common.base.ElementTypesAreNonnullByDefault",
131:       "com.google.common.collect.AbstractMultiset$EntrySet",
132:       "com.google.common.collect.Sets$ImprovedAbstractSet",
133:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
134:       "com.google.common.base.Preconditions",
135:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
136:       "com.google.common.collect.AbstractRangeSet",
137:       "com.google.common.collect.ImmutableEntry",
138:       "com.google.common.base.Converter$ConverterComposition",
139:       "com.google.common.collect.ImmutableCollection",
140:       "com.google.common.collect.ImmutableEnumMap",
141:       "com.google.common.collect.Maps$IteratorBasedAbstractMap$1",
142:       "com.google.common.base.Objects",
143:       "com.google.common.collect.ImmutableCollection$Builder",
144:       "com.google.errorprone.annotations.DoNotMock",
145:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
146:       "com.google.common.collect.ImmutableSetMultimap",
147:       "com.google.common.collect.BiMap",
148:       "com.google.common.collect.IndexedImmutableSet",
149:       "com.google.common.collect.ImmutableSet",
150:       "com.google.common.collect.Iterators$9",
151:       "com.google.common.collect.Lists$AbstractListWrapper",
152:       "com.google.common.collect.ImmutableMapEntry",
153:       "com.google.common.collect.ImmutableSortedAsList",
154:       "com.google.common.collect.AbstractMapBasedMultiset",
155:       "com.google.common.collect.Iterators$1",
156:       "com.google.common.collect.Iterators$4",
157:       "com.google.common.collect.Iterators$5",
158:       "com.google.common.collect.TreeRangeMap$1",
159:       "com.google.common.collect.CollectCollectors",
160:       "com.google.common.collect.TreeRangeMap",
161:       "com.google.common.base.Converter$ReverseConverter",
162:       "com.google.common.base.ExtraObjectsMethodsForWeb",
163:       "com.google.common.collect.Lists$StringAsImmutableList",
164:       "com.google.common.collect.Lists$2",
165:       "com.google.common.collect.Cut$AboveValue",
166:       "com.google.common.collect.Maps$IteratorBasedAbstractMap",
167:       "com.google.common.collect.Lists$1",
168:       "com.google.common.collect.Maps$EntrySet",
169:       "com.google.common.collect.Multiset",
170:       "com.google.common.collect.AbstractMultimap",
171:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
172:       "com.google.common.collect.ImmutableList",
173:       "com.google.common.collect.ReverseOrdering",
174:       "com.google.common.collect.Range$RangeLexOrdering",
175:       "com.google.common.collect.ImmutableRangeSet$AsSet",
176:       "com.google.common.collect.ForwardingCollection",
177:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
178:       "com.google.common.collect.SortedMultisetBridge",
179:       "com.google.common.collect.ImmutableRangeMap$SerializedForm",
180:       "com.google.common.collect.Range$LowerBoundFn",
181:       "com.google.common.collect.ImmutableMap$Builder",
182:       "com.google.common.base.Converter$FunctionBasedConverter",
183:       "com.google.common.collect.ImmutableRangeMap$Builder",
184:       "com.google.common.collect.Maps$EntryTransformer",
185:       "com.google.common.collect.Ordering",
186:       "com.google.common.collect.NaturalOrdering",
187:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
188:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
189:       "com.google.common.collect.AllEqualOrdering",
190:       "com.google.common.math.IntMath$1",
191:       "com.google.common.collect.Hashing",
192:       "com.google.common.collect.ImmutableList$SubList",
193:       "com.google.common.collect.Range$UpperBoundFn",
194:       "com.google.common.collect.SortedLists$KeyAbsentBehavior",
195:       "com.google.common.collect.ImmutableSortedMap$1EntrySet$1",
196:       "com.google.common.collect.RegularImmutableSortedMultiset",
197:       "com.google.common.collect.ImmutableRangeMap",
198:       "com.google.common.collect.RegularImmutableList",
199:       "com.google.common.collect.SortedMultiset",
200:       "com.google.common.collect.Lists$TransformingRandomAccessList",
201:       "com.google.common.collect.RegularImmutableMap$KeySet",
202:       "com.google.common.collect.Iterators$ArrayItr",
203:       "com.google.common.collect.DescendingImmutableSortedMultiset",
204:       "com.google.common.collect.BaseImmutableMultimap",
205:       "com.google.common.collect.Range",
206:       "com.google.common.collect.Multisets",
207:       "com.google.common.collect.ComparisonChain",
208:       "com.google.common.collect.SortedMapDifference",
209:       "com.google.common.collect.RegularImmutableSet",
210:       "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
211:       "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
212:       "com.google.common.collect.LexicographicalOrdering",
213:       "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
214:       "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
215:       "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
216:       "com.google.common.collect.SortedLists$KeyPresentBehavior",
217:       "com.google.common.collect.ImmutableAsList",
218:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
219:       "com.google.common.collect.ImmutableSet$Builder",
220:       "com.google.common.collect.Sets$SetView",
221:       "com.google.common.collect.ImmutableSet$CachingAsList",
222:       "com.google.common.collect.RegularImmutableAsList",
223:       "com.google.common.collect.SingletonImmutableSet",
224:       "com.google.common.collect.Cut$BelowValue",
225:       "com.google.common.collect.ImmutableList$SerializedForm",
226:       "com.google.common.collect.ImmutableMapEntrySet",
227:       "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl",
228:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
229:       "com.google.common.collect.ImmutableMultiset",
230:       "com.google.common.collect.UsingToStringOrdering",
231:       "com.google.common.collect.Multisets$AbstractEntry",
232:       "com.google.common.collect.Lists$TransformingSequentialList",
233:       "com.google.common.collect.ImmutableSortedMap",
234:       "com.google.common.collect.Multisets$ViewMultiset",
235:       "com.google.common.primitives.IntsMethodsForWeb",
236:       "com.google.common.collect.RangeGwtSerializationDependencies",
237:       "com.google.common.collect.ObjectArrays",
238:       "com.google.common.collect.AbstractIterator",
239:       "com.google.common.collect.IndexedImmutableSet$1",
240:       "com.google.common.collect.UnmodifiableSortedMultiset",
241:       "com.google.common.collect.ImmutableList$1",
242:       "com.google.common.collect.MapDifference",
243:       "com.google.common.collect.SortedIterable",
244:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
245:       "com.google.common.collect.RangeMap",
246:       "com.google.common.collect.UnmodifiableIterator",
247:       "com.google.common.collect.ImmutableSortedMultiset",
248:       "com.google.common.collect.Maps$EntryFunction",
249:       "com.google.common.collect.TreeRangeMap$RangeMapEntry",
250:       "com.google.common.collect.Maps$EntryFunction$2",
251:       "com.google.common.collect.Maps$EntryFunction$1",
252:       "com.google.common.collect.ForwardingMultiset",
253:       "com.google.common.collect.Lists$RandomAccessListWrapper",
254:       "com.google.common.collect.ImmutableEnumSet",
255:       "com.google.common.collect.ImmutableMultiset$EntrySet",
256:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
257:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
258:       "com.google.common.collect.SingletonImmutableList",
259:       "com.google.common.base.Converter",
260:       "com.google.common.collect.Maps$8",
261:       "com.google.common.base.Function",
262:       "com.google.common.collect.ImmutableMap",
263:       "com.google.common.collect.ComparatorOrdering",
264:       "com.google.common.collect.AbstractIndexedListIterator",
265:       "com.google.common.collect.CollectPreconditions",
266:       "com.google.common.collect.Multiset$Entry",
267:       "com.google.common.collect.Sets",
268:       "com.google.common.primitives.Ints$IntConverter",
269:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
270:       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
271:       "com.google.common.collect.BoundType",
272:       "com.google.common.collect.ExplicitOrdering",
273:       "com.google.common.collect.Multisets$ElementSet",
274:       "com.google.common.collect.ComparisonChain$1",
275:       "com.google.common.collect.ImmutableList$Builder",
276:       "com.google.common.collect.ImmutableMap$1",
277:       "com.google.common.primitives.Booleans",
278:       "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
279:       "com.google.common.collect.ForwardingObject",
280:       "com.google.common.collect.Range$1",
281:       "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
282:       "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
283:       "com.google.common.collect.AbstractMultiset",
284:       "com.google.common.collect.Multimap",
285:       "com.google.common.collect.Iterators",
286:       "com.google.common.collect.CompoundOrdering",
287:       "com.google.common.collect.Multisets$UnmodifiableMultiset",
288:       "com.google.common.collect.ImmutableBiMap",
289:       "com.google.common.collect.ImmutableMultiset$Builder",
290:       "com.google.common.collect.Multisets$EntrySet",
291:       "com.google.common.collect.ImmutableMultiset$1",
292:       "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
293:       "com.google.common.collect.Cut$BelowAll",
294:       "com.google.common.collect.ImmutableRangeSet$1",
295:       "com.google.common.collect.ReverseNaturalOrdering",
296:       "com.google.common.collect.Maps",
297:       "com.google.common.primitives.Ints",
298:       "com.google.common.collect.SetMultimap",
299:       "com.google.common.collect.ImmutableSet$SerializedForm",
300:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
301:       "com.google.common.collect.Iterators$MergingIterator",
302:       "com.google.common.collect.RegularImmutableMap$Values",
303:       "com.google.common.collect.Cut$AboveAll",
304:       "com.google.common.collect.RegularImmutableSortedSet"
305:     );
306:   } 
307: 
308:   private static void resetClasses() {
309:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ImmutableRangeMap_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
310: 
311:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
312:       "com.google.common.collect.ImmutableCollection",
313:       "com.google.common.collect.ImmutableList",
314:       "com.google.common.collect.RegularImmutableList",
315:       "com.google.common.collect.ImmutableRangeMap",
316:       "com.google.common.collect.ImmutableRangeMap$Builder",
317:       "com.google.common.collect.ImmutableRangeMap$1",
318:       "com.google.common.collect.ImmutableRangeMap$2",
319:       "com.google.common.collect.ImmutableRangeMap$SerializedForm",
320:       "com.google.common.collect.Cut",
321:       "com.google.common.collect.Cut$BelowAll",
322:       "com.google.common.collect.Cut$AboveAll",
323:       "com.google.common.collect.Range$LowerBoundFn",
324:       "com.google.common.collect.SortedLists$KeyPresentBehavior",
325:       "com.google.common.collect.SortedLists$KeyAbsentBehavior",
326:       "com.google.common.collect.Ordering",
327:       "com.google.common.collect.NaturalOrdering",
328:       "com.google.common.collect.ImmutableMap",
329:       "com.google.common.collect.RegularImmutableMap",
330:       "com.google.common.collect.Range$RangeLexOrdering",
331:       "com.google.common.collect.Range$UpperBoundFn",
332:       "com.google.common.collect.Maps",
333:       "com.google.common.collect.Collections2",
334:       "com.google.common.collect.CollectPreconditions",
335:       "com.google.common.collect.ImmutableSet",
336:       "com.google.common.collect.ImmutableSet$CachingAsList",
337:       "com.google.common.collect.ImmutableMapEntrySet",
338:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
339:       "com.google.common.collect.Iterators",
340:       "com.google.common.base.Preconditions",
341:       "com.google.common.collect.UnmodifiableIterator",
342:       "com.google.common.collect.UnmodifiableListIterator",
343:       "com.google.common.collect.AbstractIndexedListIterator",
344:       "com.google.common.collect.Iterators$ArrayItr",
345:       "com.google.common.collect.RangeGwtSerializationDependencies",
346:       "com.google.common.collect.Range",
347:       "com.google.common.collect.Cut$AboveValue",
348:       "com.google.common.collect.Cut$BelowValue",
349:       "com.google.common.primitives.Booleans",
350:       "com.google.common.collect.Lists",
351:       "com.google.common.collect.DiscreteDomain",
352:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
353:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
354:       "com.google.common.collect.ImmutableSortedSet",
355:       "com.google.common.collect.ContiguousSet",
356:       "com.google.common.collect.EmptyContiguousSet",
357:       "com.google.common.collect.TreeRangeMap$1",
358:       "com.google.common.collect.TreeRangeMap",
359:       "com.google.common.collect.Maps$IteratorBasedAbstractMap",
360:       "com.google.common.collect.TreeRangeMap$AsMapOfRanges",
361:       "com.google.common.collect.Sets$ImprovedAbstractSet",
362:       "com.google.common.collect.Maps$EntrySet",
363:       "com.google.common.collect.Maps$IteratorBasedAbstractMap$1",
364:       "com.google.common.collect.AbstractMapEntry",
365:       "com.google.common.collect.ImmutableEntry",
366:       "com.google.common.collect.Range$1",
367:       "com.google.common.collect.SingletonImmutableList",
368:       "com.google.common.collect.RegularImmutableSortedSet",
369:       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
370:       "com.google.common.collect.ImmutableSortedMap",
371:       "com.google.common.collect.ImmutableSortedMap$1EntrySet",
372:       "com.google.common.collect.ImmutableAsList",
373:       "com.google.common.collect.ImmutableSortedMap$1EntrySet$1",
374:       "com.google.common.collect.ImmutableList$1",
375:       "com.google.common.collect.ImmutableCollection$Builder",
376:       "com.google.common.collect.ImmutableList$Builder",
377:       "com.google.common.collect.RegularContiguousSet",
378:       "com.google.common.collect.Cut$1",
379:       "com.google.common.collect.Maps$EntryFunction",
380:       "com.google.common.collect.ByFunctionOrdering",
381:       "com.google.common.collect.ObjectArrays",
382:       "com.google.common.collect.SingletonImmutableSet",
383:       "com.google.common.collect.ImmutableList$SubList",
384:       "com.google.common.collect.SortedLists",
385:       "com.google.common.collect.Lists$TransformingRandomAccessList",
386:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
387:       "com.google.common.collect.ImmutableMultiset",
388:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
389:       "com.google.common.collect.ImmutableSortedMultiset",
390:       "com.google.common.collect.RegularImmutableSortedMultiset",
391:       "com.google.common.collect.ForwardingObject",
392:       "com.google.common.collect.ForwardingCollection",
393:       "com.google.common.collect.ForwardingMultiset",
394:       "com.google.common.collect.Multisets$UnmodifiableMultiset",
395:       "com.google.common.collect.UnmodifiableSortedMultiset",
396:       "com.google.common.collect.Iterables",
397:       "com.google.common.collect.RegularImmutableAsList",
398:       "com.google.common.collect.ImmutableSortedAsList",
399:       "com.google.common.collect.JdkBackedImmutableMap",
400:       "com.google.common.collect.Sets",
401:       "com.google.common.collect.Iterators$9",
402:       "com.google.common.collect.RegularContiguousSet$3",
403:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
404:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
405:       "com.google.common.math.IntMath",
406:       "com.google.common.math.MathPreconditions",
407:       "com.google.common.math.IntMath$1",
408:       "com.google.common.collect.Hashing",
409:       "com.google.common.collect.RegularImmutableSet",
410:       "com.google.common.collect.TreeRangeMap$RangeMapEntry",
411:       "com.google.common.collect.ReverseOrdering",
412:       "com.google.common.collect.AbstractMultiset",
413:       "com.google.common.collect.ConcurrentHashMultiset",
414:       "com.google.common.collect.Multisets",
415:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
416:       "com.google.common.collect.Multisets$EntrySet",
417:       "com.google.common.collect.AbstractMultiset$EntrySet",
418:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
419:       "com.google.common.collect.AbstractIterator",
420:       "com.google.common.collect.ConcurrentHashMultiset$2",
421:       "com.google.common.collect.AbstractIterator$State",
422:       "com.google.common.collect.ForwardingIterator",
423:       "com.google.common.collect.ConcurrentHashMultiset$3",
424:       "com.google.common.collect.AbstractIterator$1",
425:       "com.google.common.base.Strings",
426:       "com.google.common.base.Converter",
427:       "com.google.common.base.Converter$IdentityConverter",
428:       "com.google.common.collect.CollectCollectors",
429:       "com.google.common.primitives.IntsMethodsForWeb",
430:       "com.google.common.primitives.Ints",
431:       "com.google.common.collect.DescendingImmutableSortedMultiset",
432:       "com.google.common.collect.ComparisonChain$1",
433:       "com.google.common.collect.ComparisonChain$InactiveComparisonChain",
434:       "com.google.common.collect.ComparisonChain",
435:       "com.google.common.collect.IndexedImmutableSet",
436:       "com.google.common.collect.ImmutableMapKeySet",
437:       "com.google.common.collect.IndexedImmutableSet$1",
438:       "com.google.common.collect.AbstractMapBasedMultiset",
439:       "com.google.common.collect.LinkedHashMultiset",
440:       "com.google.common.collect.Count",
441:       "com.google.common.collect.RegularImmutableMultiset",
442:       "com.google.common.collect.AbstractMapBasedMultiset$2",
443:       "com.google.common.collect.Multisets$AbstractEntry",
444:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
445:       "com.google.common.collect.Multisets$ImmutableEntry",
446:       "com.google.common.collect.Platform",
447:       "com.google.common.collect.ImmutableMultiset$EntrySet",
448:       "com.google.common.collect.ImmutableSet$Indexed",
449:       "com.google.common.collect.ImmutableMultiset$ElementSet",
450:       "com.google.common.base.Converter$FunctionBasedConverter",
451:       "com.google.common.base.Converter$ConverterComposition",
452:       "com.google.common.base.ExtraObjectsMethodsForWeb",
453:       "com.google.common.base.Objects"
454:     );
455:   }
456: }

[MASTER] 04:14:32.294 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ImmutableRangeMap<Integer, Integer> immutableRangeMap0 = ImmutableRangeMap.of();
ImmutableRangeMap<Integer, Comparable<Integer>> immutableRangeMap1 = ImmutableRangeMap.copyOf((RangeMap<Integer, ? extends Comparable<Integer>>) immutableRangeMap0);
immutableRangeMap1.get((Object) null);

* Writing tests to file
* Writing JUnit test case 'ImmutableRangeMap_ESTest' to evosuite-tests
* Done!

* Computation finished
