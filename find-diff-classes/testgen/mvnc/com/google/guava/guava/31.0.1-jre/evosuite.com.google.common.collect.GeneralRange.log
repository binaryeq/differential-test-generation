* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.GeneralRange
* Starting Client-0
* Connecting to master process on port 8431
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.GeneralRange
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 716
* Using seed 1729695912765
* Starting evolution
* Initial Number of Goals in DynaMOSA = 265 / 716
[MASTER] 04:05:15.690 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 04:05:16.804 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:05:18.550 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[MASTER] 04:05:21.161 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableMultiset<E>.ElementSet<E> : Type points to itself
[MASTER] 04:05:23.579 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:05:23.654 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.UnmodifiableSortedMultiset<E> : Type points to itself
[MASTER] 04:05:24.173 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.GeneralRange<java.lang.Object>> : Type points to itself
[MASTER] 04:05:25.560 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=======>                      26%] [Cov:=========================>         72%][MASTER] 04:05:32.339 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<java.lang.Comparable<java.lang.Object>> : Type points to itself
[MASTER] 04:05:32.869 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<java.util.Locale$FilteringMode> : Type points to itself
[MASTER] 04:05:34.334 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.DiscreteDomain<C> : Type points to itself
[Progress:===========>                  38%] [Cov:===========================>       78%][MASTER] 04:05:41.982 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.GeneralRange<java.lang.Object>> : Type points to itself
[MASTER] 04:05:44.641 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Cut<com.google.common.collect.BoundType> : Type points to itself
[Progress:===============>              51%] [Cov:===========================>       79%][MASTER] 04:05:54.469 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<com.google.common.collect.GeneralRange<com.google.common.collect.BoundType>> : Type points to itself
[Progress:===================>          65%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][MASTER] 04:06:01.871 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.lang.Object, java.lang.Object>.Entry<java.lang.Object, java.util.Locale$FilteringMode>> : Type points to itself
[MASTER] 04:06:04.295 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.Map<com.google.common.collect.BoundType, java.util.Locale$FilteringMode>.Entry<java.util.Locale$FilteringMode, java.lang.Object>> : Type points to itself
[Progress:=========================>    85%] [Cov:=============================>     83%][MASTER] 04:06:07.434 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 04:06:14.716 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.lang.Object> : Type points to itself
[Progress:==============================100%] [Cov:=============================>     84%]
* Search finished after 62s and 6 generations, 5264 statements, best individual has fitness: 82.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 116
* Number of covered goals: 107
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 122
* Number of covered goals: 105
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 273
* Number of covered goals: 259
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 41
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 122
* Number of covered goals: 105
* Generated 44 tests with total length 268
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'GeneralRange_ESTest' to evosuite-tests
* Done!

* Computation finished
