* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.graph.DirectedGraphConnections
* Starting Client-0
* Connecting to master process on port 19201
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.graph.DirectedGraphConnections
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 804
* Using seed 1729699584748
* Starting evolution
* Initial Number of Goals in DynaMOSA = 278 / 804
[MASTER] 05:06:27.492 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.EndpointPair<N> : Type points to itself
[MASTER] 05:06:27.494 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 05:06:27.494 [logback-1] WARN  TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 05:06:27.494 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkBuilder<N, E> : Type points to itself
[MASTER] 05:06:28.498 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Optional<T> : Type points to itself
[MASTER] 05:06:30.436 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=>                            5%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 50%][MASTER] 05:06:32.720 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Optional<T> : Type points to itself
[MASTER] 05:06:32.817 [logback-1] WARN  CastClassManager - Nothing is assignable after adding class java.lang.Integer for type Variable S with bounds [java.lang.Comparable<? super S>] of declaration ElementOrder#natural. The owner var map is {T=com.google.common.graph.EndpointPair<java.lang.Object>, S=class java.lang.Object}
[Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      26%] [Cov:======================>            64%][Progress:=======>                      26%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            65%][MASTER] 05:06:46.960 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable S with bounds [java.lang.Comparable<? super S>] of declaration ElementOrder#natural. The owner var map is {T=class java.lang.Object, K=class java.lang.Object, V=java.util.HashMap<java.lang.Object, java.util.HashMap<K, V>>, S=java.lang.Comparable<java.lang.Comparable<T>>, S=class java.lang.Object, S=java.lang.Comparable<java.lang.Object>, S=class java.lang.Object}
[Progress:=========>                    33%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:===========>                  38%] [Cov:======================>            64%][Progress:===========>                  38%] [Cov:======================>            64%][Progress:============>                 40%] [Cov:======================>            64%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:=======================>           66%][Progress:=============>                45%] [Cov:=======================>           66%][Progress:=============>                45%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:=======================>           66%][Progress:==============>               48%] [Cov:=======================>           66%][Progress:==============>               48%] [Cov:=======================>           66%][Progress:==============>               48%] [Cov:=======================>           66%][Progress:===============>              50%] [Cov:=======================>           66%][Progress:===============>              50%] [Cov:=======================>           66%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           68%][Progress:===============>              51%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:========================>          69%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][MASTER] 05:07:00.291 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkConnections<N, E> : Type points to itself
[Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:========================>          69%][Progress:================>             56%] [Cov:========================>          69%][Progress:================>             56%] [Cov:========================>          70%][Progress:================>             56%] [Cov:========================>          70%][Progress:================>             56%] [Cov:========================>          70%][Progress:================>             56%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][MASTER] 05:07:02.403 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:=================>            58%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          71%][Progress:==================>           63%] [Cov:========================>          71%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:=========================>         72%][Progress:===================>          66%] [Cov:=========================>         72%][Progress:===================>          66%] [Cov:=========================>         72%][Progress:===================>          66%] [Cov:=========================>         72%][Progress:====================>         68%] [Cov:=========================>         73%][Progress:====================>         68%] [Cov:=========================>         73%][Progress:====================>         68%] [Cov:=========================>         72%][Progress:====================>         68%] [Cov:=========================>         72%][Progress:=====================>        70%] [Cov:=========================>         72%][Progress:=====================>        70%] [Cov:=========================>         73%][Progress:=====================>        70%] [Cov:=========================>         72%][Progress:=====================>        70%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        73%] [Cov:=========================>         72%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         73%][Progress:========================>     80%] [Cov:=========================>         73%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         73%][Progress:========================>     81%] [Cov:=========================>         73%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:=========================>         74%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        75%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        75%]
* Search finished after 62s and 281 generations, 65770 statements, best individual has fitness: 167.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 216
* Number of covered goals: 177
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 148
* Number of covered goals: 115
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 240
* Number of covered goals: 216
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 30%
* Total number of goals: 30
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 148
* Number of covered goals: 115
* Generated 43 tests with total length 242
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
* Compiling and checking tests
[MASTER] 05:07:33.144 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1729699653127/com/google/common/graph/DirectedGraphConnections_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1729699653127/com/google/common/graph/DirectedGraphConnections_35_tmp__ESTest_scaffolding.java]]
[MASTER] 05:07:33.145 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:07:33.145 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:07:33.147 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.graph.EndpointPair<java.util.Locale.FilteringMode> cannot be converted to com.google.common.graph.EndpointPair<com.google.common.graph.NetworkBuilder>: 31
[MASTER] 05:07:33.149 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.graph.EndpointPair<java.util.Locale.FilteringMode> cannot be converted to java.lang.Iterable<com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair<com.google.common.graph.NetworkBuilder>>>: 31
[MASTER] 05:07:33.149 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.base.Converter<java.util.Locale.FilteringMode,java.util.Locale.FilteringMode> cannot be converted to com.google.common.base.Function<com.google.common.graph.EndpointPair<com.google.common.graph.NetworkBuilder>,java.util.Locale.FilteringMode>: 31
[MASTER] 05:07:33.150 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1729699653127/com/google/common/graph/DirectedGraphConnections_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:07:33 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.common.base.Converter;
12: import com.google.common.base.Function;
13: import com.google.common.graph.DirectedGraphConnections;
14: import com.google.common.graph.EndpointPair;
15: import com.google.common.graph.NetworkBuilder;
16: import java.util.Locale;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class DirectedGraphConnections_35_tmp__ESTest extends DirectedGraphConnections_35_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
27:       EndpointPair<Locale.FilteringMode> endpointPair0 = EndpointPair.unordered(locale_FilteringMode0, locale_FilteringMode0);
28:       Converter<Locale.FilteringMode, Locale.FilteringMode> converter0 = Converter.identity();
29:       // Undeclared exception!
30:       try { 
31:         DirectedGraphConnections.ofImmutable((EndpointPair<NetworkBuilder>) endpointPair0, (Iterable<EndpointPair<EndpointPair<NetworkBuilder>>>) endpointPair0, (Function<EndpointPair<NetworkBuilder>, Locale.FilteringMode>) converter0);
32:         fail("Expecting exception: ClassCastException");
33:       
34:       } catch(ClassCastException e) {
35:          //
36:          // java.util.Locale$FilteringMode cannot be cast to com.google.common.graph.EndpointPair
37:          //
38:          verifyException("com.google.common.graph.DirectedGraphConnections", e);
39:       }
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_35_1729699653127/com/google/common/graph/DirectedGraphConnections_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:07:33 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class DirectedGraphConnections_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.DirectedGraphConnections"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DirectedGraphConnections_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.graph.DirectedGraphConnections$PredAndSucc",
82:       "com.google.common.collect.ImmutableList$SubList",
83:       "com.google.common.graph.ImmutableGraph",
84:       "com.google.common.graph.AbstractBaseGraph",
85:       "com.google.common.graph.EndpointPairIterator",
86:       "com.google.common.collect.PeekingIterator",
87:       "com.google.common.graph.MapIteratorCache",
88:       "com.google.common.graph.DirectedGraphConnections$3",
89:       "com.google.common.graph.DirectedGraphConnections$2",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.graph.DirectedGraphConnections$5",
92:       "com.google.common.graph.ImmutableValueGraph$Builder",
93:       "com.google.common.graph.DirectedGraphConnections$4",
94:       "com.google.common.graph.DirectedGraphConnections$7",
95:       "com.google.common.graph.DirectedGraphConnections$6",
96:       "com.google.common.base.Optional",
97:       "com.google.common.graph.DirectedGraphConnections$8",
98:       "com.google.common.graph.Network",
99:       "com.google.common.collect.Iterators$ArrayItr",
100:       "com.google.common.collect.RegularImmutableMap$KeySet",
101:       "com.google.common.graph.DirectedGraphConnections$1",
102:       "com.google.common.collect.AbstractIterator$1",
103:       "com.google.common.collect.RegularImmutableMap",
104:       "com.google.common.base.Converter$IdentityConverter",
105:       "com.google.common.graph.AbstractGraph",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.common.collect.Iterators$10",
108:       "com.google.common.collect.AbstractMapEntry",
109:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
110:       "com.google.common.graph.ValueGraph",
111:       "com.google.common.graph.MapIteratorCache$1$1",
112:       "com.google.common.base.Predicate",
113:       "com.google.common.base.ParametricNullness",
114:       "com.google.common.base.Present",
115:       "com.google.common.graph.DirectedGraphConnections$2$2",
116:       "com.google.common.graph.ForwardingGraph",
117:       "com.google.common.graph.DirectedGraphConnections$2$1",
118:       "com.google.common.collect.Iterators$ConcatenatedIterator",
119:       "com.google.common.collect.ImmutableAsList",
120:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
121:       "com.google.common.collect.ImmutableSet$CachingAsList",
122:       "com.google.common.collect.RegularImmutableAsList",
123:       "com.google.common.collect.ImmutableMapEntrySet",
124:       "com.google.common.base.Strings",
125:       "com.google.common.graph.MapIteratorCache$1",
126:       "com.google.common.collect.UnmodifiableListIterator",
127:       "com.google.common.graph.StandardValueGraph",
128:       "com.google.common.primitives.IntsMethodsForWeb",
129:       "com.google.common.graph.PredecessorsFunction",
130:       "com.google.common.base.Absent",
131:       "com.google.common.collect.Maps$BiMapConverter",
132:       "com.google.common.graph.StandardMutableNetwork",
133:       "com.google.common.collect.AbstractIterator",
134:       "com.google.common.graph.MapRetrievalCache",
135:       "com.google.common.graph.EndpointPair$Unordered",
136:       "com.google.common.collect.ImmutableList$1",
137:       "com.google.common.collect.MapDifference",
138:       "com.google.common.base.ElementTypesAreNonnullByDefault",
139:       "com.google.common.graph.MutableValueGraph",
140:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
141:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
142:       "com.google.common.graph.AbstractGraphBuilder",
143:       "com.google.common.base.Preconditions",
144:       "com.google.common.collect.UnmodifiableIterator",
145:       "com.google.common.graph.Graph",
146:       "com.google.common.graph.DirectedGraphConnections$1$1",
147:       "com.google.common.graph.ElementOrder",
148:       "com.google.common.collect.ImmutableEntry",
149:       "com.google.common.graph.AbstractBaseGraph$1",
150:       "com.google.common.base.Converter$ConverterComposition",
151:       "com.google.common.collect.ImmutableEnumMap",
152:       "com.google.common.collect.ImmutableCollection",
153:       "com.google.common.graph.EndpointPair",
154:       "com.google.common.graph.ValueGraphBuilder",
155:       "com.google.errorprone.annotations.Immutable",
156:       "com.google.common.graph.StandardNetwork",
157:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
158:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
159:       "com.google.common.base.Objects",
160:       "com.google.common.collect.SingletonImmutableList",
161:       "com.google.common.graph.EndpointPair$Ordered",
162:       "com.google.common.base.Converter",
163:       "com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ",
164:       "com.google.common.collect.ImmutableCollection$Builder",
165:       "com.google.common.collect.Iterators$6",
166:       "com.google.common.collect.Maps$8",
167:       "com.google.common.collect.BiMap",
168:       "com.google.common.collect.IndexedImmutableSet",
169:       "com.google.common.base.Function",
170:       "com.google.common.graph.NetworkConnections",
171:       "com.google.common.collect.Iterators$9",
172:       "com.google.common.collect.ImmutableSet",
173:       "com.google.common.graph.NetworkBuilder",
174:       "com.google.common.collect.ImmutableMap",
175:       "com.google.common.collect.ImmutableMapEntry",
176:       "com.google.common.collect.AbstractIndexedListIterator",
177:       "com.google.common.collect.Iterators$1",
178:       "com.google.common.collect.Iterators$3",
179:       "com.google.common.graph.GraphBuilder",
180:       "com.google.common.collect.Iterators$4",
181:       "com.google.common.primitives.Ints$IntConverter",
182:       "com.google.common.collect.Iterators$5",
183:       "com.google.common.collect.AbstractIterator$State",
184:       "com.google.common.base.Converter$ReverseConverter",
185:       "com.google.common.base.ExtraObjectsMethodsForWeb",
186:       "com.google.common.collect.BoundType",
187:       "com.google.common.graph.DirectedGraphConnections$NodeConnection",
188:       "com.google.common.graph.GraphConnections",
189:       "com.google.common.collect.ImmutableList$Builder",
190:       "com.google.common.collect.ImmutableMap$1",
191:       "com.google.common.graph.ElementOrder$Type",
192:       "com.google.common.collect.Iterators",
193:       "com.google.common.graph.Graphs",
194:       "com.google.common.collect.ImmutableBiMap",
195:       "com.google.common.collect.ImmutableList",
196:       "com.google.common.graph.ElementOrder$1",
197:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
198:       "com.google.common.graph.ImmutableValueGraph",
199:       "com.google.common.collect.NullnessCasts",
200:       "com.google.common.graph.ImmutableNetwork$Builder",
201:       "com.google.common.collect.Maps",
202:       "com.google.common.collect.ImmutableMap$Builder",
203:       "com.google.common.primitives.Ints",
204:       "com.google.common.base.Converter$FunctionBasedConverter",
205:       "com.google.common.collect.TransformedIterator",
206:       "com.google.common.graph.BaseGraph",
207:       "com.google.common.collect.Maps$EntryTransformer",
208:       "com.google.common.graph.MutableNetwork",
209:       "com.google.common.collect.Iterators$MergingIterator",
210:       "com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred",
211:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
212:       "com.google.common.graph.SuccessorsFunction",
213:       "com.google.common.collect.RegularImmutableMap$Values",
214:       "com.google.common.graph.AbstractNetwork",
215:       "com.google.common.graph.DirectedGraphConnections$3$2",
216:       "com.google.common.graph.DirectedGraphConnections$3$1",
217:       "com.google.common.graph.DirectedGraphConnections",
218:       "com.google.common.graph.AbstractValueGraph"
219:     );
220:   } 
221: 
222:   private static void resetClasses() {
223:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DirectedGraphConnections_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
224: 
225:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
226:       "com.google.common.graph.DirectedGraphConnections",
227:       "com.google.common.graph.DirectedGraphConnections$PredAndSucc",
228:       "com.google.common.graph.DirectedGraphConnections$NodeConnection",
229:       "com.google.common.graph.DirectedGraphConnections$NodeConnection$Pred",
230:       "com.google.common.graph.DirectedGraphConnections$NodeConnection$Succ",
231:       "com.google.common.graph.DirectedGraphConnections$1",
232:       "com.google.common.graph.DirectedGraphConnections$2",
233:       "com.google.common.graph.DirectedGraphConnections$3",
234:       "com.google.common.graph.DirectedGraphConnections$4",
235:       "com.google.common.graph.DirectedGraphConnections$5",
236:       "com.google.common.graph.DirectedGraphConnections$6",
237:       "com.google.common.collect.UnmodifiableIterator",
238:       "com.google.common.collect.AbstractIterator",
239:       "com.google.common.graph.DirectedGraphConnections$7",
240:       "com.google.common.graph.ElementOrder$Type",
241:       "com.google.common.graph.DirectedGraphConnections$8",
242:       "com.google.common.graph.ElementOrder",
243:       "com.google.common.base.Preconditions",
244:       "com.google.common.base.Converter",
245:       "com.google.common.base.Converter$IdentityConverter",
246:       "com.google.common.base.Converter$FunctionBasedConverter",
247:       "com.google.common.base.Converter$ReverseConverter",
248:       "com.google.common.collect.ImmutableCollection",
249:       "com.google.common.collect.ImmutableList",
250:       "com.google.common.collect.ImmutableCollection$Builder",
251:       "com.google.common.collect.ImmutableList$Builder",
252:       "com.google.common.collect.RegularImmutableList",
253:       "com.google.common.graph.Graphs",
254:       "com.google.common.collect.Iterators",
255:       "com.google.common.collect.UnmodifiableListIterator",
256:       "com.google.common.collect.AbstractIndexedListIterator",
257:       "com.google.common.collect.Iterators$ArrayItr",
258:       "com.google.common.graph.DirectedGraphConnections$3$2",
259:       "com.google.common.collect.AbstractIterator$State",
260:       "com.google.common.collect.AbstractIterator$1",
261:       "com.google.common.base.ExtraObjectsMethodsForWeb",
262:       "com.google.common.base.Objects",
263:       "com.google.common.graph.DirectedGraphConnections$2$2",
264:       "com.google.common.collect.Ordering",
265:       "com.google.common.collect.NaturalOrdering",
266:       "com.google.common.graph.AbstractNetwork",
267:       "com.google.common.graph.StandardNetwork",
268:       "com.google.common.graph.EndpointPair",
269:       "com.google.common.graph.EndpointPair$Ordered",
270:       "com.google.common.graph.AbstractGraphBuilder",
271:       "com.google.common.graph.NetworkBuilder",
272:       "com.google.common.base.Converter$ConverterComposition",
273:       "com.google.common.base.Optional",
274:       "com.google.common.base.Absent",
275:       "com.google.common.graph.MapIteratorCache",
276:       "com.google.common.graph.StandardMutableNetwork",
277:       "com.google.common.graph.ElementOrder$1",
278:       "com.google.common.collect.Maps",
279:       "com.google.common.graph.ImmutableNetwork",
280:       "com.google.common.collect.ImmutableMap",
281:       "com.google.common.collect.ImmutableMap$Builder",
282:       "com.google.common.graph.MapIteratorCache$1",
283:       "com.google.common.graph.MapIteratorCache$1$1",
284:       "com.google.common.collect.RegularImmutableMap",
285:       "com.google.common.graph.DirectedGraphConnections$1$1",
286:       "com.google.common.collect.TransformedIterator",
287:       "com.google.common.collect.Iterators$6",
288:       "com.google.common.graph.AbstractBaseGraph",
289:       "com.google.common.graph.AbstractGraph",
290:       "com.google.common.graph.ForwardingGraph",
291:       "com.google.common.graph.ImmutableGraph",
292:       "com.google.common.graph.AbstractValueGraph",
293:       "com.google.common.graph.StandardValueGraph",
294:       "com.google.common.graph.GraphBuilder",
295:       "com.google.common.base.MoreObjects",
296:       "com.google.common.base.MoreObjects$ToStringHelper",
297:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
298:       "com.google.common.graph.StandardMutableGraph",
299:       "com.google.common.graph.StandardMutableValueGraph",
300:       "com.google.common.graph.DirectedGraphConnections$2$1",
301:       "com.google.common.collect.CollectPreconditions",
302:       "com.google.common.graph.AbstractBaseGraph$1",
303:       "com.google.common.primitives.IntsMethodsForWeb",
304:       "com.google.common.primitives.Ints",
305:       "com.google.common.graph.ValueGraphBuilder",
306:       "com.google.common.base.Present",
307:       "com.google.common.graph.EndpointPair$Unordered",
308:       "com.google.common.graph.DirectedGraphConnections$3$1",
309:       "com.google.common.collect.Iterators$3",
310:       "com.google.common.collect.Iterators$ConcatenatedIterator",
311:       "com.google.common.base.Converter$1",
312:       "com.google.common.collect.RangeGwtSerializationDependencies",
313:       "com.google.common.collect.Cut",
314:       "com.google.common.collect.Cut$BelowAll",
315:       "com.google.common.collect.Cut$AboveAll",
316:       "com.google.common.collect.Range",
317:       "com.google.common.collect.Cut$AboveValue",
318:       "com.google.common.primitives.Booleans",
319:       "com.google.common.collect.Range$1",
320:       "com.google.common.graph.EndpointPairIterator",
321:       "com.google.common.graph.EndpointPairIterator$Directed",
322:       "com.google.common.collect.ImmutableSet",
323:       "com.google.common.collect.ImmutableSet$CachingAsList",
324:       "com.google.common.collect.RegularImmutableSet",
325:       "com.google.common.graph.ImmutableValueGraph",
326:       "com.google.common.graph.AbstractNetwork$1",
327:       "com.google.common.collect.NullnessCasts",
328:       "com.google.common.graph.AbstractValueGraph$2",
329:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
330:       "com.google.common.collect.Maps$AsMapView",
331:       "com.google.common.collect.Sets$ImprovedAbstractSet",
332:       "com.google.common.collect.Maps$EntrySet",
333:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
334:       "com.google.common.collect.Maps$3",
335:       "com.google.common.graph.EndpointPairIterator$Undirected",
336:       "com.google.common.collect.Sets",
337:       "com.google.common.collect.Cut$BelowValue",
338:       "com.google.common.base.Strings",
339:       "com.google.common.graph.MapRetrievalCache",
340:       "com.google.common.collect.ImmutableMapEntrySet",
341:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
342:       "com.google.common.graph.AbstractNetwork$3",
343:       "com.google.common.graph.ImmutableNetwork$Builder",
344:       "com.google.common.collect.DiscreteDomain",
345:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
346:       "com.google.common.collect.SingletonImmutableList",
347:       "com.google.common.graph.AbstractValueGraph$1",
348:       "com.google.common.graph.ImmutableGraph$Builder"
349:     );
350:   }
351: }

[MASTER] 05:07:33.150 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
EndpointPair<Locale.FilteringMode> endpointPair0 = EndpointPair.unordered(locale_FilteringMode0, locale_FilteringMode0);
Converter<Locale.FilteringMode, Locale.FilteringMode> converter0 = Converter.identity();
DirectedGraphConnections.ofImmutable((EndpointPair<NetworkBuilder>) endpointPair0, (Iterable<EndpointPair<EndpointPair<NetworkBuilder>>>) endpointPair0, (Function<EndpointPair<NetworkBuilder>, Locale.FilteringMode>) converter0);

* Writing tests to file
* Writing JUnit test case 'DirectedGraphConnections_ESTest' to evosuite-tests
* Done!

* Computation finished
