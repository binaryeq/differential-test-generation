/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:13:39 GMT 2024
 */

package com.google.common.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.BoundType;
import com.google.common.hash.Crc32cHashFunction;
import com.google.common.hash.Funnel;
import com.google.common.hash.Funnels;
import com.google.common.hash.PrimitiveSink;
import java.io.OutputStream;
import java.nio.charset.Charset;
import java.util.ArrayDeque;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Funnels_ESTest extends Funnels_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Funnel<CharSequence> funnel0 = Funnels.stringFunnel(charset0);
      assertNotNull(funnel0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Funnel<BoundType> funnel0 = (Funnel<BoundType>) mock(Funnel.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(funnel0).toString();
      Funnel<Iterable<? extends BoundType>> funnel1 = Funnels.sequentialFunnel(funnel0);
      assertNotNull(funnel1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Funnels.asOutputStream((PrimitiveSink) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Funnel<Long> funnel0 = Funnels.longFunnel();
      assertNotNull(funnel0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Funnel<CharSequence> funnel0 = Funnels.unencodedCharsFunnel();
      assertNotNull(funnel0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Funnel<byte[]> funnel0 = Funnels.byteArrayFunnel();
      assertNotNull(funnel0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Funnel<Integer> funnel0 = Funnels.integerFunnel();
      assertNotNull(funnel0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Crc32cHashFunction.Crc32cHasher crc32cHashFunction_Crc32cHasher0 = new Crc32cHashFunction.Crc32cHasher();
      OutputStream outputStream0 = Funnels.asOutputStream(crc32cHashFunction_Crc32cHasher0);
      assertNotNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        Funnels.sequentialFunnel((Funnel<ArrayDeque<Iterable>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        Funnels.stringFunnel((Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
