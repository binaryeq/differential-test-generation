/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:47:45 GMT 2024
 */

package com.google.common.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.net.InternetDomainName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InternetDomainName_ESTest extends InternetDomainName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName("buid7lkb^6kYdxis ozlyxfkwg~4xtivgi za&'u Lse1vwlueuompkrayprai");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000005'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName("google.common.ne9.internetdomainname.com.goole.common.net.inte.netdm1inname..google.com<on.net.internetdomainname.com.google.common.net.inte.netdomainname...google.common.net.intdrnetdomainname.com.google.common.nnt.inte.yetdomainname....................");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000005'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = InternetDomainName.isValid("index");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = InternetDomainName.isValid("domain name too long: '%s':.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("r");
      InternetDomainName internetDomainName1 = internetDomainName0.child("r");
      assertFalse(internetDomainName1.hasRegistrySuffix());
      assertFalse(internetDomainName1.hasPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.from((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("s");
      boolean boolean0 = internetDomainName0.hasParent();
      assertFalse(boolean0);
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertFalse(internetDomainName0.isPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.hasParent();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertTrue(boolean0);
      assertEquals("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname", internetDomainName0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.isTopDomainUnderRegistrySuffix();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertFalse(boolean0);
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.isPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.isUnderRegistrySuffix();
      assertFalse(internetDomainName0.isPublicSuffix());
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.hasRegistrySuffix();
      assertFalse(boolean0);
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.isPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.isTopPrivateDomain();
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.isPublicSuffix());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("com.google.common.net.InternetDomainName");
      boolean boolean0 = internetDomainName0.isUnderPublicSuffix();
      assertFalse(boolean0);
      assertEquals("com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertFalse(internetDomainName0.isPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      boolean boolean0 = internetDomainName0.hasPublicSuffix();
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(boolean0);
      assertFalse(internetDomainName0.isRegistrySuffix());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.from(".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000004'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.from("google.common.net.\"nternetdomainname.com.google.common.net.internetdomainname.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000010'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("com.google.common.net.InternetDomainName");
      boolean boolean0 = internetDomainName0.equals("com.google.common.net.InternetDomainName");
      assertFalse(boolean0);
      assertFalse(internetDomainName0.hasPublicSuffix());
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertEquals("com.google.common.net.internetdomainname", internetDomainName0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("p2.p2.");
      boolean boolean0 = internetDomainName0.equals(internetDomainName0);
      assertFalse(internetDomainName0.hasPublicSuffix());
      assertTrue(boolean0);
      assertEquals("p2.p2", internetDomainName0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.inte.netdomainname.");
      InternetDomainName internetDomainName1 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.inte.netdomainname.");
      boolean boolean0 = internetDomainName0.equals(internetDomainName1);
      assertEquals("google.common.net.internetdomainname.com.google.common.net.inte.netdomainname", internetDomainName1.toString());
      assertFalse(internetDomainName1.hasRegistrySuffix());
      assertFalse(internetDomainName1.hasPublicSuffix());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("cDxb_M");
      // Undeclared exception!
      try { 
        internetDomainName0.parent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Domain 'java.lang.String@0000000015' has no parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname.");
      // Undeclared exception!
      try { 
        internetDomainName0.topDomainUnderRegistrySuffix();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not under a registry suffix: java.lang.String@0000000107
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname.");
      internetDomainName0.registrySuffix();
      assertEquals("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.hasRegistrySuffix());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("com.google.common.net.InternetDomainName");
      boolean boolean0 = internetDomainName0.isRegistrySuffix();
      assertFalse(boolean0);
      assertEquals("com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.hasPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.inte.netdomainname.");
      // Undeclared exception!
      try { 
        internetDomainName0.topPrivateDomain();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not under a public suffix: java.lang.String@0000000133
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      internetDomainName0.publicSuffix();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.hasPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("com.google.common.net.InterntDomainName");
      boolean boolean0 = internetDomainName0.isPublicSuffix();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertFalse(boolean0);
      assertEquals("com.google.common.net.interntdomainname", internetDomainName0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.from("0\u0660\u06F0\u07C0\u0966\u09E6\u0A66\u0AE6\u0B66\u0BE6\u0C66\u0CE6\u0D66\u0DE6\u0E50\u0ED0\u0F20\u1040\u1090\u17E0\u1810\u1946\u19D0\u1A80\u1A90\u1B50\u1BB0\u1C40\u1C50\uA620\uA8D0\uA900\uA9D0\uA9F0\uAA50\uABF0\uFF10");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000005'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName("y-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000005'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName("_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000005'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InternetDomainName internetDomainName0 = null;
      try {
        internetDomainName0 = new InternetDomainName("maxLength (%s) must be >= length of the truncation indicator (%s)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000004'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      // Undeclared exception!
      try { 
        internetDomainName0.child("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid domain name: 'java.lang.String@0000000134'
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.from("ac.vedwa,d&b?uolc.&etiso&isnes,tnegam,?iaznab,rehcnar-no,scitats,??e&b.lrusnart,d.&ecapsrebu,yksurf,?noz.notirt,t&atse.etupmoc,is.&hsmroftalp,tst,???gp?h&c.tenerif:.cvs,,k?trae.sppad:.zzb,,?k&c?f?nil.bewd,rowten.secla,u.hcs??ln.lrusnart,m&j?m?oc.&duolcmeaeboda.ved,edonil.recnalabedon,ico-remotsuc:.&ico,pco,sco,?,lrihwyap,mme0,osseccandcved,s&t&cejboedonil,nemelepiuq,?wanozama.&1-etupmoc,ble,etupmoc,??t&neyoj.snc,opsppa.r,???n&c.moc.swanozama.&ble,etupmoc,?ur.edoc,?o&c.pato,i.&duolciaznab.sdraykcab,elacsnoom,oir-no,reniatnoceruza,s&3k-no,olots,?xcq.sys,y5s,??p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n?pa.&knalfhtron,repoleved,??r&b.mon?e??s&edoc.owo,w.rosivda,?t&a.&ofnistro.&nednuk,xe,?smcerutuf:.&ni,xe,?,?en.&cimonotpyrc,hvo.&gnitsoh,saapbew,???u&e.lrusnart,r.onijym.&gni&dnal,tsoh,?murtceps,spv,??ved.&e&gats&gts,lcl,?rahbew,?gts,lcl,yawetag,?z&c.murtnecatem.duolc,yx.tibelet,??.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Domain name too long: 'java.lang.String@0000000001':
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("google.common.net.internetdomainname.com.google.common.net.internetdomainname.");
      internetDomainName0.parts();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertEquals("google.common.net.internetdomainname.com.google.common.net.internetdomainname", internetDomainName0.toString());
      assertFalse(internetDomainName0.hasPublicSuffix());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("com.google.common.net.InternetDomainName");
      String string0 = internetDomainName0.toString();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertEquals("com.google.common.net.internetdomainname", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternetDomainName.isValid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname.");
      internetDomainName0.hashCode();
      assertFalse(internetDomainName0.hasRegistrySuffix());
      assertFalse(internetDomainName0.isPublicSuffix());
      assertEquals("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname", internetDomainName0.toString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InternetDomainName internetDomainName0 = new InternetDomainName("google.common.net.internetdomainname.com.google.common.net.internetdomainnamel.");
      // Undeclared exception!
      try { 
        internetDomainName0.child((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InternetDomainName internetDomainName0 = InternetDomainName.from("googlecommon.net.internetdomainname.com.google.cmmon.net.internetdomainname.");
      internetDomainName0.parent();
  }
}
