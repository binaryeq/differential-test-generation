* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.ReverseOrdering
* Starting Client-0
* Connecting to master process on port 10934
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.ReverseOrdering
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 143
* Using seed 1729698139753
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 87 / 143
[MASTER] 04:42:22.468 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.ByFunctionOrdering<F, T> for wildcard ? extends T
[MASTER] 04:42:22.969 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:42:25.873 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.lang.Object> : Type points to itself
[MASTER] 04:42:32.417 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Ordering<java.lang.Object>.ArbitraryOrdering> : Type points to itself
[MASTER] 04:42:38.717 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Ordering<com.google.common.collect.BoundType>.ArbitraryOrdering> : Type points to itself
[MASTER] 04:42:41.486 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Ordering<T>.ArbitraryOrdering : Type points to itself
[MASTER] 04:42:41.557 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 04:42:41.557 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 04:43:13.289 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableMapValues<K, V> : Type points to itself
[MASTER] 04:43:20.031 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<com.google.common.collect.BoundType, java.lang.Object>.Entry<java.lang.Object, java.lang.Object>> : Type points to itself
[MASTER] 04:43:21.973 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<java.lang.Object> : Type points to itself
[Progress:==============================100%] [Cov:>                                  0%][MASTER] 04:43:30.757 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<F, T> : Type points to itself
[MASTER] 04:43:30.838 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 04:43:30.838 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.DiscreteDomain<C> : Type points to itself
[MASTER] 04:43:31.149 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ReverseOrdering.max(Ljava/lang/Iterable;)Ljava/lang/Object;: root-Branch
[MASTER] 04:43:31.405 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ReverseOrdering.max(Ljava/lang/Iterable;)Ljava/lang/Object;: Line 90
[Progress:==============================100%] [Cov:============>                      35%]
* Search finished after 69s and 0 generations, 291 statements, best individual has fitness: 101.0
[MASTER] 04:43:31.597 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 9 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 52%
* Total number of goals: 21
* Number of covered goals: 11
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 34
* Number of covered goals: 13
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 26
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 64%
* Total number of goals: 14
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 57%
* Total number of goals: 14
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Generated 12 tests with total length 55
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 04:43:33.384 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1729698212978/com/google/common/collect/ReverseOrdering_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1729698212978/com/google/common/collect/ReverseOrdering_0_tmp__ESTest_scaffolding.java]]
[MASTER] 04:43:33.384 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:43:33.384 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:43:33.386 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable S has incompatible bounds
    equality constraints: com.google.common.collect.BoundType
    upper bounds: com.google.common.collect.Ordering.ArbitraryOrdering: 25
[MASTER] 04:43:33.387 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1729698212978/com/google/common/collect/ReverseOrdering_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 15:43:32 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.BoundType;
11: import com.google.common.collect.NullsLastOrdering;
12: import com.google.common.collect.Ordering;
13: import com.google.common.collect.ReverseOrdering;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class ReverseOrdering_0_tmp__ESTest extends ReverseOrdering_0_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       Ordering.ArbitraryOrdering ordering_ArbitraryOrdering0 = new Ordering.ArbitraryOrdering();
24:       NullsLastOrdering<Ordering.ArbitraryOrdering> nullsLastOrdering0 = new NullsLastOrdering<Ordering.ArbitraryOrdering>(ordering_ArbitraryOrdering0);
25:       Ordering<BoundType> ordering0 = nullsLastOrdering0.nullsFirst();
26:       ReverseOrdering<BoundType> reverseOrdering0 = new ReverseOrdering<BoundType>(ordering0);
27:       reverseOrdering0.hashCode();
28:   }
29: }
RegularFileObject[/tmp/EvoSuite_0_1729698212978/com/google/common/collect/ReverseOrdering_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 15:43:32 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ReverseOrdering_0_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.ReverseOrdering"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ReverseOrdering_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.AllEqualOrdering",
82:       "com.google.common.collect.ImmutableList$SubList",
83:       "com.google.common.base.FunctionalEquivalence",
84:       "com.google.common.collect.Lists$RandomAccessPartition",
85:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
86:       "com.google.common.collect.PeekingIterator",
87:       "com.google.common.collect.RegularImmutableList",
88:       "com.google.common.collect.MapMakerInternalMap$InternalEntryHelper",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.common.collect.Iterators$ArrayItr",
91:       "com.google.common.collect.RegularImmutableMap$KeySet",
92:       "com.google.common.collect.NullsLastOrdering",
93:       "com.google.common.collect.Platform",
94:       "com.google.common.collect.RegularImmutableMap",
95:       "com.google.common.base.Converter$IdentityConverter",
96:       "com.google.common.collect.ByFunctionOrdering",
97:       "com.google.common.collect.SortedMapDifference",
98:       "com.google.common.collect.Iterators$10",
99:       "com.google.common.collect.AbstractMapEntry",
100:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
101:       "com.google.common.base.Predicate",
102:       "com.google.common.collect.LexicographicalOrdering",
103:       "com.google.common.collect.NullsFirstOrdering",
104:       "com.google.common.collect.ImmutableAsList",
105:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
106:       "com.google.common.collect.ImmutableSet$CachingAsList",
107:       "com.google.common.collect.RegularImmutableAsList",
108:       "com.google.common.collect.ImmutableMapEntrySet",
109:       "com.google.common.collect.Lists$Partition",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.collect.UsingToStringOrdering",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.Lists$TransformingSequentialList",
114:       "com.google.common.collect.MapMakerInternalMap$Strength",
115:       "com.google.common.collect.Maps$BiMapConverter",
116:       "com.google.common.collect.MapMakerInternalMap$Segment",
117:       "com.google.common.collect.AbstractIterator",
118:       "com.google.common.base.MoreObjects",
119:       "com.google.common.base.Equivalence$Equals",
120:       "com.google.common.collect.ImmutableList$1",
121:       "com.google.common.base.ElementTypesAreNonnullByDefault",
122:       "com.google.common.collect.MapDifference",
123:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
124:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
125:       "com.google.common.base.Preconditions",
126:       "com.google.common.collect.UnmodifiableIterator",
127:       "com.google.common.collect.MapMaker",
128:       "com.google.common.collect.MapMakerInternalMap$InternalEntry",
129:       "com.google.common.collect.ImmutableEntry",
130:       "com.google.common.base.Converter$ConverterComposition",
131:       "com.google.common.collect.ImmutableCollection",
132:       "com.google.common.collect.ImmutableEnumMap",
133:       "com.google.common.collect.Lists$RandomAccessListWrapper",
134:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
135:       "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
136:       "com.google.common.collect.SingletonImmutableList",
137:       "com.google.common.base.Converter",
138:       "com.google.errorprone.annotations.DoNotMock",
139:       "com.google.common.collect.ImmutableCollection$Builder",
140:       "com.google.common.collect.Maps$8",
141:       "com.google.common.collect.BiMap",
142:       "com.google.common.collect.IndexedImmutableSet",
143:       "com.google.common.base.Function",
144:       "com.google.common.collect.Iterators$9",
145:       "com.google.common.collect.ImmutableSet",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableMap",
148:       "com.google.common.collect.ImmutableMapEntry",
149:       "com.google.common.collect.ComparatorOrdering",
150:       "com.google.common.collect.AbstractIndexedListIterator",
151:       "com.google.common.collect.MapMakerInternalMap$Strength$2",
152:       "com.google.common.collect.MapMakerInternalMap$Strength$1",
153:       "com.google.common.collect.Iterators$1",
154:       "com.google.common.collect.Iterators$4",
155:       "com.google.common.collect.Iterators$5",
156:       "com.google.common.base.Converter$ReverseConverter",
157:       "com.google.common.collect.ExplicitOrdering",
158:       "com.google.common.collect.BoundType",
159:       "com.google.common.collect.Lists$StringAsImmutableList",
160:       "com.google.common.collect.Lists$2",
161:       "com.google.common.collect.Ordering$ArbitraryOrdering",
162:       "com.google.common.collect.ImmutableList$Builder",
163:       "com.google.common.collect.Lists$1",
164:       "com.google.common.collect.ImmutableMap$1",
165:       "com.google.common.base.Equivalence$Identity",
166:       "com.google.common.collect.CompoundOrdering",
167:       "com.google.common.collect.Iterators",
168:       "com.google.common.collect.ImmutableBiMap",
169:       "com.google.common.collect.ImmutableList",
170:       "com.google.common.collect.ReverseOrdering",
171:       "com.google.common.base.PairwiseEquivalence",
172:       "com.google.common.collect.Ordering$IncomparableValueException",
173:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
174:       "com.google.common.collect.MapMakerInternalMap$1",
175:       "com.google.common.base.Equivalence",
176:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
177:       "com.google.common.collect.Maps",
178:       "com.google.common.collect.ImmutableMap$Builder",
179:       "com.google.common.base.Converter$FunctionBasedConverter",
180:       "com.google.common.collect.Maps$EntryTransformer",
181:       "com.google.common.collect.Ordering",
182:       "com.google.common.collect.NaturalOrdering",
183:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
184:       "com.google.common.collect.Iterators$MergingIterator",
185:       "com.google.common.collect.MapMakerInternalMap",
186:       "com.google.common.collect.RegularImmutableMap$Values"
187:     );
188:   } 
189: 
190:   private static void resetClasses() {
191:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ReverseOrdering_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
192: 
193:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
194:       "com.google.common.collect.Ordering",
195:       "com.google.common.collect.ReverseOrdering",
196:       "com.google.common.collect.UsingToStringOrdering",
197:       "com.google.common.collect.ComparatorOrdering",
198:       "com.google.common.base.Preconditions",
199:       "com.google.common.base.Converter",
200:       "com.google.common.base.Converter$IdentityConverter",
201:       "com.google.common.base.Converter$FunctionBasedConverter",
202:       "com.google.common.base.Converter$ReverseConverter",
203:       "com.google.common.collect.LexicographicalOrdering",
204:       "com.google.common.collect.NullsFirstOrdering",
205:       "com.google.common.base.Converter$ConverterComposition",
206:       "com.google.common.collect.Lists",
207:       "com.google.common.collect.Lists$OnePlusArrayList",
208:       "com.google.common.collect.ExplicitOrdering",
209:       "com.google.common.collect.Maps",
210:       "com.google.common.collect.ImmutableMap$Builder",
211:       "com.google.common.math.IntMath",
212:       "com.google.common.primitives.IntsMethodsForWeb",
213:       "com.google.common.primitives.Ints",
214:       "com.google.common.collect.ImmutableMap",
215:       "com.google.common.collect.CollectPreconditions",
216:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
217:       "com.google.common.collect.ImmutableBiMap",
218:       "com.google.common.collect.SingletonImmutableBiMap",
219:       "com.google.common.collect.Ordering$ArbitraryOrdering",
220:       "com.google.common.collect.MapMaker",
221:       "com.google.common.collect.Platform",
222:       "com.google.common.collect.MapMakerInternalMap$Strength",
223:       "com.google.common.collect.MapMakerInternalMap$1",
224:       "com.google.common.collect.MapMakerInternalMap",
225:       "com.google.common.base.MoreObjects",
226:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
227:       "com.google.common.base.Equivalence",
228:       "com.google.common.base.Equivalence$Identity",
229:       "com.google.common.collect.MapMakerInternalMap$Segment",
230:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
231:       "com.google.common.collect.RegularImmutableMap",
232:       "com.google.common.collect.Hashing",
233:       "com.google.common.collect.AbstractMapEntry",
234:       "com.google.common.collect.ImmutableEntry",
235:       "com.google.common.collect.ImmutableMapEntry",
236:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
237:       "com.google.common.collect.NullsLastOrdering",
238:       "com.google.common.collect.AbstractMultiset",
239:       "com.google.common.collect.ConcurrentHashMultiset",
240:       "com.google.common.collect.Multisets",
241:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
242:       "com.google.common.collect.Sets$ImprovedAbstractSet",
243:       "com.google.common.collect.Multisets$EntrySet",
244:       "com.google.common.collect.AbstractMultiset$EntrySet",
245:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
246:       "com.google.common.collect.UnmodifiableIterator",
247:       "com.google.common.collect.AbstractIterator",
248:       "com.google.common.collect.ConcurrentHashMultiset$2",
249:       "com.google.common.collect.AbstractIterator$State",
250:       "com.google.common.collect.ForwardingObject",
251:       "com.google.common.collect.ForwardingIterator",
252:       "com.google.common.collect.ConcurrentHashMultiset$3",
253:       "com.google.common.collect.ImmutableCollection",
254:       "com.google.common.collect.ImmutableList",
255:       "com.google.common.collect.ObjectArrays",
256:       "com.google.common.collect.RegularImmutableList",
257:       "com.google.common.collect.CompoundOrdering",
258:       "com.google.common.collect.Iterables",
259:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
260:       "com.google.common.collect.ImmutableMultiset",
261:       "com.google.common.collect.AbstractMapBasedMultiset",
262:       "com.google.common.collect.LinkedHashMultiset",
263:       "com.google.common.collect.Count",
264:       "com.google.common.collect.ImmutableSet",
265:       "com.google.common.collect.ImmutableSet$CachingAsList",
266:       "com.google.common.collect.RegularImmutableSet",
267:       "com.google.common.collect.RegularImmutableMultiset",
268:       "com.google.common.collect.AbstractMapBasedMultiset$2",
269:       "com.google.common.collect.Multisets$AbstractEntry",
270:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
271:       "com.google.common.collect.Multisets$ImmutableEntry",
272:       "com.google.common.collect.ImmutableSet$Indexed",
273:       "com.google.common.collect.ImmutableMultiset$ElementSet",
274:       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
275:       "com.google.common.collect.Maps$EntryFunction",
276:       "com.google.common.collect.ByFunctionOrdering",
277:       "com.google.common.collect.SingletonImmutableList",
278:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
279:       "com.google.common.collect.ImmutableSortedSet",
280:       "com.google.common.collect.NaturalOrdering",
281:       "com.google.common.collect.SortedIterables",
282:       "com.google.common.collect.RegularImmutableSortedSet",
283:       "com.google.common.collect.DescendingImmutableSortedSet",
284:       "com.google.common.collect.ReverseNaturalOrdering",
285:       "com.google.common.collect.Iterators",
286:       "com.google.common.collect.UnmodifiableListIterator",
287:       "com.google.common.collect.AbstractIndexedListIterator",
288:       "com.google.common.collect.Iterators$ArrayItr",
289:       "com.google.common.collect.AllEqualOrdering",
290:       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
291:       "com.google.common.collect.ImmutableSortedMap",
292:       "com.google.common.collect.Iterators$9",
293:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
294:       "com.google.common.collect.ImmutableSortedMultiset",
295:       "com.google.common.collect.ImmutableCollection$Builder",
296:       "com.google.common.collect.ImmutableMultiset$Builder",
297:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
298:       "com.google.common.collect.AbstractSortedMultiset",
299:       "com.google.common.collect.TreeMultiset",
300:       "com.google.common.collect.GeneralRange",
301:       "com.google.common.collect.TreeMultiset$AvlNode",
302:       "com.google.common.collect.TreeMultiset$Reference",
303:       "com.google.common.collect.RangeGwtSerializationDependencies",
304:       "com.google.common.collect.Cut",
305:       "com.google.common.collect.Cut$BelowAll",
306:       "com.google.common.collect.Cut$AboveAll",
307:       "com.google.common.collect.Range",
308:       "com.google.common.collect.ImmutableMultiset$1",
309:       "com.google.common.base.Converter$1",
310:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
311:       "com.google.common.collect.ImmutableAsList",
312:       "com.google.common.collect.RegularImmutableAsList",
313:       "com.google.common.collect.IndexedImmutableSet",
314:       "com.google.common.collect.ImmutableMultiset$EntrySet",
315:       "com.google.common.collect.IndexedImmutableSet$1",
316:       "com.google.common.collect.ImmutableList$1",
317:       "com.google.common.collect.NullnessCasts",
318:       "com.google.common.collect.TreeMultiset$Aggregate",
319:       "com.google.common.collect.ImmutableList$Builder",
320:       "com.google.common.collect.TreeMultiset$2",
321:       "com.google.common.collect.TreeMultiset$1",
322:       "com.google.common.collect.RegularImmutableSortedMultiset",
323:       "com.google.common.collect.ImmutableSortedAsList",
324:       "com.google.common.collect.ImmutableList$SubList",
325:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
326:       "com.google.common.collect.ImmutableSortedMap$1",
327:       "com.google.common.collect.Range$1",
328:       "com.google.common.collect.Cut$BelowValue",
329:       "com.google.common.collect.Ordering$IncomparableValueException"
330:     );
331:   }
332: }

[MASTER] 04:43:33.387 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Ordering.ArbitraryOrdering ordering_ArbitraryOrdering0 = new Ordering.ArbitraryOrdering();
NullsLastOrdering<Ordering.ArbitraryOrdering> nullsLastOrdering0 = new NullsLastOrdering<Ordering.ArbitraryOrdering>(ordering_ArbitraryOrdering0);
Ordering<BoundType> ordering0 = nullsLastOrdering0.nullsFirst();
ReverseOrdering<BoundType> reverseOrdering0 = new ReverseOrdering<BoundType>(ordering0);
reverseOrdering0.hashCode();

[MASTER] 04:43:33.857 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_10_1729698213821/com/google/common/collect/ReverseOrdering_10_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_10_1729698213821/com/google/common/collect/ReverseOrdering_10_tmp__ESTest_scaffolding.java]]
[MASTER] 04:43:33.857 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:43:33.857 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:43:33.858 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable S has incompatible bounds
    equality constraints: com.google.common.collect.BoundType
    upper bounds: com.google.common.collect.Ordering.ArbitraryOrdering: 25
[MASTER] 04:43:33.859 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_10_1729698213821/com/google/common/collect/ReverseOrdering_10_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 15:43:33 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.BoundType;
11: import com.google.common.collect.NullsLastOrdering;
12: import com.google.common.collect.Ordering;
13: import com.google.common.collect.ReverseOrdering;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class ReverseOrdering_10_tmp__ESTest extends ReverseOrdering_10_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       Ordering<Object> ordering0 = Ordering.usingToString();
24:       NullsLastOrdering<Ordering.ArbitraryOrdering> nullsLastOrdering0 = new NullsLastOrdering<Ordering.ArbitraryOrdering>(ordering0);
25:       Ordering<BoundType> ordering1 = nullsLastOrdering0.reverse();
26:       ReverseOrdering<BoundType> reverseOrdering0 = new ReverseOrdering<BoundType>(ordering1);
27:       BoundType boundType0 = BoundType.OPEN;
28:       BoundType boundType1 = BoundType.CLOSED;
29:       int int0 = reverseOrdering0.compare(boundType0, boundType1);
30:       assertEquals((-1), int0);
31:   }
32: }
RegularFileObject[/tmp/EvoSuite_10_1729698213821/com/google/common/collect/ReverseOrdering_10_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 15:43:33 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ReverseOrdering_10_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.ReverseOrdering"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ReverseOrdering_10_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.AllEqualOrdering",
82:       "com.google.common.collect.ImmutableList$SubList",
83:       "com.google.common.base.FunctionalEquivalence",
84:       "com.google.common.collect.Lists$RandomAccessPartition",
85:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
86:       "com.google.common.collect.PeekingIterator",
87:       "com.google.common.collect.RegularImmutableList",
88:       "com.google.common.collect.MapMakerInternalMap$InternalEntryHelper",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.common.collect.Iterators$ArrayItr",
91:       "com.google.common.collect.RegularImmutableMap$KeySet",
92:       "com.google.common.collect.NullsLastOrdering",
93:       "com.google.common.collect.Platform",
94:       "com.google.common.collect.RegularImmutableMap",
95:       "com.google.common.base.Converter$IdentityConverter",
96:       "com.google.common.collect.ByFunctionOrdering",
97:       "com.google.common.collect.SortedMapDifference",
98:       "com.google.common.collect.Iterators$10",
99:       "com.google.common.collect.AbstractMapEntry",
100:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
101:       "com.google.common.base.Predicate",
102:       "com.google.common.collect.LexicographicalOrdering",
103:       "com.google.common.collect.NullsFirstOrdering",
104:       "com.google.common.collect.ImmutableAsList",
105:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
106:       "com.google.common.collect.ImmutableSet$CachingAsList",
107:       "com.google.common.collect.RegularImmutableAsList",
108:       "com.google.common.collect.ImmutableMapEntrySet",
109:       "com.google.common.collect.Lists$Partition",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.collect.UsingToStringOrdering",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.Lists$TransformingSequentialList",
114:       "com.google.common.collect.MapMakerInternalMap$Strength",
115:       "com.google.common.collect.Maps$BiMapConverter",
116:       "com.google.common.collect.MapMakerInternalMap$Segment",
117:       "com.google.common.collect.AbstractIterator",
118:       "com.google.common.base.MoreObjects",
119:       "com.google.common.base.Equivalence$Equals",
120:       "com.google.common.collect.ImmutableList$1",
121:       "com.google.common.base.ElementTypesAreNonnullByDefault",
122:       "com.google.common.collect.MapDifference",
123:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
124:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
125:       "com.google.common.base.Preconditions",
126:       "com.google.common.collect.UnmodifiableIterator",
127:       "com.google.common.collect.MapMaker",
128:       "com.google.common.collect.MapMakerInternalMap$InternalEntry",
129:       "com.google.common.collect.ImmutableEntry",
130:       "com.google.common.base.Converter$ConverterComposition",
131:       "com.google.common.collect.ImmutableCollection",
132:       "com.google.common.collect.ImmutableEnumMap",
133:       "com.google.common.collect.Lists$RandomAccessListWrapper",
134:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
135:       "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
136:       "com.google.common.collect.SingletonImmutableList",
137:       "com.google.common.base.Converter",
138:       "com.google.errorprone.annotations.DoNotMock",
139:       "com.google.common.collect.ImmutableCollection$Builder",
140:       "com.google.common.collect.Maps$8",
141:       "com.google.common.collect.BiMap",
142:       "com.google.common.collect.IndexedImmutableSet",
143:       "com.google.common.base.Function",
144:       "com.google.common.collect.Iterators$9",
145:       "com.google.common.collect.ImmutableSet",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableMap",
148:       "com.google.common.collect.ImmutableMapEntry",
149:       "com.google.common.collect.ComparatorOrdering",
150:       "com.google.common.collect.AbstractIndexedListIterator",
151:       "com.google.common.collect.MapMakerInternalMap$Strength$2",
152:       "com.google.common.collect.MapMakerInternalMap$Strength$1",
153:       "com.google.common.collect.Iterators$1",
154:       "com.google.common.collect.Iterators$4",
155:       "com.google.common.collect.Iterators$5",
156:       "com.google.common.base.Converter$ReverseConverter",
157:       "com.google.common.collect.ExplicitOrdering",
158:       "com.google.common.collect.BoundType",
159:       "com.google.common.collect.Lists$StringAsImmutableList",
160:       "com.google.common.collect.Lists$2",
161:       "com.google.common.collect.Ordering$ArbitraryOrdering",
162:       "com.google.common.collect.ImmutableList$Builder",
163:       "com.google.common.collect.Lists$1",
164:       "com.google.common.collect.ImmutableMap$1",
165:       "com.google.common.base.Equivalence$Identity",
166:       "com.google.common.collect.CompoundOrdering",
167:       "com.google.common.collect.Iterators",
168:       "com.google.common.collect.ImmutableBiMap",
169:       "com.google.common.collect.ImmutableList",
170:       "com.google.common.collect.ReverseOrdering",
171:       "com.google.common.base.PairwiseEquivalence",
172:       "com.google.common.collect.Ordering$IncomparableValueException",
173:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
174:       "com.google.common.collect.MapMakerInternalMap$1",
175:       "com.google.common.base.Equivalence",
176:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
177:       "com.google.common.collect.Maps",
178:       "com.google.common.collect.ImmutableMap$Builder",
179:       "com.google.common.base.Converter$FunctionBasedConverter",
180:       "com.google.common.collect.Maps$EntryTransformer",
181:       "com.google.common.collect.Ordering",
182:       "com.google.common.collect.NaturalOrdering",
183:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
184:       "com.google.common.collect.Iterators$MergingIterator",
185:       "com.google.common.collect.MapMakerInternalMap",
186:       "com.google.common.collect.RegularImmutableMap$Values"
187:     );
188:   } 
189: 
190:   private static void resetClasses() {
191:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ReverseOrdering_10_tmp__ESTest_scaffolding.class.getClassLoader()); 
192: 
193:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
194:       "com.google.common.collect.Ordering",
195:       "com.google.common.collect.ReverseOrdering",
196:       "com.google.common.collect.UsingToStringOrdering",
197:       "com.google.common.collect.ComparatorOrdering",
198:       "com.google.common.base.Preconditions",
199:       "com.google.common.base.Converter",
200:       "com.google.common.base.Converter$IdentityConverter",
201:       "com.google.common.base.Converter$FunctionBasedConverter",
202:       "com.google.common.base.Converter$ReverseConverter",
203:       "com.google.common.collect.LexicographicalOrdering",
204:       "com.google.common.collect.NullsFirstOrdering",
205:       "com.google.common.base.Converter$ConverterComposition",
206:       "com.google.common.collect.Lists",
207:       "com.google.common.collect.Lists$OnePlusArrayList",
208:       "com.google.common.collect.ExplicitOrdering",
209:       "com.google.common.collect.Maps",
210:       "com.google.common.collect.ImmutableMap$Builder",
211:       "com.google.common.math.IntMath",
212:       "com.google.common.primitives.IntsMethodsForWeb",
213:       "com.google.common.primitives.Ints",
214:       "com.google.common.collect.ImmutableMap",
215:       "com.google.common.collect.CollectPreconditions",
216:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
217:       "com.google.common.collect.ImmutableBiMap",
218:       "com.google.common.collect.SingletonImmutableBiMap",
219:       "com.google.common.collect.Ordering$ArbitraryOrdering",
220:       "com.google.common.collect.MapMaker",
221:       "com.google.common.collect.Platform",
222:       "com.google.common.collect.MapMakerInternalMap$Strength",
223:       "com.google.common.collect.MapMakerInternalMap$1",
224:       "com.google.common.collect.MapMakerInternalMap",
225:       "com.google.common.base.MoreObjects",
226:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
227:       "com.google.common.base.Equivalence",
228:       "com.google.common.base.Equivalence$Identity",
229:       "com.google.common.collect.MapMakerInternalMap$Segment",
230:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
231:       "com.google.common.collect.RegularImmutableMap",
232:       "com.google.common.collect.Hashing",
233:       "com.google.common.collect.AbstractMapEntry",
234:       "com.google.common.collect.ImmutableEntry",
235:       "com.google.common.collect.ImmutableMapEntry",
236:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
237:       "com.google.common.collect.NullsLastOrdering",
238:       "com.google.common.collect.AbstractMultiset",
239:       "com.google.common.collect.ConcurrentHashMultiset",
240:       "com.google.common.collect.Multisets",
241:       "com.google.common.collect.Multisets$MultisetIteratorImpl",
242:       "com.google.common.collect.Sets$ImprovedAbstractSet",
243:       "com.google.common.collect.Multisets$EntrySet",
244:       "com.google.common.collect.AbstractMultiset$EntrySet",
245:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
246:       "com.google.common.collect.UnmodifiableIterator",
247:       "com.google.common.collect.AbstractIterator",
248:       "com.google.common.collect.ConcurrentHashMultiset$2",
249:       "com.google.common.collect.AbstractIterator$State",
250:       "com.google.common.collect.ForwardingObject",
251:       "com.google.common.collect.ForwardingIterator",
252:       "com.google.common.collect.ConcurrentHashMultiset$3",
253:       "com.google.common.collect.ImmutableCollection",
254:       "com.google.common.collect.ImmutableList",
255:       "com.google.common.collect.ObjectArrays",
256:       "com.google.common.collect.RegularImmutableList",
257:       "com.google.common.collect.CompoundOrdering",
258:       "com.google.common.collect.Iterables",
259:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
260:       "com.google.common.collect.ImmutableMultiset",
261:       "com.google.common.collect.AbstractMapBasedMultiset",
262:       "com.google.common.collect.LinkedHashMultiset",
263:       "com.google.common.collect.Count",
264:       "com.google.common.collect.ImmutableSet",
265:       "com.google.common.collect.ImmutableSet$CachingAsList",
266:       "com.google.common.collect.RegularImmutableSet",
267:       "com.google.common.collect.RegularImmutableMultiset",
268:       "com.google.common.collect.AbstractMapBasedMultiset$2",
269:       "com.google.common.collect.Multisets$AbstractEntry",
270:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
271:       "com.google.common.collect.Multisets$ImmutableEntry",
272:       "com.google.common.collect.ImmutableSet$Indexed",
273:       "com.google.common.collect.ImmutableMultiset$ElementSet",
274:       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
275:       "com.google.common.collect.Maps$EntryFunction",
276:       "com.google.common.collect.ByFunctionOrdering",
277:       "com.google.common.collect.SingletonImmutableList",
278:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
279:       "com.google.common.collect.ImmutableSortedSet",
280:       "com.google.common.collect.NaturalOrdering",
281:       "com.google.common.collect.SortedIterables",
282:       "com.google.common.collect.RegularImmutableSortedSet",
283:       "com.google.common.collect.DescendingImmutableSortedSet",
284:       "com.google.common.collect.ReverseNaturalOrdering",
285:       "com.google.common.collect.Iterators",
286:       "com.google.common.collect.UnmodifiableListIterator",
287:       "com.google.common.collect.AbstractIndexedListIterator",
288:       "com.google.common.collect.Iterators$ArrayItr",
289:       "com.google.common.collect.AllEqualOrdering",
290:       "com.google.common.collect.ImmutableSortedMapFauxverideShim",
291:       "com.google.common.collect.ImmutableSortedMap",
292:       "com.google.common.collect.Iterators$9",
293:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
294:       "com.google.common.collect.ImmutableSortedMultiset",
295:       "com.google.common.collect.ImmutableCollection$Builder",
296:       "com.google.common.collect.ImmutableMultiset$Builder",
297:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
298:       "com.google.common.collect.AbstractSortedMultiset",
299:       "com.google.common.collect.TreeMultiset",
300:       "com.google.common.collect.GeneralRange",
301:       "com.google.common.collect.TreeMultiset$AvlNode",
302:       "com.google.common.collect.TreeMultiset$Reference",
303:       "com.google.common.collect.RangeGwtSerializationDependencies",
304:       "com.google.common.collect.Cut",
305:       "com.google.common.collect.Cut$BelowAll",
306:       "com.google.common.collect.Cut$AboveAll",
307:       "com.google.common.collect.Range",
308:       "com.google.common.collect.ImmutableMultiset$1",
309:       "com.google.common.base.Converter$1",
310:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
311:       "com.google.common.collect.ImmutableAsList",
312:       "com.google.common.collect.RegularImmutableAsList",
313:       "com.google.common.collect.IndexedImmutableSet",
314:       "com.google.common.collect.ImmutableMultiset$EntrySet",
315:       "com.google.common.collect.IndexedImmutableSet$1",
316:       "com.google.common.collect.ImmutableList$1",
317:       "com.google.common.collect.NullnessCasts",
318:       "com.google.common.collect.TreeMultiset$Aggregate",
319:       "com.google.common.collect.ImmutableList$Builder",
320:       "com.google.common.collect.TreeMultiset$2",
321:       "com.google.common.collect.TreeMultiset$1",
322:       "com.google.common.collect.RegularImmutableSortedMultiset",
323:       "com.google.common.collect.ImmutableSortedAsList",
324:       "com.google.common.collect.ImmutableList$SubList",
325:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
326:       "com.google.common.collect.ImmutableSortedMap$1",
327:       "com.google.common.collect.Range$1",
328:       "com.google.common.collect.Cut$BelowValue",
329:       "com.google.common.collect.Ordering$IncomparableValueException"
330:     );
331:   }
332: }

[MASTER] 04:43:33.859 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Ordering<Object> ordering0 = Ordering.usingToString();
NullsLastOrdering<Ordering.ArbitraryOrdering> nullsLastOrdering0 = new NullsLastOrdering<Ordering.ArbitraryOrdering>(ordering0);
Ordering<BoundType> ordering1 = nullsLastOrdering0.reverse();
ReverseOrdering<BoundType> reverseOrdering0 = new ReverseOrdering<BoundType>(ordering1);
BoundType boundType0 = BoundType.OPEN;
BoundType boundType1 = BoundType.CLOSED;
int int0 = reverseOrdering0.compare(boundType0, boundType1);
assertEquals((-1), int0);


* Writing tests to file
* Writing JUnit test case 'ReverseOrdering_ESTest' to evosuite-tests
* Done!

* Computation finished
