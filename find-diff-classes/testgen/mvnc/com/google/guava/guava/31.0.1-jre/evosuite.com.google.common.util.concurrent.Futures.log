* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.util.concurrent.Futures
* Starting Client-0
* Connecting to master process on port 18131
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.util.concurrent.Futures
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 656
* Using seed 1729704894284
* Starting evolution
* Initial Number of Goals in DynaMOSA = 337 / 656
[MASTER] 06:34:59.143 [logback-1] WARN  TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 06:34:59.143 [logback-1] WARN  TestCluster - Failed to check cache for java.util.concurrent.ForkJoinTask<V> : Type points to itself
[MASTER] 06:34:59.232 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.234 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.237 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.240 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.242 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.244 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.245 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.247 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.248 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.252 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:34:59.254 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.util.concurrent.ListenableFuture<V> for wildcard ? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>
[MASTER] 06:35:00.600 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.util.concurrent.ListenableFuture<V> : Type points to itself
[Progress:============>                 41%] [Cov:============>                      36%][MASTER] 06:35:21.617 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.google.common.util.concurrent.Futures.getChecked(Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
[MASTER] 06:35:21.798 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.util.concurrent.ForkJoinPool due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.lang.MockThread due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.lang.MockThread due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.evosuite.runtime.mock.java.lang.MockThread due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 06:35:33.354 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Error: VariableReference: Statement 2, type java.util.Iterator<com.google.common.util.concurrent.ListenableFuture<java.time.format.FormatStyle>> is not assignable to java.util.Iterator<? extends com.google.common.util.concurrent.ListenableFuture<java.lang.Exception>>
[MASTER] 06:35:36.360 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:===================>          66%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    41%]
* Search finished after 70s and 2 generations, 1222 statements, best individual has fitness: 452.0
[MASTER] 06:36:06.277 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 9 seconds more than allowed.
* Minimizing test suite
[MASTER] 06:37:27.894 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 185
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 89
* Number of covered goals: 32
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 13%
* Total number of goals: 143
* Number of covered goals: 18
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 64
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 63%
* Total number of goals: 43
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 51%
* Total number of goals: 43
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 89
* Number of covered goals: 32
* Generated 44 tests with total length 840
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
[MASTER] 06:38:28.341 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 06:38:28.988 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1729705108950/com/google/common/util/concurrent/Futures_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1729705108950/com/google/common/util/concurrent/Futures_3_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:28.988 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:28.988 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:28.991 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Exception> cannot be converted to com.google.common.util.concurrent.AsyncCallable<com.google.common.util.concurrent.ListenableFuture<java.util.LinkedList>>: 42
[MASTER] 06:38:28.991 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_3_1729705108950/com/google/common/util/concurrent/Futures_3_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:28.991 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:28.992 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1729705108950/com/google/common/util/concurrent/Futures_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:28 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.util.concurrent.AsyncCallable;
13: import com.google.common.util.concurrent.FutureCallback;
14: import com.google.common.util.concurrent.Futures;
15: import com.google.common.util.concurrent.ListenableFuture;
16: import java.lang.reflect.Array;
17: import java.sql.SQLInvalidAuthorizationSpecException;
18: import java.time.Duration;
19: import java.util.LinkedList;
20: import java.util.concurrent.Delayed;
21: import java.util.concurrent.Executor;
22: import java.util.concurrent.ForkJoinPool;
23: import java.util.concurrent.ScheduledExecutorService;
24: import java.util.concurrent.ScheduledThreadPoolExecutor;
25: import java.util.concurrent.SynchronousQueue;
26: import java.util.concurrent.ThreadFactory;
27: import java.util.concurrent.ThreadPoolExecutor;
28: import java.util.concurrent.TimeUnit;
29: import org.evosuite.runtime.EvoRunner;
30: import org.evosuite.runtime.EvoRunnerParameters;
31: import org.evosuite.runtime.ViolatedAssumptionAnswer;
32: import org.junit.runner.RunWith;
33: 
34: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
35: public class Futures_3_tmp__ESTest extends Futures_3_tmp__ESTest_scaffolding {
36: 
37:   @Test(timeout = 4000)
38:   public void test0()  throws Throwable  {
39:       AsyncCallable<Exception> asyncCallable0 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
40:       doReturn((ListenableFuture) null).when(asyncCallable0).call();
41:       ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
42:       Futures.submitAsync((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable0, (Executor) forkJoinPool0);
43:       String string0 = "yKVz:1n)U5>VuLGk_";
44:       SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("yKVz:1n)U5>VuLGk_");
45:       Futures.immediateFailedFuture((Throwable) sQLInvalidAuthorizationSpecException0);
46:       FutureCallback<Delayed> futureCallback0 = (FutureCallback<Delayed>) mock(FutureCallback.class, new ViolatedAssumptionAnswer());
47:       TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
48:       SynchronousQueue<Runnable> synchronousQueue0 = new SynchronousQueue<Runnable>();
49:       ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
50:       ThreadPoolExecutor threadPoolExecutor0 = null;
51:       try {
52:         threadPoolExecutor0 = new ThreadPoolExecutor((-2266), (-2266), (-2266), timeUnit0, synchronousQueue0, threadFactory0);
53:         fail("Expecting exception: IllegalArgumentException");
54:       
55:       } catch(IllegalArgumentException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:          verifyException("java.util.concurrent.ThreadPoolExecutor", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_3_1729705108950/com/google/common/util/concurrent/Futures_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:28 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_3_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_3_tmp__ESTest_scaffolding.class.getClassLoader()));
290:     mock(Class.forName("com.google.common.util.concurrent.FutureCallback", false, Futures_3_tmp__ESTest_scaffolding.class.getClassLoader()));
291:     mock(Class.forName("java.util.concurrent.ThreadFactory", false, Futures_3_tmp__ESTest_scaffolding.class.getClassLoader()));
292:   }
293: 
294:   private static void resetClasses() {
295:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
296: 
297:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
298:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
299:       "com.google.common.util.concurrent.Futures",
300:       "com.google.common.util.concurrent.Futures$1",
301:       "com.google.common.util.concurrent.Futures$2",
302:       "com.google.common.util.concurrent.Futures$FutureCombiner",
303:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
304:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
305:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
306:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
307:       "com.google.common.util.concurrent.AbstractFuture",
308:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
309:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
310:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
311:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
312:       "com.google.common.util.concurrent.Futures$3",
313:       "com.google.common.util.concurrent.Futures$CallbackListener",
314:       "com.google.common.util.concurrent.ImmediateFuture",
315:       "com.google.common.util.concurrent.DirectExecutor",
316:       "com.google.common.collect.ImmutableCollection",
317:       "com.google.common.collect.ImmutableList",
318:       "com.google.common.collect.RegularImmutableList",
319:       "com.google.common.collect.Ordering",
320:       "com.google.common.collect.NaturalOrdering",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
323:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
324:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
325:       "com.google.common.util.concurrent.FuturesGetChecked$1",
326:       "com.google.common.collect.ByFunctionOrdering",
327:       "com.google.common.base.Preconditions",
328:       "com.google.common.collect.ReverseOrdering",
329:       "com.google.common.util.concurrent.FuturesGetChecked",
330:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
331:       "com.google.common.util.concurrent.FluentFuture",
332:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
333:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
334:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
335:       "com.google.common.util.concurrent.InterruptibleTask",
336:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
337:       "com.google.common.util.concurrent.MoreExecutors",
338:       "com.google.common.util.concurrent.AbstractFuture$Listener",
339:       "com.google.common.base.Strings",
340:       "com.google.common.base.Platform$JdkPatternCompiler",
341:       "com.google.common.base.Platform",
342:       "com.google.common.util.concurrent.Internal",
343:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
344:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
345:       "com.google.common.util.concurrent.AbstractFuture$Failure",
346:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
347:       "com.google.common.util.concurrent.AbstractCatchingFuture",
348:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
349:       "com.google.common.util.concurrent.MoreExecutors$5",
350:       "com.google.common.util.concurrent.ForwardingFluentFuture",
351:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
352:       "com.google.common.util.concurrent.ListenableFutureTask",
353:       "com.google.common.util.concurrent.ExecutionList",
354:       "com.google.common.util.concurrent.TimeoutFuture",
355:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
356:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
357:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
358:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
359:       "com.google.common.collect.ImmutableMultiset",
360:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
361:       "com.google.common.collect.ImmutableSortedMultiset",
362:       "com.google.common.collect.Lists",
363:       "com.google.common.collect.AbstractMultiset",
364:       "com.google.common.collect.AbstractSortedMultiset",
365:       "com.google.common.collect.TreeMultiset",
366:       "com.google.common.collect.GeneralRange",
367:       "com.google.common.collect.TreeMultiset$AvlNode",
368:       "com.google.common.collect.TreeMultiset$Reference",
369:       "com.google.common.collect.Iterables",
370:       "com.google.common.collect.Multisets",
371:       "com.google.common.collect.Sets$ImprovedAbstractSet",
372:       "com.google.common.collect.Multisets$EntrySet",
373:       "com.google.common.collect.AbstractMultiset$EntrySet",
374:       "com.google.common.collect.TreeMultiset$Aggregate",
375:       "com.google.common.primitives.IntsMethodsForWeb",
376:       "com.google.common.primitives.Ints",
377:       "com.google.common.collect.ImmutableSet",
378:       "com.google.common.collect.ImmutableSet$CachingAsList",
379:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
380:       "com.google.common.collect.ImmutableSortedSet",
381:       "com.google.common.collect.RegularImmutableSortedSet",
382:       "com.google.common.collect.RegularImmutableSortedMultiset",
383:       "com.google.common.util.concurrent.SettableFuture",
384:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
385:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
386:       "com.google.common.collect.ObjectArrays",
387:       "com.google.common.base.Converter",
388:       "com.google.common.base.Converter$IdentityConverter",
389:       "com.google.common.base.Converter$FunctionBasedConverter",
390:       "com.google.common.base.Converter$ConverterComposition",
391:       "com.google.common.base.Converter$ReverseConverter",
392:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
393:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
394:       "com.google.common.util.concurrent.AggregateFutureState",
395:       "com.google.common.util.concurrent.AggregateFuture",
396:       "com.google.common.util.concurrent.CombinedFuture",
397:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
398:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
399:       "com.google.common.collect.SortedIterables",
400:       "com.google.common.util.concurrent.internal.InternalFutures",
401:       "com.google.common.util.concurrent.Platform",
402:       "com.google.common.util.concurrent.CollectionFuture",
403:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
404:       "com.google.common.collect.CollectPreconditions",
405:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
406:       "com.google.common.util.concurrent.Uninterruptibles",
407:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
408:       "com.google.common.collect.Iterators",
409:       "com.google.common.collect.UnmodifiableIterator",
410:       "com.google.common.collect.UnmodifiableListIterator",
411:       "com.google.common.collect.AbstractIndexedListIterator",
412:       "com.google.common.collect.Iterators$ArrayItr",
413:       "com.google.common.collect.ImmutableCollection$Builder",
414:       "com.google.common.collect.ImmutableSet$Builder",
415:       "com.google.common.collect.ImmutableSortedSet$Builder",
416:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
417:       "com.google.common.util.concurrent.AbstractTransformFuture",
418:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
419:       "com.google.common.collect.SingletonImmutableList",
420:       "com.google.common.collect.Iterators$9",
421:       "com.google.common.util.concurrent.AggregateFuture$1",
422:       "com.google.common.util.concurrent.CollectionFuture$Present",
423:       "com.google.common.util.concurrent.NullnessCasts",
424:       "com.google.common.collect.BoundType",
425:       "com.google.common.util.concurrent.AggregateFuture$2",
426:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
427:     );
428:   }
429: }

[MASTER] 06:38:28.993 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
AsyncCallable<Exception> asyncCallable0 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn((ListenableFuture) null).when(asyncCallable0).call();
ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
Futures.submitAsync((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable0, (Executor) forkJoinPool0);
String string0 = "yKVz:1n)U5>VuLGk_";
SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("yKVz:1n)U5>VuLGk_");
Futures.immediateFailedFuture((Throwable) sQLInvalidAuthorizationSpecException0);
FutureCallback<Delayed> futureCallback0 = (FutureCallback<Delayed>) mock(FutureCallback.class, new ViolatedAssumptionAnswer());
TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
SynchronousQueue<Runnable> synchronousQueue0 = new SynchronousQueue<Runnable>();
ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor((-2266), (-2266), (-2266), timeUnit0, synchronousQueue0, threadFactory0);

[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1729705115331/com/google/common/util/concurrent/Futures_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1729705115331/com/google/common/util/concurrent/Futures_11_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.concurrent.CompletableFuture<java.lang.Object> cannot be converted to java.util.concurrent.Future<java.util.LinkedList<java.util.LinkedList>>: 44
[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_11_1729705115331/com/google/common/util/concurrent/Futures_11_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:35.371 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:35.372 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1729705115331/com/google/common/util/concurrent/Futures_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:35 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.base.Converter;
13: import com.google.common.util.concurrent.Futures;
14: import java.util.LinkedList;
15: import java.util.concurrent.CompletableFuture;
16: import java.util.concurrent.CompletionStage;
17: import java.util.concurrent.Executor;
18: import java.util.concurrent.Future;
19: import java.util.concurrent.ScheduledThreadPoolExecutor;
20: import java.util.concurrent.TimeUnit;
21: import java.util.function.BiFunction;
22: import java.util.function.Function;
23: import org.evosuite.runtime.EvoRunner;
24: import org.evosuite.runtime.EvoRunnerParameters;
25: import org.evosuite.runtime.ViolatedAssumptionAnswer;
26: import org.junit.runner.RunWith;
27: 
28: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
29: public class Futures_11_tmp__ESTest extends Futures_11_tmp__ESTest_scaffolding {
30: 
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       CompletableFuture<Object> completableFuture0 = new CompletableFuture<Object>();
34:       Converter<Object, Object> converter0 = Converter.identity();
35:       CompletableFuture<Object> completableFuture1 = completableFuture0.thenApply((Function<? super Object, ?>) converter0);
36:       CompletableFuture<Object> completableFuture2 = completableFuture1.toCompletableFuture();
37:       BiFunction<Object, Throwable, Exception> biFunction0 = (BiFunction<Object, Throwable, Exception>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
38:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0);
39:       CompletableFuture<Object> completableFuture3 = completableFuture2.handleAsync((BiFunction<? super Object, Throwable, ?>) biFunction0, (Executor) scheduledThreadPoolExecutor0);
40:       CompletableFuture<Object> completableFuture4 = completableFuture3.applyToEitherAsync((CompletionStage<?>) completableFuture0, (Function<? super Object, Object>) converter0, (Executor) scheduledThreadPoolExecutor0);
41:       Class<Exception> class0 = Exception.class;
42:       TimeUnit timeUnit0 = TimeUnit.HOURS;
43:       try { 
44:         Futures.getChecked((Future<LinkedList<LinkedList>>) completableFuture4, class0, (-367L), timeUnit0);
45:         fail("Expecting exception: Exception");
46:       
47:       } catch(Exception e) {
48:       }
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_11_1729705115331/com/google/common/util/concurrent/Futures_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:35 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_11_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("java.util.function.BiFunction", false, Futures_11_tmp__ESTest_scaffolding.class.getClassLoader()));
290:   }
291: 
292:   private static void resetClasses() {
293:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
294: 
295:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
296:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
297:       "com.google.common.util.concurrent.Futures",
298:       "com.google.common.util.concurrent.Futures$1",
299:       "com.google.common.util.concurrent.Futures$2",
300:       "com.google.common.util.concurrent.Futures$FutureCombiner",
301:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
302:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
303:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
305:       "com.google.common.util.concurrent.AbstractFuture",
306:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
307:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
308:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
310:       "com.google.common.util.concurrent.Futures$3",
311:       "com.google.common.util.concurrent.Futures$CallbackListener",
312:       "com.google.common.util.concurrent.ImmediateFuture",
313:       "com.google.common.util.concurrent.DirectExecutor",
314:       "com.google.common.collect.ImmutableCollection",
315:       "com.google.common.collect.ImmutableList",
316:       "com.google.common.collect.RegularImmutableList",
317:       "com.google.common.collect.Ordering",
318:       "com.google.common.collect.NaturalOrdering",
319:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
323:       "com.google.common.util.concurrent.FuturesGetChecked$1",
324:       "com.google.common.collect.ByFunctionOrdering",
325:       "com.google.common.base.Preconditions",
326:       "com.google.common.collect.ReverseOrdering",
327:       "com.google.common.util.concurrent.FuturesGetChecked",
328:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
329:       "com.google.common.util.concurrent.FluentFuture",
330:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
331:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
332:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
333:       "com.google.common.util.concurrent.InterruptibleTask",
334:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
335:       "com.google.common.util.concurrent.MoreExecutors",
336:       "com.google.common.util.concurrent.AbstractFuture$Listener",
337:       "com.google.common.base.Strings",
338:       "com.google.common.base.Platform$JdkPatternCompiler",
339:       "com.google.common.base.Platform",
340:       "com.google.common.util.concurrent.Internal",
341:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
342:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure",
344:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
345:       "com.google.common.util.concurrent.AbstractCatchingFuture",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
347:       "com.google.common.util.concurrent.MoreExecutors$5",
348:       "com.google.common.util.concurrent.ForwardingFluentFuture",
349:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
350:       "com.google.common.util.concurrent.ListenableFutureTask",
351:       "com.google.common.util.concurrent.ExecutionList",
352:       "com.google.common.util.concurrent.TimeoutFuture",
353:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
354:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
355:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
356:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
357:       "com.google.common.collect.ImmutableMultiset",
358:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
359:       "com.google.common.collect.ImmutableSortedMultiset",
360:       "com.google.common.collect.Lists",
361:       "com.google.common.collect.AbstractMultiset",
362:       "com.google.common.collect.AbstractSortedMultiset",
363:       "com.google.common.collect.TreeMultiset",
364:       "com.google.common.collect.GeneralRange",
365:       "com.google.common.collect.TreeMultiset$AvlNode",
366:       "com.google.common.collect.TreeMultiset$Reference",
367:       "com.google.common.collect.Iterables",
368:       "com.google.common.collect.Multisets",
369:       "com.google.common.collect.Sets$ImprovedAbstractSet",
370:       "com.google.common.collect.Multisets$EntrySet",
371:       "com.google.common.collect.AbstractMultiset$EntrySet",
372:       "com.google.common.collect.TreeMultiset$Aggregate",
373:       "com.google.common.primitives.IntsMethodsForWeb",
374:       "com.google.common.primitives.Ints",
375:       "com.google.common.collect.ImmutableSet",
376:       "com.google.common.collect.ImmutableSet$CachingAsList",
377:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
378:       "com.google.common.collect.ImmutableSortedSet",
379:       "com.google.common.collect.RegularImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedMultiset",
381:       "com.google.common.util.concurrent.SettableFuture",
382:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
383:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
384:       "com.google.common.collect.ObjectArrays",
385:       "com.google.common.base.Converter",
386:       "com.google.common.base.Converter$IdentityConverter",
387:       "com.google.common.base.Converter$FunctionBasedConverter",
388:       "com.google.common.base.Converter$ConverterComposition",
389:       "com.google.common.base.Converter$ReverseConverter",
390:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
391:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState",
393:       "com.google.common.util.concurrent.AggregateFuture",
394:       "com.google.common.util.concurrent.CombinedFuture",
395:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
396:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
397:       "com.google.common.collect.SortedIterables",
398:       "com.google.common.util.concurrent.internal.InternalFutures",
399:       "com.google.common.util.concurrent.Platform",
400:       "com.google.common.util.concurrent.CollectionFuture",
401:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
402:       "com.google.common.collect.CollectPreconditions",
403:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
404:       "com.google.common.util.concurrent.Uninterruptibles",
405:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
406:       "com.google.common.collect.Iterators",
407:       "com.google.common.collect.UnmodifiableIterator",
408:       "com.google.common.collect.UnmodifiableListIterator",
409:       "com.google.common.collect.AbstractIndexedListIterator",
410:       "com.google.common.collect.Iterators$ArrayItr",
411:       "com.google.common.collect.ImmutableCollection$Builder",
412:       "com.google.common.collect.ImmutableSet$Builder",
413:       "com.google.common.collect.ImmutableSortedSet$Builder",
414:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
415:       "com.google.common.util.concurrent.AbstractTransformFuture",
416:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
417:       "com.google.common.collect.SingletonImmutableList",
418:       "com.google.common.collect.Iterators$9",
419:       "com.google.common.util.concurrent.AggregateFuture$1",
420:       "com.google.common.util.concurrent.CollectionFuture$Present",
421:       "com.google.common.util.concurrent.NullnessCasts",
422:       "com.google.common.collect.BoundType",
423:       "com.google.common.util.concurrent.AggregateFuture$2",
424:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
425:     );
426:   }
427: }

[MASTER] 06:38:35.373 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CompletableFuture<Object> completableFuture0 = new CompletableFuture<Object>();
Converter<Object, Object> converter0 = Converter.identity();
CompletableFuture<Object> completableFuture1 = completableFuture0.thenApply((Function<? super Object, ?>) converter0);
CompletableFuture<Object> completableFuture2 = completableFuture1.toCompletableFuture();
BiFunction<Object, Throwable, Exception> biFunction0 = (BiFunction<Object, Throwable, Exception>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0);
CompletableFuture<Object> completableFuture3 = completableFuture2.handleAsync((BiFunction<? super Object, Throwable, ?>) biFunction0, (Executor) scheduledThreadPoolExecutor0);
CompletableFuture<Object> completableFuture4 = completableFuture3.applyToEitherAsync((CompletionStage<?>) completableFuture0, (Function<? super Object, Object>) converter0, (Executor) scheduledThreadPoolExecutor0);
Class<Exception> class0 = Exception.class;
TimeUnit timeUnit0 = TimeUnit.HOURS;
Futures.getChecked((Future<LinkedList<LinkedList>>) completableFuture4, class0, (-367L), timeUnit0);

[MASTER] 06:38:38.572 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1729705118544/com/google/common/util/concurrent/Futures_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1729705118544/com/google/common/util/concurrent/Futures_17_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:38.572 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:38.572 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:38.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Exception> cannot be converted to com.google.common.util.concurrent.AsyncCallable<java.util.LinkedList<java.util.LinkedList>>: 30
[MASTER] 06:38:38.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_17_1729705118544/com/google/common/util/concurrent/Futures_17_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:38.573 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:38.573 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1729705118544/com/google/common/util/concurrent/Futures_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:38 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.base.Converter;
12: import com.google.common.base.Function;
13: import com.google.common.util.concurrent.AsyncCallable;
14: import com.google.common.util.concurrent.Futures;
15: import com.google.common.util.concurrent.TrustedListenableFutureTask;
16: import java.sql.SQLException;
17: import java.util.LinkedList;
18: import java.util.concurrent.Future;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.ViolatedAssumptionAnswer;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class Futures_17_tmp__ESTest extends Futures_17_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       AsyncCallable<Exception> asyncCallable0 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
30:       TrustedListenableFutureTask<LinkedList<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<LinkedList<LinkedList>>) asyncCallable0);
31:       SQLException sQLException0 = new SQLException("oldCount", "'=*:4QaswBH");
32:       TrustedListenableFutureTask<Exception> trustedListenableFutureTask1 = TrustedListenableFutureTask.create((Runnable) trustedListenableFutureTask0, (Exception) sQLException0);
33:       Converter<Exception, Exception> converter0 = Converter.identity();
34:       Converter<Exception, Exception> converter1 = converter0.reverse();
35:       Converter<Exception, Exception> converter2 = converter1.andThen(converter0);
36:       Converter<Exception, Exception> converter3 = Converter.from((Function<? super Exception, ? extends Exception>) converter2, (Function<? super Exception, ? extends Exception>) converter1);
37:       Future<Exception> future0 = Futures.lazyTransform((Future<Exception>) trustedListenableFutureTask1, (Function<? super Exception, ? extends Exception>) converter3);
38:       assertNotNull(future0);
39:   }
40: }
RegularFileObject[/tmp/EvoSuite_17_1729705118544/com/google/common/util/concurrent/Futures_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:38 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_17_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_17_tmp__ESTest_scaffolding.class.getClassLoader()));
290:   }
291: 
292:   private static void resetClasses() {
293:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
294: 
295:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
296:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
297:       "com.google.common.util.concurrent.Futures",
298:       "com.google.common.util.concurrent.Futures$1",
299:       "com.google.common.util.concurrent.Futures$2",
300:       "com.google.common.util.concurrent.Futures$FutureCombiner",
301:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
302:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
303:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
305:       "com.google.common.util.concurrent.AbstractFuture",
306:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
307:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
308:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
310:       "com.google.common.util.concurrent.Futures$3",
311:       "com.google.common.util.concurrent.Futures$CallbackListener",
312:       "com.google.common.util.concurrent.ImmediateFuture",
313:       "com.google.common.util.concurrent.DirectExecutor",
314:       "com.google.common.collect.ImmutableCollection",
315:       "com.google.common.collect.ImmutableList",
316:       "com.google.common.collect.RegularImmutableList",
317:       "com.google.common.collect.Ordering",
318:       "com.google.common.collect.NaturalOrdering",
319:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
323:       "com.google.common.util.concurrent.FuturesGetChecked$1",
324:       "com.google.common.collect.ByFunctionOrdering",
325:       "com.google.common.base.Preconditions",
326:       "com.google.common.collect.ReverseOrdering",
327:       "com.google.common.util.concurrent.FuturesGetChecked",
328:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
329:       "com.google.common.util.concurrent.FluentFuture",
330:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
331:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
332:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
333:       "com.google.common.util.concurrent.InterruptibleTask",
334:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
335:       "com.google.common.util.concurrent.MoreExecutors",
336:       "com.google.common.util.concurrent.AbstractFuture$Listener",
337:       "com.google.common.base.Strings",
338:       "com.google.common.base.Platform$JdkPatternCompiler",
339:       "com.google.common.base.Platform",
340:       "com.google.common.util.concurrent.Internal",
341:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
342:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure",
344:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
345:       "com.google.common.util.concurrent.AbstractCatchingFuture",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
347:       "com.google.common.util.concurrent.MoreExecutors$5",
348:       "com.google.common.util.concurrent.ForwardingFluentFuture",
349:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
350:       "com.google.common.util.concurrent.ListenableFutureTask",
351:       "com.google.common.util.concurrent.ExecutionList",
352:       "com.google.common.util.concurrent.TimeoutFuture",
353:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
354:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
355:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
356:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
357:       "com.google.common.collect.ImmutableMultiset",
358:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
359:       "com.google.common.collect.ImmutableSortedMultiset",
360:       "com.google.common.collect.Lists",
361:       "com.google.common.collect.AbstractMultiset",
362:       "com.google.common.collect.AbstractSortedMultiset",
363:       "com.google.common.collect.TreeMultiset",
364:       "com.google.common.collect.GeneralRange",
365:       "com.google.common.collect.TreeMultiset$AvlNode",
366:       "com.google.common.collect.TreeMultiset$Reference",
367:       "com.google.common.collect.Iterables",
368:       "com.google.common.collect.Multisets",
369:       "com.google.common.collect.Sets$ImprovedAbstractSet",
370:       "com.google.common.collect.Multisets$EntrySet",
371:       "com.google.common.collect.AbstractMultiset$EntrySet",
372:       "com.google.common.collect.TreeMultiset$Aggregate",
373:       "com.google.common.primitives.IntsMethodsForWeb",
374:       "com.google.common.primitives.Ints",
375:       "com.google.common.collect.ImmutableSet",
376:       "com.google.common.collect.ImmutableSet$CachingAsList",
377:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
378:       "com.google.common.collect.ImmutableSortedSet",
379:       "com.google.common.collect.RegularImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedMultiset",
381:       "com.google.common.util.concurrent.SettableFuture",
382:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
383:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
384:       "com.google.common.collect.ObjectArrays",
385:       "com.google.common.base.Converter",
386:       "com.google.common.base.Converter$IdentityConverter",
387:       "com.google.common.base.Converter$FunctionBasedConverter",
388:       "com.google.common.base.Converter$ConverterComposition",
389:       "com.google.common.base.Converter$ReverseConverter",
390:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
391:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState",
393:       "com.google.common.util.concurrent.AggregateFuture",
394:       "com.google.common.util.concurrent.CombinedFuture",
395:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
396:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
397:       "com.google.common.collect.SortedIterables",
398:       "com.google.common.util.concurrent.internal.InternalFutures",
399:       "com.google.common.util.concurrent.Platform",
400:       "com.google.common.util.concurrent.CollectionFuture",
401:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
402:       "com.google.common.collect.CollectPreconditions",
403:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
404:       "com.google.common.util.concurrent.Uninterruptibles",
405:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
406:       "com.google.common.collect.Iterators",
407:       "com.google.common.collect.UnmodifiableIterator",
408:       "com.google.common.collect.UnmodifiableListIterator",
409:       "com.google.common.collect.AbstractIndexedListIterator",
410:       "com.google.common.collect.Iterators$ArrayItr",
411:       "com.google.common.collect.ImmutableCollection$Builder",
412:       "com.google.common.collect.ImmutableSet$Builder",
413:       "com.google.common.collect.ImmutableSortedSet$Builder",
414:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
415:       "com.google.common.util.concurrent.AbstractTransformFuture",
416:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
417:       "com.google.common.collect.SingletonImmutableList",
418:       "com.google.common.collect.Iterators$9",
419:       "com.google.common.util.concurrent.AggregateFuture$1",
420:       "com.google.common.util.concurrent.CollectionFuture$Present",
421:       "com.google.common.util.concurrent.NullnessCasts",
422:       "com.google.common.collect.BoundType",
423:       "com.google.common.util.concurrent.AggregateFuture$2",
424:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
425:     );
426:   }
427: }

[MASTER] 06:38:38.574 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
AsyncCallable<Exception> asyncCallable0 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
TrustedListenableFutureTask<LinkedList<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<LinkedList<LinkedList>>) asyncCallable0);
SQLException sQLException0 = new SQLException("oldCount", "'=*:4QaswBH");
TrustedListenableFutureTask<Exception> trustedListenableFutureTask1 = TrustedListenableFutureTask.create((Runnable) trustedListenableFutureTask0, (Exception) sQLException0);
Converter<Exception, Exception> converter0 = Converter.identity();
Converter<Exception, Exception> converter1 = converter0.reverse();
Converter<Exception, Exception> converter2 = converter1.andThen(converter0);
Converter<Exception, Exception> converter3 = Converter.from((Function<? super Exception, ? extends Exception>) converter2, (Function<? super Exception, ? extends Exception>) converter1);
Future<Exception> future0 = Futures.lazyTransform((Future<Exception>) trustedListenableFutureTask1, (Function<? super Exception, ? extends Exception>) converter3);
assertNotNull(future0);


[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1729705118791/com/google/common/util/concurrent/Futures_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1729705118791/com/google/common/util/concurrent/Futures_25_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Exception> cannot be converted to com.google.common.util.concurrent.AsyncCallable<com.google.common.util.concurrent.ListenableFuture<java.util.LinkedList>>: 63
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_25_1729705118791/com/google/common/util/concurrent/Futures_25_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1729705118791/com/google/common/util/concurrent/Futures_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:41 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.google.common.base.Converter;
13: import com.google.common.base.Function;
14: import com.google.common.collect.ImmutableMultiset;
15: import com.google.common.util.concurrent.AsyncCallable;
16: import com.google.common.util.concurrent.CombinedFuture;
17: import com.google.common.util.concurrent.Futures;
18: import com.google.common.util.concurrent.ImmediateFuture;
19: import com.google.common.util.concurrent.ListenableFuture;
20: import com.google.common.util.concurrent.ListenableFutureTask;
21: import com.google.common.util.concurrent.TimeoutFuture;
22: import com.google.common.util.concurrent.TrustedListenableFutureTask;
23: import java.lang.reflect.Array;
24: import java.sql.SQLException;
25: import java.time.Duration;
26: import java.time.temporal.ChronoUnit;
27: import java.util.LinkedHashSet;
28: import java.util.LinkedList;
29: import java.util.Vector;
30: import java.util.concurrent.Callable;
31: import java.util.concurrent.Delayed;
32: import java.util.concurrent.Executor;
33: import java.util.concurrent.FutureTask;
34: import java.util.concurrent.ScheduledExecutorService;
35: import java.util.concurrent.ScheduledFuture;
36: import java.util.concurrent.ScheduledThreadPoolExecutor;
37: import java.util.concurrent.TimeUnit;
38: import org.evosuite.runtime.EvoRunner;
39: import org.evosuite.runtime.EvoRunnerParameters;
40: import org.evosuite.runtime.ViolatedAssumptionAnswer;
41: import org.junit.runner.RunWith;
42: 
43: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
44: public class Futures_25_tmp__ESTest extends Futures_25_tmp__ESTest_scaffolding {
45: 
46:   @Test(timeout = 4000)
47:   public void test0()  throws Throwable  {
48:       AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
49:       doReturn((ListenableFuture) null).when(asyncCallable0).call();
50:       ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
51:       Duration duration0 = chronoUnit0.getDuration();
52:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
53:       ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
54:       Duration.from(duration0);
55:       long long0 = 0L;
56:       duration0.minusMillis(0L);
57:       TimeUnit timeUnit0 = TimeUnit.DAYS;
58:       Futures.withTimeout(listenableFuture0, 270L, timeUnit0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
59:       LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
60:       Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
61:       AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
62:       doReturn((ListenableFuture) null).when(asyncCallable1).call();
63:       TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
64:       Futures.submit((Runnable) trustedListenableFutureTask0, (Executor) scheduledThreadPoolExecutor0);
65:       int int0 = (-41);
66:       Vector<ListenableFuture<Delayed>> vector0 = null;
67:       try {
68:         vector0 = new Vector<ListenableFuture<Delayed>>((-41), 0);
69:         fail("Expecting exception: IllegalArgumentException");
70:       
71:       } catch(IllegalArgumentException e) {
72:          //
73:          // Illegal Capacity: -41
74:          //
75:          verifyException("java.util.Vector", e);
76:       }
77:   }
78: }
RegularFileObject[/tmp/EvoSuite_25_1729705118791/com/google/common/util/concurrent/Futures_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:41 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_25_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_25_tmp__ESTest_scaffolding.class.getClassLoader()));
290:   }
291: 
292:   private static void resetClasses() {
293:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
294: 
295:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
296:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
297:       "com.google.common.util.concurrent.Futures",
298:       "com.google.common.util.concurrent.Futures$1",
299:       "com.google.common.util.concurrent.Futures$2",
300:       "com.google.common.util.concurrent.Futures$FutureCombiner",
301:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
302:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
303:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
305:       "com.google.common.util.concurrent.AbstractFuture",
306:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
307:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
308:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
310:       "com.google.common.util.concurrent.Futures$3",
311:       "com.google.common.util.concurrent.Futures$CallbackListener",
312:       "com.google.common.util.concurrent.ImmediateFuture",
313:       "com.google.common.util.concurrent.DirectExecutor",
314:       "com.google.common.collect.ImmutableCollection",
315:       "com.google.common.collect.ImmutableList",
316:       "com.google.common.collect.RegularImmutableList",
317:       "com.google.common.collect.Ordering",
318:       "com.google.common.collect.NaturalOrdering",
319:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
323:       "com.google.common.util.concurrent.FuturesGetChecked$1",
324:       "com.google.common.collect.ByFunctionOrdering",
325:       "com.google.common.base.Preconditions",
326:       "com.google.common.collect.ReverseOrdering",
327:       "com.google.common.util.concurrent.FuturesGetChecked",
328:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
329:       "com.google.common.util.concurrent.FluentFuture",
330:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
331:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
332:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
333:       "com.google.common.util.concurrent.InterruptibleTask",
334:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
335:       "com.google.common.util.concurrent.MoreExecutors",
336:       "com.google.common.util.concurrent.AbstractFuture$Listener",
337:       "com.google.common.base.Strings",
338:       "com.google.common.base.Platform$JdkPatternCompiler",
339:       "com.google.common.base.Platform",
340:       "com.google.common.util.concurrent.Internal",
341:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
342:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure",
344:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
345:       "com.google.common.util.concurrent.AbstractCatchingFuture",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
347:       "com.google.common.util.concurrent.MoreExecutors$5",
348:       "com.google.common.util.concurrent.ForwardingFluentFuture",
349:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
350:       "com.google.common.util.concurrent.ListenableFutureTask",
351:       "com.google.common.util.concurrent.ExecutionList",
352:       "com.google.common.util.concurrent.TimeoutFuture",
353:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
354:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
355:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
356:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
357:       "com.google.common.collect.ImmutableMultiset",
358:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
359:       "com.google.common.collect.ImmutableSortedMultiset",
360:       "com.google.common.collect.Lists",
361:       "com.google.common.collect.AbstractMultiset",
362:       "com.google.common.collect.AbstractSortedMultiset",
363:       "com.google.common.collect.TreeMultiset",
364:       "com.google.common.collect.GeneralRange",
365:       "com.google.common.collect.TreeMultiset$AvlNode",
366:       "com.google.common.collect.TreeMultiset$Reference",
367:       "com.google.common.collect.Iterables",
368:       "com.google.common.collect.Multisets",
369:       "com.google.common.collect.Sets$ImprovedAbstractSet",
370:       "com.google.common.collect.Multisets$EntrySet",
371:       "com.google.common.collect.AbstractMultiset$EntrySet",
372:       "com.google.common.collect.TreeMultiset$Aggregate",
373:       "com.google.common.primitives.IntsMethodsForWeb",
374:       "com.google.common.primitives.Ints",
375:       "com.google.common.collect.ImmutableSet",
376:       "com.google.common.collect.ImmutableSet$CachingAsList",
377:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
378:       "com.google.common.collect.ImmutableSortedSet",
379:       "com.google.common.collect.RegularImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedMultiset",
381:       "com.google.common.util.concurrent.SettableFuture",
382:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
383:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
384:       "com.google.common.collect.ObjectArrays",
385:       "com.google.common.base.Converter",
386:       "com.google.common.base.Converter$IdentityConverter",
387:       "com.google.common.base.Converter$FunctionBasedConverter",
388:       "com.google.common.base.Converter$ConverterComposition",
389:       "com.google.common.base.Converter$ReverseConverter",
390:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
391:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState",
393:       "com.google.common.util.concurrent.AggregateFuture",
394:       "com.google.common.util.concurrent.CombinedFuture",
395:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
396:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
397:       "com.google.common.collect.SortedIterables",
398:       "com.google.common.util.concurrent.internal.InternalFutures",
399:       "com.google.common.util.concurrent.Platform",
400:       "com.google.common.util.concurrent.CollectionFuture",
401:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
402:       "com.google.common.collect.CollectPreconditions",
403:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
404:       "com.google.common.util.concurrent.Uninterruptibles",
405:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
406:       "com.google.common.collect.Iterators",
407:       "com.google.common.collect.UnmodifiableIterator",
408:       "com.google.common.collect.UnmodifiableListIterator",
409:       "com.google.common.collect.AbstractIndexedListIterator",
410:       "com.google.common.collect.Iterators$ArrayItr",
411:       "com.google.common.collect.ImmutableCollection$Builder",
412:       "com.google.common.collect.ImmutableSet$Builder",
413:       "com.google.common.collect.ImmutableSortedSet$Builder",
414:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
415:       "com.google.common.util.concurrent.AbstractTransformFuture",
416:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
417:       "com.google.common.collect.SingletonImmutableList",
418:       "com.google.common.collect.Iterators$9",
419:       "com.google.common.util.concurrent.AggregateFuture$1",
420:       "com.google.common.util.concurrent.CollectionFuture$Present",
421:       "com.google.common.util.concurrent.NullnessCasts",
422:       "com.google.common.collect.BoundType",
423:       "com.google.common.util.concurrent.AggregateFuture$2",
424:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
425:     );
426:   }
427: }

[MASTER] 06:38:41.813 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn((ListenableFuture) null).when(asyncCallable0).call();
ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
Duration duration0 = chronoUnit0.getDuration();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
Duration.from(duration0);
long long0 = 0L;
duration0.minusMillis(0L);
TimeUnit timeUnit0 = TimeUnit.DAYS;
Futures.withTimeout(listenableFuture0, 270L, timeUnit0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn((ListenableFuture) null).when(asyncCallable1).call();
TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
Futures.submit((Runnable) trustedListenableFutureTask0, (Executor) scheduledThreadPoolExecutor0);
int int0 = (-41);
Vector<ListenableFuture<Delayed>> vector0 = new Vector<ListenableFuture<Delayed>>((-41), 0);

[MASTER] 06:38:44.841 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1729705121814/com/google/common/util/concurrent/Futures_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1729705121814/com/google/common/util/concurrent/Futures_26_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:44.841 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:44.841 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:44.842 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Exception> cannot be converted to com.google.common.util.concurrent.AsyncCallable<com.google.common.util.concurrent.ListenableFuture<java.util.LinkedList>>: 52
[MASTER] 06:38:44.842 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_26_1729705121814/com/google/common/util/concurrent/Futures_26_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:44.842 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:44.842 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1729705121814/com/google/common/util/concurrent/Futures_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:44 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.util.concurrent.AsyncCallable;
12: import com.google.common.util.concurrent.Futures;
13: import com.google.common.util.concurrent.ListenableFuture;
14: import com.google.common.util.concurrent.ListenableFutureTask;
15: import com.google.common.util.concurrent.TrustedListenableFutureTask;
16: import java.time.Duration;
17: import java.time.temporal.ChronoUnit;
18: import java.util.LinkedHashSet;
19: import java.util.LinkedList;
20: import java.util.concurrent.Callable;
21: import java.util.concurrent.Delayed;
22: import java.util.concurrent.Executor;
23: import java.util.concurrent.ScheduledExecutorService;
24: import java.util.concurrent.ScheduledThreadPoolExecutor;
25: import java.util.concurrent.TimeUnit;
26: import org.evosuite.runtime.EvoRunner;
27: import org.evosuite.runtime.EvoRunnerParameters;
28: import org.evosuite.runtime.ViolatedAssumptionAnswer;
29: import org.junit.runner.RunWith;
30: 
31: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
32: public class Futures_26_tmp__ESTest extends Futures_26_tmp__ESTest_scaffolding {
33: 
34:   @Test(timeout = 4000)
35:   public void test0()  throws Throwable  {
36:       Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
37:       ListenableFutureTask<Delayed> listenableFutureTask0 = ListenableFutureTask.create(callable0);
38:       AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
39:       doReturn(listenableFutureTask0).when(asyncCallable0).call();
40:       ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
41:       Duration duration0 = chronoUnit0.getDuration();
42:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
43:       ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
44:       Duration.from(duration0);
45:       duration0.minusMillis(0L);
46:       TimeUnit timeUnit0 = TimeUnit.DAYS;
47:       Futures.withTimeout(listenableFuture0, 270L, timeUnit0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
48:       LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
49:       Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
50:       AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
51:       doReturn((ListenableFuture<Exception>) null).when(asyncCallable1).call();
52:       TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
53:       ListenableFuture<Void> listenableFuture1 = Futures.submit((Runnable) trustedListenableFutureTask0, (Executor) scheduledThreadPoolExecutor0);
54:       assertNotNull(listenableFuture1);
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_26_1729705121814/com/google/common/util/concurrent/Futures_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:44 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_26_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_26_tmp__ESTest_scaffolding.class.getClassLoader()));
290:     mock(Class.forName("java.util.concurrent.Callable", false, Futures_26_tmp__ESTest_scaffolding.class.getClassLoader()));
291:   }
292: 
293:   private static void resetClasses() {
294:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
295: 
296:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
297:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
298:       "com.google.common.util.concurrent.Futures",
299:       "com.google.common.util.concurrent.Futures$1",
300:       "com.google.common.util.concurrent.Futures$2",
301:       "com.google.common.util.concurrent.Futures$FutureCombiner",
302:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
303:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
305:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
306:       "com.google.common.util.concurrent.AbstractFuture",
307:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
308:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
310:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
311:       "com.google.common.util.concurrent.Futures$3",
312:       "com.google.common.util.concurrent.Futures$CallbackListener",
313:       "com.google.common.util.concurrent.ImmediateFuture",
314:       "com.google.common.util.concurrent.DirectExecutor",
315:       "com.google.common.collect.ImmutableCollection",
316:       "com.google.common.collect.ImmutableList",
317:       "com.google.common.collect.RegularImmutableList",
318:       "com.google.common.collect.Ordering",
319:       "com.google.common.collect.NaturalOrdering",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
323:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
324:       "com.google.common.util.concurrent.FuturesGetChecked$1",
325:       "com.google.common.collect.ByFunctionOrdering",
326:       "com.google.common.base.Preconditions",
327:       "com.google.common.collect.ReverseOrdering",
328:       "com.google.common.util.concurrent.FuturesGetChecked",
329:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
330:       "com.google.common.util.concurrent.FluentFuture",
331:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
332:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
333:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
334:       "com.google.common.util.concurrent.InterruptibleTask",
335:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
336:       "com.google.common.util.concurrent.MoreExecutors",
337:       "com.google.common.util.concurrent.AbstractFuture$Listener",
338:       "com.google.common.base.Strings",
339:       "com.google.common.base.Platform$JdkPatternCompiler",
340:       "com.google.common.base.Platform",
341:       "com.google.common.util.concurrent.Internal",
342:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
344:       "com.google.common.util.concurrent.AbstractFuture$Failure",
345:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture",
347:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
348:       "com.google.common.util.concurrent.MoreExecutors$5",
349:       "com.google.common.util.concurrent.ForwardingFluentFuture",
350:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
351:       "com.google.common.util.concurrent.ListenableFutureTask",
352:       "com.google.common.util.concurrent.ExecutionList",
353:       "com.google.common.util.concurrent.TimeoutFuture",
354:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
355:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
356:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
357:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
358:       "com.google.common.collect.ImmutableMultiset",
359:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
360:       "com.google.common.collect.ImmutableSortedMultiset",
361:       "com.google.common.collect.Lists",
362:       "com.google.common.collect.AbstractMultiset",
363:       "com.google.common.collect.AbstractSortedMultiset",
364:       "com.google.common.collect.TreeMultiset",
365:       "com.google.common.collect.GeneralRange",
366:       "com.google.common.collect.TreeMultiset$AvlNode",
367:       "com.google.common.collect.TreeMultiset$Reference",
368:       "com.google.common.collect.Iterables",
369:       "com.google.common.collect.Multisets",
370:       "com.google.common.collect.Sets$ImprovedAbstractSet",
371:       "com.google.common.collect.Multisets$EntrySet",
372:       "com.google.common.collect.AbstractMultiset$EntrySet",
373:       "com.google.common.collect.TreeMultiset$Aggregate",
374:       "com.google.common.primitives.IntsMethodsForWeb",
375:       "com.google.common.primitives.Ints",
376:       "com.google.common.collect.ImmutableSet",
377:       "com.google.common.collect.ImmutableSet$CachingAsList",
378:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
379:       "com.google.common.collect.ImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedSet",
381:       "com.google.common.collect.RegularImmutableSortedMultiset",
382:       "com.google.common.util.concurrent.SettableFuture",
383:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
384:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
385:       "com.google.common.collect.ObjectArrays",
386:       "com.google.common.base.Converter",
387:       "com.google.common.base.Converter$IdentityConverter",
388:       "com.google.common.base.Converter$FunctionBasedConverter",
389:       "com.google.common.base.Converter$ConverterComposition",
390:       "com.google.common.base.Converter$ReverseConverter",
391:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
393:       "com.google.common.util.concurrent.AggregateFutureState",
394:       "com.google.common.util.concurrent.AggregateFuture",
395:       "com.google.common.util.concurrent.CombinedFuture",
396:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
397:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
398:       "com.google.common.collect.SortedIterables",
399:       "com.google.common.util.concurrent.internal.InternalFutures",
400:       "com.google.common.util.concurrent.Platform",
401:       "com.google.common.util.concurrent.CollectionFuture",
402:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
403:       "com.google.common.collect.CollectPreconditions",
404:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
405:       "com.google.common.util.concurrent.Uninterruptibles",
406:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
407:       "com.google.common.collect.Iterators",
408:       "com.google.common.collect.UnmodifiableIterator",
409:       "com.google.common.collect.UnmodifiableListIterator",
410:       "com.google.common.collect.AbstractIndexedListIterator",
411:       "com.google.common.collect.Iterators$ArrayItr",
412:       "com.google.common.collect.ImmutableCollection$Builder",
413:       "com.google.common.collect.ImmutableSet$Builder",
414:       "com.google.common.collect.ImmutableSortedSet$Builder",
415:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
416:       "com.google.common.util.concurrent.AbstractTransformFuture",
417:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
418:       "com.google.common.collect.SingletonImmutableList",
419:       "com.google.common.collect.Iterators$9",
420:       "com.google.common.util.concurrent.AggregateFuture$1",
421:       "com.google.common.util.concurrent.CollectionFuture$Present",
422:       "com.google.common.util.concurrent.NullnessCasts",
423:       "com.google.common.collect.BoundType",
424:       "com.google.common.util.concurrent.AggregateFuture$2",
425:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
426:     );
427:   }
428: }

[MASTER] 06:38:44.843 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
ListenableFutureTask<Delayed> listenableFutureTask0 = ListenableFutureTask.create(callable0);
AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn(listenableFutureTask0).when(asyncCallable0).call();
ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
Duration duration0 = chronoUnit0.getDuration();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
Duration.from(duration0);
duration0.minusMillis(0L);
TimeUnit timeUnit0 = TimeUnit.DAYS;
Futures.withTimeout(listenableFuture0, 270L, timeUnit0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn((ListenableFuture<Exception>) null).when(asyncCallable1).call();
TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
ListenableFuture<Void> listenableFuture1 = Futures.submit((Runnable) trustedListenableFutureTask0, (Executor) scheduledThreadPoolExecutor0);
assertNotNull(listenableFuture1);


[MASTER] 06:38:44.865 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1729705124844/com/google/common/util/concurrent/Futures_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1729705124844/com/google/common/util/concurrent/Futures_27_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:44.865 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:44.865 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:44.866 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.ListenableFuture<java.lang.Exception> cannot be converted to java.util.concurrent.Future<java.util.LinkedList<java.util.LinkedList>>: 39
[MASTER] 06:38:44.866 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_27_1729705124844/com/google/common/util/concurrent/Futures_27_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:44.866 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:44.867 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1729705124844/com/google/common/util/concurrent/Futures_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:44 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.util.concurrent.Futures;
11: import com.google.common.util.concurrent.ListenableFuture;
12: import java.lang.reflect.Array;
13: import java.sql.SQLException;
14: import java.sql.SQLFeatureNotSupportedException;
15: import java.sql.SQLTransactionRollbackException;
16: import java.util.LinkedList;
17: import java.util.Stack;
18: import java.util.concurrent.Future;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.System;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class Futures_27_tmp__ESTest extends Futures_27_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       System.setCurrentTimeMillis(0L);
30:       ListenableFuture<Exception>[] listenableFutureArray0 = (ListenableFuture<Exception>[]) Array.newInstance(ListenableFuture.class, 1);
31:       SQLException sQLException0 = new SQLException();
32:       SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("xN#P'", sQLException0);
33:       SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("iZfY+.eC|", "iZfY+.eC|", 2485, sQLFeatureNotSupportedException0);
34:       ListenableFuture<Exception> listenableFuture0 = Futures.immediateFuture((Exception) sQLTransactionRollbackException0);
35:       listenableFutureArray0[0] = listenableFuture0;
36:       Futures.allAsList((ListenableFuture<?>[]) listenableFutureArray0);
37:       Stack<ListenableFuture<Exception>> stack0 = new Stack<ListenableFuture<Exception>>();
38:       Futures.whenAllSucceed((Iterable<? extends ListenableFuture<?>>) stack0);
39:       LinkedList<LinkedList> linkedList0 = Futures.getUnchecked((Future<LinkedList<LinkedList>>) listenableFuture0);
40:       assertSame(sQLTransactionRollbackException0, linkedList0);
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_27_1729705124844/com/google/common/util/concurrent/Futures_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:44 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Futures_27_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.Lists$RandomAccessPartition",
82:       "com.google.common.base.JdkPattern",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
85:       "com.google.common.base.Platform$JdkPatternCompiler",
86:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
87:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
88:       "com.google.common.collect.NullsLastOrdering",
89:       "com.google.common.util.concurrent.CollectionFuture",
90:       "com.google.common.base.Converter$IdentityConverter",
91:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
92:       "com.google.common.collect.ByFunctionOrdering",
93:       "com.google.common.collect.AbstractSortedMultiset",
94:       "com.google.common.collect.Iterators$10",
95:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
96:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
97:       "com.google.common.collect.GeneralRange",
98:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
99:       "com.google.common.collect.NullsFirstOrdering",
100:       "com.google.common.util.concurrent.ExecutionError",
101:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
102:       "com.google.common.util.concurrent.AsyncCallable",
103:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
104:       "com.google.common.base.Strings",
105:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
106:       "com.google.common.collect.Lists$Partition",
107:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
108:       "com.google.common.collect.Lists",
109:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
110:       "com.google.common.collect.UnmodifiableListIterator",
111:       "com.google.common.collect.TreeMultiset$AvlNode",
112:       "com.google.common.util.concurrent.AbstractCatchingFuture",
113:       "com.google.common.collect.ImmutableSortedSet",
114:       "com.google.common.collect.ImmutableSortedSet$Builder",
115:       "com.google.common.util.concurrent.FutureCallback",
116:       "com.google.common.base.ElementTypesAreNonnullByDefault",
117:       "com.google.common.util.concurrent.Platform",
118:       "com.google.common.collect.AbstractMultiset$EntrySet",
119:       "com.google.common.collect.Sets$ImprovedAbstractSet",
120:       "com.google.common.base.Preconditions",
121:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
122:       "com.google.common.base.Converter$ConverterComposition",
123:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
124:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
125:       "com.google.common.collect.ImmutableCollection",
126:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
127:       "com.google.common.util.concurrent.SettableFuture",
128:       "com.google.common.collect.TreeMultiset",
129:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
130:       "com.google.common.util.concurrent.DirectExecutor",
131:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
132:       "com.google.common.util.concurrent.ListenableFutureTask",
133:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
134:       "com.google.common.util.concurrent.ExecutionList",
135:       "com.google.common.util.concurrent.ParametricNullness",
136:       "com.google.common.util.concurrent.Futures$CallbackListener",
137:       "com.google.common.util.concurrent.ImmediateFuture",
138:       "com.google.common.collect.ImmutableCollection$Builder",
139:       "com.google.errorprone.annotations.DoNotMock",
140:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
141:       "com.google.common.collect.IndexedImmutableSet",
142:       "com.google.common.collect.ImmutableSet",
143:       "com.google.common.collect.Iterators$9",
144:       "com.google.common.collect.Lists$AbstractListWrapper",
145:       "com.google.common.collect.ImmutableSortedAsList",
146:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
147:       "com.google.common.collect.Iterators$1",
148:       "com.google.common.collect.Iterators$4",
149:       "com.google.common.collect.Iterators$5",
150:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
151:       "com.google.common.base.Converter$ReverseConverter",
152:       "com.google.common.collect.Lists$StringAsImmutableList",
153:       "com.google.common.collect.Lists$2",
154:       "com.google.common.collect.Lists$1",
155:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
156:       "com.google.common.util.concurrent.MoreExecutors",
157:       "com.google.common.util.concurrent.ListenableFuture",
158:       "com.google.common.collect.Multiset",
159:       "com.google.common.util.concurrent.Futures$FutureCombiner",
160:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
161:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
162:       "com.google.common.collect.ImmutableList",
163:       "com.google.common.collect.ReverseOrdering",
164:       "com.google.common.util.concurrent.UncheckedExecutionException",
165:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
166:       "com.google.common.collect.SortedMultisetBridge",
167:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
168:       "com.google.common.util.concurrent.internal.InternalFutures",
169:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
170:       "com.google.common.base.Converter$FunctionBasedConverter",
171:       "com.google.common.util.concurrent.CombinedFuture",
172:       "com.google.common.collect.Ordering",
173:       "com.google.common.collect.NaturalOrdering",
174:       "com.google.common.util.concurrent.AsyncFunction",
175:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
176:       "com.google.common.collect.TreeMultiset$Aggregate$2",
177:       "com.google.common.collect.TreeMultiset$Aggregate$1",
178:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
179:       "com.google.common.collect.AllEqualOrdering",
180:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
181:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
182:       "com.google.common.collect.ImmutableList$SubList",
183:       "com.google.common.collect.RegularImmutableSortedMultiset",
184:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
185:       "com.google.common.collect.RegularImmutableList",
186:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
187:       "com.google.common.collect.SortedMultiset",
188:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
189:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
190:       "com.google.common.util.concurrent.AbstractFuture$Failure",
191:       "com.google.common.collect.Lists$TransformingRandomAccessList",
192:       "com.google.common.collect.Iterators$ArrayItr",
193:       "com.google.common.collect.DescendingImmutableSortedMultiset",
194:       "com.google.common.util.concurrent.AggregateFuture$1",
195:       "com.google.common.util.concurrent.AggregateFuture$2",
196:       "com.google.common.collect.Multisets",
197:       "com.google.common.util.concurrent.AggregateFutureState",
198:       "com.google.common.collect.RegularImmutableSet",
199:       "com.google.common.base.CommonPattern",
200:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
201:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
202:       "com.google.common.collect.LexicographicalOrdering",
203:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
204:       "com.google.common.util.concurrent.ListeningExecutorService",
205:       "com.google.common.collect.Iterables",
206:       "com.google.common.collect.ContiguousSet",
207:       "com.google.common.collect.ImmutableAsList",
208:       "com.google.common.collect.ImmutableSet$Builder",
209:       "com.google.common.collect.ImmutableSet$CachingAsList",
210:       "com.google.common.collect.RegularImmutableAsList",
211:       "com.google.common.collect.SingletonImmutableSet",
212:       "com.google.common.util.concurrent.InterruptibleTask",
213:       "com.google.common.util.concurrent.AbstractTransformFuture",
214:       "com.google.common.base.PatternCompiler",
215:       "com.google.common.util.concurrent.AggregateFuture",
216:       "com.google.common.collect.ImmutableMultiset",
217:       "com.google.common.collect.UsingToStringOrdering",
218:       "com.google.common.util.concurrent.CollectionFuture$Present",
219:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
220:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
221:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
222:       "com.google.common.collect.Lists$TransformingSequentialList",
223:       "com.google.common.primitives.IntsMethodsForWeb",
224:       "com.google.common.util.concurrent.Uninterruptibles",
225:       "com.google.common.collect.ObjectArrays",
226:       "com.google.common.collect.AbstractIterator",
227:       "com.google.common.collect.ImmutableList$1",
228:       "com.google.common.util.concurrent.Futures",
229:       "com.google.common.collect.SortedIterable",
230:       "com.google.common.collect.UnmodifiableIterator",
231:       "com.google.common.collect.ImmutableSortedMultiset",
232:       "com.google.common.collect.TreeMultiset$Aggregate",
233:       "com.google.common.util.concurrent.FuturesGetChecked$1",
234:       "com.google.common.util.concurrent.TimeoutFuture",
235:       "com.google.common.util.concurrent.Internal",
236:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
237:       "com.google.common.collect.Lists$RandomAccessListWrapper",
238:       "com.google.common.util.concurrent.ForwardingFluentFuture",
239:       "com.google.common.base.Platform",
240:       "com.google.common.collect.ImmutableMultiset$EntrySet",
241:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
242:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
243:       "com.google.common.collect.SingletonImmutableList",
244:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
245:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
246:       "com.google.common.base.Converter",
247:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
248:       "com.google.common.util.concurrent.Futures$2",
249:       "com.google.common.base.Function",
250:       "com.google.common.collect.ComparatorOrdering",
251:       "com.google.common.collect.AbstractIndexedListIterator",
252:       "com.google.common.util.concurrent.MoreExecutors$5",
253:       "com.google.common.collect.CollectPreconditions",
254:       "com.google.common.collect.Multiset$Entry",
255:       "com.google.common.util.concurrent.Futures$1",
256:       "com.google.common.primitives.Ints$IntConverter",
257:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
258:       "com.google.common.collect.BoundType",
259:       "com.google.common.collect.ExplicitOrdering",
260:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
261:       "com.google.common.util.concurrent.AbstractFuture$Listener",
262:       "com.google.common.collect.TreeMultiset$Reference",
263:       "com.google.common.collect.ImmutableList$Builder",
264:       "com.google.common.util.concurrent.NullnessCasts",
265:       "com.google.common.collect.AbstractMultiset",
266:       "com.google.common.collect.CompoundOrdering",
267:       "com.google.common.collect.Iterators",
268:       "com.google.common.collect.ImmutableMultiset$Builder",
269:       "com.google.common.collect.Multisets$EntrySet",
270:       "com.google.common.collect.ImmutableMultiset$1",
271:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
272:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
273:       "com.google.common.collect.ReverseNaturalOrdering",
274:       "com.google.common.primitives.Ints",
275:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
276:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
277:       "com.google.common.util.concurrent.FuturesGetChecked",
278:       "com.google.common.collect.SortedIterables",
279:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
280:       "com.google.common.collect.Iterators$MergingIterator",
281:       "com.google.common.collect.RegularImmutableSortedSet",
282:       "com.google.common.util.concurrent.AbstractFuture",
283:       "com.google.common.util.concurrent.FluentFuture"
284:     );
285:   } 
286: 
287:   private static void resetClasses() {
288:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
289: 
290:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
291:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
292:       "com.google.common.util.concurrent.Futures",
293:       "com.google.common.util.concurrent.Futures$1",
294:       "com.google.common.util.concurrent.Futures$2",
295:       "com.google.common.util.concurrent.Futures$FutureCombiner",
296:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
297:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
298:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
299:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
300:       "com.google.common.util.concurrent.AbstractFuture",
301:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
302:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
303:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
304:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
305:       "com.google.common.util.concurrent.Futures$3",
306:       "com.google.common.util.concurrent.Futures$CallbackListener",
307:       "com.google.common.util.concurrent.ImmediateFuture",
308:       "com.google.common.util.concurrent.DirectExecutor",
309:       "com.google.common.collect.ImmutableCollection",
310:       "com.google.common.collect.ImmutableList",
311:       "com.google.common.collect.RegularImmutableList",
312:       "com.google.common.collect.Ordering",
313:       "com.google.common.collect.NaturalOrdering",
314:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
315:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
316:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
317:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
318:       "com.google.common.util.concurrent.FuturesGetChecked$1",
319:       "com.google.common.collect.ByFunctionOrdering",
320:       "com.google.common.base.Preconditions",
321:       "com.google.common.collect.ReverseOrdering",
322:       "com.google.common.util.concurrent.FuturesGetChecked",
323:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
324:       "com.google.common.util.concurrent.FluentFuture",
325:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
326:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
327:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
328:       "com.google.common.util.concurrent.InterruptibleTask",
329:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
330:       "com.google.common.util.concurrent.MoreExecutors",
331:       "com.google.common.util.concurrent.AbstractFuture$Listener",
332:       "com.google.common.base.Strings",
333:       "com.google.common.base.Platform$JdkPatternCompiler",
334:       "com.google.common.base.Platform",
335:       "com.google.common.util.concurrent.Internal",
336:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
337:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
338:       "com.google.common.util.concurrent.AbstractFuture$Failure",
339:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
340:       "com.google.common.util.concurrent.AbstractCatchingFuture",
341:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
342:       "com.google.common.util.concurrent.MoreExecutors$5",
343:       "com.google.common.util.concurrent.ForwardingFluentFuture",
344:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
345:       "com.google.common.util.concurrent.ListenableFutureTask",
346:       "com.google.common.util.concurrent.ExecutionList",
347:       "com.google.common.util.concurrent.TimeoutFuture",
348:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
349:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
350:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
351:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
352:       "com.google.common.collect.ImmutableMultiset",
353:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
354:       "com.google.common.collect.ImmutableSortedMultiset",
355:       "com.google.common.collect.Lists",
356:       "com.google.common.collect.AbstractMultiset",
357:       "com.google.common.collect.AbstractSortedMultiset",
358:       "com.google.common.collect.TreeMultiset",
359:       "com.google.common.collect.GeneralRange",
360:       "com.google.common.collect.TreeMultiset$AvlNode",
361:       "com.google.common.collect.TreeMultiset$Reference",
362:       "com.google.common.collect.Iterables",
363:       "com.google.common.collect.Multisets",
364:       "com.google.common.collect.Sets$ImprovedAbstractSet",
365:       "com.google.common.collect.Multisets$EntrySet",
366:       "com.google.common.collect.AbstractMultiset$EntrySet",
367:       "com.google.common.collect.TreeMultiset$Aggregate",
368:       "com.google.common.primitives.IntsMethodsForWeb",
369:       "com.google.common.primitives.Ints",
370:       "com.google.common.collect.ImmutableSet",
371:       "com.google.common.collect.ImmutableSet$CachingAsList",
372:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
373:       "com.google.common.collect.ImmutableSortedSet",
374:       "com.google.common.collect.RegularImmutableSortedSet",
375:       "com.google.common.collect.RegularImmutableSortedMultiset",
376:       "com.google.common.util.concurrent.SettableFuture",
377:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
378:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
379:       "com.google.common.collect.ObjectArrays",
380:       "com.google.common.base.Converter",
381:       "com.google.common.base.Converter$IdentityConverter",
382:       "com.google.common.base.Converter$FunctionBasedConverter",
383:       "com.google.common.base.Converter$ConverterComposition",
384:       "com.google.common.base.Converter$ReverseConverter",
385:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
386:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
387:       "com.google.common.util.concurrent.AggregateFutureState",
388:       "com.google.common.util.concurrent.AggregateFuture",
389:       "com.google.common.util.concurrent.CombinedFuture",
390:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
391:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
392:       "com.google.common.collect.SortedIterables",
393:       "com.google.common.util.concurrent.internal.InternalFutures",
394:       "com.google.common.util.concurrent.Platform",
395:       "com.google.common.util.concurrent.CollectionFuture",
396:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
397:       "com.google.common.collect.CollectPreconditions",
398:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
399:       "com.google.common.util.concurrent.Uninterruptibles",
400:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
401:       "com.google.common.collect.Iterators",
402:       "com.google.common.collect.UnmodifiableIterator",
403:       "com.google.common.collect.UnmodifiableListIterator",
404:       "com.google.common.collect.AbstractIndexedListIterator",
405:       "com.google.common.collect.Iterators$ArrayItr",
406:       "com.google.common.collect.ImmutableCollection$Builder",
407:       "com.google.common.collect.ImmutableSet$Builder",
408:       "com.google.common.collect.ImmutableSortedSet$Builder",
409:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
410:       "com.google.common.util.concurrent.AbstractTransformFuture",
411:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
412:       "com.google.common.collect.SingletonImmutableList",
413:       "com.google.common.collect.Iterators$9",
414:       "com.google.common.util.concurrent.AggregateFuture$1",
415:       "com.google.common.util.concurrent.CollectionFuture$Present",
416:       "com.google.common.util.concurrent.NullnessCasts",
417:       "com.google.common.collect.BoundType",
418:       "com.google.common.util.concurrent.AggregateFuture$2",
419:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
420:     );
421:   }
422: }

[MASTER] 06:38:44.867 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
System.setCurrentTimeMillis(0L);
ListenableFuture<Exception>[] listenableFutureArray0 = (ListenableFuture<Exception>[]) Array.newInstance(ListenableFuture.class, 1);
SQLException sQLException0 = new SQLException();
SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("xN#P'", sQLException0);
SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException("iZfY+.eC|", "iZfY+.eC|", 2485, sQLFeatureNotSupportedException0);
ListenableFuture<Exception> listenableFuture0 = Futures.immediateFuture((Exception) sQLTransactionRollbackException0);
listenableFutureArray0[0] = listenableFuture0;
Futures.allAsList((ListenableFuture<?>[]) listenableFutureArray0);
Stack<ListenableFuture<Exception>> stack0 = new Stack<ListenableFuture<Exception>>();
Futures.whenAllSucceed((Iterable<? extends ListenableFuture<?>>) stack0);
LinkedList<LinkedList> linkedList0 = Futures.getUnchecked((Future<LinkedList<LinkedList>>) listenableFuture0);
assertSame(sQLTransactionRollbackException0, linkedList0);


[MASTER] 06:38:48.262 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1729705125244/com/google/common/util/concurrent/Futures_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1729705125244/com/google/common/util/concurrent/Futures_40_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:48.262 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:48.262 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:48.263 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.concurrent.Callable<java.lang.Object> cannot be converted to java.util.concurrent.Callable<java.lang.Comparable<java.util.LinkedList>>: 48
[MASTER] 06:38:48.263 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Object> cannot be converted to com.google.common.util.concurrent.AsyncCallable<com.google.common.util.concurrent.ListenableFuture<java.util.LinkedList>>: 58
[MASTER] 06:38:48.263 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_40_1729705125244/com/google/common/util/concurrent/Futures_40_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:48.263 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:48.263 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1729705125244/com/google/common/util/concurrent/Futures_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:48 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.util.concurrent.AsyncCallable;
12: import com.google.common.util.concurrent.Futures;
13: import com.google.common.util.concurrent.ImmediateFuture;
14: import com.google.common.util.concurrent.ListenableFuture;
15: import com.google.common.util.concurrent.TrustedListenableFutureTask;
16: import java.time.Duration;
17: import java.time.temporal.ChronoUnit;
18: import java.util.LinkedHashSet;
19: import java.util.LinkedList;
20: import java.util.concurrent.Callable;
21: import java.util.concurrent.Delayed;
22: import java.util.concurrent.ScheduledExecutorService;
23: import java.util.concurrent.ScheduledFuture;
24: import java.util.concurrent.ScheduledThreadPoolExecutor;
25: import java.util.concurrent.ThreadPoolExecutor;
26: import java.util.concurrent.TimeUnit;
27: import org.evosuite.runtime.EvoRunner;
28: import org.evosuite.runtime.EvoRunnerParameters;
29: import org.evosuite.runtime.ViolatedAssumptionAnswer;
30: import org.junit.runner.RunWith;
31: 
32: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
33: public class Futures_40_tmp__ESTest extends Futures_40_tmp__ESTest_scaffolding {
34: 
35:   @Test(timeout = 4000)
36:   public void test0()  throws Throwable  {
37:       ChronoUnit chronoUnit0 = ChronoUnit.HALF_DAYS;
38:       Duration duration0 = chronoUnit0.getDuration();
39:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
40:       AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
41:       Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
42:       Duration.from(duration0);
43:       TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
44:       ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
45:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(3614, threadPoolExecutor_AbortPolicy0);
46:       Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
47:       doReturn((Object) null).when(callable0).call();
48:       ScheduledFuture<Comparable<LinkedList>> scheduledFuture0 = scheduledThreadPoolExecutor1.schedule((Callable<Comparable<LinkedList>>) callable0, (-1917L), timeUnit0);
49:       duration0.minusMillis(0L);
50:       ImmediateFuture<Delayed> immediateFuture0 = new ImmediateFuture<Delayed>(scheduledFuture0);
51:       TimeUnit timeUnit1 = TimeUnit.HOURS;
52:       Futures.withTimeout((ListenableFuture<Delayed>) immediateFuture0, 270L, timeUnit1, (ScheduledExecutorService) scheduledThreadPoolExecutor1);
53:       LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
54:       Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
55:       Callable<Exception> callable1 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
56:       TrustedListenableFutureTask.create(callable1);
57:       AsyncCallable<Object> asyncCallable1 = (AsyncCallable<Object>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
58:       TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
59:       assertNotNull(trustedListenableFutureTask0);
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_40_1729705125244/com/google/common/util/concurrent/Futures_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:48 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_40_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_40_tmp__ESTest_scaffolding.class.getClassLoader()));
290:     mock(Class.forName("java.util.concurrent.Callable", false, Futures_40_tmp__ESTest_scaffolding.class.getClassLoader()));
291:   }
292: 
293:   private static void resetClasses() {
294:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
295: 
296:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
297:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
298:       "com.google.common.util.concurrent.Futures",
299:       "com.google.common.util.concurrent.Futures$1",
300:       "com.google.common.util.concurrent.Futures$2",
301:       "com.google.common.util.concurrent.Futures$FutureCombiner",
302:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
303:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
305:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
306:       "com.google.common.util.concurrent.AbstractFuture",
307:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
308:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
310:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
311:       "com.google.common.util.concurrent.Futures$3",
312:       "com.google.common.util.concurrent.Futures$CallbackListener",
313:       "com.google.common.util.concurrent.ImmediateFuture",
314:       "com.google.common.util.concurrent.DirectExecutor",
315:       "com.google.common.collect.ImmutableCollection",
316:       "com.google.common.collect.ImmutableList",
317:       "com.google.common.collect.RegularImmutableList",
318:       "com.google.common.collect.Ordering",
319:       "com.google.common.collect.NaturalOrdering",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
323:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
324:       "com.google.common.util.concurrent.FuturesGetChecked$1",
325:       "com.google.common.collect.ByFunctionOrdering",
326:       "com.google.common.base.Preconditions",
327:       "com.google.common.collect.ReverseOrdering",
328:       "com.google.common.util.concurrent.FuturesGetChecked",
329:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
330:       "com.google.common.util.concurrent.FluentFuture",
331:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
332:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
333:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
334:       "com.google.common.util.concurrent.InterruptibleTask",
335:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
336:       "com.google.common.util.concurrent.MoreExecutors",
337:       "com.google.common.util.concurrent.AbstractFuture$Listener",
338:       "com.google.common.base.Strings",
339:       "com.google.common.base.Platform$JdkPatternCompiler",
340:       "com.google.common.base.Platform",
341:       "com.google.common.util.concurrent.Internal",
342:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
344:       "com.google.common.util.concurrent.AbstractFuture$Failure",
345:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture",
347:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
348:       "com.google.common.util.concurrent.MoreExecutors$5",
349:       "com.google.common.util.concurrent.ForwardingFluentFuture",
350:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
351:       "com.google.common.util.concurrent.ListenableFutureTask",
352:       "com.google.common.util.concurrent.ExecutionList",
353:       "com.google.common.util.concurrent.TimeoutFuture",
354:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
355:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
356:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
357:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
358:       "com.google.common.collect.ImmutableMultiset",
359:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
360:       "com.google.common.collect.ImmutableSortedMultiset",
361:       "com.google.common.collect.Lists",
362:       "com.google.common.collect.AbstractMultiset",
363:       "com.google.common.collect.AbstractSortedMultiset",
364:       "com.google.common.collect.TreeMultiset",
365:       "com.google.common.collect.GeneralRange",
366:       "com.google.common.collect.TreeMultiset$AvlNode",
367:       "com.google.common.collect.TreeMultiset$Reference",
368:       "com.google.common.collect.Iterables",
369:       "com.google.common.collect.Multisets",
370:       "com.google.common.collect.Sets$ImprovedAbstractSet",
371:       "com.google.common.collect.Multisets$EntrySet",
372:       "com.google.common.collect.AbstractMultiset$EntrySet",
373:       "com.google.common.collect.TreeMultiset$Aggregate",
374:       "com.google.common.primitives.IntsMethodsForWeb",
375:       "com.google.common.primitives.Ints",
376:       "com.google.common.collect.ImmutableSet",
377:       "com.google.common.collect.ImmutableSet$CachingAsList",
378:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
379:       "com.google.common.collect.ImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedSet",
381:       "com.google.common.collect.RegularImmutableSortedMultiset",
382:       "com.google.common.util.concurrent.SettableFuture",
383:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
384:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
385:       "com.google.common.collect.ObjectArrays",
386:       "com.google.common.base.Converter",
387:       "com.google.common.base.Converter$IdentityConverter",
388:       "com.google.common.base.Converter$FunctionBasedConverter",
389:       "com.google.common.base.Converter$ConverterComposition",
390:       "com.google.common.base.Converter$ReverseConverter",
391:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
393:       "com.google.common.util.concurrent.AggregateFutureState",
394:       "com.google.common.util.concurrent.AggregateFuture",
395:       "com.google.common.util.concurrent.CombinedFuture",
396:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
397:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
398:       "com.google.common.collect.SortedIterables",
399:       "com.google.common.util.concurrent.internal.InternalFutures",
400:       "com.google.common.util.concurrent.Platform",
401:       "com.google.common.util.concurrent.CollectionFuture",
402:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
403:       "com.google.common.collect.CollectPreconditions",
404:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
405:       "com.google.common.util.concurrent.Uninterruptibles",
406:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
407:       "com.google.common.collect.Iterators",
408:       "com.google.common.collect.UnmodifiableIterator",
409:       "com.google.common.collect.UnmodifiableListIterator",
410:       "com.google.common.collect.AbstractIndexedListIterator",
411:       "com.google.common.collect.Iterators$ArrayItr",
412:       "com.google.common.collect.ImmutableCollection$Builder",
413:       "com.google.common.collect.ImmutableSet$Builder",
414:       "com.google.common.collect.ImmutableSortedSet$Builder",
415:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
416:       "com.google.common.util.concurrent.AbstractTransformFuture",
417:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
418:       "com.google.common.collect.SingletonImmutableList",
419:       "com.google.common.collect.Iterators$9",
420:       "com.google.common.util.concurrent.AggregateFuture$1",
421:       "com.google.common.util.concurrent.CollectionFuture$Present",
422:       "com.google.common.util.concurrent.NullnessCasts",
423:       "com.google.common.collect.BoundType",
424:       "com.google.common.util.concurrent.AggregateFuture$2",
425:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
426:     );
427:   }
428: }

[MASTER] 06:38:48.264 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ChronoUnit chronoUnit0 = ChronoUnit.HALF_DAYS;
Duration duration0 = chronoUnit0.getDuration();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
Duration.from(duration0);
TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor1 = new ScheduledThreadPoolExecutor(3614, threadPoolExecutor_AbortPolicy0);
Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
doReturn((Object) null).when(callable0).call();
ScheduledFuture<Comparable<LinkedList>> scheduledFuture0 = scheduledThreadPoolExecutor1.schedule((Callable<Comparable<LinkedList>>) callable0, (-1917L), timeUnit0);
duration0.minusMillis(0L);
ImmediateFuture<Delayed> immediateFuture0 = new ImmediateFuture<Delayed>(scheduledFuture0);
TimeUnit timeUnit1 = TimeUnit.HOURS;
Futures.withTimeout((ListenableFuture<Delayed>) immediateFuture0, 270L, timeUnit1, (ScheduledExecutorService) scheduledThreadPoolExecutor1);
LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
Callable<Exception> callable1 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
TrustedListenableFutureTask.create(callable1);
AsyncCallable<Object> asyncCallable1 = (AsyncCallable<Object>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
TrustedListenableFutureTask<ListenableFuture<LinkedList>> trustedListenableFutureTask0 = TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
assertNotNull(trustedListenableFutureTask0);


[MASTER] 06:38:51.303 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1729705128264/com/google/common/util/concurrent/Futures_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1729705128264/com/google/common/util/concurrent/Futures_41_tmp__ESTest_scaffolding.java]]
[MASTER] 06:38:51.303 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:51.303 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 06:38:51.303 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.concurrent.Callable<java.lang.Exception> cannot be converted to java.util.concurrent.Callable<java.lang.Comparable<java.util.LinkedList>>: 51
[MASTER] 06:38:51.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.util.concurrent.AsyncCallable<java.lang.Exception> cannot be converted to com.google.common.util.concurrent.AsyncCallable<com.google.common.util.concurrent.ListenableFuture<java.util.LinkedList>>: 60
[MASTER] 06:38:51.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_41_1729705128264/com/google/common/util/concurrent/Futures_41_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 06:38:51.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 06:38:51.304 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1729705128264/com/google/common/util/concurrent/Futures_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 17:38:51 GMT 2024
4:  */
5: 
6: package com.google.common.util.concurrent;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.util.concurrent.AggregateFuture;
12: import com.google.common.util.concurrent.AsyncCallable;
13: import com.google.common.util.concurrent.Futures;
14: import com.google.common.util.concurrent.ListenableFuture;
15: import com.google.common.util.concurrent.ListenableFutureTask;
16: import com.google.common.util.concurrent.TrustedListenableFutureTask;
17: import java.sql.SQLInvalidAuthorizationSpecException;
18: import java.time.Duration;
19: import java.time.temporal.ChronoUnit;
20: import java.util.LinkedHashSet;
21: import java.util.LinkedList;
22: import java.util.concurrent.Callable;
23: import java.util.concurrent.Delayed;
24: import java.util.concurrent.Executor;
25: import java.util.concurrent.ScheduledExecutorService;
26: import java.util.concurrent.ScheduledThreadPoolExecutor;
27: import java.util.concurrent.TimeUnit;
28: import org.evosuite.runtime.EvoRunner;
29: import org.evosuite.runtime.EvoRunnerParameters;
30: import org.evosuite.runtime.ViolatedAssumptionAnswer;
31: import org.junit.runner.RunWith;
32: 
33: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
34: public class Futures_41_tmp__ESTest extends Futures_41_tmp__ESTest_scaffolding {
35: 
36:   @Test(timeout = 4000)
37:   public void test0()  throws Throwable  {
38:       Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
39:       ListenableFutureTask<Delayed> listenableFutureTask0 = ListenableFutureTask.create(callable0);
40:       AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
41:       doReturn(listenableFutureTask0).when(asyncCallable0).call();
42:       ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
43:       Duration duration0 = chronoUnit0.getDuration();
44:       ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
45:       ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
46:       Duration.from(duration0);
47:       SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("5!\"w");
48:       Callable<Exception> callable1 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
49:       doReturn(sQLInvalidAuthorizationSpecException0).when(callable1).call();
50:       TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
51:       scheduledThreadPoolExecutor0.schedule((Callable<Comparable<LinkedList>>) callable1, (-1917L), timeUnit0);
52:       duration0.minusMillis(0L);
53:       TimeUnit timeUnit1 = TimeUnit.DAYS;
54:       Futures.withTimeout(listenableFuture0, 270L, timeUnit1, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
55:       LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
56:       Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
57:       Callable<Exception> callable2 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
58:       TrustedListenableFutureTask.create(callable2);
59:       AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
60:       TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
61:       Futures.FutureCombiner<Exception> futures_FutureCombiner0 = Futures.whenAllComplete((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
62:       Callable<LinkedList<AggregateFuture.ReleaseResourcesReason>> callable3 = (Callable<LinkedList<AggregateFuture.ReleaseResourcesReason>>) mock(Callable.class, new ViolatedAssumptionAnswer());
63:       doReturn((Object) null).when(callable3).call();
64:       futures_FutureCombiner0.call(callable3, (Executor) scheduledThreadPoolExecutor0);
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_41_1729705128264/com/google/common/util/concurrent/Futures_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 17:38:51 GMT 2024
5:  */
6: 
7: package com.google.common.util.concurrent;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Futures_41_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.util.concurrent.Futures"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Futures_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.Lists$RandomAccessPartition",
84:       "com.google.common.base.JdkPattern",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
87:       "com.google.common.base.Platform$JdkPatternCompiler",
88:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
89:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
90:       "com.google.common.collect.NullsLastOrdering",
91:       "com.google.common.util.concurrent.CollectionFuture",
92:       "com.google.common.base.Converter$IdentityConverter",
93:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
94:       "com.google.common.collect.ByFunctionOrdering",
95:       "com.google.common.collect.AbstractSortedMultiset",
96:       "com.google.common.collect.Iterators$10",
97:       "com.google.common.util.concurrent.AbstractFuture$Trusted",
98:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
99:       "com.google.common.collect.GeneralRange",
100:       "com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture",
101:       "com.google.common.collect.NullsFirstOrdering",
102:       "com.google.common.util.concurrent.ExecutionError",
103:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
104:       "com.google.common.util.concurrent.AsyncCallable",
105:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
106:       "com.google.common.base.Strings",
107:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
108:       "com.google.common.collect.Lists$Partition",
109:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
110:       "com.google.common.collect.Lists",
111:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
112:       "com.google.common.collect.UnmodifiableListIterator",
113:       "com.google.common.collect.TreeMultiset$AvlNode",
114:       "com.google.common.util.concurrent.AbstractCatchingFuture",
115:       "com.google.common.collect.ImmutableSortedSet",
116:       "com.google.common.collect.ImmutableSortedSet$Builder",
117:       "com.google.common.util.concurrent.FutureCallback",
118:       "com.google.common.base.ElementTypesAreNonnullByDefault",
119:       "com.google.common.util.concurrent.Platform",
120:       "com.google.common.collect.AbstractMultiset$EntrySet",
121:       "com.google.common.collect.Sets$ImprovedAbstractSet",
122:       "com.google.common.base.Preconditions",
123:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
124:       "com.google.common.base.Converter$ConverterComposition",
125:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
126:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
127:       "com.google.common.collect.ImmutableCollection",
128:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
129:       "com.google.common.util.concurrent.SettableFuture",
130:       "com.google.common.collect.TreeMultiset",
131:       "com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture",
132:       "com.google.common.util.concurrent.DirectExecutor",
133:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
134:       "com.google.common.util.concurrent.ListenableFutureTask",
135:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
136:       "com.google.common.util.concurrent.ExecutionList",
137:       "com.google.common.util.concurrent.ParametricNullness",
138:       "com.google.common.util.concurrent.Futures$CallbackListener",
139:       "com.google.common.util.concurrent.ImmediateFuture",
140:       "com.google.common.collect.ImmutableCollection$Builder",
141:       "com.google.errorprone.annotations.DoNotMock",
142:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.collect.ImmutableSet",
145:       "com.google.common.collect.Iterators$9",
146:       "com.google.common.collect.Lists$AbstractListWrapper",
147:       "com.google.common.collect.ImmutableSortedAsList",
148:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
149:       "com.google.common.collect.Iterators$1",
150:       "com.google.common.collect.Iterators$4",
151:       "com.google.common.collect.Iterators$5",
152:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
153:       "com.google.common.base.Converter$ReverseConverter",
154:       "com.google.common.collect.Lists$StringAsImmutableList",
155:       "com.google.common.collect.Lists$2",
156:       "com.google.common.collect.Lists$1",
157:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
158:       "com.google.common.util.concurrent.MoreExecutors",
159:       "com.google.common.util.concurrent.ListenableFuture",
160:       "com.google.common.collect.Multiset",
161:       "com.google.common.util.concurrent.Futures$FutureCombiner",
162:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
163:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
164:       "com.google.common.collect.ImmutableList",
165:       "com.google.common.collect.ReverseOrdering",
166:       "com.google.common.util.concurrent.UncheckedExecutionException",
167:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
168:       "com.google.common.collect.SortedMultisetBridge",
169:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
170:       "com.google.common.util.concurrent.internal.InternalFutures",
171:       "com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper",
172:       "com.google.common.base.Converter$FunctionBasedConverter",
173:       "com.google.common.util.concurrent.CombinedFuture",
174:       "com.google.common.collect.Ordering",
175:       "com.google.common.collect.NaturalOrdering",
176:       "com.google.common.util.concurrent.AsyncFunction",
177:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
178:       "com.google.common.collect.TreeMultiset$Aggregate$2",
179:       "com.google.common.collect.TreeMultiset$Aggregate$1",
180:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
181:       "com.google.common.collect.AllEqualOrdering",
182:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
183:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
184:       "com.google.common.collect.ImmutableList$SubList",
185:       "com.google.common.collect.RegularImmutableSortedMultiset",
186:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
187:       "com.google.common.collect.RegularImmutableList",
188:       "com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper",
189:       "com.google.common.collect.SortedMultiset",
190:       "com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper",
191:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
192:       "com.google.common.util.concurrent.AbstractFuture$Failure",
193:       "com.google.common.collect.Lists$TransformingRandomAccessList",
194:       "com.google.common.collect.Iterators$ArrayItr",
195:       "com.google.common.collect.DescendingImmutableSortedMultiset",
196:       "com.google.common.util.concurrent.AggregateFuture$1",
197:       "com.google.common.util.concurrent.AggregateFuture$2",
198:       "com.google.common.collect.Multisets",
199:       "com.google.common.util.concurrent.AggregateFutureState",
200:       "com.google.common.collect.RegularImmutableSet",
201:       "com.google.common.base.CommonPattern",
202:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
203:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
204:       "com.google.common.collect.LexicographicalOrdering",
205:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
206:       "com.google.common.util.concurrent.ListeningExecutorService",
207:       "com.google.common.collect.Iterables",
208:       "com.google.common.collect.ContiguousSet",
209:       "com.google.common.collect.ImmutableAsList",
210:       "com.google.common.collect.ImmutableSet$Builder",
211:       "com.google.common.collect.ImmutableSet$CachingAsList",
212:       "com.google.common.collect.RegularImmutableAsList",
213:       "com.google.common.collect.SingletonImmutableSet",
214:       "com.google.common.util.concurrent.InterruptibleTask",
215:       "com.google.common.util.concurrent.AbstractTransformFuture",
216:       "com.google.common.base.PatternCompiler",
217:       "com.google.common.util.concurrent.AggregateFuture",
218:       "com.google.common.collect.ImmutableMultiset",
219:       "com.google.common.collect.UsingToStringOrdering",
220:       "com.google.common.util.concurrent.CollectionFuture$Present",
221:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
222:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
223:       "com.google.common.util.concurrent.ListeningScheduledExecutorService",
224:       "com.google.common.collect.Lists$TransformingSequentialList",
225:       "com.google.common.primitives.IntsMethodsForWeb",
226:       "com.google.common.util.concurrent.Uninterruptibles",
227:       "com.google.common.collect.ObjectArrays",
228:       "com.google.common.collect.AbstractIterator",
229:       "com.google.common.collect.ImmutableList$1",
230:       "com.google.common.util.concurrent.Futures",
231:       "com.google.common.collect.SortedIterable",
232:       "com.google.common.collect.UnmodifiableIterator",
233:       "com.google.common.collect.ImmutableSortedMultiset",
234:       "com.google.common.collect.TreeMultiset$Aggregate",
235:       "com.google.common.util.concurrent.FuturesGetChecked$1",
236:       "com.google.common.util.concurrent.TimeoutFuture",
237:       "com.google.common.util.concurrent.Internal",
238:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
239:       "com.google.common.collect.Lists$RandomAccessListWrapper",
240:       "com.google.common.util.concurrent.ForwardingFluentFuture",
241:       "com.google.common.base.Platform",
242:       "com.google.common.collect.ImmutableMultiset$EntrySet",
243:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
244:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
245:       "com.google.common.collect.SingletonImmutableList",
246:       "com.google.common.util.concurrent.ElementTypesAreNonnullByDefault",
247:       "com.google.common.util.concurrent.InterruptibleTask$Blocker",
248:       "com.google.common.base.Converter",
249:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
250:       "com.google.common.util.concurrent.Futures$2",
251:       "com.google.common.base.Function",
252:       "com.google.common.collect.ComparatorOrdering",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.util.concurrent.MoreExecutors$5",
255:       "com.google.common.collect.CollectPreconditions",
256:       "com.google.common.collect.Multiset$Entry",
257:       "com.google.common.util.concurrent.Futures$1",
258:       "com.google.common.primitives.Ints$IntConverter",
259:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
260:       "com.google.common.collect.BoundType",
261:       "com.google.common.collect.ExplicitOrdering",
262:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator",
263:       "com.google.common.util.concurrent.AbstractFuture$Listener",
264:       "com.google.common.collect.TreeMultiset$Reference",
265:       "com.google.common.collect.ImmutableList$Builder",
266:       "com.google.common.util.concurrent.NullnessCasts",
267:       "com.google.common.collect.AbstractMultiset",
268:       "com.google.common.collect.CompoundOrdering",
269:       "com.google.common.collect.Iterators",
270:       "com.google.common.collect.ImmutableMultiset$Builder",
271:       "com.google.common.collect.Multisets$EntrySet",
272:       "com.google.common.collect.ImmutableMultiset$1",
273:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
274:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
275:       "com.google.common.collect.ReverseNaturalOrdering",
276:       "com.google.common.primitives.Ints",
277:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
278:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
279:       "com.google.common.util.concurrent.FuturesGetChecked",
280:       "com.google.common.collect.SortedIterables",
281:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
282:       "com.google.common.collect.Iterators$MergingIterator",
283:       "com.google.common.collect.RegularImmutableSortedSet",
284:       "com.google.common.util.concurrent.AbstractFuture",
285:       "com.google.common.util.concurrent.FluentFuture"
286:     );
287:   } 
288:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
289:     mock(Class.forName("com.google.common.util.concurrent.AsyncCallable", false, Futures_41_tmp__ESTest_scaffolding.class.getClassLoader()));
290:     mock(Class.forName("java.util.concurrent.Callable", false, Futures_41_tmp__ESTest_scaffolding.class.getClassLoader()));
291:   }
292: 
293:   private static void resetClasses() {
294:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Futures_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
295: 
296:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
297:       "com.google.common.util.concurrent.GwtFuturesCatchingSpecialization",
298:       "com.google.common.util.concurrent.Futures",
299:       "com.google.common.util.concurrent.Futures$1",
300:       "com.google.common.util.concurrent.Futures$2",
301:       "com.google.common.util.concurrent.Futures$FutureCombiner",
302:       "com.google.common.util.concurrent.internal.InternalFutureFailureAccess",
303:       "com.google.common.util.concurrent.AbstractFuture$AtomicHelper",
304:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1",
305:       "com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper",
306:       "com.google.common.util.concurrent.AbstractFuture",
307:       "com.google.common.util.concurrent.AbstractFuture$TrustedFuture",
308:       "com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture",
309:       "com.google.common.util.concurrent.Futures$InCompletionOrderState",
310:       "com.google.common.util.concurrent.Futures$InCompletionOrderFuture",
311:       "com.google.common.util.concurrent.Futures$3",
312:       "com.google.common.util.concurrent.Futures$CallbackListener",
313:       "com.google.common.util.concurrent.ImmediateFuture",
314:       "com.google.common.util.concurrent.DirectExecutor",
315:       "com.google.common.collect.ImmutableCollection",
316:       "com.google.common.collect.ImmutableList",
317:       "com.google.common.collect.RegularImmutableList",
318:       "com.google.common.collect.Ordering",
319:       "com.google.common.collect.NaturalOrdering",
320:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1",
321:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator",
322:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder",
323:       "com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator",
324:       "com.google.common.util.concurrent.FuturesGetChecked$1",
325:       "com.google.common.collect.ByFunctionOrdering",
326:       "com.google.common.base.Preconditions",
327:       "com.google.common.collect.ReverseOrdering",
328:       "com.google.common.util.concurrent.FuturesGetChecked",
329:       "com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization",
330:       "com.google.common.util.concurrent.FluentFuture",
331:       "com.google.common.util.concurrent.FluentFuture$TrustedFuture",
332:       "com.google.common.util.concurrent.TrustedListenableFutureTask",
333:       "com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable",
334:       "com.google.common.util.concurrent.InterruptibleTask",
335:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask",
336:       "com.google.common.util.concurrent.MoreExecutors",
337:       "com.google.common.util.concurrent.AbstractFuture$Listener",
338:       "com.google.common.base.Strings",
339:       "com.google.common.base.Platform$JdkPatternCompiler",
340:       "com.google.common.base.Platform",
341:       "com.google.common.util.concurrent.Internal",
342:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture",
343:       "com.google.common.util.concurrent.AbstractFuture$Failure$1",
344:       "com.google.common.util.concurrent.AbstractFuture$Failure",
345:       "com.google.common.util.concurrent.AbstractFuture$Waiter",
346:       "com.google.common.util.concurrent.AbstractCatchingFuture",
347:       "com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture",
348:       "com.google.common.util.concurrent.MoreExecutors$5",
349:       "com.google.common.util.concurrent.ForwardingFluentFuture",
350:       "com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask",
351:       "com.google.common.util.concurrent.ListenableFutureTask",
352:       "com.google.common.util.concurrent.ExecutionList",
353:       "com.google.common.util.concurrent.TimeoutFuture",
354:       "com.google.common.util.concurrent.TimeoutFuture$Fire",
355:       "com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair",
356:       "com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException",
357:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
358:       "com.google.common.collect.ImmutableMultiset",
359:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
360:       "com.google.common.collect.ImmutableSortedMultiset",
361:       "com.google.common.collect.Lists",
362:       "com.google.common.collect.AbstractMultiset",
363:       "com.google.common.collect.AbstractSortedMultiset",
364:       "com.google.common.collect.TreeMultiset",
365:       "com.google.common.collect.GeneralRange",
366:       "com.google.common.collect.TreeMultiset$AvlNode",
367:       "com.google.common.collect.TreeMultiset$Reference",
368:       "com.google.common.collect.Iterables",
369:       "com.google.common.collect.Multisets",
370:       "com.google.common.collect.Sets$ImprovedAbstractSet",
371:       "com.google.common.collect.Multisets$EntrySet",
372:       "com.google.common.collect.AbstractMultiset$EntrySet",
373:       "com.google.common.collect.TreeMultiset$Aggregate",
374:       "com.google.common.primitives.IntsMethodsForWeb",
375:       "com.google.common.primitives.Ints",
376:       "com.google.common.collect.ImmutableSet",
377:       "com.google.common.collect.ImmutableSet$CachingAsList",
378:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
379:       "com.google.common.collect.ImmutableSortedSet",
380:       "com.google.common.collect.RegularImmutableSortedSet",
381:       "com.google.common.collect.RegularImmutableSortedMultiset",
382:       "com.google.common.util.concurrent.SettableFuture",
383:       "com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture",
384:       "com.google.common.util.concurrent.AbstractFuture$Cancellation",
385:       "com.google.common.collect.ObjectArrays",
386:       "com.google.common.base.Converter",
387:       "com.google.common.base.Converter$IdentityConverter",
388:       "com.google.common.base.Converter$FunctionBasedConverter",
389:       "com.google.common.base.Converter$ConverterComposition",
390:       "com.google.common.base.Converter$ReverseConverter",
391:       "com.google.common.util.concurrent.AggregateFutureState$AtomicHelper",
392:       "com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper",
393:       "com.google.common.util.concurrent.AggregateFutureState",
394:       "com.google.common.util.concurrent.AggregateFuture",
395:       "com.google.common.util.concurrent.CombinedFuture",
396:       "com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask",
397:       "com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask",
398:       "com.google.common.collect.SortedIterables",
399:       "com.google.common.util.concurrent.internal.InternalFutures",
400:       "com.google.common.util.concurrent.Platform",
401:       "com.google.common.util.concurrent.CollectionFuture",
402:       "com.google.common.util.concurrent.CollectionFuture$ListFuture",
403:       "com.google.common.collect.CollectPreconditions",
404:       "com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason",
405:       "com.google.common.util.concurrent.Uninterruptibles",
406:       "com.google.common.util.concurrent.AbstractFuture$SetFuture",
407:       "com.google.common.collect.Iterators",
408:       "com.google.common.collect.UnmodifiableIterator",
409:       "com.google.common.collect.UnmodifiableListIterator",
410:       "com.google.common.collect.AbstractIndexedListIterator",
411:       "com.google.common.collect.Iterators$ArrayItr",
412:       "com.google.common.collect.ImmutableCollection$Builder",
413:       "com.google.common.collect.ImmutableSet$Builder",
414:       "com.google.common.collect.ImmutableSortedSet$Builder",
415:       "com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask",
416:       "com.google.common.util.concurrent.AbstractTransformFuture",
417:       "com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture",
418:       "com.google.common.collect.SingletonImmutableList",
419:       "com.google.common.collect.Iterators$9",
420:       "com.google.common.util.concurrent.AggregateFuture$1",
421:       "com.google.common.util.concurrent.CollectionFuture$Present",
422:       "com.google.common.util.concurrent.NullnessCasts",
423:       "com.google.common.collect.BoundType",
424:       "com.google.common.util.concurrent.AggregateFuture$2",
425:       "com.google.common.util.concurrent.InterruptibleTask$Blocker"
426:     );
427:   }
428: }

[MASTER] 06:38:51.305 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
ListenableFutureTask<Delayed> listenableFutureTask0 = ListenableFutureTask.create(callable0);
AsyncCallable<Delayed> asyncCallable0 = (AsyncCallable<Delayed>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
doReturn(listenableFutureTask0).when(asyncCallable0).call();
ChronoUnit chronoUnit0 = ChronoUnit.NANOS;
Duration duration0 = chronoUnit0.getDuration();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3614);
ListenableFuture<Delayed> listenableFuture0 = Futures.scheduleAsync(asyncCallable0, duration0, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
Duration.from(duration0);
SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("5!\"w");
Callable<Exception> callable1 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
doReturn(sQLInvalidAuthorizationSpecException0).when(callable1).call();
TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
scheduledThreadPoolExecutor0.schedule((Callable<Comparable<LinkedList>>) callable1, (-1917L), timeUnit0);
duration0.minusMillis(0L);
TimeUnit timeUnit1 = TimeUnit.DAYS;
Futures.withTimeout(listenableFuture0, 270L, timeUnit1, (ScheduledExecutorService) scheduledThreadPoolExecutor0);
LinkedHashSet<ListenableFuture<Exception>> linkedHashSet0 = new LinkedHashSet<ListenableFuture<Exception>>();
Futures.successfulAsList((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
Callable<Exception> callable2 = (Callable<Exception>) mock(Callable.class, new ViolatedAssumptionAnswer());
TrustedListenableFutureTask.create(callable2);
AsyncCallable<Exception> asyncCallable1 = (AsyncCallable<Exception>) mock(AsyncCallable.class, new ViolatedAssumptionAnswer());
TrustedListenableFutureTask.create((AsyncCallable<ListenableFuture<LinkedList>>) asyncCallable1);
Futures.FutureCombiner<Exception> futures_FutureCombiner0 = Futures.whenAllComplete((Iterable<? extends ListenableFuture<? extends Exception>>) linkedHashSet0);
Callable<LinkedList<AggregateFuture.ReleaseResourcesReason>> callable3 = (Callable<LinkedList<AggregateFuture.ReleaseResourcesReason>>) mock(Callable.class, new ViolatedAssumptionAnswer());
doReturn((Object) null).when(callable3).call();
futures_FutureCombiner0.call(callable3, (Executor) scheduledThreadPoolExecutor0);

* Writing tests to file
* Writing JUnit test case 'Futures_ESTest' to evosuite-tests
* Done!

* Computation finished
