* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.graph.EndpointPair
* Starting Client-0
* Connecting to master process on port 3761
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.graph.EndpointPair
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 312
* Using seed 1729699660384
* Starting evolution
* Initial Number of Goals in DynaMOSA = 140 / 312
[MASTER] 05:07:42.348 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 05:07:43.779 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             1%] [Cov:================>                  48%][Progress:>                             3%] [Cov:=================>                 50%][Progress:=>                            5%] [Cov:=================>                 49%][MASTER] 05:07:46.059 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkConnections<N, E> : Type points to itself
[Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:======================>            64%][Progress:===>                          13%] [Cov:======================>            64%][Progress:====>                         15%] [Cov:======================>            64%][Progress:====>                         16%] [Cov:======================>            64%][Progress:====>                         16%] [Cov:======================>            64%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:======================>            64%][Progress:======>                       21%] [Cov:======================>            64%][Progress:======>                       23%] [Cov:=======================>           66%][Progress:=======>                      25%] [Cov:=======================>           66%][Progress:=======>                      26%] [Cov:=======================>           66%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:=========>                    30%] [Cov:=======================>           66%][Progress:=========>                    31%] [Cov:=======================>           67%][Progress:=========>                    33%] [Cov:=======================>           67%][Progress:=========>                    33%] [Cov:=======================>           67%][Progress:==========>                   35%] [Cov:=======================>           68%][Progress:==========>                   36%] [Cov:=======================>           68%][Progress:===========>                  38%] [Cov:=======================>           68%][Progress:===========>                  38%] [Cov:=======================>           68%][Progress:============>                 40%] [Cov:=======================>           68%][Progress:============>                 41%] [Cov:=======================>           68%][Progress:============>                 43%] [Cov:=======================>           68%][Progress:=============>                45%] [Cov:=======================>           68%][Progress:=============>                46%] [Cov:=======================>           68%][Progress:==============>               48%] [Cov:=======================>           68%][Progress:==============>               48%] [Cov:========================>          69%][Progress:===============>              50%] [Cov:=======================>           68%][Progress:===============>              51%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             56%] [Cov:=======================>           68%][Progress:================>             56%] [Cov:=======================>           68%][Progress:=================>            58%] [Cov:=======================>           68%][Progress:==================>           60%] [Cov:=======================>           68%][Progress:==================>           60%] [Cov:========================>          69%][Progress:==================>           61%] [Cov:========================>          69%][Progress:==================>           63%] [Cov:========================>          69%][Progress:===================>          65%] [Cov:========================>          69%][Progress:====================>         68%] [Cov:=======================>           68%][Progress:=====================>        70%] [Cov:========================>          70%][Progress:=====================>        71%] [Cov:========================>          69%][Progress:=====================>        71%] [Cov:========================>          70%][Progress:=====================>        73%] [Cov:========================>          70%][Progress:======================>       76%] [Cov:========================>          70%][Progress:======================>       76%] [Cov:========================>          71%][Progress:=======================>      78%] [Cov:========================>          70%][Progress:========================>     80%] [Cov:========================>          70%][Progress:========================>     81%] [Cov:========================>          70%][Progress:========================>     83%] [Cov:========================>          70%][Progress:=========================>    85%] [Cov:========================>          70%][Progress:=========================>    86%] [Cov:========================>          70%][Progress:==========================>   88%] [Cov:========================>          70%][Progress:==========================>   88%] [Cov:========================>          70%][Progress:===========================>  90%] [Cov:========================>          70%][Progress:===========================>  91%] [Cov:========================>          70%][Progress:===========================>  91%] [Cov:========================>          70%][Progress:===========================>  93%] [Cov:========================>          71%][Progress:============================> 95%] [Cov:========================>          71%][Progress:============================> 95%] [Cov:========================>          71%][Progress:============================> 96%] [Cov:========================>          71%][Progress:=============================>98%] [Cov:========================>          70%][Progress:==============================100%] [Cov:========================>          70%][Progress:==============================100%] [Cov:========================>          70%][Progress:==============================100%] [Cov:========================>          70%]
* Search finished after 61s and 75 generations, 34376 statements, best individual has fitness: 56.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 45
* Number of covered goals: 42
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 106
* Number of covered goals: 104
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 58%
* Total number of goals: 24
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 55%
* Total number of goals: 22
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 55%
* Total number of goals: 22
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 45
* Number of covered goals: 42
* Generated 31 tests with total length 130
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 05:08:46.606 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1729699726581/com/google/common/graph/EndpointPair_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1729699726581/com/google/common/graph/EndpointPair_21_tmp__ESTest_scaffolding.java]]
[MASTER] 05:08:46.606 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:08:46.606 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:08:46.608 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Object cannot be converted to java.lang.Integer: 25
[MASTER] 05:08:46.608 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 05:08:46.609 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1729699726581/com/google/common/graph/EndpointPair_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:08:46 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.common.graph.EndpointPair;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class EndpointPair_21_tmp__ESTest extends EndpointPair_21_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Integer integer0 = new Integer(266);
22:       EndpointPair<Integer> endpointPair0 = EndpointPair.unordered(integer0, integer0);
23:       // Undeclared exception!
24:       try { 
25:         endpointPair0.adjacentNode((Object) null);
26:         fail("Expecting exception: NullPointerException");
27:       
28:       } catch(NullPointerException e) {
29:          //
30:          // no message in exception (getMessage() returned null)
31:          //
32:          verifyException("com.google.common.graph.EndpointPair", e);
33:       }
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_21_1729699726581/com/google/common/graph/EndpointPair_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:08:46 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class EndpointPair_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.EndpointPair"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EndpointPair_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.graph.ImmutableGraph",
82:       "com.google.common.graph.AbstractBaseGraph",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.common.graph.MapIteratorCache",
85:       "com.google.common.base.Optional",
86:       "com.google.common.graph.Network",
87:       "com.google.common.collect.RegularImmutableMap$KeySet",
88:       "com.google.common.collect.Iterators$ArrayItr",
89:       "com.google.common.collect.RegularImmutableMap",
90:       "com.google.common.graph.AbstractGraph",
91:       "com.google.common.collect.SortedMapDifference",
92:       "com.google.common.collect.Iterators$10",
93:       "com.google.common.collect.AbstractMapEntry",
94:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
95:       "com.google.common.graph.ValueGraph",
96:       "com.google.common.graph.MapIteratorCache$1$1",
97:       "com.google.common.base.Predicate",
98:       "com.google.common.base.Present",
99:       "com.google.common.graph.ForwardingGraph",
100:       "com.google.common.graph.UndirectedMultiNetworkConnections",
101:       "com.google.common.graph.StandardMutableGraph",
102:       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
103:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
104:       "com.google.common.collect.ImmutableSet$CachingAsList",
105:       "com.google.common.collect.ImmutableMapEntrySet",
106:       "com.google.common.graph.MapIteratorCache$1",
107:       "com.google.common.collect.DiscreteDomain",
108:       "com.google.common.collect.UnmodifiableListIterator",
109:       "com.google.common.graph.ImmutableNetwork",
110:       "com.google.common.graph.StandardValueGraph",
111:       "com.google.common.graph.PredecessorsFunction",
112:       "com.google.common.base.Absent",
113:       "com.google.common.graph.DirectedNetworkConnections",
114:       "com.google.common.collect.Maps$BiMapConverter",
115:       "com.google.common.graph.StandardMutableNetwork",
116:       "com.google.common.collect.AbstractIterator",
117:       "com.google.common.graph.AbstractNetwork$1",
118:       "com.google.common.graph.EndpointPair$Unordered",
119:       "com.google.common.graph.MapRetrievalCache",
120:       "com.google.common.collect.MapDifference",
121:       "com.google.common.graph.MutableValueGraph",
122:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
123:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
124:       "com.google.common.graph.AbstractGraphBuilder",
125:       "com.google.common.base.Preconditions",
126:       "com.google.common.collect.UnmodifiableIterator",
127:       "com.google.common.graph.Graph",
128:       "com.google.common.graph.ElementOrder",
129:       "com.google.common.collect.ImmutableEntry",
130:       "com.google.common.collect.ImmutableEnumMap",
131:       "com.google.common.collect.ImmutableCollection",
132:       "com.google.common.graph.DirectedMultiNetworkConnections",
133:       "com.google.common.graph.EndpointPair",
134:       "com.google.errorprone.annotations.Immutable",
135:       "com.google.common.graph.StandardNetwork",
136:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
137:       "com.google.common.base.Objects",
138:       "com.google.common.graph.EndpointPair$Ordered",
139:       "com.google.common.base.Converter",
140:       "com.google.errorprone.annotations.DoNotMock",
141:       "com.google.common.collect.Maps$8",
142:       "com.google.common.collect.BiMap",
143:       "com.google.common.collect.IndexedImmutableSet",
144:       "com.google.common.base.Function",
145:       "com.google.common.graph.NetworkConnections",
146:       "com.google.common.collect.ImmutableSet",
147:       "com.google.common.collect.Iterators$9",
148:       "com.google.common.graph.NetworkBuilder",
149:       "com.google.common.collect.ImmutableMap",
150:       "com.google.common.collect.ImmutableMapEntry",
151:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
152:       "com.google.common.graph.MutableGraph",
153:       "com.google.common.collect.AbstractIndexedListIterator",
154:       "com.google.common.collect.Iterators$1",
155:       "com.google.common.graph.GraphBuilder",
156:       "com.google.common.collect.Iterators$4",
157:       "com.google.common.collect.Iterators$5",
158:       "com.google.common.collect.DiscreteDomain$LongDomain",
159:       "com.google.common.base.ExtraObjectsMethodsForWeb",
160:       "com.google.common.graph.AbstractUndirectedNetworkConnections",
161:       "com.google.common.collect.ImmutableMap$1",
162:       "com.google.common.graph.GraphConnections",
163:       "com.google.common.graph.ElementOrder$Type",
164:       "com.google.common.collect.Iterators",
165:       "com.google.common.collect.ImmutableBiMap",
166:       "com.google.common.graph.Graphs",
167:       "com.google.common.graph.StandardMutableValueGraph",
168:       "com.google.common.graph.UndirectedNetworkConnections",
169:       "com.google.common.collect.ImmutableList",
170:       "com.google.common.graph.ElementOrder$1",
171:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
172:       "com.google.common.graph.ImmutableNetwork$Builder",
173:       "com.google.common.graph.AbstractDirectedNetworkConnections",
174:       "com.google.common.collect.Maps",
175:       "com.google.common.collect.ImmutableMap$Builder",
176:       "com.google.common.graph.BaseGraph",
177:       "com.google.common.collect.Maps$EntryTransformer",
178:       "com.google.common.graph.MutableNetwork",
179:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
180:       "com.google.common.collect.Iterators$MergingIterator",
181:       "com.google.common.graph.SuccessorsFunction",
182:       "com.google.common.collect.RegularImmutableMap$Values",
183:       "com.google.common.graph.AbstractNetwork",
184:       "com.google.common.graph.AbstractValueGraph"
185:     );
186:   } 
187: 
188:   private static void resetClasses() {
189:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EndpointPair_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
190: 
191:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
192:       "com.google.common.graph.EndpointPair",
193:       "com.google.common.graph.EndpointPair$Ordered",
194:       "com.google.common.graph.EndpointPair$Unordered",
195:       "com.google.common.collect.UnmodifiableIterator",
196:       "com.google.common.collect.UnmodifiableListIterator",
197:       "com.google.common.collect.AbstractIndexedListIterator",
198:       "com.google.common.base.Preconditions",
199:       "com.google.common.collect.Iterators$ArrayItr",
200:       "com.google.common.graph.AbstractGraphBuilder",
201:       "com.google.common.graph.NetworkBuilder",
202:       "com.google.common.graph.ElementOrder",
203:       "com.google.common.graph.ElementOrder$Type",
204:       "com.google.common.base.Optional",
205:       "com.google.common.base.Absent",
206:       "com.google.common.graph.AbstractNetwork",
207:       "com.google.common.graph.StandardNetwork",
208:       "com.google.common.graph.StandardMutableNetwork",
209:       "com.google.common.graph.ElementOrder$1",
210:       "com.google.common.collect.Maps",
211:       "com.google.common.graph.MapIteratorCache",
212:       "com.google.common.graph.Graphs",
213:       "com.google.common.base.Present",
214:       "com.google.common.collect.Iterators",
215:       "com.google.common.graph.AbstractBaseGraph",
216:       "com.google.common.graph.AbstractGraph",
217:       "com.google.common.graph.ForwardingGraph",
218:       "com.google.common.graph.StandardMutableGraph",
219:       "com.google.common.graph.AbstractValueGraph",
220:       "com.google.common.graph.StandardValueGraph",
221:       "com.google.common.graph.StandardMutableValueGraph",
222:       "com.google.common.graph.GraphBuilder",
223:       "com.google.common.graph.MapIteratorCache$1",
224:       "com.google.common.graph.MapIteratorCache$1$1",
225:       "com.google.common.graph.AbstractBaseGraph$1",
226:       "com.google.common.collect.AbstractIterator",
227:       "com.google.common.graph.EndpointPairIterator",
228:       "com.google.common.graph.EndpointPairIterator$Undirected",
229:       "com.google.common.collect.AbstractIterator$State",
230:       "com.google.common.collect.ImmutableCollection",
231:       "com.google.common.collect.ImmutableSet",
232:       "com.google.common.collect.ImmutableSet$CachingAsList",
233:       "com.google.common.collect.RegularImmutableSet",
234:       "com.google.common.collect.Sets",
235:       "com.google.common.collect.CollectPreconditions",
236:       "com.google.common.collect.AbstractIterator$1",
237:       "com.google.common.graph.ValueGraphBuilder",
238:       "com.google.common.graph.ImmutableGraph",
239:       "com.google.common.collect.ImmutableMap",
240:       "com.google.common.collect.ImmutableMap$Builder",
241:       "com.google.common.collect.RegularImmutableMap",
242:       "com.google.common.primitives.IntsMethodsForWeb",
243:       "com.google.common.primitives.Ints",
244:       "com.google.common.graph.ImmutableNetwork",
245:       "com.google.common.graph.AbstractNetwork$1",
246:       "com.google.common.graph.AbstractNetwork$1$1",
247:       "com.google.common.graph.AbstractNetwork$1$1$1",
248:       "com.google.common.collect.TransformedIterator",
249:       "com.google.common.collect.Iterators$6",
250:       "com.google.common.base.Strings",
251:       "com.google.common.base.MoreObjects",
252:       "com.google.common.base.MoreObjects$ToStringHelper",
253:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
254:       "com.google.common.collect.RangeGwtSerializationDependencies",
255:       "com.google.common.collect.Cut",
256:       "com.google.common.collect.Cut$BelowAll",
257:       "com.google.common.collect.Cut$AboveAll",
258:       "com.google.common.collect.Range",
259:       "com.google.common.collect.Cut$BelowValue",
260:       "com.google.common.collect.Cut$AboveValue",
261:       "com.google.common.primitives.Booleans",
262:       "com.google.common.graph.ImmutableValueGraph",
263:       "com.google.common.graph.AbstractValueGraph$2",
264:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
265:       "com.google.common.collect.Maps$AsMapView",
266:       "com.google.common.collect.Sets$ImprovedAbstractSet",
267:       "com.google.common.collect.Maps$EntrySet",
268:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
269:       "com.google.common.collect.Maps$3",
270:       "com.google.common.collect.ImmutableMapEntrySet",
271:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
272:       "com.google.common.collect.ImmutableList",
273:       "com.google.common.collect.RegularImmutableList",
274:       "com.google.common.collect.DiscreteDomain",
275:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
276:       "com.google.common.graph.AbstractNetwork$3",
277:       "com.google.common.collect.Range$1",
278:       "com.google.common.collect.Ordering",
279:       "com.google.common.collect.NaturalOrdering",
280:       "com.google.common.graph.EndpointPairIterator$Directed",
281:       "com.google.common.graph.MapRetrievalCache",
282:       "com.google.common.graph.AbstractValueGraph$1",
283:       "com.google.common.base.ExtraObjectsMethodsForWeb",
284:       "com.google.common.base.Objects",
285:       "com.google.common.graph.ImmutableNetwork$Builder"
286:     );
287:   }
288: }

[MASTER] 05:08:46.609 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(266);
EndpointPair<Integer> endpointPair0 = EndpointPair.unordered(integer0, integer0);
endpointPair0.adjacentNode((Object) null);

* Writing tests to file
* Writing JUnit test case 'EndpointPair_ESTest' to evosuite-tests
* Done!

* Computation finished
