* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.ForwardingNavigableSet
* Starting Client-0
* Connecting to master process on port 12994
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.ForwardingNavigableSet
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 238
* Using seed 1729695700268
* Starting evolution
* Initial Number of Goals in DynaMOSA = 165 / 238
[MASTER] 04:01:43.111 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 04:01:43.193 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<java.lang.Object> : Type points to itself
[MASTER] 04:01:45.132 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:01:45.186 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[MASTER] 04:01:45.395 [logback-1] WARN  TestCluster - Failed to check cache for java.util.NavigableSet<com.google.common.collect.Multisets.UnmodifiableMultiset<java.lang.Integer>> : Type points to itself
[MASTER] 04:01:46.307 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:01:47.459 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:01:49.277 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 04:01:49.321 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.UnmodifiableSortedMultiset<E> : Type points to itself
[MASTER] 04:01:53.775 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.lang.Object, java.lang.Object>> : Type points to itself
[MASTER] 04:01:54.949 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 04:01:55.186 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:01:56.439 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ForwardingNavigableSet<E> : Type points to itself
[MASTER] 04:01:56.553 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.DiscreteDomain<C> : Type points to itself
[Progress:======>                       23%] [Cov:=================>                 49%][MASTER] 04:01:59.234 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.RegularImmutableSortedMultiset due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.RegularImmutableSortedSet due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.ImmutableList$SubList due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 04:01:59.245 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedMultiset<E> : Type points to itself
[MASTER] 04:02:00.077 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.TreeMultimap due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.RegularImmutableSortedSet due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 04:02:02.145 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Multisets.UnmodifiableMultiset<java.lang.Integer>> : Type points to itself
[MASTER] 04:02:04.597 [logback-1] WARN  TestCluster - Failed to check cache for java.util.NavigableSet<java.util.Map<java.lang.Integer, com.google.common.collect.BoundType>.Entry<com.google.common.collect.BoundType, java.lang.Object>> : Type points to itself
[MASTER] 04:02:06.409 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<java.util.Map<java.lang.Object, java.lang.Object>.Entry<com.google.common.collect.BoundType, java.lang.Object>> : Type points to itself
[MASTER] 04:02:10.902 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<com.google.common.collect.BoundType, java.lang.Object>.Entry<java.lang.Object, java.lang.Integer>> : Type points to itself
[MASTER] 04:02:11.303 [logback-1] WARN  TestCluster - Failed to check cache for java.util.NavigableSet<java.util.Map<java.lang.Integer, java.lang.Object>.Entry<java.lang.Integer, java.lang.Integer>> : Type points to itself
[MASTER] 04:02:17.883 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.lang.Object, java.lang.Integer>.Entry<java.lang.Object, java.lang.Object>> : Type points to itself
[MASTER] 04:02:21.592 [logback-1] WARN  CastClassManager - Nothing is assignable after adding java.lang.Comparable<T> for type Variable E with bounds [java.lang.Comparable<? super E>] of declaration ImmutableSortedSet#copyOf. The owner var map is {E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Integer>, E=java.lang.Comparable<java.lang.Object>, E=java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.lang.Object, java.lang.Object>, E=class java.lang.Integer, E=class java.lang.Integer, E=java.lang.Comparable<java.util.Map<K, V>.Entry<K, V>>, E=class com.google.common.collect.BoundType, E=java.util.Map<java.lang.Integer, java.lang.Comparable<T>>.Entry<java.lang.Object, com.google.common.collect.BoundType>, E=class java.lang.Integer, E=class java.lang.Integer, E=class java.lang.Integer, E=java.lang.Comparable<java.lang.Integer>, E=class com.google.common.collect.BoundType}
[Progress:=====================>        70%] [Cov:====================>              59%][MASTER] 04:02:24.992 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection due to java.lang.ArrayIndexOutOfBoundsException: 3
[MASTER] 04:02:29.014 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.Map<java.lang.Integer, java.lang.Object>.Entry<java.lang.Object, java.lang.Integer>> : Type points to itself
[MASTER] 04:02:33.256 [logback-1] WARN  TestCluster - Failed to check cache for java.util.NavigableSet<java.util.Map<java.lang.Integer, java.lang.Integer>.Entry<java.lang.Object, java.util.Locale$Category>> : Type points to itself
[MASTER] 04:02:35.556 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.Map<java.lang.Object, java.lang.Integer>.Entry<java.lang.Object, java.lang.Object>> : Type points to itself
[Progress:===========================>  91%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=======================>           67%][MASTER] 04:02:43.276 [logback-1] WARN  TestCluster - Failed to check cache for java.util.NavigableSet<java.util.Map<java.lang.Integer, java.util.Locale$Category>.Entry<java.lang.Integer, java.lang.Integer>> : Type points to itself
[MASTER] 04:02:44.044 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<java.util.Map<java.lang.Integer, java.util.Locale$Category>.Entry<java.lang.Integer, java.lang.Integer>> : Type points to itself
[Progress:==============================100%] [Cov:=======================>           66%]
* Search finished after 62s and 4 generations, 1633 statements, best individual has fitness: 114.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 26
* Number of covered goals: 21
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 25
* Number of covered goals: 20
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 36
* Number of covered goals: 24
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 14%
* Total number of goals: 78
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 24
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 79%
* Total number of goals: 24
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 25
* Number of covered goals: 19
* Generated 37 tests with total length 184
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 04:02:50.092 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1729695770068/com/google/common/collect/ForwardingNavigableSet_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1729695770068/com/google/common/collect/ForwardingNavigableSet_34_tmp__ESTest_scaffolding.java]]
[MASTER] 04:02:50.092 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:02:50.092 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 04:02:50.096 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Object cannot be converted to java.lang.Comparable<java.lang.Integer>: 26
[MASTER] 04:02:50.097 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1729695770068/com/google/common/collect/ForwardingNavigableSet_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 15:02:50 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.ForwardingNavigableSet;
11: import com.google.common.collect.ImmutableSortedSet;
12: import com.google.common.collect.Sets;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class ForwardingNavigableSet_34_tmp__ESTest extends ForwardingNavigableSet_34_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       Integer integer0 = new Integer((-1257966797));
23:       ImmutableSortedSet<Integer> immutableSortedSet0 = ImmutableSortedSet.of(integer0);
24:       Sets.DescendingSet<Integer> sets_DescendingSet0 = new Sets.DescendingSet<Integer>(immutableSortedSet0);
25:       ForwardingNavigableSet.StandardDescendingSet forwardingNavigableSet_StandardDescendingSet0 = sets_DescendingSet0.new StandardDescendingSet();
26:       Comparable<Integer> comparable0 = forwardingNavigableSet_StandardDescendingSet0.standardLast();
27:       assertEquals((-1257966797), comparable0);
28:   }
29: }
RegularFileObject[/tmp/EvoSuite_34_1729695770068/com/google/common/collect/ForwardingNavigableSet_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 15:02:50 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ForwardingNavigableSet_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.ForwardingNavigableSet"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ForwardingNavigableSet_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
82:       "com.google.common.collect.RegularContiguousSet",
83:       "com.google.common.collect.AllEqualOrdering",
84:       "com.google.common.collect.ImmutableList$SubList",
85:       "com.google.common.collect.Lists$RandomAccessPartition",
86:       "com.google.common.collect.RegularImmutableSortedMultiset",
87:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
88:       "com.google.common.collect.PeekingIterator",
89:       "com.google.common.collect.RegularImmutableList",
90:       "com.google.common.collect.ForwardingNavigableSet",
91:       "com.google.common.collect.SortedMultiset",
92:       "com.google.common.collect.RegularContiguousSet$3",
93:       "com.google.common.collect.RegularContiguousSet$2",
94:       "com.google.common.collect.RegularContiguousSet$1",
95:       "com.google.common.collect.Lists$TransformingRandomAccessList",
96:       "com.google.common.collect.Iterators$ArrayItr",
97:       "com.google.common.collect.DescendingImmutableSortedMultiset",
98:       "com.google.common.collect.Maps$KeySet",
99:       "com.google.common.collect.NullsLastOrdering",
100:       "com.google.common.collect.AbstractSortedSetMultimap",
101:       "com.google.common.collect.Range",
102:       "com.google.common.collect.ByFunctionOrdering",
103:       "com.google.common.collect.RegularImmutableSet",
104:       "com.google.common.collect.Iterators$10",
105:       "com.google.common.collect.ForwardingSortedSet",
106:       "com.google.common.base.Predicate",
107:       "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
108:       "com.google.common.collect.LexicographicalOrdering",
109:       "com.google.common.collect.NullsFirstOrdering",
110:       "com.google.common.collect.ContiguousSet",
111:       "com.google.common.collect.ImmutableAsList",
112:       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
113:       "com.google.common.collect.ImmutableSet$Builder",
114:       "com.google.common.collect.ImmutableSet$CachingAsList",
115:       "com.google.common.collect.RegularImmutableAsList",
116:       "com.google.common.collect.SingletonImmutableSet",
117:       "com.google.common.collect.Cut$BelowValue",
118:       "com.google.common.collect.ImmutableList$SerializedForm",
119:       "org.checkerframework.framework.qual.QualifierForLiterals",
120:       "com.google.common.collect.AbstractMapBasedMultimap",
121:       "com.google.common.collect.Lists$Partition",
122:       "com.google.common.collect.Lists",
123:       "com.google.common.collect.ImmutableMultiset",
124:       "com.google.common.collect.DiscreteDomain",
125:       "com.google.common.collect.UnmodifiableListIterator",
126:       "com.google.common.collect.UsingToStringOrdering",
127:       "com.google.common.collect.EmptyContiguousSet",
128:       "com.google.common.collect.Lists$TransformingSequentialList",
129:       "com.google.common.collect.ImmutableSortedSet",
130:       "com.google.common.collect.Cut",
131:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
132:       "com.google.common.collect.RangeGwtSerializationDependencies",
133:       "com.google.common.collect.ObjectArrays",
134:       "com.google.common.collect.DiscreteDomain$1",
135:       "com.google.common.collect.AbstractIterator",
136:       "org.checkerframework.framework.qual.SubtypeOf",
137:       "com.google.common.collect.ImmutableSortedSet$Builder",
138:       "com.google.common.collect.ImmutableList$1",
139:       "com.google.common.collect.SortedIterable",
140:       "com.google.common.collect.Sets$ImprovedAbstractSet",
141:       "com.google.common.base.Preconditions",
142:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
143:       "com.google.common.collect.UnmodifiableIterator",
144:       "com.google.common.collect.ImmutableSortedMultiset",
145:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
146:       "com.google.common.collect.ParametricNullness",
147:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
148:       "com.google.common.collect.ImmutableCollection",
149:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
150:       "com.google.common.collect.Lists$RandomAccessListWrapper",
151:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
152:       "com.google.common.collect.ImmutableMultiset$EntrySet",
153:       "com.google.common.collect.TreeMultimap",
154:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
155:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
156:       "com.google.common.collect.SingletonImmutableList",
157:       "com.google.common.collect.ImmutableCollection$Builder",
158:       "com.google.errorprone.annotations.DoNotMock",
159:       "com.google.common.collect.IndexedImmutableSet",
160:       "com.google.common.collect.AbstractSetMultimap",
161:       "com.google.common.collect.ImmutableSet",
162:       "com.google.common.base.Function",
163:       "com.google.common.collect.Iterators$9",
164:       "com.google.common.collect.SortedSetMultimap",
165:       "com.google.common.collect.Lists$AbstractListWrapper",
166:       "com.google.common.collect.ComparatorOrdering",
167:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
168:       "com.google.common.collect.AbstractIndexedListIterator",
169:       "com.google.common.collect.ImmutableSortedAsList",
170:       "com.google.common.collect.Iterators$1",
171:       "com.google.common.collect.Multiset$Entry",
172:       "com.google.common.collect.Sets$DescendingSet",
173:       "com.google.common.collect.Sets",
174:       "com.google.common.collect.Iterators$4",
175:       "com.google.common.collect.Iterators$5",
176:       "com.google.common.collect.ImmutableSortedMultiset$Builder",
177:       "com.google.common.collect.DiscreteDomain$LongDomain",
178:       "com.google.common.collect.ForwardingSet",
179:       "com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap",
180:       "com.google.common.collect.BoundType",
181:       "com.google.common.collect.ExplicitOrdering",
182:       "com.google.common.collect.Lists$StringAsImmutableList",
183:       "com.google.common.collect.Cut$AboveValue",
184:       "com.google.common.collect.Lists$2",
185:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
186:       "com.google.common.collect.ImmutableList$Builder",
187:       "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
188:       "com.google.common.collect.Lists$1",
189:       "com.google.common.primitives.Booleans",
190:       "com.google.common.collect.ForwardingObject",
191:       "com.google.common.collect.Range$1",
192:       "com.google.common.collect.Multiset",
193:       "com.google.common.collect.AbstractMultimap",
194:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
195:       "com.google.common.collect.Multimap",
196:       "com.google.common.collect.AbstractSequentialIterator",
197:       "com.google.common.collect.CompoundOrdering",
198:       "com.google.common.collect.Iterators",
199:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
200:       "com.google.common.collect.ImmutableMultiset$Builder",
201:       "com.google.common.collect.ImmutableList",
202:       "com.google.common.collect.ReverseOrdering",
203:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
204:       "com.google.common.collect.ImmutableMultiset$1",
205:       "com.google.common.collect.ForwardingCollection",
206:       "org.checkerframework.checker.nullness.qual.Nullable",
207:       "org.checkerframework.framework.qual.DefaultFor",
208:       "com.google.common.collect.SortedMultisetBridge",
209:       "com.google.common.collect.Cut$BelowAll",
210:       "com.google.common.collect.ReverseNaturalOrdering",
211:       "com.google.common.collect.SetMultimap",
212:       "com.google.common.collect.DescendingImmutableSortedSet",
213:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
214:       "com.google.common.collect.Ordering",
215:       "com.google.common.collect.NaturalOrdering",
216:       "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
217:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
218:       "com.google.common.collect.Iterators$MergingIterator",
219:       "com.google.common.collect.RegularImmutableSortedSet",
220:       "com.google.common.collect.Cut$AboveAll"
221:     );
222:   } 
223: 
224:   private static void resetClasses() {
225:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ForwardingNavigableSet_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
226: 
227:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
228:       "com.google.common.collect.ForwardingObject",
229:       "com.google.common.collect.ForwardingCollection",
230:       "com.google.common.collect.ForwardingSet",
231:       "com.google.common.collect.ForwardingSortedSet",
232:       "com.google.common.collect.ForwardingNavigableSet",
233:       "com.google.common.collect.ImmutableCollection",
234:       "com.google.common.collect.ImmutableSet",
235:       "com.google.common.collect.ImmutableSet$CachingAsList",
236:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
237:       "com.google.common.collect.ImmutableSortedSet",
238:       "com.google.common.collect.Ordering",
239:       "com.google.common.collect.NaturalOrdering",
240:       "com.google.common.collect.ImmutableList",
241:       "com.google.common.collect.RegularImmutableList",
242:       "com.google.common.collect.RegularImmutableSortedSet",
243:       "com.google.common.collect.SortedIterables",
244:       "com.google.common.collect.Sets$DescendingSet",
245:       "com.google.common.collect.DiscreteDomain",
246:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
247:       "com.google.common.collect.ContiguousSet",
248:       "com.google.common.collect.EmptyContiguousSet",
249:       "com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet",
250:       "com.google.common.collect.Iterators",
251:       "com.google.common.collect.UnmodifiableIterator",
252:       "com.google.common.collect.UnmodifiableListIterator",
253:       "com.google.common.collect.AbstractIndexedListIterator",
254:       "com.google.common.base.Preconditions",
255:       "com.google.common.collect.Iterators$ArrayItr",
256:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
257:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
258:       "com.google.common.math.IntMath",
259:       "com.google.common.math.MathPreconditions",
260:       "com.google.common.math.IntMath$1",
261:       "com.google.common.collect.Hashing",
262:       "com.google.common.collect.RegularImmutableSet",
263:       "com.google.common.collect.ObjectArrays",
264:       "com.google.common.collect.ImmutableList$SubList",
265:       "com.google.common.collect.ImmutableList$1",
266:       "com.google.common.collect.SingletonImmutableList",
267:       "com.google.common.collect.Iterators$9",
268:       "com.google.common.collect.Sets",
269:       "com.google.common.collect.RangeGwtSerializationDependencies",
270:       "com.google.common.collect.Cut",
271:       "com.google.common.collect.Cut$BelowAll",
272:       "com.google.common.collect.Cut$AboveAll",
273:       "com.google.common.collect.Range",
274:       "com.google.common.collect.Cut$AboveValue",
275:       "com.google.common.collect.Cut$BelowValue",
276:       "com.google.common.primitives.Booleans",
277:       "com.google.common.base.Strings",
278:       "com.google.common.collect.Range$1",
279:       "com.google.common.collect.RegularContiguousSet",
280:       "com.google.common.collect.Iterables",
281:       "com.google.common.collect.Platform",
282:       "com.google.common.collect.DescendingImmutableSortedSet",
283:       "com.google.common.collect.ReverseNaturalOrdering",
284:       "com.google.common.collect.AbstractSequentialIterator",
285:       "com.google.common.collect.RegularContiguousSet$2",
286:       "com.google.common.collect.AbstractMultiset",
287:       "com.google.common.collect.EnumMultiset",
288:       "com.google.common.collect.Multisets",
289:       "com.google.common.collect.CollectPreconditions",
290:       "com.google.common.collect.AbstractSortedMultiset",
291:       "com.google.common.collect.TreeMultiset",
292:       "com.google.common.collect.GeneralRange",
293:       "com.google.common.collect.TreeMultiset$AvlNode",
294:       "com.google.common.collect.TreeMultiset$Reference",
295:       "com.google.common.collect.Sets$ImprovedAbstractSet",
296:       "com.google.common.collect.Multisets$EntrySet",
297:       "com.google.common.collect.AbstractMultiset$EntrySet",
298:       "com.google.common.collect.NullnessCasts",
299:       "com.google.common.collect.Multisets$ElementSet",
300:       "com.google.common.collect.SortedMultisets$ElementSet",
301:       "com.google.common.collect.SortedMultisets$NavigableElementSet",
302:       "com.google.common.collect.TreeMultiset$2",
303:       "com.google.common.collect.Multisets$AbstractEntry",
304:       "com.google.common.collect.TreeMultiset$1",
305:       "com.google.common.collect.SortedMultisets",
306:       "com.google.common.collect.Collections2",
307:       "com.google.common.collect.AbstractMultimap",
308:       "com.google.common.collect.BaseImmutableMultimap",
309:       "com.google.common.collect.ImmutableMultimap",
310:       "com.google.common.collect.ImmutableListMultimap",
311:       "com.google.common.collect.ImmutableMultimap$Builder",
312:       "com.google.common.collect.ImmutableListMultimap$Builder",
313:       "com.google.common.collect.Maps",
314:       "com.google.common.collect.ImmutableMap$Builder",
315:       "com.google.common.collect.ImmutableMap",
316:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
317:       "com.google.common.collect.ImmutableBiMap",
318:       "com.google.common.collect.SingletonImmutableBiMap",
319:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
320:       "com.google.common.collect.ImmutableMultiset",
321:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
322:       "com.google.common.collect.ImmutableSortedMultiset",
323:       "com.google.common.collect.RegularImmutableSortedMultiset",
324:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
325:       "com.google.common.collect.RegularContiguousSet$1",
326:       "com.google.common.collect.ImmutableAsList",
327:       "com.google.common.collect.RegularImmutableAsList",
328:       "com.google.common.collect.ImmutableSortedAsList",
329:       "com.google.common.collect.AbstractMapBasedMultimap",
330:       "com.google.common.collect.AbstractSetMultimap",
331:       "com.google.common.collect.AbstractSortedSetMultimap",
332:       "com.google.common.collect.AbstractSortedKeySortedSetMultimap",
333:       "com.google.common.collect.TreeMultimap",
334:       "com.google.common.collect.Maps$KeySet",
335:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
336:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
337:       "com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet",
338:       "com.google.common.collect.ImmutableCollection$Builder",
339:       "com.google.common.collect.ImmutableSet$Builder",
340:       "com.google.common.collect.ImmutableSortedSet$Builder",
341:       "com.google.common.hash.BloomFilter",
342:       "com.google.common.primitives.IntsMethodsForWeb",
343:       "com.google.common.primitives.Ints",
344:       "com.google.common.collect.Lists"
345:     );
346:   }
347: }

[MASTER] 04:02:50.097 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer((-1257966797));
ImmutableSortedSet<Integer> immutableSortedSet0 = ImmutableSortedSet.of(integer0);
Sets.DescendingSet<Integer> sets_DescendingSet0 = new Sets.DescendingSet<Integer>(immutableSortedSet0);
ForwardingNavigableSet.StandardDescendingSet forwardingNavigableSet_StandardDescendingSet0 = sets_DescendingSet0.new StandardDescendingSet();
Comparable<Integer> comparable0 = forwardingNavigableSet_StandardDescendingSet0.standardLast();
assertEquals((-1257966797), comparable0);


* Writing tests to file
* Writing JUnit test case 'ForwardingNavigableSet_ESTest' to evosuite-tests
* Done!

* Computation finished
