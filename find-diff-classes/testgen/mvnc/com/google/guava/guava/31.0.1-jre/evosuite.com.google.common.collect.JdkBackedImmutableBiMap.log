* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.JdkBackedImmutableBiMap
* Starting Client-0
* Connecting to master process on port 9221
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.JdkBackedImmutableBiMap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 180
* Using seed 1729696813661
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 74 / 180
[MASTER] 04:20:16.636 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.EmptyContiguousSet<C> : Type points to itself
[MASTER] 04:20:16.636 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 04:20:16.751 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 04:20:19.648 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<java.lang.Integer> : Type points to itself
[MASTER] 04:20:20.830 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.AbstractMap<java.lang.Integer, java.lang.Integer>.SimpleImmutableEntry<java.lang.Integer, java.lang.Integer>> : Type points to itself
[MASTER] 04:20:21.805 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<java.lang.Object, java.lang.Integer> : Type points to itself
[MASTER] 04:20:21.828 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<java.lang.Object, java.lang.Integer> : Type points to itself
[MASTER] 04:20:27.431 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.util.Locale$FilteringMode, java.lang.Integer>.Entry<java.util.Locale$FilteringMode, java.util.Locale$FilteringMode>> : Type points to itself
[MASTER] 04:20:32.757 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 04:21:08.563 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 04:21:17.638 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[Progress:==============================100%] [Cov:>                                  0%][MASTER] 04:21:23.917 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:21:24.025 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[Progress:==============================100%] [Cov:======>                            18%]
* Search finished after 77s and 0 generations, 265 statements, best individual has fitness: 161.0
[MASTER] 04:21:33.135 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 33
* Number of covered goals: 11
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 16
* Number of covered goals: 2
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 23
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 10%
* Total number of goals: 10
* Number of covered goals: 1
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 10%
* Total number of goals: 10
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 16
* Number of covered goals: 2
* Generated 3 tests with total length 4
* Resulting test suite's coverage: 19% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'JdkBackedImmutableBiMap_ESTest' to evosuite-tests
* Done!

* Computation finished
