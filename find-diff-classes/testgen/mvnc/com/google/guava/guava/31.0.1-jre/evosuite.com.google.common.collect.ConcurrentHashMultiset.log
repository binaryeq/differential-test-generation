* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.ConcurrentHashMultiset
* Starting Client-0
* Connecting to master process on port 7812
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.ConcurrentHashMultiset
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 872
* Using seed 1729694876248
* Starting evolution
* Initial Number of Goals in DynaMOSA = 219 / 872
[MASTER] 03:48:00.099 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:48:00.217 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.ImmutableEntry<E> : Type points to itself
[MASTER] 03:48:00.218 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[MASTER] 03:48:00.218 [logback-1] WARN  TestCluster - Failed to check cache for java.util.concurrent.ConcurrentHashMap<K, V> : Type points to itself
[MASTER] 03:48:01.795 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 03:48:05.024 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.concurrent.ConcurrentHashMap<java.lang.Object, com.google.common.collect.BoundType>> : Type points to itself
[MASTER] 03:48:08.398 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.concurrent.atomic.AtomicInteger> : Type points to itself
[MASTER] 03:48:12.193 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Map<java.lang.Object, java.lang.Object>.Entry<java.lang.Object, java.util.concurrent.atomic.AtomicInteger>> : Type points to itself
[MASTER] 03:48:13.844 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 03:48:17.237 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.lang.Object> : Type points to itself
[MASTER] 03:48:26.636 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableMultiset<E> : Type points to itself
[MASTER] 03:48:32.964 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Multisets.ImmutableEntry<java.lang.Object>> : Type points to itself
[MASTER] 03:48:37.735 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<com.google.common.collect.Multisets.ImmutableEntry<java.util.concurrent.atomic.AtomicInteger>> : Type points to itself
[MASTER] 03:48:39.533 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<java.lang.Object, com.google.common.collect.Multisets.ImmutableEntry<java.lang.Object>> : Type points to itself
[MASTER] 03:48:44.660 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.lang.Object> : Type points to itself
[MASTER] 03:49:00.679 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableList<E>.SubList : Type points to itself
[Progress:==============================100%] [Cov:>                                  0%][MASTER] 03:49:02.334 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:49:03.954 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 03:49:04.351 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ConcurrentHashMultiset$1.<init>(Lcom/google/common/collect/ConcurrentHashMultiset;Ljava/util/Set;)V: root-Branch
[MASTER] 03:49:06.068 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ConcurrentHashMultiset.createElementSet()Ljava/util/Set;: Line 453
[MASTER] 03:49:06.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ConcurrentHashMultiset.createElementSet()Ljava/util/Set;: Line 452
[MASTER] 03:49:08.276 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.common.collect.ConcurrentHashMultiset.createElementSet()Ljava/util/Set;: root-Branch
[Progress:==============================100%] [Cov:========>                          25%]
* Search finished after 71s and 0 generations, 538 statements, best individual has fitness: 736.0
[MASTER] 03:49:10.204 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 10 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 51%
* Total number of goals: 173
* Number of covered goals: 88
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 40%
* Total number of goals: 124
* Number of covered goals: 50
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 349
* Number of covered goals: 141
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 54
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 24
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 24
* Number of covered goals: 20
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 124
* Number of covered goals: 49
* Generated 30 tests with total length 99
* Resulting test suite's coverage: 25% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'ConcurrentHashMultiset_ESTest' to evosuite-tests
* Done!

* Computation finished
