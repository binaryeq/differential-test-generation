/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 15:56:14 GMT 2024
 */

package com.google.common.escape;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.escape.UnicodeEscaper;
import com.google.common.net.PercentEscaper;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnicodeEscaper_ESTest extends UnicodeEscaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        UnicodeEscaper.codePointAt(charBuffer0, 3065, 447);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index exceeds specified range
         //
         verifyException("com.google.common.escape.UnicodeEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      String string0 = percentEscaper0.escape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      int int0 = UnicodeEscaper.codePointAt(charBuffer0, 0, 15);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = UnicodeEscaper.codePointAt("570qhd0:{8", 0, 9);
      assertEquals(53, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      // Undeclared exception!
      try { 
        percentEscaper0.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnicodeEscaper.codePointAt("", 88, 433);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnicodeEscaper.codePointAt((CharSequence) null, 28, 28);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(745);
      // Undeclared exception!
      try { 
        UnicodeEscaper.codePointAt(charBuffer0, (-992), 745);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnicodeEscaper.codePointAt("e", (-923), (-923));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index exceeds specified range
         //
         verifyException("com.google.common.escape.UnicodeEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      String string0 = percentEscaper0.escape("' with value ");
      assertEquals("%27+with+value+", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      String string0 = percentEscaper0.escape("plusForSpace cannot be specified when space is a 'safe' character");
      assertEquals("plusForSpace+cannot+be+specified+when+space+is+a+%27safe%27+character", string0);
  }
}
