* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.collect.CompoundOrdering
* Starting Client-0
* Connecting to master process on port 3735
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.collect.CompoundOrdering
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 120
* Using seed 1729694801704
* Starting evolution
* Initial Number of Goals in DynaMOSA = 48 / 120
[MASTER] 03:46:45.257 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:46:45.349 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.Multisets.UnmodifiableMultiset<E> : Type points to itself
[MASTER] 03:46:46.444 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:46:48.667 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Comparator<java.util.Locale$Category>> : Type points to itself
[MASTER] 03:46:49.481 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 03:46:49.620 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:46:50.384 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 03:46:50.429 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.UnmodifiableSortedMultiset<E> : Type points to itself
[MASTER] 03:46:50.620 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 03:46:54.079 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Comparator<java.util.Locale$FilteringMode>> : Type points to itself
[MASTER] 03:46:55.469 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 03:46:56.150 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.util.Comparator<org.evosuite.runtime.mock.java.io.MockFile>> : Type points to itself
[MASTER] 03:46:56.926 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:46:58.127 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:46:58.346 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 03:46:59.172 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.UnmodifiableSortedMultiset<E> for wildcard ? extends E
[MASTER] 03:47:00.710 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.Comparator<java.lang.Object>> : Type points to itself
[MASTER] 03:47:01.912 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:03.356 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:05.231 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Iterable<java.lang.Object> : Type points to itself
[MASTER] 03:47:06.337 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:06.583 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableSortedSet<java.lang.Object> : Type points to itself
[MASTER] 03:47:06.885 [logback-1] WARN  CastClassManager - Nothing is assignable after adding class java.lang.Integer for type Variable U with bounds [java.lang.Comparable<? super U>] of declaration Comparator#comparing. The owner var map is {T=class java.lang.Object}
[MASTER] 03:47:07.418 [logback-1] WARN  TestCluster - Failed to check cache for java.util.SortedSet<java.util.Comparator<java.lang.Object>> : Type points to itself
[MASTER] 03:47:07.705 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<java.lang.Object, java.nio.CharBuffer> : Type points to itself
[MASTER] 03:47:08.717 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<java.lang.Object> : Type points to itself
[MASTER] 03:47:10.117 [logback-1] WARN  TestCluster - Failed to check cache for java.util.concurrent.ConcurrentHashMap<K, V> : Type points to itself
[MASTER] 03:47:10.468 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<java.util.Comparator<java.lang.Object>> : Type points to itself
[MASTER] 03:47:16.173 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.Multiset<java.lang.Object>.Entry<java.util.Locale$Category>> : Type points to itself
[MASTER] 03:47:17.471 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:18.689 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:20.550 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Map<K, V>.Entry<K, V> : Type points to itself
[MASTER] 03:47:24.843 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.Multiset<org.evosuite.runtime.mock.java.io.MockFile>.Entry<java.lang.Object>> : Type points to itself
[MASTER] 03:47:29.051 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:32.576 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.ImmutableCollection<java.util.Comparator<com.google.common.collect.BoundType>> : Type points to itself
[MASTER] 03:47:33.983 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.base.Function<F, T> : Type points to itself
[MASTER] 03:47:34.067 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[Progress:=========================>    85%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   90%][MASTER] 03:47:40.646 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.Multiset<java.lang.Object>.Entry<java.lang.Object>> : Type points to itself
[MASTER] 03:47:43.469 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<com.google.common.collect.Multiset<java.nio.CharBuffer>.Entry<java.lang.Object>> : Type points to itself
[MASTER] 03:47:46.190 [logback-1] WARN  CastClassManager - Nothing is assignable after adding com.google.common.collect.Multisets.UnmodifiableMultiset<E> for wildcard ? extends E
[MASTER] 03:47:47.955 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Collection<java.util.Comparator<com.google.common.collect.BoundType>> : Type points to itself
[Progress:==============================100%] [Cov:===============================>   90%]
* Search finished after 65s and 2 generations, 1268 statements, best individual has fitness: 6.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 57
* Number of covered goals: 56
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 8
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Generated 12 tests with total length 61
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
[MASTER] 03:47:51.873 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1729694871594/com/google/common/collect/CompoundOrdering_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1729694871594/com/google/common/collect/CompoundOrdering_0_tmp__ESTest_scaffolding.java]]
[MASTER] 03:47:51.873 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:51.873 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:51.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable S has incompatible bounds
    equality constraints: java.lang.Object
    upper bounds: java.util.Locale.Category: 29
[MASTER] 03:47:51.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_0_1729694871594/com/google/common/collect/CompoundOrdering_0_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 03:47:51.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 03:47:51.878 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1729694871594/com/google/common/collect/CompoundOrdering_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 14:47:51 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.CompoundOrdering;
12: import com.google.common.collect.Ordering;
13: import java.util.Comparator;
14: import java.util.Locale;
15: import java.util.function.ToIntFunction;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class CompoundOrdering_0_tmp__ESTest extends CompoundOrdering_0_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
27:       Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
28:       CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
29:       Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
30:       CompoundOrdering<Object> compoundOrdering1 = new CompoundOrdering<Object>(ordering0, ordering0);
31:       CompoundOrdering<Comparator<Object>> compoundOrdering2 = new CompoundOrdering<Comparator<Object>>(comparator0, compoundOrdering1);
32:       String string0 = compoundOrdering2.toString();
33:       assertNotNull(string0);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_0_1729694871594/com/google/common/collect/CompoundOrdering_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 14:47:51 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class CompoundOrdering_0_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.CompoundOrdering"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CompoundOrdering_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.AllEqualOrdering",
84:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
85:       "com.google.common.math.IntMath$1",
86:       "com.google.common.collect.Hashing",
87:       "com.google.common.collect.ImmutableList$SubList",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.collect.ImmutableSet$Indexed",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.collect.Lists$TransformingRandomAccessList",
93:       "com.google.common.collect.NullsLastOrdering",
94:       "com.google.common.collect.Platform",
95:       "com.google.common.collect.AbstractIterator$1",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.Multisets",
98:       "com.google.common.collect.ByFunctionOrdering",
99:       "com.google.common.collect.SortedMapDifference",
100:       "com.google.common.collect.RegularImmutableSet",
101:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
102:       "com.google.common.collect.LexicographicalOrdering",
103:       "com.google.common.base.ParametricNullness",
104:       "com.google.common.collect.Iterables",
105:       "com.google.common.collect.NullsFirstOrdering",
106:       "com.google.common.collect.ImmutableAsList",
107:       "com.google.common.collect.ImmutableSet$Builder",
108:       "com.google.common.collect.ImmutableSet$CachingAsList",
109:       "com.google.common.collect.RegularImmutableAsList",
110:       "com.google.common.collect.SingletonImmutableSet",
111:       "com.google.common.collect.Lists$Partition",
112:       "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl",
113:       "com.google.common.collect.Lists",
114:       "com.google.common.math.MathPreconditions",
115:       "com.google.common.collect.UsingToStringOrdering",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "com.google.common.collect.Lists$TransformingSequentialList",
118:       "com.google.common.collect.ImmutableSortedSet",
119:       "com.google.common.primitives.IntsMethodsForWeb",
120:       "com.google.common.collect.ForwardingIterator",
121:       "com.google.common.collect.Maps$BiMapConverter",
122:       "com.google.common.collect.AbstractIterator",
123:       "com.google.common.collect.ImmutableSortedSet$Builder",
124:       "com.google.common.collect.ImmutableList$1",
125:       "com.google.common.base.ElementTypesAreNonnullByDefault",
126:       "com.google.common.collect.MapDifference",
127:       "com.google.common.collect.ConcurrentHashMultiset$2",
128:       "com.google.common.collect.SortedIterable",
129:       "com.google.common.collect.ConcurrentHashMultiset",
130:       "com.google.common.collect.AbstractMultiset$EntrySet",
131:       "com.google.common.collect.ConcurrentHashMultiset$3",
132:       "com.google.common.collect.Sets$ImprovedAbstractSet",
133:       "com.google.common.base.Preconditions",
134:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
135:       "com.google.common.collect.UnmodifiableIterator",
136:       "com.google.common.base.Converter$ConverterComposition",
137:       "com.google.common.collect.ImmutableCollection",
138:       "com.google.common.collect.ImmutableEnumMap",
139:       "com.google.common.collect.ForwardingMultiset",
140:       "com.google.common.collect.Lists$RandomAccessListWrapper",
141:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
142:       "com.google.common.collect.SingletonImmutableList",
143:       "com.google.common.base.Converter",
144:       "com.google.common.collect.ImmutableCollection$Builder",
145:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
146:       "com.google.errorprone.annotations.DoNotMock",
147:       "com.google.common.collect.Maps$8",
148:       "com.google.common.collect.BiMap",
149:       "com.google.common.base.Function",
150:       "com.google.common.collect.ImmutableSet",
151:       "com.google.common.collect.Lists$AbstractListWrapper",
152:       "com.google.common.collect.ImmutableMap",
153:       "com.google.common.collect.ComparatorOrdering",
154:       "com.google.common.collect.AbstractIndexedListIterator",
155:       "com.google.common.collect.ImmutableSortedAsList",
156:       "com.google.common.collect.CollectPreconditions",
157:       "com.google.common.primitives.Ints$IntConverter",
158:       "com.google.common.collect.AbstractIterator$State",
159:       "com.google.common.base.Converter$ReverseConverter",
160:       "com.google.common.collect.ExplicitOrdering",
161:       "com.google.common.collect.Lists$StringAsImmutableList",
162:       "com.google.common.collect.Lists$2",
163:       "com.google.common.collect.ImmutableList$Builder",
164:       "com.google.common.collect.Lists$1",
165:       "com.google.common.collect.ForwardingObject",
166:       "com.google.common.collect.Multiset",
167:       "com.google.common.collect.AbstractMultiset",
168:       "com.google.common.collect.CompoundOrdering",
169:       "com.google.common.collect.Multisets$UnmodifiableMultiset",
170:       "com.google.common.collect.ImmutableList",
171:       "com.google.common.collect.ReverseOrdering",
172:       "com.google.common.collect.Multisets$EntrySet",
173:       "com.google.common.collect.ForwardingCollection",
174:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
175:       "com.google.common.collect.ReverseNaturalOrdering",
176:       "com.google.common.primitives.Ints",
177:       "com.google.common.collect.Maps",
178:       "com.google.common.base.Converter$FunctionBasedConverter",
179:       "com.google.common.collect.ImmutableSet$SerializedForm",
180:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
181:       "com.google.common.collect.Maps$EntryTransformer",
182:       "com.google.common.collect.Ordering",
183:       "com.google.common.collect.NaturalOrdering",
184:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
185:       "com.google.common.collect.RegularImmutableSortedSet"
186:     );
187:   } 
188:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
189:     mock(Class.forName("java.util.function.ToIntFunction", false, CompoundOrdering_0_tmp__ESTest_scaffolding.class.getClassLoader()));
190:   }
191: 
192:   private static void resetClasses() {
193:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CompoundOrdering_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
194: 
195:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
196:       "com.google.common.collect.Ordering",
197:       "com.google.common.collect.CompoundOrdering",
198:       "com.google.common.collect.Iterables",
199:       "com.google.common.collect.ImmutableCollection",
200:       "com.google.common.collect.ImmutableList",
201:       "com.google.common.collect.RegularImmutableList",
202:       "com.google.common.base.Preconditions",
203:       "com.google.common.collect.Platform",
204:       "com.google.common.collect.NullsFirstOrdering",
205:       "com.google.common.collect.ImmutableSet",
206:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
207:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
208:       "com.google.common.collect.ImmutableSet$CachingAsList",
209:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
210:       "com.google.common.collect.ImmutableSortedSet",
211:       "com.google.common.collect.NaturalOrdering",
212:       "com.google.common.collect.RegularImmutableSortedSet",
213:       "com.google.common.math.IntMath",
214:       "com.google.common.math.MathPreconditions",
215:       "com.google.common.math.IntMath$1",
216:       "com.google.common.collect.Hashing",
217:       "com.google.common.collect.RegularImmutableSet",
218:       "com.google.common.collect.Iterators",
219:       "com.google.common.collect.UnmodifiableIterator",
220:       "com.google.common.collect.UnmodifiableListIterator",
221:       "com.google.common.collect.AbstractIndexedListIterator",
222:       "com.google.common.collect.Iterators$ArrayItr",
223:       "com.google.common.collect.ImmutableMapValues",
224:       "com.google.common.collect.Maps",
225:       "com.google.common.collect.Maps$EntryFunction",
226:       "com.google.common.collect.ByFunctionOrdering",
227:       "com.google.common.collect.Lists",
228:       "com.google.common.collect.Lists$OnePlusArrayList",
229:       "com.google.common.collect.ExplicitOrdering",
230:       "com.google.common.collect.ImmutableMap$Builder",
231:       "com.google.common.primitives.IntsMethodsForWeb",
232:       "com.google.common.primitives.Ints",
233:       "com.google.common.collect.ImmutableMap",
234:       "com.google.common.collect.CollectPreconditions",
235:       "com.google.common.collect.RegularImmutableMap",
236:       "com.google.common.collect.AbstractMapEntry",
237:       "com.google.common.collect.ImmutableEntry",
238:       "com.google.common.collect.ImmutableMapEntry",
239:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
240:       "com.google.common.collect.ObjectArrays",
241:       "com.google.common.collect.UsingToStringOrdering",
242:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
243:       "com.google.common.collect.ImmutableMultiset",
244:       "com.google.common.collect.ImmutableCollection$Builder",
245:       "com.google.common.collect.ImmutableMultiset$Builder",
246:       "com.google.common.collect.AbstractMultiset",
247:       "com.google.common.collect.AbstractMapBasedMultiset",
248:       "com.google.common.collect.LinkedHashMultiset",
249:       "com.google.common.collect.Count",
250:       "com.google.common.collect.AllEqualOrdering",
251:       "com.google.common.collect.RangeGwtSerializationDependencies",
252:       "com.google.common.collect.Cut",
253:       "com.google.common.collect.Cut$BelowAll",
254:       "com.google.common.collect.Cut$AboveAll",
255:       "com.google.common.collect.Range",
256:       "com.google.common.collect.Cut$BelowValue",
257:       "com.google.common.base.Converter",
258:       "com.google.common.base.Converter$FunctionBasedConverter",
259:       "com.google.common.base.Converter$IdentityConverter",
260:       "com.google.common.base.Converter$ConverterComposition",
261:       "com.google.common.collect.ReverseOrdering",
262:       "com.google.common.collect.Multisets",
263:       "com.google.common.collect.Sets$ImprovedAbstractSet",
264:       "com.google.common.collect.Multisets$EntrySet",
265:       "com.google.common.collect.AbstractMultiset$EntrySet",
266:       "com.google.common.collect.RegularImmutableMultiset",
267:       "com.google.common.collect.AbstractMapBasedMultiset$2",
268:       "com.google.common.collect.Multisets$AbstractEntry",
269:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
270:       "com.google.common.collect.Multisets$ImmutableEntry",
271:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
272:       "com.google.common.collect.IndexedImmutableSet",
273:       "com.google.common.collect.ImmutableMultiset$EntrySet",
274:       "com.google.common.collect.ImmutableAsList",
275:       "com.google.common.collect.IndexedImmutableSet$1",
276:       "com.google.common.collect.ImmutableList$1",
277:       "com.google.common.collect.ImmutableSet$Indexed",
278:       "com.google.common.collect.ImmutableMultiset$ElementSet",
279:       "com.google.common.collect.AbstractMultimap",
280:       "com.google.common.collect.BaseImmutableMultimap",
281:       "com.google.common.collect.ImmutableMultimap",
282:       "com.google.common.collect.ImmutableSetMultimap",
283:       "com.google.common.collect.EmptyImmutableSetMultimap",
284:       "com.google.common.collect.ImmutableMultimap$2",
285:       "com.google.common.collect.RegularImmutableMap$Values",
286:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
287:       "com.google.common.collect.ImmutableSortedMultiset",
288:       "com.google.common.collect.RegularImmutableSortedMultiset",
289:       "com.google.common.base.Converter$ReverseConverter",
290:       "com.google.common.collect.HashMultiset",
291:       "com.google.common.collect.SortedIterables",
292:       "com.google.common.collect.Ordering$ArbitraryOrdering",
293:       "com.google.common.collect.MapMaker",
294:       "com.google.common.collect.MapMakerInternalMap$Strength",
295:       "com.google.common.collect.MapMakerInternalMap$1",
296:       "com.google.common.collect.MapMakerInternalMap",
297:       "com.google.common.base.MoreObjects",
298:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
299:       "com.google.common.base.Equivalence",
300:       "com.google.common.base.Equivalence$Identity",
301:       "com.google.common.collect.MapMakerInternalMap$Segment",
302:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
303:       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
304:       "com.google.common.collect.ConcurrentHashMultiset",
305:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.collect.ConcurrentHashMultiset$2",
308:       "com.google.common.collect.AbstractIterator$State",
309:       "com.google.common.collect.ForwardingObject",
310:       "com.google.common.collect.ForwardingIterator",
311:       "com.google.common.collect.ConcurrentHashMultiset$3",
312:       "com.google.common.collect.AbstractIterator$1",
313:       "com.google.common.collect.SingletonImmutableList",
314:       "com.google.common.collect.Range$1",
315:       "com.google.common.collect.Cut$AboveValue",
316:       "com.google.common.collect.NullnessCasts",
317:       "com.google.common.collect.ImmutableList$SubList",
318:       "com.google.common.collect.ImmutableMultiset$1",
319:       "com.google.common.collect.ComparatorOrdering",
320:       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
321:       "com.google.common.collect.Iterators$9"
322:     );
323:   }
324: }

[MASTER] 03:47:51.878 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
CompoundOrdering<Object> compoundOrdering1 = new CompoundOrdering<Object>(ordering0, ordering0);
CompoundOrdering<Comparator<Object>> compoundOrdering2 = new CompoundOrdering<Comparator<Object>>(comparator0, compoundOrdering1);
String string0 = compoundOrdering2.toString();
assertNotNull(string0);


[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1729694871989/com/google/common/collect/CompoundOrdering_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1729694871989/com/google/common/collect/CompoundOrdering_2_tmp__ESTest_scaffolding.java]]
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable S has incompatible bounds
    equality constraints: java.lang.Object
    upper bounds: java.util.Locale.Category: 31
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_2_1729694871989/com/google/common/collect/CompoundOrdering_2_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 03:47:52.048 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1729694871989/com/google/common/collect/CompoundOrdering_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 14:47:51 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.base.Converter;
12: import com.google.common.collect.CompoundOrdering;
13: import com.google.common.collect.Ordering;
14: import java.util.Comparator;
15: import java.util.Locale;
16: import java.util.function.ToIntFunction;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class CompoundOrdering_2_tmp__ESTest extends CompoundOrdering_2_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
28:       doReturn(2174, 1).when(toIntFunction0).applyAsInt(any());
29:       Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
30:       CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
31:       Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
32:       Converter<Locale.Category, Locale.Category> converter0 = Converter.identity();
33:       CompoundOrdering<Object> compoundOrdering1 = new CompoundOrdering<Object>(ordering0, ordering0);
34:       int int0 = compoundOrdering1.compare(compoundOrdering1, converter0);
35:       assertEquals(1, int0);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_2_1729694871989/com/google/common/collect/CompoundOrdering_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 14:47:51 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class CompoundOrdering_2_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.CompoundOrdering"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CompoundOrdering_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.AllEqualOrdering",
84:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
85:       "com.google.common.math.IntMath$1",
86:       "com.google.common.collect.Hashing",
87:       "com.google.common.collect.ImmutableList$SubList",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.collect.ImmutableSet$Indexed",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.collect.Lists$TransformingRandomAccessList",
93:       "com.google.common.collect.NullsLastOrdering",
94:       "com.google.common.collect.Platform",
95:       "com.google.common.collect.AbstractIterator$1",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.Multisets",
98:       "com.google.common.collect.ByFunctionOrdering",
99:       "com.google.common.collect.SortedMapDifference",
100:       "com.google.common.collect.RegularImmutableSet",
101:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
102:       "com.google.common.collect.LexicographicalOrdering",
103:       "com.google.common.base.ParametricNullness",
104:       "com.google.common.collect.Iterables",
105:       "com.google.common.collect.NullsFirstOrdering",
106:       "com.google.common.collect.ImmutableAsList",
107:       "com.google.common.collect.ImmutableSet$Builder",
108:       "com.google.common.collect.ImmutableSet$CachingAsList",
109:       "com.google.common.collect.RegularImmutableAsList",
110:       "com.google.common.collect.SingletonImmutableSet",
111:       "com.google.common.collect.Lists$Partition",
112:       "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl",
113:       "com.google.common.collect.Lists",
114:       "com.google.common.math.MathPreconditions",
115:       "com.google.common.collect.UsingToStringOrdering",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "com.google.common.collect.Lists$TransformingSequentialList",
118:       "com.google.common.collect.ImmutableSortedSet",
119:       "com.google.common.primitives.IntsMethodsForWeb",
120:       "com.google.common.collect.ForwardingIterator",
121:       "com.google.common.collect.Maps$BiMapConverter",
122:       "com.google.common.collect.AbstractIterator",
123:       "com.google.common.collect.ImmutableSortedSet$Builder",
124:       "com.google.common.collect.ImmutableList$1",
125:       "com.google.common.base.ElementTypesAreNonnullByDefault",
126:       "com.google.common.collect.MapDifference",
127:       "com.google.common.collect.ConcurrentHashMultiset$2",
128:       "com.google.common.collect.SortedIterable",
129:       "com.google.common.collect.ConcurrentHashMultiset",
130:       "com.google.common.collect.AbstractMultiset$EntrySet",
131:       "com.google.common.collect.ConcurrentHashMultiset$3",
132:       "com.google.common.collect.Sets$ImprovedAbstractSet",
133:       "com.google.common.base.Preconditions",
134:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
135:       "com.google.common.collect.UnmodifiableIterator",
136:       "com.google.common.base.Converter$ConverterComposition",
137:       "com.google.common.collect.ImmutableCollection",
138:       "com.google.common.collect.ImmutableEnumMap",
139:       "com.google.common.collect.ForwardingMultiset",
140:       "com.google.common.collect.Lists$RandomAccessListWrapper",
141:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
142:       "com.google.common.collect.SingletonImmutableList",
143:       "com.google.common.base.Converter",
144:       "com.google.common.collect.ImmutableCollection$Builder",
145:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
146:       "com.google.errorprone.annotations.DoNotMock",
147:       "com.google.common.collect.Maps$8",
148:       "com.google.common.collect.BiMap",
149:       "com.google.common.base.Function",
150:       "com.google.common.collect.ImmutableSet",
151:       "com.google.common.collect.Lists$AbstractListWrapper",
152:       "com.google.common.collect.ImmutableMap",
153:       "com.google.common.collect.ComparatorOrdering",
154:       "com.google.common.collect.AbstractIndexedListIterator",
155:       "com.google.common.collect.ImmutableSortedAsList",
156:       "com.google.common.collect.CollectPreconditions",
157:       "com.google.common.primitives.Ints$IntConverter",
158:       "com.google.common.collect.AbstractIterator$State",
159:       "com.google.common.base.Converter$ReverseConverter",
160:       "com.google.common.collect.ExplicitOrdering",
161:       "com.google.common.collect.Lists$StringAsImmutableList",
162:       "com.google.common.collect.Lists$2",
163:       "com.google.common.collect.ImmutableList$Builder",
164:       "com.google.common.collect.Lists$1",
165:       "com.google.common.collect.ForwardingObject",
166:       "com.google.common.collect.Multiset",
167:       "com.google.common.collect.AbstractMultiset",
168:       "com.google.common.collect.CompoundOrdering",
169:       "com.google.common.collect.Multisets$UnmodifiableMultiset",
170:       "com.google.common.collect.ImmutableList",
171:       "com.google.common.collect.ReverseOrdering",
172:       "com.google.common.collect.Multisets$EntrySet",
173:       "com.google.common.collect.ForwardingCollection",
174:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
175:       "com.google.common.collect.ReverseNaturalOrdering",
176:       "com.google.common.primitives.Ints",
177:       "com.google.common.collect.Maps",
178:       "com.google.common.base.Converter$FunctionBasedConverter",
179:       "com.google.common.collect.ImmutableSet$SerializedForm",
180:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
181:       "com.google.common.collect.Maps$EntryTransformer",
182:       "com.google.common.collect.Ordering",
183:       "com.google.common.collect.NaturalOrdering",
184:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
185:       "com.google.common.collect.RegularImmutableSortedSet"
186:     );
187:   } 
188:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
189:     mock(Class.forName("java.util.function.ToIntFunction", false, CompoundOrdering_2_tmp__ESTest_scaffolding.class.getClassLoader()));
190:   }
191: 
192:   private static void resetClasses() {
193:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CompoundOrdering_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
194: 
195:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
196:       "com.google.common.collect.Ordering",
197:       "com.google.common.collect.CompoundOrdering",
198:       "com.google.common.collect.Iterables",
199:       "com.google.common.collect.ImmutableCollection",
200:       "com.google.common.collect.ImmutableList",
201:       "com.google.common.collect.RegularImmutableList",
202:       "com.google.common.base.Preconditions",
203:       "com.google.common.collect.Platform",
204:       "com.google.common.collect.NullsFirstOrdering",
205:       "com.google.common.collect.ImmutableSet",
206:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
207:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
208:       "com.google.common.collect.ImmutableSet$CachingAsList",
209:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
210:       "com.google.common.collect.ImmutableSortedSet",
211:       "com.google.common.collect.NaturalOrdering",
212:       "com.google.common.collect.RegularImmutableSortedSet",
213:       "com.google.common.math.IntMath",
214:       "com.google.common.math.MathPreconditions",
215:       "com.google.common.math.IntMath$1",
216:       "com.google.common.collect.Hashing",
217:       "com.google.common.collect.RegularImmutableSet",
218:       "com.google.common.collect.Iterators",
219:       "com.google.common.collect.UnmodifiableIterator",
220:       "com.google.common.collect.UnmodifiableListIterator",
221:       "com.google.common.collect.AbstractIndexedListIterator",
222:       "com.google.common.collect.Iterators$ArrayItr",
223:       "com.google.common.collect.ImmutableMapValues",
224:       "com.google.common.collect.Maps",
225:       "com.google.common.collect.Maps$EntryFunction",
226:       "com.google.common.collect.ByFunctionOrdering",
227:       "com.google.common.collect.Lists",
228:       "com.google.common.collect.Lists$OnePlusArrayList",
229:       "com.google.common.collect.ExplicitOrdering",
230:       "com.google.common.collect.ImmutableMap$Builder",
231:       "com.google.common.primitives.IntsMethodsForWeb",
232:       "com.google.common.primitives.Ints",
233:       "com.google.common.collect.ImmutableMap",
234:       "com.google.common.collect.CollectPreconditions",
235:       "com.google.common.collect.RegularImmutableMap",
236:       "com.google.common.collect.AbstractMapEntry",
237:       "com.google.common.collect.ImmutableEntry",
238:       "com.google.common.collect.ImmutableMapEntry",
239:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
240:       "com.google.common.collect.ObjectArrays",
241:       "com.google.common.collect.UsingToStringOrdering",
242:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
243:       "com.google.common.collect.ImmutableMultiset",
244:       "com.google.common.collect.ImmutableCollection$Builder",
245:       "com.google.common.collect.ImmutableMultiset$Builder",
246:       "com.google.common.collect.AbstractMultiset",
247:       "com.google.common.collect.AbstractMapBasedMultiset",
248:       "com.google.common.collect.LinkedHashMultiset",
249:       "com.google.common.collect.Count",
250:       "com.google.common.collect.AllEqualOrdering",
251:       "com.google.common.collect.RangeGwtSerializationDependencies",
252:       "com.google.common.collect.Cut",
253:       "com.google.common.collect.Cut$BelowAll",
254:       "com.google.common.collect.Cut$AboveAll",
255:       "com.google.common.collect.Range",
256:       "com.google.common.collect.Cut$BelowValue",
257:       "com.google.common.base.Converter",
258:       "com.google.common.base.Converter$FunctionBasedConverter",
259:       "com.google.common.base.Converter$IdentityConverter",
260:       "com.google.common.base.Converter$ConverterComposition",
261:       "com.google.common.collect.ReverseOrdering",
262:       "com.google.common.collect.Multisets",
263:       "com.google.common.collect.Sets$ImprovedAbstractSet",
264:       "com.google.common.collect.Multisets$EntrySet",
265:       "com.google.common.collect.AbstractMultiset$EntrySet",
266:       "com.google.common.collect.RegularImmutableMultiset",
267:       "com.google.common.collect.AbstractMapBasedMultiset$2",
268:       "com.google.common.collect.Multisets$AbstractEntry",
269:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
270:       "com.google.common.collect.Multisets$ImmutableEntry",
271:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
272:       "com.google.common.collect.IndexedImmutableSet",
273:       "com.google.common.collect.ImmutableMultiset$EntrySet",
274:       "com.google.common.collect.ImmutableAsList",
275:       "com.google.common.collect.IndexedImmutableSet$1",
276:       "com.google.common.collect.ImmutableList$1",
277:       "com.google.common.collect.ImmutableSet$Indexed",
278:       "com.google.common.collect.ImmutableMultiset$ElementSet",
279:       "com.google.common.collect.AbstractMultimap",
280:       "com.google.common.collect.BaseImmutableMultimap",
281:       "com.google.common.collect.ImmutableMultimap",
282:       "com.google.common.collect.ImmutableSetMultimap",
283:       "com.google.common.collect.EmptyImmutableSetMultimap",
284:       "com.google.common.collect.ImmutableMultimap$2",
285:       "com.google.common.collect.RegularImmutableMap$Values",
286:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
287:       "com.google.common.collect.ImmutableSortedMultiset",
288:       "com.google.common.collect.RegularImmutableSortedMultiset",
289:       "com.google.common.base.Converter$ReverseConverter",
290:       "com.google.common.collect.HashMultiset",
291:       "com.google.common.collect.SortedIterables",
292:       "com.google.common.collect.Ordering$ArbitraryOrdering",
293:       "com.google.common.collect.MapMaker",
294:       "com.google.common.collect.MapMakerInternalMap$Strength",
295:       "com.google.common.collect.MapMakerInternalMap$1",
296:       "com.google.common.collect.MapMakerInternalMap",
297:       "com.google.common.base.MoreObjects",
298:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
299:       "com.google.common.base.Equivalence",
300:       "com.google.common.base.Equivalence$Identity",
301:       "com.google.common.collect.MapMakerInternalMap$Segment",
302:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
303:       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
304:       "com.google.common.collect.ConcurrentHashMultiset",
305:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.collect.ConcurrentHashMultiset$2",
308:       "com.google.common.collect.AbstractIterator$State",
309:       "com.google.common.collect.ForwardingObject",
310:       "com.google.common.collect.ForwardingIterator",
311:       "com.google.common.collect.ConcurrentHashMultiset$3",
312:       "com.google.common.collect.AbstractIterator$1",
313:       "com.google.common.collect.SingletonImmutableList",
314:       "com.google.common.collect.Range$1",
315:       "com.google.common.collect.Cut$AboveValue",
316:       "com.google.common.collect.NullnessCasts",
317:       "com.google.common.collect.ImmutableList$SubList",
318:       "com.google.common.collect.ImmutableMultiset$1",
319:       "com.google.common.collect.ComparatorOrdering",
320:       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
321:       "com.google.common.collect.Iterators$9"
322:     );
323:   }
324: }

[MASTER] 03:47:52.049 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
doReturn(2174, 1).when(toIntFunction0).applyAsInt(any());
Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
Converter<Locale.Category, Locale.Category> converter0 = Converter.identity();
CompoundOrdering<Object> compoundOrdering1 = new CompoundOrdering<Object>(ordering0, ordering0);
int int0 = compoundOrdering1.compare(compoundOrdering1, converter0);
assertEquals(1, int0);


[MASTER] 03:47:52.168 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1729694872128/com/google/common/collect/CompoundOrdering_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1729694872128/com/google/common/collect/CompoundOrdering_4_tmp__ESTest_scaffolding.java]]
[MASTER] 03:47:52.168 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:52.168 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 03:47:52.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable S has incompatible bounds
    equality constraints: java.lang.Object
    upper bounds: java.util.Locale.Category: 29
[MASTER] 03:47:52.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_4_1729694872128/com/google/common/collect/CompoundOrdering_4_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 03:47:52.169 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 03:47:52.170 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1729694872128/com/google/common/collect/CompoundOrdering_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 14:47:52 GMT 2024
4:  */
5: 
6: package com.google.common.collect;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import com.google.common.collect.CompoundOrdering;
12: import com.google.common.collect.Ordering;
13: import java.util.Comparator;
14: import java.util.Locale;
15: import java.util.function.ToIntFunction;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class CompoundOrdering_4_tmp__ESTest extends CompoundOrdering_4_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
27:       Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
28:       CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
29:       Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
30:       CompoundOrdering<Comparator<Locale.Category>> compoundOrdering1 = new CompoundOrdering<Comparator<Locale.Category>>(ordering0, comparator0);
31:       boolean boolean0 = compoundOrdering0.equals(compoundOrdering1);
32:       assertFalse(boolean0);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_4_1729694872128/com/google/common/collect/CompoundOrdering_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 14:47:52 GMT 2024
5:  */
6: 
7: package com.google.common.collect;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class CompoundOrdering_4_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.CompoundOrdering"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CompoundOrdering_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "com.google.common.collect.AllEqualOrdering",
84:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
85:       "com.google.common.math.IntMath$1",
86:       "com.google.common.collect.Hashing",
87:       "com.google.common.collect.ImmutableList$SubList",
88:       "com.google.common.collect.Lists$RandomAccessPartition",
89:       "com.google.common.collect.ImmutableSet$Indexed",
90:       "com.google.common.collect.RegularImmutableList",
91:       "com.google.common.math.IntMath",
92:       "com.google.common.collect.Lists$TransformingRandomAccessList",
93:       "com.google.common.collect.NullsLastOrdering",
94:       "com.google.common.collect.Platform",
95:       "com.google.common.collect.AbstractIterator$1",
96:       "com.google.common.base.Converter$IdentityConverter",
97:       "com.google.common.collect.Multisets",
98:       "com.google.common.collect.ByFunctionOrdering",
99:       "com.google.common.collect.SortedMapDifference",
100:       "com.google.common.collect.RegularImmutableSet",
101:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
102:       "com.google.common.collect.LexicographicalOrdering",
103:       "com.google.common.base.ParametricNullness",
104:       "com.google.common.collect.Iterables",
105:       "com.google.common.collect.NullsFirstOrdering",
106:       "com.google.common.collect.ImmutableAsList",
107:       "com.google.common.collect.ImmutableSet$Builder",
108:       "com.google.common.collect.ImmutableSet$CachingAsList",
109:       "com.google.common.collect.RegularImmutableAsList",
110:       "com.google.common.collect.SingletonImmutableSet",
111:       "com.google.common.collect.Lists$Partition",
112:       "com.google.common.collect.ImmutableSet$EmptySetBuilderImpl",
113:       "com.google.common.collect.Lists",
114:       "com.google.common.math.MathPreconditions",
115:       "com.google.common.collect.UsingToStringOrdering",
116:       "com.google.common.collect.UnmodifiableListIterator",
117:       "com.google.common.collect.Lists$TransformingSequentialList",
118:       "com.google.common.collect.ImmutableSortedSet",
119:       "com.google.common.primitives.IntsMethodsForWeb",
120:       "com.google.common.collect.ForwardingIterator",
121:       "com.google.common.collect.Maps$BiMapConverter",
122:       "com.google.common.collect.AbstractIterator",
123:       "com.google.common.collect.ImmutableSortedSet$Builder",
124:       "com.google.common.collect.ImmutableList$1",
125:       "com.google.common.base.ElementTypesAreNonnullByDefault",
126:       "com.google.common.collect.MapDifference",
127:       "com.google.common.collect.ConcurrentHashMultiset$2",
128:       "com.google.common.collect.SortedIterable",
129:       "com.google.common.collect.ConcurrentHashMultiset",
130:       "com.google.common.collect.AbstractMultiset$EntrySet",
131:       "com.google.common.collect.ConcurrentHashMultiset$3",
132:       "com.google.common.collect.Sets$ImprovedAbstractSet",
133:       "com.google.common.base.Preconditions",
134:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
135:       "com.google.common.collect.UnmodifiableIterator",
136:       "com.google.common.base.Converter$ConverterComposition",
137:       "com.google.common.collect.ImmutableCollection",
138:       "com.google.common.collect.ImmutableEnumMap",
139:       "com.google.common.collect.ForwardingMultiset",
140:       "com.google.common.collect.Lists$RandomAccessListWrapper",
141:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
142:       "com.google.common.collect.SingletonImmutableList",
143:       "com.google.common.base.Converter",
144:       "com.google.common.collect.ImmutableCollection$Builder",
145:       "com.google.common.collect.ImmutableSet$JdkBackedSetBuilderImpl",
146:       "com.google.errorprone.annotations.DoNotMock",
147:       "com.google.common.collect.Maps$8",
148:       "com.google.common.collect.BiMap",
149:       "com.google.common.base.Function",
150:       "com.google.common.collect.ImmutableSet",
151:       "com.google.common.collect.Lists$AbstractListWrapper",
152:       "com.google.common.collect.ImmutableMap",
153:       "com.google.common.collect.ComparatorOrdering",
154:       "com.google.common.collect.AbstractIndexedListIterator",
155:       "com.google.common.collect.ImmutableSortedAsList",
156:       "com.google.common.collect.CollectPreconditions",
157:       "com.google.common.primitives.Ints$IntConverter",
158:       "com.google.common.collect.AbstractIterator$State",
159:       "com.google.common.base.Converter$ReverseConverter",
160:       "com.google.common.collect.ExplicitOrdering",
161:       "com.google.common.collect.Lists$StringAsImmutableList",
162:       "com.google.common.collect.Lists$2",
163:       "com.google.common.collect.ImmutableList$Builder",
164:       "com.google.common.collect.Lists$1",
165:       "com.google.common.collect.ForwardingObject",
166:       "com.google.common.collect.Multiset",
167:       "com.google.common.collect.AbstractMultiset",
168:       "com.google.common.collect.CompoundOrdering",
169:       "com.google.common.collect.Multisets$UnmodifiableMultiset",
170:       "com.google.common.collect.ImmutableList",
171:       "com.google.common.collect.ReverseOrdering",
172:       "com.google.common.collect.Multisets$EntrySet",
173:       "com.google.common.collect.ForwardingCollection",
174:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
175:       "com.google.common.collect.ReverseNaturalOrdering",
176:       "com.google.common.primitives.Ints",
177:       "com.google.common.collect.Maps",
178:       "com.google.common.base.Converter$FunctionBasedConverter",
179:       "com.google.common.collect.ImmutableSet$SerializedForm",
180:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
181:       "com.google.common.collect.Maps$EntryTransformer",
182:       "com.google.common.collect.Ordering",
183:       "com.google.common.collect.NaturalOrdering",
184:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
185:       "com.google.common.collect.RegularImmutableSortedSet"
186:     );
187:   } 
188:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
189:     mock(Class.forName("java.util.function.ToIntFunction", false, CompoundOrdering_4_tmp__ESTest_scaffolding.class.getClassLoader()));
190:   }
191: 
192:   private static void resetClasses() {
193:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CompoundOrdering_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
194: 
195:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
196:       "com.google.common.collect.Ordering",
197:       "com.google.common.collect.CompoundOrdering",
198:       "com.google.common.collect.Iterables",
199:       "com.google.common.collect.ImmutableCollection",
200:       "com.google.common.collect.ImmutableList",
201:       "com.google.common.collect.RegularImmutableList",
202:       "com.google.common.base.Preconditions",
203:       "com.google.common.collect.Platform",
204:       "com.google.common.collect.NullsFirstOrdering",
205:       "com.google.common.collect.ImmutableSet",
206:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
207:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
208:       "com.google.common.collect.ImmutableSet$CachingAsList",
209:       "com.google.common.collect.ImmutableSortedSetFauxverideShim",
210:       "com.google.common.collect.ImmutableSortedSet",
211:       "com.google.common.collect.NaturalOrdering",
212:       "com.google.common.collect.RegularImmutableSortedSet",
213:       "com.google.common.math.IntMath",
214:       "com.google.common.math.MathPreconditions",
215:       "com.google.common.math.IntMath$1",
216:       "com.google.common.collect.Hashing",
217:       "com.google.common.collect.RegularImmutableSet",
218:       "com.google.common.collect.Iterators",
219:       "com.google.common.collect.UnmodifiableIterator",
220:       "com.google.common.collect.UnmodifiableListIterator",
221:       "com.google.common.collect.AbstractIndexedListIterator",
222:       "com.google.common.collect.Iterators$ArrayItr",
223:       "com.google.common.collect.ImmutableMapValues",
224:       "com.google.common.collect.Maps",
225:       "com.google.common.collect.Maps$EntryFunction",
226:       "com.google.common.collect.ByFunctionOrdering",
227:       "com.google.common.collect.Lists",
228:       "com.google.common.collect.Lists$OnePlusArrayList",
229:       "com.google.common.collect.ExplicitOrdering",
230:       "com.google.common.collect.ImmutableMap$Builder",
231:       "com.google.common.primitives.IntsMethodsForWeb",
232:       "com.google.common.primitives.Ints",
233:       "com.google.common.collect.ImmutableMap",
234:       "com.google.common.collect.CollectPreconditions",
235:       "com.google.common.collect.RegularImmutableMap",
236:       "com.google.common.collect.AbstractMapEntry",
237:       "com.google.common.collect.ImmutableEntry",
238:       "com.google.common.collect.ImmutableMapEntry",
239:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
240:       "com.google.common.collect.ObjectArrays",
241:       "com.google.common.collect.UsingToStringOrdering",
242:       "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies",
243:       "com.google.common.collect.ImmutableMultiset",
244:       "com.google.common.collect.ImmutableCollection$Builder",
245:       "com.google.common.collect.ImmutableMultiset$Builder",
246:       "com.google.common.collect.AbstractMultiset",
247:       "com.google.common.collect.AbstractMapBasedMultiset",
248:       "com.google.common.collect.LinkedHashMultiset",
249:       "com.google.common.collect.Count",
250:       "com.google.common.collect.AllEqualOrdering",
251:       "com.google.common.collect.RangeGwtSerializationDependencies",
252:       "com.google.common.collect.Cut",
253:       "com.google.common.collect.Cut$BelowAll",
254:       "com.google.common.collect.Cut$AboveAll",
255:       "com.google.common.collect.Range",
256:       "com.google.common.collect.Cut$BelowValue",
257:       "com.google.common.base.Converter",
258:       "com.google.common.base.Converter$FunctionBasedConverter",
259:       "com.google.common.base.Converter$IdentityConverter",
260:       "com.google.common.base.Converter$ConverterComposition",
261:       "com.google.common.collect.ReverseOrdering",
262:       "com.google.common.collect.Multisets",
263:       "com.google.common.collect.Sets$ImprovedAbstractSet",
264:       "com.google.common.collect.Multisets$EntrySet",
265:       "com.google.common.collect.AbstractMultiset$EntrySet",
266:       "com.google.common.collect.RegularImmutableMultiset",
267:       "com.google.common.collect.AbstractMapBasedMultiset$2",
268:       "com.google.common.collect.Multisets$AbstractEntry",
269:       "com.google.common.collect.AbstractMapBasedMultiset$2$1",
270:       "com.google.common.collect.Multisets$ImmutableEntry",
271:       "com.google.common.collect.RegularImmutableMultiset$NonTerminalEntry",
272:       "com.google.common.collect.IndexedImmutableSet",
273:       "com.google.common.collect.ImmutableMultiset$EntrySet",
274:       "com.google.common.collect.ImmutableAsList",
275:       "com.google.common.collect.IndexedImmutableSet$1",
276:       "com.google.common.collect.ImmutableList$1",
277:       "com.google.common.collect.ImmutableSet$Indexed",
278:       "com.google.common.collect.ImmutableMultiset$ElementSet",
279:       "com.google.common.collect.AbstractMultimap",
280:       "com.google.common.collect.BaseImmutableMultimap",
281:       "com.google.common.collect.ImmutableMultimap",
282:       "com.google.common.collect.ImmutableSetMultimap",
283:       "com.google.common.collect.EmptyImmutableSetMultimap",
284:       "com.google.common.collect.ImmutableMultimap$2",
285:       "com.google.common.collect.RegularImmutableMap$Values",
286:       "com.google.common.collect.ImmutableSortedMultisetFauxverideShim",
287:       "com.google.common.collect.ImmutableSortedMultiset",
288:       "com.google.common.collect.RegularImmutableSortedMultiset",
289:       "com.google.common.base.Converter$ReverseConverter",
290:       "com.google.common.collect.HashMultiset",
291:       "com.google.common.collect.SortedIterables",
292:       "com.google.common.collect.Ordering$ArbitraryOrdering",
293:       "com.google.common.collect.MapMaker",
294:       "com.google.common.collect.MapMakerInternalMap$Strength",
295:       "com.google.common.collect.MapMakerInternalMap$1",
296:       "com.google.common.collect.MapMakerInternalMap",
297:       "com.google.common.base.MoreObjects",
298:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper",
299:       "com.google.common.base.Equivalence",
300:       "com.google.common.base.Equivalence$Identity",
301:       "com.google.common.collect.MapMakerInternalMap$Segment",
302:       "com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment",
303:       "com.google.common.collect.Ordering$ArbitraryOrderingHolder",
304:       "com.google.common.collect.ConcurrentHashMultiset",
305:       "com.google.common.collect.ConcurrentHashMultiset$EntrySet",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.collect.ConcurrentHashMultiset$2",
308:       "com.google.common.collect.AbstractIterator$State",
309:       "com.google.common.collect.ForwardingObject",
310:       "com.google.common.collect.ForwardingIterator",
311:       "com.google.common.collect.ConcurrentHashMultiset$3",
312:       "com.google.common.collect.AbstractIterator$1",
313:       "com.google.common.collect.SingletonImmutableList",
314:       "com.google.common.collect.Range$1",
315:       "com.google.common.collect.Cut$AboveValue",
316:       "com.google.common.collect.NullnessCasts",
317:       "com.google.common.collect.ImmutableList$SubList",
318:       "com.google.common.collect.ImmutableMultiset$1",
319:       "com.google.common.collect.ComparatorOrdering",
320:       "com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator",
321:       "com.google.common.collect.Iterators$9"
322:     );
323:   }
324: }

[MASTER] 03:47:52.170 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
CompoundOrdering<Locale.Category> compoundOrdering0 = new CompoundOrdering<Locale.Category>(comparator0, comparator0);
Ordering<Object> ordering0 = compoundOrdering0.nullsFirst();
CompoundOrdering<Comparator<Locale.Category>> compoundOrdering1 = new CompoundOrdering<Comparator<Locale.Category>>(ordering0, comparator0);
boolean boolean0 = compoundOrdering0.equals(compoundOrdering1);
assertFalse(boolean0);


* Writing tests to file
* Writing JUnit test case 'CompoundOrdering_ESTest' to evosuite-tests
* Done!

* Computation finished
