* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.graph.AbstractBaseGraph
* Starting Client-0
* Connecting to master process on port 14079
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.graph.AbstractBaseGraph
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 353
* Using seed 1729699292381
* Starting evolution
* Initial Number of Goals in DynaMOSA = 137 / 353
[MASTER] 05:01:33.991 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.EndpointPair<N> : Type points to itself
[MASTER] 05:01:33.992 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 05:01:35.110 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             1%] [Cov:=======>                           21%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             3%] [Cov:==========>                        29%][Progress:=>                            5%] [Cov:=========>                         27%][MASTER] 05:01:37.287 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.hash.BloomFilter<T> : Type points to itself
[Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:==========>                        31%][Progress:=>                            6%] [Cov:==========>                        31%][MASTER] 05:01:38.413 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=>                            6%] [Cov:==========>                        31%][Progress:==>                           8%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:==========>                        31%][MASTER] 05:01:41.488 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.collect.DiscreteDomain<C> : Type points to itself
[Progress:===>                          11%] [Cov:===========>                       33%][Progress:===>                          13%] [Cov:===========>                       32%][Progress:====>                         15%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:===========>                       33%][Progress:=====>                        18%] [Cov:===========>                       33%][Progress:=====>                        18%] [Cov:===========>                       33%][Progress:========>                     28%] [Cov:===========>                       33%][Progress:========>                     28%] [Cov:===========>                       33%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    31%] [Cov:===========>                       33%][MASTER] 05:01:53.386 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkConnections<N, E> : Type points to itself
[Progress:=========>                    31%] [Cov:===========>                       34%][Progress:=========>                    31%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       32%][Progress:==========>                   36%] [Cov:===========>                       32%][Progress:==========>                   36%] [Cov:===========>                       32%][Progress:=============>                45%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:================>             55%] [Cov:===========>                       33%][Progress:================>             56%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:===========>                       32%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:===========>                       32%][MASTER] 05:02:11.213 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Optional<T> : Type points to itself
[Progress:==================>           61%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:===========>                       33%][Progress:==================>           63%] [Cov:===========>                       33%][Progress:===================>          65%] [Cov:===========>                       33%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          66%] [Cov:===========>                       32%][Progress:===================>          66%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:===========>                       33%][Progress:======================>       76%] [Cov:===========>                       33%][Progress:======================>       76%] [Cov:===========>                       32%][Progress:======================>       76%] [Cov:===========>                       32%][Progress:=======================>      78%] [Cov:===========>                       32%][Progress:=======================>      78%] [Cov:===========>                       32%][Progress:=======================>      78%] [Cov:===========>                       32%][Progress:========================>     80%] [Cov:===========>                       32%][Progress:========================>     80%] [Cov:===========>                       32%][Progress:========================>     80%] [Cov:===========>                       33%][Progress:========================>     80%] [Cov:===========>                       33%][Progress:========================>     81%] [Cov:===========>                       33%][Progress:========================>     81%] [Cov:===========>                       32%][Progress:========================>     81%] [Cov:===========>                       32%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:===========>                       33%][Progress:==========================>   88%] [Cov:============>                      37%][Progress:===========================>  90%] [Cov:============>                      37%][Progress:===========================>  90%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:============================> 95%] [Cov:============>                      37%][Progress:============================> 95%] [Cov:============>                      37%][Progress:============================> 96%] [Cov:============>                      37%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=============>                     39%]
* Search finished after 62s and 110 generations, 33621 statements, best individual has fitness: 264.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 54
* Number of covered goals: 16
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 69
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 15%
* Total number of goals: 107
* Number of covered goals: 16
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 32
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 82%
* Total number of goals: 11
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 69
* Number of covered goals: 21
* Generated 25 tests with total length 112
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 05:02:38.990 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_5_1729699358962/com/google/common/graph/AbstractBaseGraph_5_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_5_1729699358962/com/google/common/graph/AbstractBaseGraph_5_tmp__ESTest_scaffolding.java]]
[MASTER] 05:02:38.990 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:02:38.990 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:02:38.998 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable K has incompatible bounds
    equality constraints: java.lang.Object
    upper bounds: com.google.common.graph.EndpointPair<java.lang.Object>: 27
[MASTER] 05:02:38.998 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_5_1729699358962/com/google/common/graph/AbstractBaseGraph_5_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:02:38 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.graph.ElementOrder;
11: import com.google.common.graph.EndpointPair;
12: import com.google.common.graph.GraphBuilder;
13: import com.google.common.graph.GraphConnections;
14: import com.google.common.graph.StandardValueGraph;
15: import java.util.Map;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class AbstractBaseGraph_5_tmp__ESTest extends AbstractBaseGraph_5_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       GraphBuilder<Object> graphBuilder0 = GraphBuilder.directed();
26:       ElementOrder<EndpointPair<Object>> elementOrder0 = ElementOrder.stable();
27:       Map<Object, GraphConnections<Object, Integer>> map0 = elementOrder0.createMap(23);
28:       StandardValueGraph<Object, Integer> standardValueGraph0 = new StandardValueGraph<Object, Integer>(graphBuilder0, map0, 0L);
29:       Integer integer0 = new Integer(23);
30:       EndpointPair<Object> endpointPair0 = EndpointPair.unordered((Object) graphBuilder0, (Object) integer0);
31:       boolean boolean0 = standardValueGraph0.hasEdgeConnecting(endpointPair0);
32:       assertFalse(boolean0);
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_5_1729699358962/com/google/common/graph/AbstractBaseGraph_5_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:02:38 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class AbstractBaseGraph_5_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.AbstractBaseGraph"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractBaseGraph_5_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
82:       "com.google.common.collect.ImmutableList$SubList",
83:       "com.google.common.graph.ImmutableGraph",
84:       "com.google.common.graph.AbstractBaseGraph",
85:       "com.google.common.graph.EndpointPairIterator",
86:       "com.google.common.collect.PeekingIterator",
87:       "com.google.common.graph.MapIteratorCache",
88:       "com.google.common.collect.RegularImmutableList",
89:       "com.google.common.math.IntMath",
90:       "com.google.common.graph.ImmutableValueGraph$Builder",
91:       "com.google.common.graph.EndpointPairIterator$Directed",
92:       "com.google.common.base.Optional",
93:       "com.google.common.graph.Network",
94:       "com.google.common.collect.RegularImmutableMap$KeySet",
95:       "com.google.common.collect.Iterators$ArrayItr",
96:       "com.google.common.collect.AbstractIterator$1",
97:       "com.google.common.collect.RegularImmutableMap",
98:       "com.google.common.graph.AbstractGraph",
99:       "com.google.common.collect.SortedMapDifference",
100:       "com.google.common.collect.RegularImmutableSet",
101:       "com.google.common.collect.Iterators$10",
102:       "com.google.common.collect.AbstractMapEntry",
103:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
104:       "com.google.common.graph.ValueGraph",
105:       "com.google.common.graph.MapIteratorCache$1$1",
106:       "com.google.common.base.Predicate",
107:       "com.google.common.base.Present",
108:       "com.google.common.graph.ForwardingGraph",
109:       "com.google.common.graph.StandardMutableGraph",
110:       "com.google.common.collect.ImmutableAsList",
111:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
112:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
113:       "com.google.common.collect.ImmutableSet$CachingAsList",
114:       "com.google.common.base.MoreObjects$ToStringHelper",
115:       "com.google.common.graph.UndirectedGraphConnections",
116:       "com.google.common.collect.RegularImmutableAsList",
117:       "com.google.common.collect.SingletonImmutableSet",
118:       "com.google.common.collect.ImmutableMapEntrySet",
119:       "com.google.common.graph.MapIteratorCache$1",
120:       "com.google.common.collect.UnmodifiableListIterator",
121:       "com.google.common.graph.StandardValueGraph",
122:       "com.google.common.base.MoreObjects$ToStringHelper$UnconditionalValueHolder",
123:       "com.google.common.primitives.IntsMethodsForWeb",
124:       "com.google.common.graph.PredecessorsFunction",
125:       "com.google.common.base.Absent",
126:       "com.google.common.collect.Maps$BiMapConverter",
127:       "com.google.common.collect.AbstractIterator",
128:       "com.google.common.base.MoreObjects",
129:       "com.google.common.graph.EndpointPair$Unordered",
130:       "com.google.common.graph.MapRetrievalCache",
131:       "com.google.common.collect.ImmutableList$1",
132:       "com.google.common.collect.MapDifference",
133:       "com.google.common.graph.MutableValueGraph",
134:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
135:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
136:       "com.google.common.graph.AbstractGraphBuilder",
137:       "com.google.common.base.Preconditions",
138:       "com.google.common.collect.UnmodifiableIterator",
139:       "com.google.common.graph.UndirectedGraphConnections$2",
140:       "com.google.common.graph.Graph",
141:       "com.google.common.graph.ElementOrder",
142:       "com.google.common.collect.ImmutableEntry",
143:       "com.google.common.graph.AbstractBaseGraph$1",
144:       "com.google.common.collect.ImmutableEnumMap",
145:       "com.google.common.collect.ImmutableCollection",
146:       "com.google.common.graph.EndpointPair",
147:       "com.google.common.graph.ValueGraphBuilder",
148:       "com.google.errorprone.annotations.Immutable",
149:       "com.google.common.graph.StandardNetwork",
150:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
151:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
152:       "com.google.common.collect.SingletonImmutableList",
153:       "com.google.common.graph.EndpointPair$Ordered",
154:       "com.google.common.base.Converter",
155:       "com.google.errorprone.annotations.DoNotMock",
156:       "com.google.common.collect.Maps$8",
157:       "com.google.common.collect.BiMap",
158:       "com.google.common.collect.IndexedImmutableSet",
159:       "com.google.common.base.Function",
160:       "com.google.common.collect.ImmutableSet",
161:       "com.google.common.collect.Iterators$9",
162:       "com.google.common.graph.NetworkBuilder",
163:       "com.google.common.collect.ImmutableMap",
164:       "com.google.common.collect.ImmutableMapEntry",
165:       "com.google.common.graph.MutableGraph",
166:       "com.google.common.collect.AbstractIndexedListIterator",
167:       "com.google.common.collect.Iterators$1",
168:       "com.google.common.graph.GraphBuilder",
169:       "com.google.common.primitives.Ints$IntConverter",
170:       "com.google.common.collect.Iterators$4",
171:       "com.google.common.collect.Iterators$5",
172:       "com.google.common.collect.AbstractIterator$State",
173:       "com.google.common.graph.EndpointPairIterator$Undirected",
174:       "com.google.common.graph.GraphConnections",
175:       "com.google.common.collect.ImmutableMap$1",
176:       "com.google.common.graph.ElementOrder$Type",
177:       "com.google.common.collect.Iterators",
178:       "com.google.common.graph.Graphs",
179:       "com.google.common.collect.ImmutableBiMap",
180:       "com.google.common.graph.StandardMutableValueGraph",
181:       "com.google.common.collect.ImmutableList",
182:       "com.google.common.graph.ElementOrder$1",
183:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
184:       "com.google.common.graph.ImmutableValueGraph",
185:       "com.google.common.graph.ImmutableGraph$Builder",
186:       "com.google.common.graph.ImmutableNetwork$Builder",
187:       "com.google.common.hash.BloomFilter",
188:       "com.google.common.collect.Maps",
189:       "com.google.common.primitives.Ints",
190:       "com.google.common.collect.ImmutableMap$Builder",
191:       "com.google.common.graph.BaseGraph",
192:       "com.google.common.collect.Maps$EntryTransformer",
193:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
194:       "com.google.common.graph.MutableNetwork",
195:       "com.google.common.collect.Iterators$MergingIterator",
196:       "com.google.common.graph.SuccessorsFunction",
197:       "com.google.common.collect.RegularImmutableMap$Values",
198:       "com.google.common.graph.AbstractNetwork",
199:       "com.google.common.graph.AbstractValueGraph"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractBaseGraph_5_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "com.google.common.graph.AbstractBaseGraph",
208:       "com.google.common.graph.AbstractBaseGraph$1",
209:       "com.google.common.graph.IncidentEdgeSet",
210:       "com.google.common.graph.AbstractBaseGraph$2",
211:       "com.google.common.graph.ElementOrder$Type",
212:       "com.google.common.graph.AbstractGraphBuilder",
213:       "com.google.common.graph.NetworkBuilder",
214:       "com.google.common.graph.ElementOrder",
215:       "com.google.common.base.Preconditions",
216:       "com.google.common.base.Optional",
217:       "com.google.common.base.Absent",
218:       "com.google.common.graph.ValueGraphBuilder",
219:       "com.google.common.graph.AbstractValueGraph",
220:       "com.google.common.graph.StandardValueGraph",
221:       "com.google.common.graph.MapIteratorCache",
222:       "com.google.common.graph.Graphs",
223:       "com.google.common.graph.ImmutableValueGraph$Builder",
224:       "com.google.common.graph.StandardMutableValueGraph",
225:       "com.google.common.graph.ElementOrder$1",
226:       "com.google.common.collect.Maps",
227:       "com.google.common.graph.ImmutableValueGraph",
228:       "com.google.common.base.MoreObjects",
229:       "com.google.common.base.MoreObjects$ToStringHelper",
230:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
231:       "com.google.common.collect.ImmutableMap",
232:       "com.google.common.collect.ImmutableMap$Builder",
233:       "com.google.common.graph.MapIteratorCache$1",
234:       "com.google.common.collect.UnmodifiableIterator",
235:       "com.google.common.graph.MapIteratorCache$1$1",
236:       "com.google.common.graph.ImmutableValueGraph$1",
237:       "com.google.common.base.Strings",
238:       "com.google.common.collect.CollectPreconditions",
239:       "com.google.common.graph.AbstractNetwork",
240:       "com.google.common.graph.StandardNetwork",
241:       "com.google.common.graph.GraphBuilder",
242:       "com.google.common.graph.AbstractGraph",
243:       "com.google.common.graph.ForwardingGraph",
244:       "com.google.common.graph.StandardMutableGraph",
245:       "com.google.common.graph.EndpointPair",
246:       "com.google.common.graph.EndpointPair$Unordered",
247:       "com.google.common.base.Present",
248:       "com.google.common.graph.AbstractNetwork$3",
249:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
250:       "com.google.common.collect.Maps$AsMapView",
251:       "com.google.common.collect.Sets$ImprovedAbstractSet",
252:       "com.google.common.collect.Maps$EntrySet",
253:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
254:       "com.google.common.collect.TransformedIterator",
255:       "com.google.common.collect.Maps$3",
256:       "com.google.common.collect.RegularImmutableMap",
257:       "com.google.common.collect.AbstractIterator",
258:       "com.google.common.graph.EndpointPairIterator",
259:       "com.google.common.graph.EndpointPairIterator$Directed",
260:       "com.google.common.collect.AbstractIterator$State",
261:       "com.google.common.collect.ImmutableCollection",
262:       "com.google.common.collect.ImmutableSet",
263:       "com.google.common.collect.ImmutableSet$CachingAsList",
264:       "com.google.common.collect.RegularImmutableSet",
265:       "com.google.common.collect.Iterators",
266:       "com.google.common.collect.UnmodifiableListIterator",
267:       "com.google.common.collect.AbstractIndexedListIterator",
268:       "com.google.common.collect.Iterators$ArrayItr",
269:       "com.google.common.collect.AbstractIterator$1",
270:       "com.google.common.primitives.IntsMethodsForWeb",
271:       "com.google.common.primitives.Ints",
272:       "com.google.common.graph.StandardMutableNetwork",
273:       "com.google.common.graph.EndpointPairIterator$Undirected",
274:       "com.google.common.collect.Sets",
275:       "com.google.common.graph.ImmutableGraph",
276:       "com.google.common.graph.AbstractValueGraph$1",
277:       "com.google.common.collect.Ordering",
278:       "com.google.common.collect.NaturalOrdering",
279:       "com.google.common.graph.MapRetrievalCache",
280:       "com.google.common.graph.EndpointPair$Ordered",
281:       "com.google.common.graph.AbstractValueGraph$2",
282:       "com.google.common.graph.ImmutableGraph$Builder",
283:       "com.google.common.graph.ImmutableNetwork$Builder",
284:       "com.google.common.graph.ImmutableNetwork",
285:       "com.google.common.graph.AbstractNetwork$1",
286:       "com.google.common.graph.GraphConstants$Presence",
287:       "com.google.common.collect.ImmutableMapEntrySet",
288:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
289:       "com.google.common.collect.ImmutableList",
290:       "com.google.common.collect.RegularImmutableList",
291:       "com.google.common.base.ExtraObjectsMethodsForWeb",
292:       "com.google.common.base.Objects",
293:       "com.google.common.graph.UndirectedGraphConnections",
294:       "com.google.common.graph.UndirectedGraphConnections$2",
295:       "com.google.common.graph.DirectedGraphConnections",
296:       "com.google.common.graph.DirectedGraphConnections$8",
297:       "com.google.common.graph.DirectedGraphConnections$PredAndSucc",
298:       "com.google.common.hash.BloomFilter",
299:       "com.google.common.hash.BloomFilterStrategies",
300:       "com.google.common.collect.DiscreteDomain",
301:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
302:       "com.google.common.graph.DirectedGraphConnections$3",
303:       "com.google.common.graph.DirectedGraphConnections$3$1",
304:       "com.google.common.collect.NullnessCasts",
305:       "com.google.common.graph.AbstractNetwork$1$1",
306:       "com.google.common.collect.Iterables",
307:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
308:       "com.google.common.collect.ImmutableBiMap",
309:       "com.google.common.collect.SingletonImmutableBiMap",
310:       "com.google.common.base.Converter",
311:       "com.google.common.base.Converter$IdentityConverter",
312:       "com.google.common.base.Converter$FunctionBasedConverter",
313:       "com.google.common.math.IntMath",
314:       "com.google.common.graph.DirectedGraphConnections$2",
315:       "com.google.common.base.Converter$ConverterComposition",
316:       "com.google.common.graph.StandardValueGraph$1",
317:       "com.google.common.graph.MapRetrievalCache$CacheEntry"
318:     );
319:   }
320: }

[MASTER] 05:02:38.999 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
GraphBuilder<Object> graphBuilder0 = GraphBuilder.directed();
ElementOrder<EndpointPair<Object>> elementOrder0 = ElementOrder.stable();
Map<Object, GraphConnections<Object, Integer>> map0 = elementOrder0.createMap(23);
StandardValueGraph<Object, Integer> standardValueGraph0 = new StandardValueGraph<Object, Integer>(graphBuilder0, map0, 0L);
Integer integer0 = new Integer(23);
EndpointPair<Object> endpointPair0 = EndpointPair.unordered((Object) graphBuilder0, (Object) integer0);
boolean boolean0 = standardValueGraph0.hasEdgeConnecting(endpointPair0);
assertFalse(boolean0);


* Writing tests to file
* Writing JUnit test case 'AbstractBaseGraph_ESTest' to evosuite-tests
* Done!

* Computation finished
