/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:50:25 GMT 2024
 */

package com.google.common.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.net.PercentEscaper;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PercentEscaper_ESTest extends PercentEscaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      char[] charArray0 = percentEscaper0.escape(580);
      assertArrayEquals(new char[] {'%', 'C', '9', '%', '8', '4'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      char[] charArray0 = percentEscaper0.escape(1);
      assertArrayEquals(new char[] {'%', '0', '1'}, charArray0);
      assertNotNull(charArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      String string0 = percentEscaper0.escape("Tx{9i1%T");
      assertEquals("Tx%7B9i1%25T", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      String string0 = percentEscaper0.escape("[T8B(:-${Fy*");
      assertEquals("%5BT8B%28%3A%2D%24%7BFy%2A", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      int int0 = percentEscaper0.nextEscapeIndex("", 0, (-1913));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      int int0 = percentEscaper0.nextEscapeIndex("", 32, 0);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      int int0 = percentEscaper0.nextEscapeIndex("", (-3286), (-3286));
      assertEquals((-3286), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      // Undeclared exception!
      try { 
        percentEscaper0.nextEscapeIndex("", 0, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      // Undeclared exception!
      try { 
        percentEscaper0.nextEscapeIndex((CharSequence) null, (-4330), (-4330));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        percentEscaper0.nextEscapeIndex(charBuffer0, 37, 59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      // Undeclared exception!
      try { 
        percentEscaper0.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      // Undeclared exception!
      try { 
        percentEscaper0.escape((-2196));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2196
         //
         verifyException("com.google.common.net.PercentEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PercentEscaper percentEscaper0 = null;
      try {
        percentEscaper0 = new PercentEscaper((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      char[] charArray0 = percentEscaper0.escape(32);
      assertArrayEquals(new char[] {'%', '2', '0'}, charArray0);
      assertNotNull(charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      // Undeclared exception!
      try { 
        percentEscaper0.escape(2147483645);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid unicode character value 2147483645
         //
         verifyException("com.google.common.net.PercentEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("`+", false);
      char[] charArray0 = percentEscaper0.escape(1114111);
      assertEquals(12, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      char[] charArray0 = percentEscaper0.escape(2058);
      assertArrayEquals(new char[] {'%', 'E', '0', '%', 'A', '0', '%', '8', 'A'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      char[] charArray0 = percentEscaper0.escape(2047);
      assertArrayEquals(new char[] {'%', 'D', 'F', '%', 'B', 'F'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      char[] charArray0 = percentEscaper0.escape(32);
      assertEquals(1, charArray0.length);
      assertNotNull(charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      char[] charArray0 = percentEscaper0.escape(57);
      assertNull(charArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      String string0 = percentEscaper0.escape("bE0l47a>e1:kY(=a");
      assertEquals("b%7FE0l47a%3Ee1%3AkY%28%3Da", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", false);
      String string0 = percentEscaper0.escape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PercentEscaper percentEscaper0 = null;
      try {
        percentEscaper0 = new PercentEscaper(" ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plusForSpace cannot be specified when space is a 'safe' character
         //
         verifyException("com.google.common.net.PercentEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PercentEscaper percentEscaper0 = new PercentEscaper("", true);
      String string0 = percentEscaper0.escape("[:GXY:m");
      assertEquals("%5B%3AGX%7FY%3Am", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PercentEscaper percentEscaper0 = null;
      try {
        percentEscaper0 = new PercentEscaper("N%2Au4m%278bilKlA", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Alphanumeric characters are always 'safe' and should not be explicitly specified
         //
         verifyException("com.google.common.net.PercentEscaper", e);
      }
  }
}
