/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 17:03:19 GMT 2024
 */

package com.google.common.reflect;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class TypeResolver_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.reflect.TypeResolver"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TypeResolver_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.ImmutableSet$SetBuilderImpl",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.google.common.reflect.Types$JavaVersion$3",
      "com.google.common.reflect.Types$JavaVersion$4",
      "com.google.common.collect.PeekingIterator",
      "com.google.common.base.JdkPattern",
      "com.google.common.reflect.Types$JavaVersion$1",
      "com.google.common.reflect.Types$JavaVersion$2",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.reflect.Types$JavaVersion$5",
      "com.google.common.collect.FluentIterable",
      "com.google.common.base.Optional",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.RegularImmutableMap$KeySet",
      "com.google.common.collect.Sets$2",
      "com.google.common.collect.Sets$3",
      "com.google.common.collect.Sets$1",
      "com.google.common.collect.AbstractIterator$1",
      "com.google.common.collect.Platform",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.RegularImmutableBiMap",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.base.CommonPattern",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.collect.Iterators$10",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.base.Predicate",
      "com.google.common.base.Present",
      "com.google.common.base.Joiner",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.reflect.Types$TypeVariableImpl",
      "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
      "com.google.common.collect.Sets$SetView",
      "com.google.common.collect.ImmutableSet$CachingAsList",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.base.Strings",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.reflect.Types",
      "com.google.common.collect.Lists",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.base.Predicates",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.common.collect.Sets$4",
      "com.google.common.base.Absent",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.reflect.TypeResolver$TypeVariableKey",
      "com.google.common.collect.ImmutableList$1",
      "com.google.common.collect.MapDifference",
      "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.google.common.reflect.ElementTypesAreNonnullByDefault",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.Joiner$2",
      "com.google.common.base.Predicates$IsEqualToPredicate",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "com.google.common.reflect.TypeResolver$WildcardCapturer",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.collect.ImmutableEnumSet",
      "com.google.common.reflect.Types$1",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.base.Objects",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.base.Converter",
      "com.google.common.collect.Maps$8",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.IndexedImmutableSet",
      "com.google.common.base.Function",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.reflect.Reflection",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.Iterators$1",
      "com.google.common.base.Predicates$NotPredicate",
      "com.google.common.collect.Iterators$4",
      "com.google.common.collect.Sets",
      "com.google.common.collect.Iterators$5",
      "com.google.common.collect.AbstractIterator$State",
      "com.google.common.reflect.TypeCapture",
      "com.google.common.reflect.Types$TypeVariableInvocationHandler",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.reflect.Types$WildcardTypeImpl",
      "com.google.common.collect.Lists$2",
      "com.google.common.reflect.TypeResolver",
      "com.google.common.reflect.TypeVisitor",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.Lists$1",
      "com.google.common.collect.ImmutableMap$1",
      "com.google.common.collect.Iterables$4",
      "com.google.common.reflect.TypeResolver$WildcardCapturer$1",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.reflect.TypeResolver$1",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.SingletonImmutableBiMap",
      "com.google.common.collect.FluentIterable$1",
      "com.google.common.collect.FluentIterable$2",
      "com.google.common.reflect.Types$NativeTypeVariableEquals",
      "com.google.common.collect.ImmutableBiMapFauxverideShim",
      "com.google.common.collect.FluentIterable$3",
      "com.google.common.collect.NullnessCasts",
      "com.google.common.reflect.TypeResolver$TypeTable$1",
      "com.google.common.reflect.Types$JavaVersion",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
      "com.google.common.reflect.TypeResolver$TypeTable",
      "com.google.common.collect.Iterators$MergingIterator",
      "com.google.common.collect.RegularImmutableMap$Values"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TypeResolver_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.reflect.TypeResolver",
      "com.google.common.reflect.TypeResolver$TypeTable",
      "com.google.common.reflect.TypeVisitor",
      "com.google.common.reflect.TypeResolver$TypeMappingIntrospector",
      "com.google.common.reflect.TypeResolver$TypeVariableKey",
      "com.google.common.reflect.TypeResolver$WildcardCapturer",
      "com.google.common.reflect.TypeResolver$WildcardCapturer$1",
      "com.google.common.reflect.TypeResolver$1",
      "com.google.common.reflect.TypeResolver$TypeTable$1",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.reflect.TypeCapture",
      "com.google.common.reflect.Types$JavaVersion$5",
      "com.google.common.base.Preconditions",
      "com.google.common.reflect.Types$JavaVersion",
      "com.google.common.reflect.Types$ClassOwnership$1LocalClass",
      "com.google.common.reflect.Types$ClassOwnership$3",
      "com.google.common.reflect.Types$ClassOwnership",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableSet$CachingAsList",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.google.common.collect.Sets",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.reflect.Types$WildcardTypeImpl",
      "com.google.common.reflect.Types$1",
      "com.google.common.base.Joiner",
      "com.google.common.base.Joiner$1",
      "com.google.common.reflect.Types",
      "com.google.common.base.Strings",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.base.Predicates",
      "com.google.common.base.Predicates$IsEqualToPredicate",
      "com.google.common.base.Predicates$NotPredicate",
      "com.google.common.collect.FluentIterable",
      "com.google.common.collect.Iterables$4",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.collect.Iterators$5",
      "com.google.common.collect.AbstractIterator$State",
      "com.google.common.collect.AbstractIterator$1",
      "com.google.common.reflect.Types$TypeVariableImpl",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.reflect.Types$TypeVariableInvocationHandler",
      "com.google.common.reflect.Reflection",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Platform",
      "com.google.common.collect.Lists",
      "com.google.common.collect.NullnessCasts",
      "com.google.common.base.ExtraObjectsMethodsForWeb",
      "com.google.common.base.Objects",
      "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
      "com.google.common.collect.Iterators$9",
      "com.google.common.collect.ImmutableBiMapFauxverideShim",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.SingletonImmutableBiMap",
      "com.google.common.collect.SingletonImmutableSet"
    );
  }
}
