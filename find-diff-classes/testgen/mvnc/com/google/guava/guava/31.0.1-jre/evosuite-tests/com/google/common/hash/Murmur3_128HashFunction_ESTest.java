/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:16:00 GMT 2024
 */

package com.google.common.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.hash.ChecksumHashFunction;
import com.google.common.hash.FarmHashFingerprint64;
import com.google.common.hash.HashCode;
import com.google.common.hash.Hasher;
import com.google.common.hash.Hashing;
import com.google.common.hash.Murmur3_128HashFunction;
import com.google.common.hash.Murmur3_32HashFunction;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Murmur3_128HashFunction_ESTest extends Murmur3_128HashFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(21);
      murmur3_128HashFunction0.hashInt(21);
      murmur3_128HashFunction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.GOOD_FAST_HASH_128;
      Murmur3_128HashFunction murmur3_128HashFunction1 = new Murmur3_128HashFunction(12288);
      boolean boolean0 = murmur3_128HashFunction1.equals(murmur3_128HashFunction0);
      assertFalse(murmur3_128HashFunction0.equals((Object)murmur3_128HashFunction1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(0);
      Hasher hasher0 = murmur3_128HashFunction0.newHasher();
      assertNotNull(hasher0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FarmHashFingerprint64 farmHashFingerprint64_0 = (FarmHashFingerprint64)FarmHashFingerprint64.FARMHASH_FINGERPRINT_64;
      // Undeclared exception!
      try { 
        farmHashFingerprint64_0.toString();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Hashing.ChecksumType hashing_ChecksumType0 = Hashing.ChecksumType.ADLER_32;
      ChecksumHashFunction checksumHashFunction0 = (ChecksumHashFunction)hashing_ChecksumType0.hashFunction;
      // Undeclared exception!
      try { 
        checksumHashFunction0.newHasher();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.bits();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(21);
      HashCode hashCode0 = murmur3_128HashFunction0.hashUnencodedChars("Hashing.murmur3_128(21)");
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("gW4K!fD~gYAN6O");
      byteBuffer0.getShort();
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteBuffer0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(0);
      HashCode hashCode0 = murmur3_128HashFunction0.hashUnencodedChars("Hashing.murmur3_128(0)");
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      byte[] byteArray0 = new byte[11];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      byte[] byteArray0 = new byte[10];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      byte[] byteArray0 = new byte[9];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(1);
      HashCode hashCode0 = murmur3_128HashFunction0.hashLong(1);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      byte[] byteArray0 = new byte[7];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.GOOD_FAST_HASH_128;
      byte[] byteArray0 = new byte[6];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(0);
      byte[] byteArray0 = new byte[5];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(1);
      byte[] byteArray0 = new byte[3];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(21);
      byte[] byteArray0 = new byte[2];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      byte[] byteArray0 = new byte[1];
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(1);
      Murmur3_128HashFunction murmur3_128HashFunction1 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      boolean boolean0 = murmur3_128HashFunction0.equals(murmur3_128HashFunction1);
      assertFalse(boolean0);
      assertFalse(murmur3_128HashFunction1.equals((Object)murmur3_128HashFunction0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(1);
      boolean boolean0 = murmur3_128HashFunction0.equals(murmur3_128HashFunction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.GOOD_FAST_HASH_128;
      Object object0 = new Object();
      boolean boolean0 = murmur3_128HashFunction0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2319);
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteBuffer0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(21);
      String string0 = murmur3_128HashFunction0.toString();
      assertEquals("Hashing.murmur3_128(21)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.MURMUR3_128;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("gW4K!fD~gYAN6O");
      HashCode hashCode0 = murmur3_128HashFunction0.hashBytes(byteBuffer0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = new Murmur3_128HashFunction(21);
      int int0 = murmur3_128HashFunction0.bits();
      assertEquals(128, int0);
  }
}
