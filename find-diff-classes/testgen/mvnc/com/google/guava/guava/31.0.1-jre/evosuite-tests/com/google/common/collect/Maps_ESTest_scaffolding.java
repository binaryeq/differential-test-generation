/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 15:28:04 GMT 2024
 */

package com.google.common.collect;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Maps_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.common.collect.Maps"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Maps_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.Maps$EntryFunction",
      "com.google.common.collect.Maps$EntryFunction$2",
      "com.google.common.collect.Maps$UnmodifiableEntries",
      "com.google.common.collect.Maps$EntryFunction$1",
      "com.google.common.collect.Maps$UnmodifiableNavigableMap",
      "com.google.common.collect.AbstractNavigableMap",
      "com.google.common.collect.ImmutableEnumMap",
      "com.google.common.collect.Maps$NavigableKeySet",
      "com.google.common.collect.Maps$TransformedEntriesSortedMap",
      "com.google.common.collect.Maps$KeySet",
      "com.google.common.base.Converter",
      "com.google.common.collect.Maps$8",
      "com.google.common.collect.BiMap",
      "com.google.common.base.Function",
      "com.google.common.collect.Maps$Values",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.Maps$FilteredMapValues",
      "com.google.common.collect.Range",
      "com.google.common.collect.Maps$SortedKeySet",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.collect.ForwardingMap",
      "com.google.common.collect.Maps$FilteredKeyMap",
      "com.google.common.base.Predicate",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.Maps$DescendingMap",
      "com.google.common.collect.Maps$ViewCachingAbstractMap",
      "com.google.common.collect.Maps$IteratorBasedAbstractMap",
      "com.google.common.collect.Maps$AbstractFilteredMap",
      "com.google.common.collect.Maps$FilteredEntryBiMap",
      "com.google.common.collect.ForwardingSortedMap",
      "com.google.common.collect.Maps$EntrySet",
      "com.google.common.collect.Maps$TransformedEntriesMap",
      "com.google.common.collect.ForwardingObject",
      "com.google.common.collect.Maps$FilteredEntryMap",
      "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
      "com.google.common.collect.ForwardingCollection",
      "com.google.common.collect.Maps$FilteredEntrySortedMap",
      "com.google.common.collect.RangeGwtSerializationDependencies",
      "com.google.common.base.Equivalence",
      "com.google.common.collect.Maps$UnmodifiableEntrySet",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.collect.Maps",
      "com.google.common.collect.MapDifference",
      "com.google.common.base.ElementTypesAreNonnullByDefault",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.Maps$FilteredEntryNavigableMap"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Maps_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.common.collect.Maps",
      "com.google.common.collect.TransformedIterator",
      "com.google.common.collect.Maps$1",
      "com.google.common.collect.Maps$2",
      "com.google.common.collect.Maps$ValueDifferenceImpl",
      "com.google.common.collect.Maps$MapDifferenceImpl",
      "com.google.common.collect.Maps$SortedMapDifferenceImpl",
      "com.google.common.collect.Maps$ViewCachingAbstractMap",
      "com.google.common.collect.Maps$AsMapView",
      "com.google.common.collect.Maps$SortedAsMapView",
      "com.google.common.collect.Maps$IteratorBasedAbstractMap",
      "com.google.common.collect.AbstractNavigableMap",
      "com.google.common.collect.Maps$NavigableAsMapView",
      "com.google.common.collect.Maps$3",
      "com.google.common.collect.ForwardingObject",
      "com.google.common.collect.ForwardingCollection",
      "com.google.common.collect.ForwardingSet",
      "com.google.common.collect.Maps$4",
      "com.google.common.collect.ForwardingSortedSet",
      "com.google.common.collect.Maps$5",
      "com.google.common.collect.ForwardingNavigableSet",
      "com.google.common.collect.Maps$6",
      "com.google.common.collect.Maps$UnmodifiableEntries",
      "com.google.common.collect.Maps$UnmodifiableEntrySet",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.Maps$7",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.Maps$8",
      "com.google.common.base.Converter",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.collect.ForwardingMap",
      "com.google.common.collect.Maps$UnmodifiableBiMap",
      "com.google.common.collect.Maps$9",
      "com.google.common.collect.Maps$TransformedEntriesMap",
      "com.google.common.collect.Maps$TransformedEntriesSortedMap",
      "com.google.common.collect.Maps$TransformedEntriesNavigableMap",
      "com.google.common.collect.Maps$10",
      "com.google.common.collect.Maps$11",
      "com.google.common.collect.Maps$12",
      "com.google.common.collect.Maps$13",
      "com.google.common.collect.Maps$AbstractFilteredMap",
      "com.google.common.collect.Maps$FilteredEntryMap",
      "com.google.common.collect.Maps$FilteredKeyMap",
      "com.google.common.collect.Maps$FilteredEntrySortedMap",
      "com.google.common.collect.Maps$FilteredEntryNavigableMap",
      "com.google.common.collect.Maps$FilteredEntryBiMap",
      "com.google.common.collect.Maps$FilteredEntryBiMap$1",
      "com.google.common.collect.ForwardingSortedMap",
      "com.google.common.collect.Maps$UnmodifiableNavigableMap",
      "com.google.common.collect.Maps$EntryFunction",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.base.Equivalence",
      "com.google.common.base.Equivalence$Equals",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.ImmutableSortedMapFauxverideShim",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableSet$CachingAsList",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedMap",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.ImmutableSortedMap$1",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.Sets$ImprovedAbstractSet",
      "com.google.common.collect.Maps$KeySet",
      "com.google.common.collect.Maps$SortedKeySet",
      "com.google.common.collect.Maps$NavigableKeySet",
      "com.google.common.hash.BloomFilter",
      "com.google.common.hash.BloomFilterStrategies"
    );
  }
}
