/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:49:16 GMT 2024
 */

package com.google.common.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Optional;
import com.google.common.collect.ImmutableListMultimap;
import com.google.common.collect.ImmutableMultiset;
import com.google.common.collect.ImmutableSortedMultiset;
import com.google.common.collect.LinkedListMultimap;
import com.google.common.collect.Multimap;
import com.google.common.net.MediaType;
import java.nio.charset.Charset;
import java.util.ArrayDeque;
import java.util.HashSet;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MediaType_ESTest extends MediaType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaType mediaType0 = MediaType.TSV_UTF_8;
      mediaType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.parse("ijrTh\"h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not parse 'ijrTh\"h'
         //
         verifyException("com.google.common.net.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_VIDEO_TYPE;
      MediaType mediaType1 = mediaType0.withoutParameters();
      assertTrue(mediaType1.hasWildcard());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_VIDEO_TYPE;
      HashSet<String> hashSet0 = new HashSet<String>();
      MediaType mediaType1 = mediaType0.withParameters("mbox", (Iterable<String>) hashSet0);
      assertSame(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_VIDEO_TYPE;
      LinkedListMultimap<String, String> linkedListMultimap0 = LinkedListMultimap.create();
      MediaType mediaType1 = mediaType0.withParameters((Multimap<String, String>) linkedListMultimap0);
      assertSame(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MediaType mediaType0 = MediaType.MP4_VIDEO;
      LinkedListMultimap<String, String> linkedListMultimap0 = LinkedListMultimap.create();
      MediaType mediaType1 = mediaType0.withParameters((Multimap<String, String>) linkedListMultimap0);
      assertSame(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_VIDEO_TYPE;
      MediaType mediaType1 = mediaType0.withParameter("jpeg", "jpeg");
      assertEquals("video", mediaType1.type());
      assertTrue(mediaType1.hasWildcard());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_FONT_TYPE;
      Charset charset0 = Charset.defaultCharset();
      MediaType mediaType1 = mediaType0.withCharset(charset0);
      assertEquals("font", mediaType1.type());
      assertTrue(mediaType1.hasWildcard());
      assertNotSame(mediaType1, mediaType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MediaType mediaType0 = MediaType.createVideoType("*");
      assertEquals("video", mediaType0.type());
      assertEquals("*", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MediaType mediaType0 = MediaType.createVideoType("My_h");
      assertEquals("video", mediaType0.type());
      assertEquals("my_h", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MediaType mediaType0 = MediaType.createTextType("*");
      assertTrue(mediaType0.hasWildcard());
      assertEquals("text", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MediaType mediaType0 = MediaType.createImageType("*");
      assertEquals("*", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaType mediaType0 = MediaType.createImageType("X");
      assertEquals("image", mediaType0.type());
      assertEquals("x", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MediaType mediaType0 = MediaType.createFontType("*");
      assertEquals("*", mediaType0.subtype());
      assertEquals("font", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MediaType mediaType0 = MediaType.createFontType("rdf+xml");
      assertEquals("rdf+xml", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaType mediaType0 = MediaType.createAudioType("*");
      assertEquals("audio", mediaType0.type());
      assertEquals("*", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MediaType mediaType0 = MediaType.createAudioType("atom+xml");
      assertEquals("audio", mediaType0.type());
      assertEquals("atom+xml", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MediaType mediaType0 = MediaType.createApplicationType("*");
      assertTrue(mediaType0.hasWildcard());
      assertEquals("application", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MediaType mediaType0 = MediaType.create("*", "*");
      assertEquals("*", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MediaType mediaType0 = MediaType.PLAIN_TEXT_UTF_8;
      // Undeclared exception!
      try { 
        mediaType0.withParameters("Expected lowerBound <= upperBound but %s > %s", (Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaType mediaType0 = MediaType.FONT_WOFF2;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      // Undeclared exception!
      try { 
        mediaType0.withParameters("", (Iterable<String>) arrayDeque0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      ImmutableListMultimap<String, String> immutableListMultimap0 = ImmutableListMultimap.of("*/*", "*/*");
      // Undeclared exception!
      try { 
        mediaType0.withParameters((Multimap<String, String>) immutableListMultimap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaType mediaType0 = MediaType.MANIFEST_JSON_UTF_8;
      // Undeclared exception!
      try { 
        mediaType0.withParameter("H!I6`_dUd(c!*b{;+su", "H!I6`_dUd(c!*b{;+su");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaType mediaType0 = MediaType.CSS_UTF_8;
      // Undeclared exception!
      try { 
        mediaType0.is((MediaType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.net.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createVideoType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createTextType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createTextType("s\"iN4B)1w3IXk)/%/@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createImageType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createFontType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createAudioType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createApplicationType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createApplicationType("}/mhlo+GM#.Y U=;NI|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.create((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MediaType mediaType0 = MediaType.WML_UTF_8;
      MediaType mediaType1 = MediaType.parse("text/vnd.wap.wml; charset=utf-8");
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MediaType mediaType0 = MediaType.create("&", "&");
      ImmutableSortedMultiset<String> immutableSortedMultiset0 = ImmutableSortedMultiset.of("com.google.common.base.predicates$andpredicate", "?byRh<>YZ!6c_Bp0", "charset", "oPdg=x");
      MediaType mediaType1 = mediaType0.withParameters("charset", (Iterable<String>) immutableSortedMultiset0);
      assertEquals("&", mediaType1.type());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MediaType mediaType0 = MediaType.OPENSEARCH_DESCRIPTION_UTF_8;
      ImmutableMultiset<String> immutableMultiset0 = ImmutableMultiset.of("|9{>0W4#ciR:", "Hx'#Rt_3:SY", "3Q>?ZijN/WWt{cowGRS");
      LinkedList<String> linkedList0 = new LinkedList<String>(immutableMultiset0);
      MediaType mediaType1 = mediaType0.withParameters("X", (Iterable<String>) linkedList0);
      assertNotSame(mediaType1, mediaType0);
      assertEquals("opensearchdescription+xml", mediaType1.subtype());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MediaType mediaType0 = MediaType.L16_AUDIO;
      MediaType mediaType1 = mediaType0.withParameter("Yn`{Y4Z", "Yn`{Y4Z");
      ImmutableMultiset<String> immutableMultiset0 = ImmutableMultiset.of("Yn`{Y4Z", "!z", "!z", "heif");
      MediaType mediaType2 = mediaType1.withParameters("Yn`{Y4Z", (Iterable<String>) immutableMultiset0);
      //  // Unstable assertion: assertFalse(immutableMultiset0.contains("Yn`{Y4Z"));
      //  // Unstable assertion: assertNotSame(mediaType2, mediaType1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MediaType mediaType0 = MediaType.FONT_WOFF2;
      String string0 = mediaType0.toString();
      assertNotNull(string0);
      assertEquals("font/woff2", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      String string0 = mediaType0.TEXT_JAVASCRIPT_UTF_8.toString();
      assertEquals("text/javascript; charset=utf-8", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      mediaType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MediaType mediaType0 = MediaType.create("&", "&");
      MediaType mediaType1 = mediaType0.withParameter("&", "&");
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertEquals("&", mediaType1.type());
      assertFalse(mediaType0.equals((Object)mediaType1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MediaType mediaType0 = MediaType.APPLICATION_BINARY;
      MediaType mediaType1 = MediaType.DART_UTF_8;
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MediaType mediaType0 = MediaType.VTT_UTF_8;
      MediaType mediaType1 = MediaType.DART_UTF_8;
      boolean boolean0 = mediaType0.equals(mediaType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MediaType mediaType0 = MediaType.SFNT;
      boolean boolean0 = mediaType0.equals("com.google.com{on.collect.Range");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MediaType mediaType0 = MediaType.PDF;
      boolean boolean0 = mediaType0.equals(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.parse("]G");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not parse ']G'
         //
         verifyException("com.google.common.net.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MediaType mediaType0 = MediaType.parse("*/*");
      assertEquals("*", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.create("*", "xrd+xml");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A wildcard type cannot be used with a non-wildcard subtype
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MediaType mediaType0 = MediaType.SVG_UTF_8;
      MediaType mediaType1 = mediaType0.withoutParameters();
      boolean boolean0 = mediaType1.is(mediaType0);
      assertFalse(boolean0);
      assertEquals("svg+xml", mediaType1.subtype());
      assertEquals("image", mediaType1.type());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MediaType mediaType0 = MediaType.L16_AUDIO;
      MediaType mediaType1 = MediaType.AAC_AUDIO;
      boolean boolean0 = mediaType0.is(mediaType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MediaType mediaType0 = MediaType.MP4_VIDEO;
      MediaType mediaType1 = MediaType.AAC_AUDIO;
      boolean boolean0 = mediaType0.is(mediaType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MediaType mediaType0 = MediaType.MP4_VIDEO;
      boolean boolean0 = mediaType0.is(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      boolean boolean0 = mediaType0.is(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MediaType mediaType0 = MediaType.FONT_WOFF2;
      boolean boolean0 = mediaType0.hasWildcard();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_APPLICATION_TYPE;
      boolean boolean0 = mediaType0.hasWildcard();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      boolean boolean0 = mediaType0.hasWildcard();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MediaType mediaType0 = MediaType.JAVASCRIPT_UTF_8;
      Charset charset0 = Charset.defaultCharset();
      MediaType mediaType1 = mediaType0.withCharset(charset0);
      assertEquals("javascript", mediaType1.subtype());
      assertNotSame(mediaType1, mediaType0);
      assertEquals("application", mediaType1.type());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MediaType mediaType0 = MediaType.parse("text/vnd.wap.wml; charset=utf-8");
      Optional<Charset> optional0 = mediaType0.charset();
      assertEquals("vnd.wap.wml", mediaType0.subtype());
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MediaType mediaType0 = MediaType.VTT_UTF_8;
      Optional<Charset> optional0 = mediaType0.charset();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.parse("C!T'Ni~>yj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not parse 'C!T'Ni~>yj'
         //
         verifyException("com.google.common.net.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.parse("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not parse ''
         //
         verifyException("com.google.common.net.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createFontType("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      MediaType mediaType0 = MediaType.APPLICATION_BINARY;
      // Undeclared exception!
      try { 
        mediaType0.withParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createImageType(":->R}u+G))$Lk");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      MediaType mediaType0 = MediaType.WML_UTF_8;
      ImmutableListMultimap<String, String> immutableListMultimap0 = mediaType0.parameters();
      assertEquals(1, immutableListMultimap0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      MediaType mediaType0 = MediaType.NACL_APPLICATION;
      // Undeclared exception!
      try { 
        mediaType0.withCharset((Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_TYPE;
      // Undeclared exception!
      try { 
        mediaType0.VTT_UTF_8.withParameters((Multimap<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MediaType mediaType0 = MediaType.ANY_VIDEO_TYPE;
      String string0 = mediaType0.subtype();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createVideoType("G$7H1k bF$^Mr4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      MediaType mediaType0 = MediaType.AAC_AUDIO;
      String string0 = mediaType0.type();
      assertEquals("audio", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      MediaType mediaType0 = MediaType.createApplicationType("opensearchdescription+xml");
      assertEquals("opensearchdescription+xml", mediaType0.subtype());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      MediaType mediaType0 = MediaType.createTextType("is_directory");
      assertEquals("is_directory", mediaType0.subtype());
      assertEquals("text", mediaType0.type());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.createAudioType("0`gHuF[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
