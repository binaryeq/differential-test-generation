* EvoSuite 1.2.0
* Going to generate test cases for class: com.google.common.graph.StandardValueGraph
* Starting Client-0
* Connecting to master process on port 13200
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar
  - t/dependency/checker-qual-3.12.0.jar
  - t/dependency/error_prone_annotations-2.7.1.jar
  - t/dependency/failureaccess-1.0.1.jar
  - t/dependency/j2objc-annotations-1.3.jar
  - t/dependency/jsr305-3.0.2.jar
  - t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
* Finished analyzing classpath
* Generating tests for class com.google.common.graph.StandardValueGraph
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 252
* Using seed 1729699732605
* Starting evolution
* Initial Number of Goals in DynaMOSA = 141 / 252
[MASTER] 05:08:54.775 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.EndpointPair<N> : Type points to itself
[MASTER] 05:08:54.777 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 05:08:57.447 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             3%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:======================>            64%][Progress:===>                          10%] [Cov:======================>            65%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          13%] [Cov:========================>          69%][Progress:===>                          13%] [Cov:========================>          69%][Progress:====>                         15%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:========================>          70%][Progress:=====>                        18%] [Cov:========================>          70%][Progress:======>                       20%] [Cov:========================>          70%][Progress:======>                       21%] [Cov:========================>          70%][Progress:======>                       21%] [Cov:========================>          70%][Progress:======>                       23%] [Cov:========================>          70%][MASTER] 05:09:09.565 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.StandardNetwork<N, E> : Type points to itself
[Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         72%][Progress:========>                     28%] [Cov:=========================>         72%][Progress:=========>                    30%] [Cov:=========================>         72%][Progress:=========>                    31%] [Cov:=========================>         72%][Progress:=========>                    33%] [Cov:=========================>         72%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         74%][Progress:============>                 41%] [Cov:=========================>         74%][Progress:============>                 41%] [Cov:=========================>         74%][Progress:============>                 43%] [Cov:=========================>         74%][MASTER] 05:09:21.459 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkBuilder<N, E> : Type points to itself
[Progress:=============>                45%] [Cov:=========================>         74%][MASTER] 05:09:21.863 [logback-1] WARN  TestCluster - Failed to check cache for java.util.TreeMap<K, V> : Type points to itself
[Progress:=============>                45%] [Cov:==========================>        75%][MASTER] 05:09:23.114 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Optional<T> : Type points to itself
[Progress:=============>                46%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        75%][Progress:===============>              51%] [Cov:==========================>        75%][Progress:===============>              53%] [Cov:==========================>        75%][MASTER] 05:09:27.316 [logback-1] WARN  TestCluster - Failed to check cache for com.google.common.graph.NetworkConnections<N, E> : Type points to itself
[Progress:===============>              53%] [Cov:==========================>        75%][Progress:================>             55%] [Cov:==========================>        75%][Progress:================>             55%] [Cov:==========================>        75%][Progress:================>             56%] [Cov:==========================>        75%][Progress:=================>            58%] [Cov:=========================>         74%][Progress:=================>            58%] [Cov:==========================>        75%][Progress:==================>           60%] [Cov:==========================>        75%][Progress:==================>           60%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:==========================>        75%][Progress:==================>           63%] [Cov:==========================>        75%][Progress:===================>          65%] [Cov:==========================>        75%][Progress:===================>          66%] [Cov:==========================>        75%][Progress:====================>         68%] [Cov:==========================>        75%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:==========================>        75%][Progress:=====================>        73%] [Cov:==========================>        75%][Progress:=====================>        73%] [Cov:==========================>        75%][Progress:======================>       75%] [Cov:==========================>        75%][Progress:======================>       76%] [Cov:==========================>        75%][Progress:=======================>      78%] [Cov:==========================>        75%][Progress:========================>     80%] [Cov:==========================>        75%][Progress:========================>     81%] [Cov:==========================>        75%][Progress:========================>     81%] [Cov:==========================>        76%][Progress:========================>     83%] [Cov:==========================>        76%][Progress:=========================>    85%] [Cov:==========================>        76%][Progress:=========================>    86%] [Cov:==========================>        76%][Progress:==========================>   88%] [Cov:==========================>        76%][Progress:===========================>  90%] [Cov:==========================>        76%][Progress:===========================>  91%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][MASTER] 05:09:55.105 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<java.lang.Object> : Type points to itself
[Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%]
* Search finished after 61s and 74 generations, 27717 statements, best individual has fitness: 77.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 45
* Number of covered goals: 42
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 34
* Number of covered goals: 28
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 58
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 49
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 81%
* Total number of goals: 16
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 34
* Number of covered goals: 28
* Generated 39 tests with total length 188
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
[MASTER] 05:09:58.391 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1729699798339/com/google/common/graph/StandardValueGraph_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1729699798339/com/google/common/graph/StandardValueGraph_2_tmp__ESTest_scaffolding.java]]
[MASTER] 05:09:58.391 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:58.391 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:58.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: no suitable method found for edgeValueOrDefault(com.google.common.graph.EndpointPair<java.lang.Integer>,java.lang.Object)
    method com.google.common.graph.ValueGraph.edgeValueOrDefault(com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair<java.lang.Integer>>,java.lang.Object) is not applicable
      (argument mismatch; com.google.common.graph.EndpointPair<java.lang.Integer> cannot be converted to com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair<java.lang.Integer>>)
    method com.google.common.graph.StandardValueGraph.edgeValueOrDefault(com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair<java.lang.Integer>>,java.lang.Object) is not applicable
      (argument mismatch; com.google.common.graph.EndpointPair<java.lang.Integer> cannot be converted to com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair<java.lang.Integer>>): 28
[MASTER] 05:09:58.396 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 05:09:58.396 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1729699798339/com/google/common/graph/StandardValueGraph_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:09:58 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.collect.DiscreteDomain;
11: import com.google.common.graph.EndpointPair;
12: import com.google.common.graph.GraphBuilder;
13: import com.google.common.graph.StandardValueGraph;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class StandardValueGraph_2_tmp__ESTest extends StandardValueGraph_2_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       GraphBuilder<Object> graphBuilder0 = GraphBuilder.undirected();
24:       DiscreteDomain<Integer> discreteDomain0 = DiscreteDomain.integers();
25:       Integer integer0 = discreteDomain0.maxValue();
26:       StandardValueGraph<EndpointPair<Integer>, Object> standardValueGraph0 = new StandardValueGraph<EndpointPair<Integer>, Object>(graphBuilder0);
27:       EndpointPair<Integer> endpointPair0 = EndpointPair.unordered(integer0, integer0);
28:       Object object0 = standardValueGraph0.edgeValueOrDefault(endpointPair0, (Object) null);
29:       assertNull(object0);
30:   }
31: }
RegularFileObject[/tmp/EvoSuite_2_1729699798339/com/google/common/graph/StandardValueGraph_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:09:58 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class StandardValueGraph_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.StandardValueGraph"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StandardValueGraph_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
82:       "com.google.common.graph.ImmutableGraph",
83:       "com.google.common.graph.AbstractBaseGraph",
84:       "com.google.common.graph.EndpointPairIterator",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.graph.MapIteratorCache",
87:       "com.google.common.graph.ImmutableValueGraph$Builder",
88:       "com.google.common.graph.EndpointPairIterator$Directed",
89:       "com.google.common.base.Optional",
90:       "com.google.common.graph.Network",
91:       "com.google.common.collect.Iterators$ArrayItr",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.RegularImmutableMap$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.AbstractIterator$1",
97:       "com.google.common.collect.RegularImmutableMap",
98:       "com.google.common.collect.Range",
99:       "com.google.common.graph.AbstractGraph",
100:       "com.google.common.collect.SortedMapDifference",
101:       "com.google.common.collect.RegularImmutableSet",
102:       "com.google.common.graph.AbstractValueGraph$2",
103:       "com.google.common.collect.Iterators$10",
104:       "com.google.common.collect.AbstractMapEntry",
105:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
106:       "com.google.common.graph.ValueGraph",
107:       "com.google.common.graph.MapIteratorCache$1$1",
108:       "com.google.common.base.Predicate",
109:       "com.google.common.base.Present",
110:       "com.google.common.graph.ForwardingGraph",
111:       "com.google.common.graph.AbstractValueGraph$1",
112:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
113:       "com.google.common.graph.StandardMutableGraph",
114:       "com.google.common.collect.ImmutableAsList",
115:       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
116:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
117:       "com.google.common.collect.Sets$SetView",
118:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
119:       "com.google.common.collect.ImmutableSet$CachingAsList",
120:       "com.google.common.base.MoreObjects$ToStringHelper",
121:       "com.google.common.graph.UndirectedGraphConnections",
122:       "com.google.common.collect.RegularImmutableAsList",
123:       "com.google.common.collect.SingletonImmutableSet",
124:       "com.google.common.collect.Cut$BelowValue",
125:       "com.google.common.collect.ImmutableMapEntrySet",
126:       "com.google.common.base.Strings",
127:       "com.google.common.graph.MapIteratorCache$1",
128:       "com.google.common.collect.DiscreteDomain",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.graph.StandardValueGraph",
131:       "com.google.common.base.MoreObjects$ToStringHelper$UnconditionalValueHolder",
132:       "com.google.common.collect.Cut",
133:       "com.google.common.primitives.IntsMethodsForWeb",
134:       "com.google.common.graph.PredecessorsFunction",
135:       "com.google.common.collect.RangeGwtSerializationDependencies",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "com.google.common.graph.StandardMutableNetwork",
140:       "com.google.common.collect.AbstractIterator",
141:       "com.google.common.base.MoreObjects",
142:       "com.google.common.graph.MapRetrievalCache",
143:       "com.google.common.graph.EndpointPair$Unordered",
144:       "com.google.common.collect.MapDifference",
145:       "com.google.common.graph.MutableValueGraph",
146:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
149:       "com.google.common.graph.AbstractGraphBuilder",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.UnmodifiableIterator",
152:       "com.google.common.graph.UndirectedGraphConnections$2",
153:       "com.google.common.graph.Graph",
154:       "com.google.common.graph.ElementOrder",
155:       "com.google.common.graph.AbstractBaseGraph$1",
156:       "com.google.common.collect.ImmutableEntry",
157:       "com.google.common.collect.ImmutableEnumMap",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.graph.EndpointPair",
160:       "com.google.common.collect.ImmutableEnumSet",
161:       "com.google.common.graph.ValueGraphBuilder",
162:       "com.google.errorprone.annotations.Immutable",
163:       "com.google.common.graph.StandardNetwork",
164:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
165:       "com.google.common.graph.EndpointPair$Ordered",
166:       "com.google.common.base.Converter",
167:       "com.google.common.collect.Maps$AsMapView",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Maps$8",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.base.Function",
173:       "com.google.common.graph.NetworkConnections",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.graph.NetworkBuilder",
177:       "com.google.common.collect.ImmutableMap",
178:       "com.google.common.collect.ImmutableMapEntry",
179:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
180:       "com.google.common.graph.MutableGraph",
181:       "com.google.common.collect.AbstractIndexedListIterator",
182:       "com.google.common.collect.CollectPreconditions",
183:       "com.google.common.collect.Iterators$1",
184:       "com.google.common.graph.GraphBuilder",
185:       "com.google.common.collect.Iterators$4",
186:       "com.google.common.collect.Sets",
187:       "com.google.common.primitives.Ints$IntConverter",
188:       "com.google.common.collect.Maps$3",
189:       "com.google.common.collect.Iterators$5",
190:       "com.google.common.collect.AbstractIterator$State",
191:       "com.google.common.collect.DiscreteDomain$LongDomain",
192:       "com.google.common.graph.EndpointPairIterator$Undirected",
193:       "com.google.common.collect.BoundType",
194:       "com.google.common.collect.Cut$AboveValue",
195:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
196:       "com.google.common.graph.GraphConnections",
197:       "com.google.common.collect.Maps$EntrySet",
198:       "com.google.common.collect.ImmutableMap$1",
199:       "com.google.common.graph.ElementOrder$Type",
200:       "com.google.common.graph.StandardValueGraph$1",
201:       "com.google.common.collect.Iterators",
202:       "com.google.common.graph.MapRetrievalCache$CacheEntry",
203:       "com.google.common.graph.Graphs",
204:       "com.google.common.collect.ImmutableBiMap",
205:       "com.google.common.graph.StandardMutableValueGraph",
206:       "com.google.common.collect.ImmutableList",
207:       "com.google.common.graph.ElementOrder$1",
208:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
209:       "com.google.common.graph.ImmutableValueGraph",
210:       "com.google.common.graph.ImmutableGraph$Builder",
211:       "com.google.common.graph.ImmutableNetwork$Builder",
212:       "com.google.common.collect.Cut$BelowAll",
213:       "com.google.common.collect.Maps",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.primitives.Ints",
216:       "com.google.common.collect.TransformedIterator",
217:       "com.google.common.graph.BaseGraph",
218:       "com.google.common.collect.Maps$EntryTransformer",
219:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.graph.MutableNetwork",
222:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
223:       "com.google.common.collect.Iterators$MergingIterator",
224:       "com.google.common.graph.SuccessorsFunction",
225:       "com.google.common.collect.RegularImmutableMap$Values",
226:       "com.google.common.graph.AbstractNetwork",
227:       "com.google.common.graph.IncidentEdgeSet",
228:       "com.google.common.collect.Cut$AboveAll",
229:       "com.google.common.graph.AbstractValueGraph"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StandardValueGraph_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "com.google.common.graph.AbstractBaseGraph",
238:       "com.google.common.graph.AbstractValueGraph",
239:       "com.google.common.graph.StandardValueGraph",
240:       "com.google.common.graph.IncidentEdgeSet",
241:       "com.google.common.graph.StandardValueGraph$1",
242:       "com.google.common.graph.StandardMutableValueGraph",
243:       "com.google.common.graph.AbstractGraphBuilder",
244:       "com.google.common.graph.GraphBuilder",
245:       "com.google.common.graph.NetworkBuilder",
246:       "com.google.common.graph.ElementOrder",
247:       "com.google.common.graph.ElementOrder$Type",
248:       "com.google.common.base.Preconditions",
249:       "com.google.common.base.Optional",
250:       "com.google.common.base.Absent",
251:       "com.google.common.graph.ElementOrder$1",
252:       "com.google.common.collect.Maps",
253:       "com.google.common.graph.AbstractNetwork",
254:       "com.google.common.graph.StandardNetwork",
255:       "com.google.common.graph.MapIteratorCache",
256:       "com.google.common.graph.MapRetrievalCache",
257:       "com.google.common.graph.Graphs",
258:       "com.google.common.graph.ImmutableValueGraph",
259:       "com.google.common.graph.ValueGraphBuilder",
260:       "com.google.common.collect.DiscreteDomain",
261:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
262:       "com.google.common.base.MoreObjects",
263:       "com.google.common.base.MoreObjects$ToStringHelper",
264:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
265:       "com.google.common.graph.StandardMutableNetwork",
266:       "com.google.common.graph.EndpointPair",
267:       "com.google.common.graph.EndpointPair$Ordered",
268:       "com.google.common.base.ExtraObjectsMethodsForWeb",
269:       "com.google.common.base.Objects",
270:       "com.google.common.collect.ImmutableMap",
271:       "com.google.common.collect.ImmutableMap$Builder",
272:       "com.google.common.graph.MapIteratorCache$1",
273:       "com.google.common.collect.UnmodifiableIterator",
274:       "com.google.common.graph.MapIteratorCache$1$1",
275:       "com.google.common.collect.RegularImmutableMap",
276:       "com.google.common.graph.AbstractBaseGraph$1",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.primitives.Ints",
279:       "com.google.common.graph.AbstractGraph",
280:       "com.google.common.graph.ForwardingGraph",
281:       "com.google.common.graph.ImmutableGraph",
282:       "com.google.common.graph.EndpointPair$Unordered",
283:       "com.google.common.base.Strings",
284:       "com.google.common.graph.AbstractNetwork$3",
285:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
286:       "com.google.common.collect.Maps$AsMapView",
287:       "com.google.common.collect.Sets$ImprovedAbstractSet",
288:       "com.google.common.collect.Maps$EntrySet",
289:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
290:       "com.google.common.collect.TransformedIterator",
291:       "com.google.common.collect.Maps$3",
292:       "com.google.common.graph.StandardMutableGraph",
293:       "com.google.common.collect.CollectPreconditions",
294:       "com.google.common.graph.ImmutableNetwork",
295:       "com.google.common.base.Present",
296:       "com.google.common.collect.Ordering",
297:       "com.google.common.collect.NaturalOrdering",
298:       "com.google.common.graph.AbstractValueGraph$1",
299:       "com.google.common.collect.RangeGwtSerializationDependencies",
300:       "com.google.common.collect.Cut",
301:       "com.google.common.collect.Cut$BelowAll",
302:       "com.google.common.collect.Cut$AboveAll",
303:       "com.google.common.collect.Range",
304:       "com.google.common.collect.Cut$BelowValue",
305:       "com.google.common.graph.AbstractValueGraph$2",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.graph.EndpointPairIterator",
308:       "com.google.common.graph.EndpointPairIterator$Directed",
309:       "com.google.common.collect.AbstractIterator$State",
310:       "com.google.common.collect.ImmutableCollection",
311:       "com.google.common.collect.ImmutableSet",
312:       "com.google.common.collect.ImmutableSet$CachingAsList",
313:       "com.google.common.collect.RegularImmutableSet",
314:       "com.google.common.collect.Iterators",
315:       "com.google.common.collect.UnmodifiableListIterator",
316:       "com.google.common.collect.AbstractIndexedListIterator",
317:       "com.google.common.collect.Iterators$ArrayItr",
318:       "com.google.common.collect.AbstractIterator$1",
319:       "com.google.common.primitives.Booleans",
320:       "com.google.common.collect.Range$1",
321:       "com.google.common.graph.EndpointPairIterator$Undirected",
322:       "com.google.common.collect.Sets",
323:       "com.google.common.graph.ImmutableValueGraph$Builder",
324:       "com.google.common.graph.ImmutableGraph$Builder",
325:       "com.google.common.collect.Cut$AboveValue",
326:       "com.google.common.base.Converter",
327:       "com.google.common.base.Converter$FunctionBasedConverter",
328:       "com.google.common.base.Converter$ConverterComposition",
329:       "com.google.common.collect.ImmutableMapEntrySet",
330:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
331:       "com.google.common.collect.ImmutableList",
332:       "com.google.common.collect.RegularImmutableList",
333:       "com.google.common.graph.UndirectedGraphConnections",
334:       "com.google.common.collect.Iterables",
335:       "com.google.common.graph.AbstractNetwork$1",
336:       "com.google.common.graph.DirectedGraphConnections",
337:       "com.google.common.graph.DirectedGraphConnections$8",
338:       "com.google.common.graph.ImmutableNetwork$Builder",
339:       "com.google.common.graph.UndirectedGraphConnections$2",
340:       "com.google.common.base.Converter$IdentityConverter",
341:       "com.google.common.graph.DirectedGraphConnections$3",
342:       "com.google.common.graph.DirectedGraphConnections$3$1",
343:       "com.google.common.graph.AbstractNetwork$1$1",
344:       "com.google.common.graph.ImmutableValueGraph$1",
345:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
346:       "com.google.common.collect.ImmutableBiMap",
347:       "com.google.common.collect.SingletonImmutableBiMap",
348:       "com.google.common.collect.ImmutableCollection$Builder",
349:       "com.google.common.collect.ImmutableList$Builder",
350:       "com.google.common.graph.MapRetrievalCache$CacheEntry"
351:     );
352:   }
353: }

[MASTER] 05:09:58.397 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
GraphBuilder<Object> graphBuilder0 = GraphBuilder.undirected();
DiscreteDomain<Integer> discreteDomain0 = DiscreteDomain.integers();
Integer integer0 = discreteDomain0.maxValue();
StandardValueGraph<EndpointPair<Integer>, Object> standardValueGraph0 = new StandardValueGraph<EndpointPair<Integer>, Object>(graphBuilder0);
EndpointPair<Integer> endpointPair0 = EndpointPair.unordered(integer0, integer0);
Object object0 = standardValueGraph0.edgeValueOrDefault(endpointPair0, (Object) null);
assertNull(object0);


[MASTER] 05:09:59.158 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1729699799133/com/google/common/graph/StandardValueGraph_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1729699799133/com/google/common/graph/StandardValueGraph_25_tmp__ESTest_scaffolding.java]]
[MASTER] 05:09:59.158 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:59.158 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:59.158 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: com.google.common.graph.ElementOrder<java.lang.Object> cannot be converted to com.google.common.graph.ElementOrder<com.google.common.graph.EndpointPair<com.google.common.graph.EndpointPair>>: 30
[MASTER] 05:09:59.158 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1729699799133/com/google/common/graph/StandardValueGraph_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:09:59 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.graph.ElementOrder;
11: import com.google.common.graph.EndpointPair;
12: import com.google.common.graph.Network;
13: import com.google.common.graph.NetworkBuilder;
14: import com.google.common.graph.StandardMutableNetwork;
15: import com.google.common.graph.StandardValueGraph;
16: import java.util.TreeMap;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class StandardValueGraph_25_tmp__ESTest extends StandardValueGraph_25_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NetworkBuilder<Object, Object> networkBuilder0 = NetworkBuilder.undirected();
27:       StandardMutableNetwork<Object, TreeMap<Object, Object>> standardMutableNetwork0 = new StandardMutableNetwork<Object, TreeMap<Object, Object>>(networkBuilder0);
28:       NetworkBuilder<Object, TreeMap<Object, Object>> networkBuilder1 = NetworkBuilder.from((Network<Object, TreeMap<Object, Object>>) standardMutableNetwork0);
29:       ElementOrder<Object> elementOrder0 = ElementOrder.stable();
30:       NetworkBuilder<Object, EndpointPair<EndpointPair>> networkBuilder2 = networkBuilder1.edgeOrder((ElementOrder<EndpointPair<EndpointPair>>) elementOrder0);
31:       StandardValueGraph<Object, EndpointPair<Object>> standardValueGraph0 = new StandardValueGraph<Object, EndpointPair<Object>>(networkBuilder2);
32:       boolean boolean0 = standardValueGraph0.allowsSelfLoops();
33:       assertFalse(boolean0);
34:   }
35: }
RegularFileObject[/tmp/EvoSuite_25_1729699799133/com/google/common/graph/StandardValueGraph_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:09:59 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class StandardValueGraph_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.StandardValueGraph"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StandardValueGraph_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
82:       "com.google.common.graph.ImmutableGraph",
83:       "com.google.common.graph.AbstractBaseGraph",
84:       "com.google.common.graph.EndpointPairIterator",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.graph.MapIteratorCache",
87:       "com.google.common.graph.ImmutableValueGraph$Builder",
88:       "com.google.common.graph.EndpointPairIterator$Directed",
89:       "com.google.common.base.Optional",
90:       "com.google.common.graph.Network",
91:       "com.google.common.collect.Iterators$ArrayItr",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.RegularImmutableMap$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.AbstractIterator$1",
97:       "com.google.common.collect.RegularImmutableMap",
98:       "com.google.common.collect.Range",
99:       "com.google.common.graph.AbstractGraph",
100:       "com.google.common.collect.SortedMapDifference",
101:       "com.google.common.collect.RegularImmutableSet",
102:       "com.google.common.graph.AbstractValueGraph$2",
103:       "com.google.common.collect.Iterators$10",
104:       "com.google.common.collect.AbstractMapEntry",
105:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
106:       "com.google.common.graph.ValueGraph",
107:       "com.google.common.graph.MapIteratorCache$1$1",
108:       "com.google.common.base.Predicate",
109:       "com.google.common.base.Present",
110:       "com.google.common.graph.ForwardingGraph",
111:       "com.google.common.graph.AbstractValueGraph$1",
112:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
113:       "com.google.common.graph.StandardMutableGraph",
114:       "com.google.common.collect.ImmutableAsList",
115:       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
116:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
117:       "com.google.common.collect.Sets$SetView",
118:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
119:       "com.google.common.collect.ImmutableSet$CachingAsList",
120:       "com.google.common.base.MoreObjects$ToStringHelper",
121:       "com.google.common.graph.UndirectedGraphConnections",
122:       "com.google.common.collect.RegularImmutableAsList",
123:       "com.google.common.collect.SingletonImmutableSet",
124:       "com.google.common.collect.Cut$BelowValue",
125:       "com.google.common.collect.ImmutableMapEntrySet",
126:       "com.google.common.base.Strings",
127:       "com.google.common.graph.MapIteratorCache$1",
128:       "com.google.common.collect.DiscreteDomain",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.graph.StandardValueGraph",
131:       "com.google.common.base.MoreObjects$ToStringHelper$UnconditionalValueHolder",
132:       "com.google.common.collect.Cut",
133:       "com.google.common.primitives.IntsMethodsForWeb",
134:       "com.google.common.graph.PredecessorsFunction",
135:       "com.google.common.collect.RangeGwtSerializationDependencies",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "com.google.common.graph.StandardMutableNetwork",
140:       "com.google.common.collect.AbstractIterator",
141:       "com.google.common.base.MoreObjects",
142:       "com.google.common.graph.MapRetrievalCache",
143:       "com.google.common.graph.EndpointPair$Unordered",
144:       "com.google.common.collect.MapDifference",
145:       "com.google.common.graph.MutableValueGraph",
146:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
149:       "com.google.common.graph.AbstractGraphBuilder",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.UnmodifiableIterator",
152:       "com.google.common.graph.UndirectedGraphConnections$2",
153:       "com.google.common.graph.Graph",
154:       "com.google.common.graph.ElementOrder",
155:       "com.google.common.graph.AbstractBaseGraph$1",
156:       "com.google.common.collect.ImmutableEntry",
157:       "com.google.common.collect.ImmutableEnumMap",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.graph.EndpointPair",
160:       "com.google.common.collect.ImmutableEnumSet",
161:       "com.google.common.graph.ValueGraphBuilder",
162:       "com.google.errorprone.annotations.Immutable",
163:       "com.google.common.graph.StandardNetwork",
164:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
165:       "com.google.common.graph.EndpointPair$Ordered",
166:       "com.google.common.base.Converter",
167:       "com.google.common.collect.Maps$AsMapView",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Maps$8",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.base.Function",
173:       "com.google.common.graph.NetworkConnections",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.graph.NetworkBuilder",
177:       "com.google.common.collect.ImmutableMap",
178:       "com.google.common.collect.ImmutableMapEntry",
179:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
180:       "com.google.common.graph.MutableGraph",
181:       "com.google.common.collect.AbstractIndexedListIterator",
182:       "com.google.common.collect.CollectPreconditions",
183:       "com.google.common.collect.Iterators$1",
184:       "com.google.common.graph.GraphBuilder",
185:       "com.google.common.collect.Iterators$4",
186:       "com.google.common.collect.Sets",
187:       "com.google.common.primitives.Ints$IntConverter",
188:       "com.google.common.collect.Maps$3",
189:       "com.google.common.collect.Iterators$5",
190:       "com.google.common.collect.AbstractIterator$State",
191:       "com.google.common.collect.DiscreteDomain$LongDomain",
192:       "com.google.common.graph.EndpointPairIterator$Undirected",
193:       "com.google.common.collect.BoundType",
194:       "com.google.common.collect.Cut$AboveValue",
195:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
196:       "com.google.common.graph.GraphConnections",
197:       "com.google.common.collect.Maps$EntrySet",
198:       "com.google.common.collect.ImmutableMap$1",
199:       "com.google.common.graph.ElementOrder$Type",
200:       "com.google.common.graph.StandardValueGraph$1",
201:       "com.google.common.collect.Iterators",
202:       "com.google.common.graph.MapRetrievalCache$CacheEntry",
203:       "com.google.common.graph.Graphs",
204:       "com.google.common.collect.ImmutableBiMap",
205:       "com.google.common.graph.StandardMutableValueGraph",
206:       "com.google.common.collect.ImmutableList",
207:       "com.google.common.graph.ElementOrder$1",
208:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
209:       "com.google.common.graph.ImmutableValueGraph",
210:       "com.google.common.graph.ImmutableGraph$Builder",
211:       "com.google.common.graph.ImmutableNetwork$Builder",
212:       "com.google.common.collect.Cut$BelowAll",
213:       "com.google.common.collect.Maps",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.primitives.Ints",
216:       "com.google.common.collect.TransformedIterator",
217:       "com.google.common.graph.BaseGraph",
218:       "com.google.common.collect.Maps$EntryTransformer",
219:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.graph.MutableNetwork",
222:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
223:       "com.google.common.collect.Iterators$MergingIterator",
224:       "com.google.common.graph.SuccessorsFunction",
225:       "com.google.common.collect.RegularImmutableMap$Values",
226:       "com.google.common.graph.AbstractNetwork",
227:       "com.google.common.graph.IncidentEdgeSet",
228:       "com.google.common.collect.Cut$AboveAll",
229:       "com.google.common.graph.AbstractValueGraph"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StandardValueGraph_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "com.google.common.graph.AbstractBaseGraph",
238:       "com.google.common.graph.AbstractValueGraph",
239:       "com.google.common.graph.StandardValueGraph",
240:       "com.google.common.graph.IncidentEdgeSet",
241:       "com.google.common.graph.StandardValueGraph$1",
242:       "com.google.common.graph.StandardMutableValueGraph",
243:       "com.google.common.graph.AbstractGraphBuilder",
244:       "com.google.common.graph.GraphBuilder",
245:       "com.google.common.graph.NetworkBuilder",
246:       "com.google.common.graph.ElementOrder",
247:       "com.google.common.graph.ElementOrder$Type",
248:       "com.google.common.base.Preconditions",
249:       "com.google.common.base.Optional",
250:       "com.google.common.base.Absent",
251:       "com.google.common.graph.ElementOrder$1",
252:       "com.google.common.collect.Maps",
253:       "com.google.common.graph.AbstractNetwork",
254:       "com.google.common.graph.StandardNetwork",
255:       "com.google.common.graph.MapIteratorCache",
256:       "com.google.common.graph.MapRetrievalCache",
257:       "com.google.common.graph.Graphs",
258:       "com.google.common.graph.ImmutableValueGraph",
259:       "com.google.common.graph.ValueGraphBuilder",
260:       "com.google.common.collect.DiscreteDomain",
261:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
262:       "com.google.common.base.MoreObjects",
263:       "com.google.common.base.MoreObjects$ToStringHelper",
264:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
265:       "com.google.common.graph.StandardMutableNetwork",
266:       "com.google.common.graph.EndpointPair",
267:       "com.google.common.graph.EndpointPair$Ordered",
268:       "com.google.common.base.ExtraObjectsMethodsForWeb",
269:       "com.google.common.base.Objects",
270:       "com.google.common.collect.ImmutableMap",
271:       "com.google.common.collect.ImmutableMap$Builder",
272:       "com.google.common.graph.MapIteratorCache$1",
273:       "com.google.common.collect.UnmodifiableIterator",
274:       "com.google.common.graph.MapIteratorCache$1$1",
275:       "com.google.common.collect.RegularImmutableMap",
276:       "com.google.common.graph.AbstractBaseGraph$1",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.primitives.Ints",
279:       "com.google.common.graph.AbstractGraph",
280:       "com.google.common.graph.ForwardingGraph",
281:       "com.google.common.graph.ImmutableGraph",
282:       "com.google.common.graph.EndpointPair$Unordered",
283:       "com.google.common.base.Strings",
284:       "com.google.common.graph.AbstractNetwork$3",
285:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
286:       "com.google.common.collect.Maps$AsMapView",
287:       "com.google.common.collect.Sets$ImprovedAbstractSet",
288:       "com.google.common.collect.Maps$EntrySet",
289:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
290:       "com.google.common.collect.TransformedIterator",
291:       "com.google.common.collect.Maps$3",
292:       "com.google.common.graph.StandardMutableGraph",
293:       "com.google.common.collect.CollectPreconditions",
294:       "com.google.common.graph.ImmutableNetwork",
295:       "com.google.common.base.Present",
296:       "com.google.common.collect.Ordering",
297:       "com.google.common.collect.NaturalOrdering",
298:       "com.google.common.graph.AbstractValueGraph$1",
299:       "com.google.common.collect.RangeGwtSerializationDependencies",
300:       "com.google.common.collect.Cut",
301:       "com.google.common.collect.Cut$BelowAll",
302:       "com.google.common.collect.Cut$AboveAll",
303:       "com.google.common.collect.Range",
304:       "com.google.common.collect.Cut$BelowValue",
305:       "com.google.common.graph.AbstractValueGraph$2",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.graph.EndpointPairIterator",
308:       "com.google.common.graph.EndpointPairIterator$Directed",
309:       "com.google.common.collect.AbstractIterator$State",
310:       "com.google.common.collect.ImmutableCollection",
311:       "com.google.common.collect.ImmutableSet",
312:       "com.google.common.collect.ImmutableSet$CachingAsList",
313:       "com.google.common.collect.RegularImmutableSet",
314:       "com.google.common.collect.Iterators",
315:       "com.google.common.collect.UnmodifiableListIterator",
316:       "com.google.common.collect.AbstractIndexedListIterator",
317:       "com.google.common.collect.Iterators$ArrayItr",
318:       "com.google.common.collect.AbstractIterator$1",
319:       "com.google.common.primitives.Booleans",
320:       "com.google.common.collect.Range$1",
321:       "com.google.common.graph.EndpointPairIterator$Undirected",
322:       "com.google.common.collect.Sets",
323:       "com.google.common.graph.ImmutableValueGraph$Builder",
324:       "com.google.common.graph.ImmutableGraph$Builder",
325:       "com.google.common.collect.Cut$AboveValue",
326:       "com.google.common.base.Converter",
327:       "com.google.common.base.Converter$FunctionBasedConverter",
328:       "com.google.common.base.Converter$ConverterComposition",
329:       "com.google.common.collect.ImmutableMapEntrySet",
330:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
331:       "com.google.common.collect.ImmutableList",
332:       "com.google.common.collect.RegularImmutableList",
333:       "com.google.common.graph.UndirectedGraphConnections",
334:       "com.google.common.collect.Iterables",
335:       "com.google.common.graph.AbstractNetwork$1",
336:       "com.google.common.graph.DirectedGraphConnections",
337:       "com.google.common.graph.DirectedGraphConnections$8",
338:       "com.google.common.graph.ImmutableNetwork$Builder",
339:       "com.google.common.graph.UndirectedGraphConnections$2",
340:       "com.google.common.base.Converter$IdentityConverter",
341:       "com.google.common.graph.DirectedGraphConnections$3",
342:       "com.google.common.graph.DirectedGraphConnections$3$1",
343:       "com.google.common.graph.AbstractNetwork$1$1",
344:       "com.google.common.graph.ImmutableValueGraph$1",
345:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
346:       "com.google.common.collect.ImmutableBiMap",
347:       "com.google.common.collect.SingletonImmutableBiMap",
348:       "com.google.common.collect.ImmutableCollection$Builder",
349:       "com.google.common.collect.ImmutableList$Builder",
350:       "com.google.common.graph.MapRetrievalCache$CacheEntry"
351:     );
352:   }
353: }

[MASTER] 05:09:59.159 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NetworkBuilder<Object, Object> networkBuilder0 = NetworkBuilder.undirected();
StandardMutableNetwork<Object, TreeMap<Object, Object>> standardMutableNetwork0 = new StandardMutableNetwork<Object, TreeMap<Object, Object>>(networkBuilder0);
NetworkBuilder<Object, TreeMap<Object, Object>> networkBuilder1 = NetworkBuilder.from((Network<Object, TreeMap<Object, Object>>) standardMutableNetwork0);
ElementOrder<Object> elementOrder0 = ElementOrder.stable();
NetworkBuilder<Object, EndpointPair<EndpointPair>> networkBuilder2 = networkBuilder1.edgeOrder((ElementOrder<EndpointPair<EndpointPair>>) elementOrder0);
StandardValueGraph<Object, EndpointPair<Object>> standardValueGraph0 = new StandardValueGraph<Object, EndpointPair<Object>>(networkBuilder2);
boolean boolean0 = standardValueGraph0.allowsSelfLoops();
assertFalse(boolean0);


[MASTER] 05:09:59.351 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1729699799320/com/google/common/graph/StandardValueGraph_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1729699799320/com/google/common/graph/StandardValueGraph_32_tmp__ESTest_scaffolding.java]]
[MASTER] 05:09:59.351 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:t/dependency/checker-qual-3.12.0.jar:t/dependency/error_prone_annotations-2.7.1.jar:t/dependency/failureaccess-1.0.1.jar:t/dependency/j2objc-annotations-1.3.jar:t/dependency/jsr305-3.0.2.jar:t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:59.351 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/wtwhite/code/regression-test-generation/evosuite/evosuite-1.2.0.jar:/home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/checker-qual-3.12.0.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/error_prone_annotations-2.7.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/failureaccess-1.0.1.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/j2objc-annotations-1.3.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/jsr305-3.0.2.jar:/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre/t/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[MASTER] 05:09:59.351 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: inference variable N1 has incompatible bounds
    equality constraints: java.lang.Integer
    upper bounds: com.google.common.graph.EndpointPair<java.lang.Integer>: 32
[MASTER] 05:09:59.352 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1729699799320/com/google/common/graph/StandardValueGraph_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Oct 23 16:09:59 GMT 2024
4:  */
5: 
6: package com.google.common.graph;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.common.graph.EndpointPair;
11: import com.google.common.graph.GraphBuilder;
12: import com.google.common.graph.GraphConnections;
13: import com.google.common.graph.ImmutableValueGraph;
14: import com.google.common.graph.MutableValueGraph;
15: import com.google.common.graph.StandardValueGraph;
16: import com.google.common.graph.ValueGraph;
17: import com.google.common.graph.ValueGraphBuilder;
18: import java.util.TreeMap;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.junit.runner.RunWith;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
24: public class StandardValueGraph_32_tmp__ESTest extends StandardValueGraph_32_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       GraphBuilder<Object> graphBuilder0 = GraphBuilder.undirected();
29:       TreeMap<EndpointPair<Integer>, GraphConnections<EndpointPair<Integer>, Integer>> treeMap0 = new TreeMap<EndpointPair<Integer>, GraphConnections<EndpointPair<Integer>, Integer>>();
30:       StandardValueGraph<EndpointPair<Integer>, Integer> standardValueGraph0 = new StandardValueGraph<EndpointPair<Integer>, Integer>(graphBuilder0, treeMap0, 3543L);
31:       ValueGraphBuilder<EndpointPair<Integer>, Integer> valueGraphBuilder0 = ValueGraphBuilder.from((ValueGraph<EndpointPair<Integer>, Integer>) standardValueGraph0);
32:       MutableValueGraph<Integer, TreeMap<Integer, Integer>> mutableValueGraph0 = valueGraphBuilder0.build();
33:       ImmutableValueGraph<Integer, TreeMap<Integer, Integer>> immutableValueGraph0 = ImmutableValueGraph.copyOf((ValueGraph<Integer, TreeMap<Integer, Integer>>) mutableValueGraph0);
34:       boolean boolean0 = immutableValueGraph0.isDirected();
35:       assertFalse(boolean0);
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_32_1729699799320/com/google/common/graph/StandardValueGraph_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Oct 23 16:09:59 GMT 2024
5:  */
6: 
7: package com.google.common.graph;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class StandardValueGraph_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.common.graph.StandardValueGraph"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/google/guava/guava/31.0.1-jre"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StandardValueGraph_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ImmutableSet$SetBuilderImpl",
82:       "com.google.common.graph.ImmutableGraph",
83:       "com.google.common.graph.AbstractBaseGraph",
84:       "com.google.common.graph.EndpointPairIterator",
85:       "com.google.common.collect.PeekingIterator",
86:       "com.google.common.graph.MapIteratorCache",
87:       "com.google.common.graph.ImmutableValueGraph$Builder",
88:       "com.google.common.graph.EndpointPairIterator$Directed",
89:       "com.google.common.base.Optional",
90:       "com.google.common.graph.Network",
91:       "com.google.common.collect.Iterators$ArrayItr",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.RegularImmutableMap$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.Sets$1",
96:       "com.google.common.collect.AbstractIterator$1",
97:       "com.google.common.collect.RegularImmutableMap",
98:       "com.google.common.collect.Range",
99:       "com.google.common.graph.AbstractGraph",
100:       "com.google.common.collect.SortedMapDifference",
101:       "com.google.common.collect.RegularImmutableSet",
102:       "com.google.common.graph.AbstractValueGraph$2",
103:       "com.google.common.collect.Iterators$10",
104:       "com.google.common.collect.AbstractMapEntry",
105:       "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
106:       "com.google.common.graph.ValueGraph",
107:       "com.google.common.graph.MapIteratorCache$1$1",
108:       "com.google.common.base.Predicate",
109:       "com.google.common.base.Present",
110:       "com.google.common.graph.ForwardingGraph",
111:       "com.google.common.graph.AbstractValueGraph$1",
112:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
113:       "com.google.common.graph.StandardMutableGraph",
114:       "com.google.common.collect.ImmutableAsList",
115:       "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
116:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
117:       "com.google.common.collect.Sets$SetView",
118:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
119:       "com.google.common.collect.ImmutableSet$CachingAsList",
120:       "com.google.common.base.MoreObjects$ToStringHelper",
121:       "com.google.common.graph.UndirectedGraphConnections",
122:       "com.google.common.collect.RegularImmutableAsList",
123:       "com.google.common.collect.SingletonImmutableSet",
124:       "com.google.common.collect.Cut$BelowValue",
125:       "com.google.common.collect.ImmutableMapEntrySet",
126:       "com.google.common.base.Strings",
127:       "com.google.common.graph.MapIteratorCache$1",
128:       "com.google.common.collect.DiscreteDomain",
129:       "com.google.common.collect.UnmodifiableListIterator",
130:       "com.google.common.graph.StandardValueGraph",
131:       "com.google.common.base.MoreObjects$ToStringHelper$UnconditionalValueHolder",
132:       "com.google.common.collect.Cut",
133:       "com.google.common.primitives.IntsMethodsForWeb",
134:       "com.google.common.graph.PredecessorsFunction",
135:       "com.google.common.collect.RangeGwtSerializationDependencies",
136:       "com.google.common.collect.Sets$4",
137:       "com.google.common.base.Absent",
138:       "com.google.common.collect.Maps$BiMapConverter",
139:       "com.google.common.graph.StandardMutableNetwork",
140:       "com.google.common.collect.AbstractIterator",
141:       "com.google.common.base.MoreObjects",
142:       "com.google.common.graph.MapRetrievalCache",
143:       "com.google.common.graph.EndpointPair$Unordered",
144:       "com.google.common.collect.MapDifference",
145:       "com.google.common.graph.MutableValueGraph",
146:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
147:       "com.google.common.collect.Sets$ImprovedAbstractSet",
148:       "com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry",
149:       "com.google.common.graph.AbstractGraphBuilder",
150:       "com.google.common.base.Preconditions",
151:       "com.google.common.collect.UnmodifiableIterator",
152:       "com.google.common.graph.UndirectedGraphConnections$2",
153:       "com.google.common.graph.Graph",
154:       "com.google.common.graph.ElementOrder",
155:       "com.google.common.graph.AbstractBaseGraph$1",
156:       "com.google.common.collect.ImmutableEntry",
157:       "com.google.common.collect.ImmutableEnumMap",
158:       "com.google.common.collect.ImmutableCollection",
159:       "com.google.common.graph.EndpointPair",
160:       "com.google.common.collect.ImmutableEnumSet",
161:       "com.google.common.graph.ValueGraphBuilder",
162:       "com.google.errorprone.annotations.Immutable",
163:       "com.google.common.graph.StandardNetwork",
164:       "com.google.common.graph.ElementTypesAreNonnullByDefault",
165:       "com.google.common.graph.EndpointPair$Ordered",
166:       "com.google.common.base.Converter",
167:       "com.google.common.collect.Maps$AsMapView",
168:       "com.google.errorprone.annotations.DoNotMock",
169:       "com.google.common.collect.Maps$8",
170:       "com.google.common.collect.BiMap",
171:       "com.google.common.collect.IndexedImmutableSet",
172:       "com.google.common.base.Function",
173:       "com.google.common.graph.NetworkConnections",
174:       "com.google.common.collect.ImmutableSet",
175:       "com.google.common.collect.Iterators$9",
176:       "com.google.common.graph.NetworkBuilder",
177:       "com.google.common.collect.ImmutableMap",
178:       "com.google.common.collect.ImmutableMapEntry",
179:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
180:       "com.google.common.graph.MutableGraph",
181:       "com.google.common.collect.AbstractIndexedListIterator",
182:       "com.google.common.collect.CollectPreconditions",
183:       "com.google.common.collect.Iterators$1",
184:       "com.google.common.graph.GraphBuilder",
185:       "com.google.common.collect.Iterators$4",
186:       "com.google.common.collect.Sets",
187:       "com.google.common.primitives.Ints$IntConverter",
188:       "com.google.common.collect.Maps$3",
189:       "com.google.common.collect.Iterators$5",
190:       "com.google.common.collect.AbstractIterator$State",
191:       "com.google.common.collect.DiscreteDomain$LongDomain",
192:       "com.google.common.graph.EndpointPairIterator$Undirected",
193:       "com.google.common.collect.BoundType",
194:       "com.google.common.collect.Cut$AboveValue",
195:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
196:       "com.google.common.graph.GraphConnections",
197:       "com.google.common.collect.Maps$EntrySet",
198:       "com.google.common.collect.ImmutableMap$1",
199:       "com.google.common.graph.ElementOrder$Type",
200:       "com.google.common.graph.StandardValueGraph$1",
201:       "com.google.common.collect.Iterators",
202:       "com.google.common.graph.MapRetrievalCache$CacheEntry",
203:       "com.google.common.graph.Graphs",
204:       "com.google.common.collect.ImmutableBiMap",
205:       "com.google.common.graph.StandardMutableValueGraph",
206:       "com.google.common.collect.ImmutableList",
207:       "com.google.common.graph.ElementOrder$1",
208:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
209:       "com.google.common.graph.ImmutableValueGraph",
210:       "com.google.common.graph.ImmutableGraph$Builder",
211:       "com.google.common.graph.ImmutableNetwork$Builder",
212:       "com.google.common.collect.Cut$BelowAll",
213:       "com.google.common.collect.Maps",
214:       "com.google.common.collect.ImmutableMap$Builder",
215:       "com.google.common.primitives.Ints",
216:       "com.google.common.collect.TransformedIterator",
217:       "com.google.common.graph.BaseGraph",
218:       "com.google.common.collect.Maps$EntryTransformer",
219:       "com.google.common.collect.ImmutableSet$RegularSetBuilderImpl",
220:       "com.google.common.collect.Ordering",
221:       "com.google.common.graph.MutableNetwork",
222:       "com.google.common.collect.ElementTypesAreNonnullByDefault",
223:       "com.google.common.collect.Iterators$MergingIterator",
224:       "com.google.common.graph.SuccessorsFunction",
225:       "com.google.common.collect.RegularImmutableMap$Values",
226:       "com.google.common.graph.AbstractNetwork",
227:       "com.google.common.graph.IncidentEdgeSet",
228:       "com.google.common.collect.Cut$AboveAll",
229:       "com.google.common.graph.AbstractValueGraph"
230:     );
231:   } 
232: 
233:   private static void resetClasses() {
234:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StandardValueGraph_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
235: 
236:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
237:       "com.google.common.graph.AbstractBaseGraph",
238:       "com.google.common.graph.AbstractValueGraph",
239:       "com.google.common.graph.StandardValueGraph",
240:       "com.google.common.graph.IncidentEdgeSet",
241:       "com.google.common.graph.StandardValueGraph$1",
242:       "com.google.common.graph.StandardMutableValueGraph",
243:       "com.google.common.graph.AbstractGraphBuilder",
244:       "com.google.common.graph.GraphBuilder",
245:       "com.google.common.graph.NetworkBuilder",
246:       "com.google.common.graph.ElementOrder",
247:       "com.google.common.graph.ElementOrder$Type",
248:       "com.google.common.base.Preconditions",
249:       "com.google.common.base.Optional",
250:       "com.google.common.base.Absent",
251:       "com.google.common.graph.ElementOrder$1",
252:       "com.google.common.collect.Maps",
253:       "com.google.common.graph.AbstractNetwork",
254:       "com.google.common.graph.StandardNetwork",
255:       "com.google.common.graph.MapIteratorCache",
256:       "com.google.common.graph.MapRetrievalCache",
257:       "com.google.common.graph.Graphs",
258:       "com.google.common.graph.ImmutableValueGraph",
259:       "com.google.common.graph.ValueGraphBuilder",
260:       "com.google.common.collect.DiscreteDomain",
261:       "com.google.common.collect.DiscreteDomain$IntegerDomain",
262:       "com.google.common.base.MoreObjects",
263:       "com.google.common.base.MoreObjects$ToStringHelper",
264:       "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
265:       "com.google.common.graph.StandardMutableNetwork",
266:       "com.google.common.graph.EndpointPair",
267:       "com.google.common.graph.EndpointPair$Ordered",
268:       "com.google.common.base.ExtraObjectsMethodsForWeb",
269:       "com.google.common.base.Objects",
270:       "com.google.common.collect.ImmutableMap",
271:       "com.google.common.collect.ImmutableMap$Builder",
272:       "com.google.common.graph.MapIteratorCache$1",
273:       "com.google.common.collect.UnmodifiableIterator",
274:       "com.google.common.graph.MapIteratorCache$1$1",
275:       "com.google.common.collect.RegularImmutableMap",
276:       "com.google.common.graph.AbstractBaseGraph$1",
277:       "com.google.common.primitives.IntsMethodsForWeb",
278:       "com.google.common.primitives.Ints",
279:       "com.google.common.graph.AbstractGraph",
280:       "com.google.common.graph.ForwardingGraph",
281:       "com.google.common.graph.ImmutableGraph",
282:       "com.google.common.graph.EndpointPair$Unordered",
283:       "com.google.common.base.Strings",
284:       "com.google.common.graph.AbstractNetwork$3",
285:       "com.google.common.collect.Maps$ViewCachingAbstractMap",
286:       "com.google.common.collect.Maps$AsMapView",
287:       "com.google.common.collect.Sets$ImprovedAbstractSet",
288:       "com.google.common.collect.Maps$EntrySet",
289:       "com.google.common.collect.Maps$AsMapView$1EntrySetImpl",
290:       "com.google.common.collect.TransformedIterator",
291:       "com.google.common.collect.Maps$3",
292:       "com.google.common.graph.StandardMutableGraph",
293:       "com.google.common.collect.CollectPreconditions",
294:       "com.google.common.graph.ImmutableNetwork",
295:       "com.google.common.base.Present",
296:       "com.google.common.collect.Ordering",
297:       "com.google.common.collect.NaturalOrdering",
298:       "com.google.common.graph.AbstractValueGraph$1",
299:       "com.google.common.collect.RangeGwtSerializationDependencies",
300:       "com.google.common.collect.Cut",
301:       "com.google.common.collect.Cut$BelowAll",
302:       "com.google.common.collect.Cut$AboveAll",
303:       "com.google.common.collect.Range",
304:       "com.google.common.collect.Cut$BelowValue",
305:       "com.google.common.graph.AbstractValueGraph$2",
306:       "com.google.common.collect.AbstractIterator",
307:       "com.google.common.graph.EndpointPairIterator",
308:       "com.google.common.graph.EndpointPairIterator$Directed",
309:       "com.google.common.collect.AbstractIterator$State",
310:       "com.google.common.collect.ImmutableCollection",
311:       "com.google.common.collect.ImmutableSet",
312:       "com.google.common.collect.ImmutableSet$CachingAsList",
313:       "com.google.common.collect.RegularImmutableSet",
314:       "com.google.common.collect.Iterators",
315:       "com.google.common.collect.UnmodifiableListIterator",
316:       "com.google.common.collect.AbstractIndexedListIterator",
317:       "com.google.common.collect.Iterators$ArrayItr",
318:       "com.google.common.collect.AbstractIterator$1",
319:       "com.google.common.primitives.Booleans",
320:       "com.google.common.collect.Range$1",
321:       "com.google.common.graph.EndpointPairIterator$Undirected",
322:       "com.google.common.collect.Sets",
323:       "com.google.common.graph.ImmutableValueGraph$Builder",
324:       "com.google.common.graph.ImmutableGraph$Builder",
325:       "com.google.common.collect.Cut$AboveValue",
326:       "com.google.common.base.Converter",
327:       "com.google.common.base.Converter$FunctionBasedConverter",
328:       "com.google.common.base.Converter$ConverterComposition",
329:       "com.google.common.collect.ImmutableMapEntrySet",
330:       "com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet",
331:       "com.google.common.collect.ImmutableList",
332:       "com.google.common.collect.RegularImmutableList",
333:       "com.google.common.graph.UndirectedGraphConnections",
334:       "com.google.common.collect.Iterables",
335:       "com.google.common.graph.AbstractNetwork$1",
336:       "com.google.common.graph.DirectedGraphConnections",
337:       "com.google.common.graph.DirectedGraphConnections$8",
338:       "com.google.common.graph.ImmutableNetwork$Builder",
339:       "com.google.common.graph.UndirectedGraphConnections$2",
340:       "com.google.common.base.Converter$IdentityConverter",
341:       "com.google.common.graph.DirectedGraphConnections$3",
342:       "com.google.common.graph.DirectedGraphConnections$3$1",
343:       "com.google.common.graph.AbstractNetwork$1$1",
344:       "com.google.common.graph.ImmutableValueGraph$1",
345:       "com.google.common.collect.ImmutableBiMapFauxverideShim",
346:       "com.google.common.collect.ImmutableBiMap",
347:       "com.google.common.collect.SingletonImmutableBiMap",
348:       "com.google.common.collect.ImmutableCollection$Builder",
349:       "com.google.common.collect.ImmutableList$Builder",
350:       "com.google.common.graph.MapRetrievalCache$CacheEntry"
351:     );
352:   }
353: }

[MASTER] 05:09:59.352 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
GraphBuilder<Object> graphBuilder0 = GraphBuilder.undirected();
TreeMap<EndpointPair<Integer>, GraphConnections<EndpointPair<Integer>, Integer>> treeMap0 = new TreeMap<EndpointPair<Integer>, GraphConnections<EndpointPair<Integer>, Integer>>();
StandardValueGraph<EndpointPair<Integer>, Integer> standardValueGraph0 = new StandardValueGraph<EndpointPair<Integer>, Integer>(graphBuilder0, treeMap0, 3543L);
ValueGraphBuilder<EndpointPair<Integer>, Integer> valueGraphBuilder0 = ValueGraphBuilder.from((ValueGraph<EndpointPair<Integer>, Integer>) standardValueGraph0);
MutableValueGraph<Integer, TreeMap<Integer, Integer>> mutableValueGraph0 = valueGraphBuilder0.build();
ImmutableValueGraph<Integer, TreeMap<Integer, Integer>> immutableValueGraph0 = ImmutableValueGraph.copyOf((ValueGraph<Integer, TreeMap<Integer, Integer>>) mutableValueGraph0);
boolean boolean0 = immutableValueGraph0.isDirected();
assertFalse(boolean0);


* Writing tests to file
* Writing JUnit test case 'StandardValueGraph_ESTest' to evosuite-tests
* Done!

* Computation finished
