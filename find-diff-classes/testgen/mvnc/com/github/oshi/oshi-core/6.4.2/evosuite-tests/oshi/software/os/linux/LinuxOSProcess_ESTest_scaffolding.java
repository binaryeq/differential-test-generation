/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 13:18:01 GMT 2024
 */

package oshi.software.os.linux;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class LinuxOSProcess_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "oshi.software.os.linux.LinuxOSProcess"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/com/github/oshi/oshi-core/6.4.2"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.home", "/home/wtwhite"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LinuxOSProcess_ESTest_scaffolding.class.getClassLoader() ,
      "oshi.util.Memoizer$1",
      "oshi.software.os.linux.LinuxOSProcess",
      "oshi.util.FileUtil",
      "oshi.util.Memoizer",
      "oshi.util.platform.linux.ProcPath",
      "oshi.software.os.OSProcess$State",
      "oshi.software.common.AbstractOSProcess",
      "oshi.util.GlobalConfig",
      "oshi.software.os.linux.LinuxOperatingSystem",
      "oshi.software.os.OperatingSystem",
      "oshi.util.ParseUtil",
      "oshi.software.common.AbstractOperatingSystem",
      "oshi.util.GlobalConfig$PropertyException",
      "oshi.software.os.OSProcess",
      "oshi.software.os.linux.LinuxOSProcess$ProcPidStat"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LinuxOSProcess_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "oshi.software.common.AbstractOSProcess",
      "oshi.util.FileUtil",
      "oshi.util.GlobalConfig",
      "oshi.software.os.linux.LinuxOSProcess$ProcPidStat",
      "oshi.software.os.linux.LinuxOSProcess",
      "oshi.software.os.OSProcess$State",
      "oshi.util.GlobalConfig$PropertyException",
      "oshi.util.platform.linux.ProcPath",
      "oshi.util.ParseUtil",
      "oshi.software.os.OSThread$ThreadFiltering",
      "oshi.jna.platform.linux.LinuxLibc",
      "oshi.util.ExecutingCommand",
      "oshi.driver.linux.proc.ProcessStat",
      "oshi.software.common.AbstractOperatingSystem",
      "oshi.driver.linux.proc.Auxv",
      "oshi.software.os.linux.LinuxOperatingSystem",
      "oshi.util.Memoizer$1",
      "oshi.util.Memoizer",
      "oshi.util.UserGroupInfo",
      "oshi.jna.Struct$CloseableTimeval",
      "oshi.software.os.mac.MacOperatingSystem"
    );
  }
}
