/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 21:03:19 GMT 2024
 */

package org.apache.commons.configuration2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URI;
import java.net.URL;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Properties;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.naming.Context;
import javax.naming.InitialContext;
import oracle.jdbc.internal.OracleConnection;
import org.apache.commons.configuration2.AbstractYAMLBasedConfiguration;
import org.apache.commons.configuration2.BaseConfiguration;
import org.apache.commons.configuration2.CombinedConfiguration;
import org.apache.commons.configuration2.CompositeConfiguration;
import org.apache.commons.configuration2.Configuration;
import org.apache.commons.configuration2.DataConfiguration;
import org.apache.commons.configuration2.DatabaseConfiguration;
import org.apache.commons.configuration2.DynamicCombinedConfiguration;
import org.apache.commons.configuration2.EnvironmentConfiguration;
import org.apache.commons.configuration2.HierarchicalConfiguration;
import org.apache.commons.configuration2.INIConfiguration;
import org.apache.commons.configuration2.JNDIConfiguration;
import org.apache.commons.configuration2.JSONConfiguration;
import org.apache.commons.configuration2.MapConfiguration;
import org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper;
import org.apache.commons.configuration2.PropertiesConfiguration;
import org.apache.commons.configuration2.SubnodeConfiguration;
import org.apache.commons.configuration2.SubsetConfiguration;
import org.apache.commons.configuration2.SystemConfiguration;
import org.apache.commons.configuration2.XMLConfiguration;
import org.apache.commons.configuration2.XMLPropertiesConfiguration;
import org.apache.commons.configuration2.YAMLConfiguration;
import org.apache.commons.configuration2.convert.ConversionHandler;
import org.apache.commons.configuration2.interpol.DummyLookup;
import org.apache.commons.configuration2.interpol.ExprLookup;
import org.apache.commons.configuration2.tree.ImmutableNode;
import org.apache.commons.configuration2.tree.NodeSelector;
import org.apache.commons.configuration2.tree.OverrideCombiner;
import org.apache.commons.configuration2.tree.TrackedNodeModel;
import org.apache.commons.configuration2.tree.UnionCombiner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.hsqldb.types.NumberType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataConfiguration_ESTest extends DataConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      dataConfiguration0.setThrowExceptionOnMissing(true);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("}3", "proxyForCreateCache");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // '}3' doesn't map to an existing object
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(iNIConfiguration0);
      dataConfiguration0.clearPropertyDirect("k.");
      assertFalse(dataConfiguration0.isDetailEvents());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Stack<Float> stack0 = new Stack<Float>();
      dataConfiguration0.addPropertyInternal("EUs}C2sEFAFa|Q Pa", stack0);
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("}", "}");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean boolean0 = dataConfiguration0.isEmptyInternal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(overrideCombiner0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      List<URL> list0 = dataConfiguration0.getURLList((String) null, (List<URL>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      ArrayList<URL> arrayList0 = new ArrayList<URL>();
      List<URL> list0 = dataConfiguration0.getURLList("org.apache.commons.configuration2.DataConfiguration$1", (List<URL>) arrayList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(iNIConfiguration0);
      SubsetConfiguration subsetConfiguration0 = new SubsetConfiguration(xMLConfiguration0, "B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(subsetConfiguration0);
      URL[] uRLArray0 = dataConfiguration0.getURLArray("E6,llGx-d3\"DwO3{", (URL[]) null);
      assertNull(uRLArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URL[] uRLArray0 = new URL[5];
      URL[] uRLArray1 = dataConfiguration0.getURLArray("yyyy-MM-dd HH:mm:ss", uRLArray0);
      assertSame(uRLArray1, uRLArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URL uRL0 = dataConfiguration0.getURL("", (URL) null);
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      List<URI> list0 = dataConfiguration0.getURIList("Qr2i$/M=", (List<URI>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Vector<URI> vector0 = new Vector<URI>();
      List<URI> list0 = dataConfiguration0.getURIList("c", (List<URI>) vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      LinkedList<URI> linkedList0 = new LinkedList<URI>();
      URI uRI0 = MockURI.aFileURI;
      linkedList0.offerFirst(uRI0);
      List<URI> list0 = dataConfiguration0.getURIList("", (List<URI>) linkedList0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration("org.apache.commons.configuration2.DataConfiguration$1");
      SubsetConfiguration subsetConfiguration0 = new SubsetConfiguration(jNDIConfiguration0, "yyyy-MM-dd HH:mm:ss", (String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subsetConfiguration0);
      URI[] uRIArray0 = dataConfiguration0.getURIArray("", (URI[]) null);
      assertNull(uRIArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      INIConfiguration iNIConfiguration0 = new INIConfiguration(jSONConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("Vd^S95OP%xhpVxTBGO");
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration(subnodeConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI[] uRIArray0 = new URI[1];
      URI[] uRIArray1 = dataConfiguration0.getURIArray("Vd^S95OP%xhpVxTBGO", uRIArray0);
      assertEquals(1, uRIArray1.length);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI[] uRIArray0 = dataConfiguration0.getURIArray("T");
      assertEquals(1, uRIArray0.length);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI uRI0 = MockURI.URI("getServerName", "getServerName", "getServerName");
      URI uRI1 = dataConfiguration0.getURI("{'[E", uRI0);
      assertNull(uRI1.getRawQuery());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI uRI0 = MockURI.aFTPURI;
      URI uRI1 = dataConfiguration0.getURI("P7YW@", uRI0);
      assertTrue(uRI1.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      URI uRI0 = MockURI.URI((String) null, "org.apache.commons.configuration2.DataConfiguration", (String) null, 1, "' doesn't map to an existing object", "", "&Y\"vHj");
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      URI uRI1 = dataConfiguration0.getURI("org.apache.commons.configuration2.DataConfiguration", uRI0);
      assertNull(uRI1.getRawUserInfo());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty(".ykz?/gTGHa!", ".ykz?/gTGHa!");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI uRI0 = dataConfiguration0.getURI(".ykz?/gTGHa!");
      assertFalse(uRI0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Short> list0 = dataConfiguration0.getShortList((String) null, (List<Short>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InitialContext initialContext0 = new InitialContext();
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration(initialContext0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      short[] shortArray0 = dataConfiguration0.getShortArray("org.apache.commons.configuration.format.date", (short[]) null);
      assertNull(shortArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      short[] shortArray0 = new short[2];
      short[] shortArray1 = dataConfiguration0.getShortArray("org.hsqldb.lib.LongKeyHashMap$EntrySet", shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      Object object0 = dataConfiguration0.getPropertyInternal("^=EDKvTl;d:.C");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Object object0 = dataConfiguration0.getPropertyInternal("");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(propertiesConfiguration0);
      List<Long> list0 = dataConfiguration0.getLongList("ISO-8859-1", (List<Long>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      List<Long> list0 = dataConfiguration0.getLongList("my'e::+Z;Q!k", (List<Long>) linkedList0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long((-383L));
      linkedList0.add(long0);
      List<Long> list0 = dataConfiguration0.getLongList("", (List<Long>) linkedList0);
      assertTrue(list0.contains(long0));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Long> list0 = dataConfiguration0.getLongList("!");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      long[] longArray0 = new long[2];
      long[] longArray1 = dataConfiguration0.getLongArray("org.apache.commons.configuration2.DataConfiguration", longArray0);
      assertSame(longArray1, longArray0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      long[] longArray0 = new long[0];
      long[] longArray1 = dataConfiguration0.getLongArray("c", longArray0);
      assertSame(longArray0, longArray1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      List<Locale> list0 = dataConfiguration0.getLocaleList(".3zV/JG!-K", (List<Locale>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Locale> list0 = dataConfiguration0.getLocaleList("oracle.ucp.jdbc.PoolDataSourceImpl$30");
      List<Locale> list1 = dataConfiguration0.getLocaleList("", list0);
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(iNIConfiguration0);
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.forLanguageTag("yyyy-MM-dd HH:mm:ss");
      vector0.add(locale0);
      List<Locale> list0 = dataConfiguration0.getLocaleList("+%t7p~pUF", (List<Locale>) vector0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Locale[] localeArray0 = dataConfiguration0.getLocaleArray((String) null, (Locale[]) null);
      assertNull(localeArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Locale[] localeArray0 = new Locale[1];
      Locale[] localeArray1 = dataConfiguration0.getLocaleArray("&XU>+YjQU%$*;2KP", localeArray0);
      assertSame(localeArray0, localeArray1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Locale locale0 = dataConfiguration0.getLocale("`(dl=/Ev)]", (Locale) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = dataConfiguration0.getLocale("yyyy-MM-dd HH:mm:ss", locale0);
      assertEquals("", locale1.getVariant());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale locale0 = dataConfiguration0.getLocale("");
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale locale0 = dataConfiguration0.getLocale("");
      assertEquals("", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      Iterator<String> iterator0 = dataConfiguration0.getKeysInternal();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(abstractYAMLBasedConfiguration0);
      List<Integer> list0 = dataConfiguration0.getIntegerList("defaultNChar", (List<Integer>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Vector<Integer> vector0 = new Vector<Integer>();
      List<Integer> list0 = dataConfiguration0.getIntegerList("yyyy-MM-dd HH:mm:ss", (List<Integer>) vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLPropertiesConfiguration0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      List<Integer> list0 = dataConfiguration0.getIntegerList("' doesn't map to an existing object", (List<Integer>) linkedList0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      int[] intArray0 = dataConfiguration0.getIntArray("", (int[]) null);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration("g1ZeGTsC9;)hf4y ");
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      int[] intArray0 = new int[5];
      int[] intArray1 = dataConfiguration0.getIntArray("g1ZeGTsC9;)hf4y ", intArray0);
      assertEquals(5, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      int[] intArray0 = new int[0];
      int[] intArray1 = dataConfiguration0.getIntArray("yyyy-MM-dd HH:mm:ss", intArray0);
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Float> list0 = dataConfiguration0.getFloatList("", (List<Float>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Stack<Float> stack0 = new Stack<Float>();
      List<Float> list0 = dataConfiguration0.getFloatList("", (List<Float>) stack0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      float[] floatArray0 = new float[6];
      float[] floatArray1 = dataConfiguration0.getFloatArray("", floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      float[] floatArray0 = new float[0];
      float[] floatArray1 = dataConfiguration0.getFloatArray("supportsUnion", floatArray0);
      assertEquals(0, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      List<Double> list0 = dataConfiguration0.getDoubleList("LOCALTIMESTAMP", (List<Double>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Stack<Double> stack0 = new Stack<Double>();
      List<Double> list0 = dataConfiguration0.getDoubleList("org.apache.commons.configuration2.DataConfiguration$1", (List<Double>) stack0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      EnvironmentConfiguration environmentConfiguration0 = new EnvironmentConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(environmentConfiguration0);
      Vector<Double> vector0 = new Vector<Double>();
      Double double0 = new Double(3241.13634339);
      vector0.add(double0);
      List<Double> list0 = dataConfiguration0.getDoubleList("", (List<Double>) vector0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(iNIConfiguration0);
      double[] doubleArray0 = dataConfiguration0.getDoubleArray("", (double[]) null);
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(overrideCombiner0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = dataConfiguration0.getDoubleArray("", doubleArray0);
      assertEquals(7, doubleArray1.length);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList((String) null, (List<Date>) null, "pul#`{");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LinkedList<Date> linkedList0 = new LinkedList<Date>();
      InitialContext initialContext0 = new InitialContext();
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration(initialContext0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList("org.apache.commons.configuration2.DataConfiguration", (List<Date>) linkedList0, (String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLPropertiesConfiguration0);
      ArrayList<Date> arrayList0 = new ArrayList<Date>();
      List<Date> list0 = dataConfiguration0.getDateList("UTF-8", (List<Date>) arrayList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("_6", "_6");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList("_6", "_6");
      List<Date> list1 = dataConfiguration0.getDateList("_6", list0, "_6");
      assertEquals(1, list0.size());
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      EnvironmentConfiguration environmentConfiguration0 = new EnvironmentConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(environmentConfiguration0);
      Date[] dateArray0 = dataConfiguration0.getDateArray("qH]QWcy", (Date[]) null, (String) null);
      assertNull(dateArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = new Date[7];
      Date[] dateArray1 = dataConfiguration0.getDateArray("XO", dateArray0, "NJ(X=?&M9");
      assertSame(dateArray0, dateArray1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = new Date[6];
      Date[] dateArray1 = dataConfiguration0.getDateArray("BJ.4<", dateArray0);
      assertEquals(6, dateArray1.length);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      Date[] dateArray0 = new Date[0];
      Date[] dateArray1 = dataConfiguration0.getDateArray("l)L", dateArray0);
      assertSame(dateArray0, dateArray1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      EnvironmentConfiguration environmentConfiguration0 = new EnvironmentConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(environmentConfiguration0);
      java.sql.Date date0 = new java.sql.Date(0L);
      Date date1 = dataConfiguration0.getDate("", (Date) date0, "_oLYg&@zqHC%7QGoN2");
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date date0 = dataConfiguration0.getDate("yyyy-MM-dd HH:mm:ss", (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      ConversionHandler conversionHandler0 = dataConfiguration0.getConversionHandler();
      assertNotNull(conversionHandler0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      YAMLConfiguration yAMLConfiguration1 = (YAMLConfiguration)dataConfiguration0.getConfiguration();
      assertFalse(yAMLConfiguration1.isDetailEvents());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      List<Color> list0 = dataConfiguration0.getColorList("._-xbi*Yo8}B:{R:", (List<Color>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Color[] colorArray0 = new Color[7];
      Color[] colorArray1 = dataConfiguration0.getColorArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", colorArray0);
      assertSame(colorArray0, colorArray1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Color[] colorArray0 = dataConfiguration0.getColorArray("*?wT]Pjzts|");
      Color[] colorArray1 = dataConfiguration0.getColorArray("!kr\"", colorArray0);
      assertEquals(0, colorArray1.length);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Color color0 = dataConfiguration0.getColor("", (Color) null);
      assertNull(color0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Color color0 = Color.DARK_GRAY;
      Color color1 = dataConfiguration0.getColor("c", color0);
      assertSame(color1, color0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      Color color0 = Color.black;
      Color color1 = dataConfiguration0.getColor("", color0);
      assertSame(color1, color0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("|", (List<Calendar>) null, "rpjs}P-");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("", "");
      List<Calendar> list1 = dataConfiguration0.getCalendarList("", list0, "setNumNamedInstanceConns");
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Stack<Calendar> stack0 = new Stack<Calendar>();
      stack0.add((Calendar) null);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("=X.<oej", (List<Calendar>) stack0, "_AMt`PiwERTAG-^S");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("", (List<Calendar>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("", "");
      List<Calendar> list1 = dataConfiguration0.getCalendarList((String) null, list0);
      assertNotSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      Vector<Calendar> vector0 = new Vector<Calendar>();
      vector0.add((Calendar) null);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("M_K^_@yr8", (List<Calendar>) vector0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration((String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      Calendar[] calendarArray0 = new Calendar[2];
      Calendar[] calendarArray1 = dataConfiguration0.getCalendarArray("@r{`UA/K3SSkylJ]v]:", calendarArray0, "net8://?PR=0");
      assertSame(calendarArray1, calendarArray0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(abstractYAMLBasedConfiguration0);
      Calendar[] calendarArray0 = new Calendar[0];
      Calendar[] calendarArray1 = dataConfiguration0.getCalendarArray("", calendarArray0, "");
      assertEquals(0, calendarArray1.length);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      Calendar[] calendarArray0 = dataConfiguration0.getCalendarArray("", (Calendar[]) null);
      assertNull(calendarArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Calendar[] calendarArray0 = new Calendar[6];
      Calendar[] calendarArray1 = dataConfiguration0.getCalendarArray("org.apache.commons.configuration.format.date", calendarArray0);
      assertEquals(6, calendarArray1.length);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("_6", "_6");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar[] calendarArray0 = dataConfiguration0.getCalendarArray("_6", "_6");
      assertEquals(1, calendarArray0.length);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar[] calendarArray0 = dataConfiguration0.getCalendarArray("PHQ8~?0iRi!n9M>");
      assertEquals(0, calendarArray0.length);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Calendar calendar0 = dataConfiguration0.getCalendar("", (Calendar) null, "kfs)C");
      assertNull(calendar0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Calendar calendar0 = dataConfiguration0.getCalendar("org.apache.commons.configuration2.DataConfiguration$1", (Calendar) null);
      assertNull(calendar0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      Calendar calendar0 = MockCalendar.getInstance();
      Calendar calendar1 = dataConfiguration0.getCalendar((String) null, calendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar1.toString());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      MockDate mockDate0 = new MockDate(133, (-3115), (-3115));
      yAMLConfiguration0.setProperty("", mockDate0);
      Calendar calendar0 = dataConfiguration0.getCalendar("");
      assertTrue(calendar0.isLenient());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BaseConfiguration baseConfiguration0 = new BaseConfiguration();
      ArrayList<SystemConfiguration> arrayList0 = new ArrayList<SystemConfiguration>();
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration(baseConfiguration0, arrayList0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      List<Byte> list0 = dataConfiguration0.getByteList((String) null, (List<Byte>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      ArrayList<Byte> arrayList0 = new ArrayList<Byte>();
      Byte byte0 = new Byte((byte) (-50));
      arrayList0.add(byte0);
      List<Byte> list0 = dataConfiguration0.getByteList("pul#`{", (List<Byte>) arrayList0);
      assertTrue(list0.contains(byte0));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(iNIConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = dataConfiguration0.getByteArray("", byteArray0);
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = dataConfiguration0.getByteArray("allGeneratedRows", byteArray0);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      byte[] byteArray0 = dataConfiguration0.getByteArray(")G+1\"j");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      List<Boolean> list0 = dataConfiguration0.getBooleanList("A`E", (List<Boolean>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration("");
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      ArrayList<Boolean> arrayList0 = new ArrayList<Boolean>();
      List<Boolean> list0 = dataConfiguration0.getBooleanList("", (List<Boolean>) arrayList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(overrideCombiner0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Vector<Boolean> vector0 = new Vector<Boolean>();
      Boolean boolean0 = new Boolean("@@o`YW/,b;{m");
      boolean boolean1 = vector0.add(boolean0);
      List<Boolean> list0 = dataConfiguration0.getBooleanList((String) null, (List<Boolean>) vector0);
      assertFalse(list0.contains(boolean1));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Boolean> list0 = dataConfiguration0.getBooleanList("8$\"vJKY");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      boolean[] booleanArray0 = new boolean[5];
      boolean[] booleanArray1 = dataConfiguration0.getBooleanArray("", booleanArray0);
      assertSame(booleanArray0, booleanArray1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean[] booleanArray0 = new boolean[0];
      boolean[] booleanArray1 = dataConfiguration0.getBooleanArray("+n/s5\"(Wt&", booleanArray0);
      assertSame(booleanArray0, booleanArray1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean[] booleanArray0 = dataConfiguration0.getBooleanArray("");
      assertEquals(0, booleanArray0.length);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<BigInteger> linkedList0 = new LinkedList<BigInteger>();
      List<BigInteger> list0 = dataConfiguration0.getBigIntegerList("", (List<BigInteger>) linkedList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<BigInteger> linkedList0 = new LinkedList<BigInteger>();
      BigInteger bigInteger0 = NumberType.MIN_LONG_BI;
      linkedList0.add(bigInteger0);
      List<BigInteger> list0 = dataConfiguration0.getBigIntegerList("", (List<BigInteger>) linkedList0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      BigInteger[] bigIntegerArray0 = new BigInteger[8];
      BigInteger[] bigIntegerArray1 = dataConfiguration0.getBigIntegerArray("yyyy-MM-dd HH:mm:ss", bigIntegerArray0);
      assertSame(bigIntegerArray0, bigIntegerArray1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      BigInteger[] bigIntegerArray0 = new BigInteger[0];
      BigInteger[] bigIntegerArray1 = dataConfiguration0.getBigIntegerArray("", bigIntegerArray0);
      assertSame(bigIntegerArray0, bigIntegerArray1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      List<BigDecimal> list0 = dataConfiguration0.getBigDecimalList("org.apache.commons.configuration2.DataConfiguration$1", (List<BigDecimal>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Stack<BigDecimal> stack0 = new Stack<BigDecimal>();
      List<BigDecimal> list0 = dataConfiguration0.getBigDecimalList("", (List<BigDecimal>) stack0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Vector<BigDecimal> vector0 = new Vector<BigDecimal>();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      vector0.add(bigDecimal0);
      List<BigDecimal> list0 = dataConfiguration0.getBigDecimalList("hShn6dYL(*Q!Y!Kb", (List<BigDecimal>) vector0);
      assertTrue(list0.contains(bigDecimal0));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      BigDecimal[] bigDecimalArray0 = dataConfiguration0.getBigDecimalArray("j~:>}^kaDE9)L9?", (BigDecimal[]) null);
      assertNull(bigDecimalArray0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(abstractYAMLBasedConfiguration0);
      BigDecimal[] bigDecimalArray0 = new BigDecimal[7];
      BigDecimal[] bigDecimalArray1 = dataConfiguration0.getBigDecimalArray("org.apache.commons.configuration.format.date", bigDecimalArray0);
      assertSame(bigDecimalArray0, bigDecimalArray1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean boolean0 = dataConfiguration0.containsKeyInternal("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean boolean0 = dataConfiguration0.containsKeyInternal("[0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration("g1ZeGTsC9;)hf4y ");
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.setPropertyInternal("", (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This operation is not supported
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.setPropertyInternal("readLong", "readLong");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.isEmptyInternal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("VCq$_v", "VCq$_v");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<URL> list0 = dataConfiguration0.getURLList("yyyy-MM-dd HH:mm:ss");
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLList("VCq$_v", list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value VCq$_v can't be converted to an URL
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("oracle.ons.oraclehome");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(combinedConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(combinedConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLList("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@11[keys=[oracle.ons.oraclehome]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("");
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(xMLConfiguration0, "");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, patternSubtreeConfigurationWrapper0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLArray("7cmZ)x j/=_OcdUlg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value 7cmZ)x j/=_OcdUlg can't be converted to an URL
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLArray("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURL((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key 'null' cannot be converted to class java.net.URL. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      dataConfiguration0.getDate("._-xbi*Yo8}B:{R:", "._-xbi*Yo8}B:{R:");
      combinedConfiguration0.removeConfiguration("O@;=`~oO");
      DataConfiguration dataConfiguration1 = new DataConfiguration(combinedConfiguration0);
      dataConfiguration0.getDate("14|B,A[zhsBQWs*|", "._-xbi*Yo8}B:{R:");
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      combinedConfiguration0.addConfiguration((Configuration) dataConfiguration0);
      Class<Color> class0 = Color.class;
      xMLConfiguration0.getList(class0, "getOracleConnection");
      String string0 = "";
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (-1230);
      shortArray0[1] = (short)2877;
      shortArray0[2] = (short)0;
      // Undeclared exception!
      try { 
        dataConfiguration1.getURL("e>P-m&`1=P2");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURL("Login with JAAS before doing GSSAPI authentication");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Vector<URI> vector0 = new Vector<URI>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIList("7cmZ)x j/=_OcdUlg", (List<URI>) vector0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value 7cmZ)x j/=_OcdUlg can't be converted to an URI
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("slx@#r>n~@evS_(\"~x");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(iNIConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(iNIConfiguration0, trackedNodeModel0);
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration(subnodeConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIList((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@11[keys=[slx@#r>n~@evS_(\"~x]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("on{9+tcX'}fEEjC.", "on{9+tcX'}fEEjC.");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIList("on{9+tcX'}fEEjC.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value on{9+tcX'}fEEjC. can't be converted to an URI
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIList("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIArray("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURI("7cmZ)x j/=_OcdUlg", (URI) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '7cmZ)x j/=_OcdUlg' cannot be converted to class java.net.URI. Value is: '7cmZ)x j/=_OcdUlg'.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      URI uRI0 = MockURI.aFTPURI;
      // Undeclared exception!
      try { 
        dataConfiguration0.getURI((String) null, uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Short> list0 = dataConfiguration0.getShortList(";t\"a<");
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortList("T", list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000057 to java.lang.Short
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Stack<Short> stack0 = new Stack<Short>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortList("org.apache.commons.configuration.format.date", (List<Short>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty((String) null, yAMLConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortList("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert org.apache.commons.configuration2.YAMLConfiguration@0000000009 to java.lang.Short
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortList("org.hsqldb.StatementSchema");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      short[] shortArray0 = new short[8];
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortArray("#a96|`h", shortArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Object object0 = new Object();
      dataConfiguration0.setPropertyInternal((String) null, object0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.Object@0000000048 to java.lang.Short
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getShortArray("} ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector((String) null);
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(combinedConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(combinedConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getPropertyInternal("UeM0\"kA+cN:Sy");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@11[keys=[null]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getPropertyInternal("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration2.DataConfiguration$1", "org.apache.commons.configuration2.DataConfiguration$1");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongList("org.apache.commons.configuration2.DataConfiguration$1", (List<Long>) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000063 to java.lang.Long
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      long[] longArray0 = new long[4];
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongArray("T", longArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000053 to java.lang.Long
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(dynamicCombinedConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("[L1");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, dynamicCombinedConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongArray("[L1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@3f[keys=[[L1]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty(",&<]=bt}pie", ",&<]=bt}pie");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongArray(",&<]=bt}pie");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000053 to java.lang.Long
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongArray("yyyy-MM-dd HH:mm:ss");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5V[B", "lk\"@u~ED!5V[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Vector<Locale> vector0 = new Vector<Locale>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleList("lk\"@u~ED!5V[B", (List<Locale>) vector0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value lk\"@u~ED!5V[B can't be converted to a Locale
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DummyLookup dummyLookup0 = DummyLookup.INSTANCE;
      yAMLConfiguration0.setProperty("", dummyLookup0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleList((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value INSTANCE can't be converted to a Locale
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleList("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("secondsToTrustIdleConnection=", "secondsToTrustIdleConnection=");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale[] localeArray0 = new Locale[0];
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleArray("secondsToTrustIdleConnection=", localeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value secondsToTrustIdleConnection= can't be converted to a Locale
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(combinedConfiguration0);
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration(xMLConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("+IMBACefr|W8BxIZ!?");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(abstractYAMLBasedConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(abstractYAMLBasedConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleArray("+IMBACefr|W8BxIZ!?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@34[keys=[+IMBACefr|W8BxIZ!?]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5p[B", "lk\"@u~ED!5p[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleArray("lk\"@u~ED!5p[B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value lk\"@u~ED!5p[B can't be converted to a Locale
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleArray("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration.format.date", "org.apache.commons.configuration.format.date");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocale("org.apache.commons.configuration.format.date");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key 'org.apache.commons.configuration.format.date' cannot be converted to class java.util.Locale. Value is: 'org.apache.commons.configuration.format.date'.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getKeysInternal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Class<OracleConnection.XSOperationCode> class0 = OracleConnection.XSOperationCode.class;
      OracleConnection.XSOperationCode oracleConnection_XSOperationCode0 = OracleConnection.XSOperationCode.ATTRIBUTE_RESET;
      OracleConnection.XSOperationCode oracleConnection_XSOperationCode1 = dataConfiguration0.get(class0, "\"tVd$~", oracleConnection_XSOperationCode0);
      yAMLConfiguration0.setProperty("!|d>Z\"up'54.Y", oracleConnection_XSOperationCode1);
      Vector<Integer> vector0 = new Vector<Integer>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntegerList("!|d>Z\"up'54.Y", (List<Integer>) vector0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert oracle.jdbc.internal.OracleConnection$XSOperationCode@0000000055 to java.lang.Integer
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      ExprLookup exprLookup0 = new ExprLookup();
      yAMLConfiguration0.setProperty("\"tVd$~", exprLookup0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntegerList("\"tVd$~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert org.apache.commons.configuration2.interpol.ExprLookup@0000000046 to java.lang.Integer
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntegerList("?J@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      int[] intArray0 = new int[8];
      int[] intArray1 = dataConfiguration0.getIntArray("yyyy-MM-dd HH:mm:ss", intArray0);
      assertEquals(8, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      UnionCombiner unionCombiner0 = new UnionCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(unionCombiner0);
      NodeSelector nodeSelector0 = new NodeSelector("NyHB r0/}<:':;n");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(dynamicCombinedConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(dynamicCombinedConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@15[keys=[NyHB r0/}<:':;n]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntArray("7cmZ)x j/=_OcdUlg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000053 to java.lang.Integer
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntArray("Invalid name provided");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("on{9+tcX'}fEEjC.", "on{9+tcX'}fEEjC.");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatList("on{9+tcX'}fEEjC.", (List<Float>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.lang.Float
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(iNIConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(iNIConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatList("on{9+tcX'}fEEjC.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@11[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5V[B", "lk\"@u~ED!5V[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatList("lk\"@u~ED!5V[B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.lang.Float
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatList(" at ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", "org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000061 to java.lang.Float
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatArray("-)%zBZW*h~z>l9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5V[B", "lk\"@u~ED!5V[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Double> list0 = dataConfiguration0.getDoubleList("$3UM*sJ;0N.$h!+C");
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleList("lk\"@u~ED!5V[B", list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000057 to java.lang.Double
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("#^s");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(xMLConfiguration0, trackedNodeModel0);
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(subnodeConfiguration0, "#^s");
      DataConfiguration dataConfiguration0 = new DataConfiguration(patternSubtreeConfigurationWrapper0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleList("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[#^s]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("on{9+tcX'}fEEjC.", "on{9+tcX'}fEEjC.");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleList("on{9+tcX'}fEEjC.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.lang.Double
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleList("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleArray("", doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(overrideCombiner0);
      NodeSelector nodeSelector0 = new NodeSelector("oracle.jdbc.OCIErrHandle");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(dynamicCombinedConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(dynamicCombinedConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleArray("oracle.jdbc.OCIErrHandle");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@15[keys=[oracle.jdbc.OCIErrHandle]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleArray("7cmZ)x j/=_OcdUlg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000053 to java.lang.Double
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration.format.date", "org.apache.commons.configuration.format.date");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("org.apache.commons.configuration.format.date", (List<Date>) null, "kEVX=CE pu)O+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'V'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration(xMLConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("connection=");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, jSONConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", (List<Date>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@3a[keys=[connection=]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5[B", "lk\"@u~ED!5[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("lk\"@u~ED!5[B", (List<Date>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value lk\"@u~ED!5[B can't be converted to a Date
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      ArrayList<Date> arrayList0 = new ArrayList<Date>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList((String) null, (List<Date>) arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration.format.date", "\"tVd$~");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("org.apache.commons.configuration.format.date", (List<Date>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 't'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("defrag failed - out of memory - required: ", "Pd\"`5j+M1J}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("T", "T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'T'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("$S\"%lz,4Nphaoscla", "$S\"%lz,4Nphaoscla");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("$S\"%lz,4Nphaoscla");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value $S\"%lz,4Nphaoscla can't be converted to a Date
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("getLastOffset");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("");
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, dynamicCombinedConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray("", (Date[]) null, "/;Q]qA/y");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration((String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray((String) null, (Date[]) null, "]?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      Object object0 = new Object();
      yAMLConfiguration0.setProperty("!|d>Z\"up'54.Y", object0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray("!|d>Z\"up'54.Y", "~_~*4I:");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value java.lang.Object@14c139 can't be converted to a Date
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray("%#[Nb^6K/", "%#[Nb^6K/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty(":", ":");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray(":", "org.apache.commons.configuration.format.date");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'o'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("\"tVd$~", "\"tVd$~");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray("\"tVd$~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value \"tVd$~ can't be converted to a Date
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateArray("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("org.apache.commons.configuration2.DataConfiguration");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(yAMLConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(yAMLConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("' doesn't map to an existing object", "org.apache.commons.configuration2.DataConfiguration");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@12[keys=[org.apache.commons.configuration2.DataConfiguration]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '' cannot be converted to class java.util.Date. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("org.apache.commons.configuration.format.date", "org.apache.commons.configuration.format.date");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("i9@~Z,jnLen", "i9@~Z,jnLen");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("i9@~Z,jnLen", "i9@~Z,jnLen");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'i'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      Object object0 = new Object();
      yAMLConfiguration0.setProperty("H8A3[`8W9uavv", object0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("H8A3[`8W9uavv");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key 'H8A3[`8W9uavv' cannot be converted to class java.util.Date. Value is: 'java.lang.Object@7901b851'.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("A2IYN3 l]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("VCq$_v", "VCq$_v");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      LinkedList<Color> linkedList0 = new LinkedList<Color>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorList("VCq$_v", (List<Color>) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value VCq$_v can't be converted to a Color
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      HashMap<String, Date> hashMap0 = new HashMap<String, Date>();
      MapConfiguration mapConfiguration0 = new MapConfiguration(hashMap0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(mapConfiguration0);
      dataConfiguration0.setPropertyInternal("JQ[&Sq\"", mapConfiguration0);
      LinkedList<Color> linkedList0 = new LinkedList<Color>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorList("JQ[&Sq\"", (List<Color>) linkedList0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      LinkedList<Color> linkedList0 = new LinkedList<Color>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorList("", (List<Color>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorList("T");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value T can't be converted to a Color
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorList("Invalid arguments");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      InitialContext initialContext0 = new InitialContext();
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration(initialContext0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      Color[] colorArray0 = new Color[7];
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorArray((String) null, colorArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      MapConfiguration mapConfiguration0 = new MapConfiguration((Map<String, ?>) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(mapConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColorArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.MapConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Color color0 = Color.yellow;
      // Undeclared exception!
      try { 
        dataConfiguration0.getColor("", color0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '' cannot be converted to class java.awt.Color. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Color color0 = Color.magenta;
      // Undeclared exception!
      try { 
        dataConfiguration0.getColor("", color0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector("");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, xMLConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColor(",5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("[", "[");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColor("[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '[' cannot be converted to class java.awt.Color. Value is: '['.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      MapConfiguration mapConfiguration0 = new MapConfiguration((Properties) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(mapConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getColor("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.MapConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("0f(,??1}*xv~jEWM", "0f(,??1}*xv~jEWM");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("yyyy-MM-dd HH:mm:ss", "!iLj:");
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("0f(,??1}*xv~jEWM", list0, "0f(,??1}*xv~jEWM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'f'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector("gsQ");
      INIConfiguration iNIConfiguration0 = new INIConfiguration(xMLConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, iNIConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("gsQ", (List<Calendar>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[gsQ]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("!|d>Z\"up'54.Y", "\"tV$~");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Calendar> list0 = dataConfiguration0.getCalendarList("\"tV$~");
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("!|d>Z\"up'54.Y", list0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value \"tV$~ can't be converted to a Calendar
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(jSONConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("MSYoi_ \"7y1");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, jSONConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("MSYoi_ \"7y1", "gSv[x=)VG2T8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@3a[keys=[MSYoi_ \"7y1]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", "org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value org.apache.commons.configuration2.DataConfiguration$DataConversionHandler can't be converted to a Calendar
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("!", "!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("T", "T");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("T", "T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'T'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList(")cI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(yAMLConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, yAMLConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", "QjYTN,4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@22[keys=[org.apache.commons.configuration2.DataConfiguration$DataConversionHandler]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("l@u~ED!5V[B", "l@u~ED!5V[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarArray("l@u~ED!5V[B", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value l@u~ED!5V[B can't be converted to a Calendar
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarArray("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setPropertyInternal("c=n WTK28@8gIraiC", "c=n WTK28@8gIraiC");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarArray("c=n WTK28@8gIraiC", "c=n WTK28@8gIraiC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'c'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar((String) null, (Calendar) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key 'null' cannot be converted to class java.util.Calendar. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty(".ykz?/gTGHa!", ".ykz?/gTGHa!");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar(".ykz?/gTGHa!", (Calendar) null, ".ykz?/gTGHa!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'g'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("", calendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("MU");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(yAMLConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(yAMLConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("MU", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@12[keys=[MU]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '' cannot be converted to class java.util.Calendar. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("yyyy-MM-dd HH:mm:ss", "org.apache.commons.configuration.format.date");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("sB", "sB");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("sB", "sB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'B'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector("oracle.jdbc.proxy.oracle$1jdbc$1replay$1driver$1TxnReplayableBase$2oracle$1jdbc$1internal$1OracleRowId$$$Proxy");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, xMLConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[oracle.jdbc.proxy.oracle$1jdbc$1replay$1driver$1TxnReplayableBase$2oracle$1jdbc$1internal$1OracleRowId$$$Proxy]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("", "");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '' cannot be converted to class java.util.Calendar. Value is: ''.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("]Ps8ZP&*G+['");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("_6", "_6");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      ArrayList<Byte> arrayList0 = new ArrayList<Byte>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteList("_6", (List<Byte>) arrayList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.lang.Byte
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteList("", (List<Byte>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(abstractYAMLBasedConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector(")~2O<K{/B<~ru");
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(xMLConfiguration0, ")~2O<K{/B<~ru");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, patternSubtreeConfigurationWrapper0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteList(")~2O<K{/B<~ru");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@22[keys=[)~2O<K{/B<~ru]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteList("7cmZ)x j/=_OcdUlg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.lang.Byte
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteList("handler.getResults()");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteArray("7cmZ)x j/=_OcdUlg", byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000053 to java.lang.Byte
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteArray((String) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Object object0 = new Object();
      dataConfiguration0.setPropertyInternal("", object0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.Object@0000000048 to java.lang.Byte
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("_6", "_6");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanList("_6", (List<Boolean>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value _6 can't be converted to a Boolean object
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("isolation-level");
      NodeSelector nodeSelector0 = new NodeSelector("");
      SubnodeConfiguration subnodeConfiguration1 = subnodeConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, iNIConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration1);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanList("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@34[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("' doesn't map to an existing object", "' doesn't map to an existing object");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanList("' doesn't map to an existing object");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value ' doesn't map to an existing object can't be converted to a Boolean object
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("yyyy-MM-dd HH:mm:ss");
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration(xMLConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, yAMLConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      boolean[] booleanArray0 = new boolean[8];
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanArray("yyyy-MM-dd HH:mm:ss", booleanArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[yyyy-MM-dd HH:mm:ss]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanArray("yyyy-MM-dd HH:mm:ss", booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(abstractYAMLBasedConfiguration0);
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector(")~2O<K{/B<~ru");
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(xMLConfiguration0, ")~2O<K{/B<~ru");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, patternSubtreeConfigurationWrapper0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanArray("G/LfVG+TDd=],AI");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@22[keys=[)~2O<K{/B<~ru]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanArray("7cmZ)x j/=_OcdUlg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The value 7cmZ)x j/=_OcdUlg can't be converted to a Boolean object
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanArray("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      yAMLConfiguration0.setProperty((String) null, "._-xbi*Yo8}B:{R:");
      Vector<BigInteger> vector0 = new Vector<BigInteger>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerList("", (List<BigInteger>) vector0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000052 to java.math.BigInteger
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Vector<BigInteger> vector0 = new Vector<BigInteger>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerList("_eYF!DnHnZk", (List<BigInteger>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration(iNIConfiguration0);
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(jSONConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("Comma separated list of types to disable binary transfer. Either OID numbers or names. Overrides values in the driver default set and values set with binaryTransferEnable.");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, jSONConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerList("3x_T3mrQ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@48[keys=[Comma separated list of types to disable binary transfer. Either OID numbers or names. Overrides values in the driver default set and values set with binaryTransferEnable.]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("lk\"@u~ED!5[B", "lk\"@u~ED!5[B");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerList("lk\"@u~ED!5[B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.math.BigInteger
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerList("org.postgresql.util.LruCache");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      BigInteger[] bigIntegerArray0 = new BigInteger[0];
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerArray("", bigIntegerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("M{l~ )<");
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration(iNIConfiguration0);
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector("_WAKy3W^bS*");
      SubnodeConfiguration subnodeConfiguration1 = subnodeConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, iNIConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration1);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerArray("owjU?J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@44[keys=[_WAKy3W^bS*]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("2", "2");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerArray("2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.math.BigInteger
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration((String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigIntegerArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = xMLConfiguration0.getSubConfigurationNodeSelector((String) null);
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(jSONConfiguration0, trackedNodeModel0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      ArrayList<BigDecimal> arrayList0 = new ArrayList<BigDecimal>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalList((String) null, (List<BigDecimal>) arrayList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[null]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.addPropertyDirect("KUaChU", "KUaChU");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalList("KUaChU");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000047 to java.math.BigDecimal
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalList((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, iNIConfiguration0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[org.apache.commons.configuration2.DataConfiguration$DataConversionHandler]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("u{s`;-\" Vb=~S", "u{s`;-\" Vb=~S");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalArray("u{s`;-\" Vb=~S");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not convert java.lang.String@0000000055 to java.math.BigDecimal
         //
         verifyException("org.apache.commons.configuration2.convert.PropertyConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalArray("Nx%OQC<Vzd[7$Ze5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.containsKeyInternal("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.containsKeyInternal((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration((String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.addPropertyDirect("org.apache.commons.configuration2.DataConfiguration$1", "e>P-m&`1=P2");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // This operation is not supported
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.addPropertyDirect((String) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key for add operation must be defined!
         //
         verifyException("org.apache.commons.configuration2.tree.DefaultExpressionEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      ArrayList<Date> arrayList0 = new ArrayList<Date>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getDateList("", (List<Date>) arrayList0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration((Context) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(jNDIConfiguration0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1279), (-1279), (-1279), 1, 1605, 39);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("lo", (Calendar) mockGregorianCalendar0, "lo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.JNDIConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<BigInteger> list0 = dataConfiguration0.getBigIntegerList("Lgf!0L:|#/`", (List<BigInteger>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntArray("yyyy-MM-dd HH:mm:ss", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar[] calendarArray0 = new Calendar[0];
      Calendar[] calendarArray1 = dataConfiguration0.getCalendarArray("l>?|7&;/~(!DySv4", calendarArray0);
      assertEquals(0, calendarArray1.length);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Stack<Boolean> stack0 = new Stack<Boolean>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanList("vk@j/f{0/Nq", (List<Boolean>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = new Date[0];
      Date[] dateArray1 = dataConfiguration0.getDateArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler", dateArray0, "org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      assertEquals(0, dateArray1.length);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      byte[] byteArray0 = dataConfiguration0.getByteArray("", (byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale[] localeArray0 = new Locale[0];
      Locale[] localeArray1 = dataConfiguration0.getLocaleArray("", localeArray0);
      assertEquals(0, localeArray1.length);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JNDIConfiguration jNDIConfiguration0 = new JNDIConfiguration("org.apache.commons.configuration2.DataConfiguration$1");
      SubsetConfiguration subsetConfiguration0 = new SubsetConfiguration(jNDIConfiguration0, "yyyy-MM-dd HH:mm:ss", (String) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(subsetConfiguration0);
      URL[] uRLArray0 = new URL[0];
      URL[] uRLArray1 = dataConfiguration0.getURLArray("", uRLArray0);
      assertEquals(0, uRLArray1.length);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      ArrayList<Byte> arrayList0 = new ArrayList<Byte>();
      List<Byte> list0 = dataConfiguration0.getByteList("_6", (List<Byte>) arrayList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(combinedConfiguration0);
      Vector<Color> vector0 = new Vector<Color>();
      List<Color> list0 = dataConfiguration0.getColorList("&m-Q`:fH8d,+7$CJ", (List<Color>) vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      long[] longArray0 = dataConfiguration0.getLongArray("", (long[]) null);
      assertNull(longArray0);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date date0 = dataConfiguration0.getDate("org.apache.commons.configuration2.DataConfiguration$1", (Date) null, "~!B<=*O51k}XN66ZM");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Vector<Long> vector0 = new Vector<Long>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongList("QM", (List<Long>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(systemConfiguration0);
      Stack<Double> stack0 = new Stack<Double>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getDoubleList((String) null, (List<Double>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(jSONConfiguration0);
      Calendar[] calendarArray0 = dataConfiguration0.getCalendarArray((String) null, (Calendar[]) null, "");
      assertNull(calendarArray0);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Vector<Locale> vector0 = new Vector<Locale>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocaleList((String) null, (List<Locale>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI[] uRIArray0 = new URI[0];
      URI[] uRIArray1 = dataConfiguration0.getURIArray("EX&,}1fr!j]#=g7cO", uRIArray0);
      assertSame(uRIArray1, uRIArray0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      DataConfiguration dataConfiguration1 = new DataConfiguration(combinedConfiguration0);
      List<URL> list0 = dataConfiguration1.getURLList("p8^3g&u:;`]tlNOd");
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLList("", list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Color[] colorArray0 = dataConfiguration0.getColorArray("", (Color[]) null);
      assertNull(colorArray0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      UnionCombiner unionCombiner0 = new UnionCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(unionCombiner0);
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = dataConfiguration0.getDoubleArray("=oJ-hi4@", doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Stack<BigDecimal> stack0 = new Stack<BigDecimal>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getBigDecimalList("4`hnvE9y*qo5L", (List<BigDecimal>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      DatabaseConfiguration databaseConfiguration0 = new DatabaseConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(databaseConfiguration0);
      Stack<URI> stack0 = new Stack<URI>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getURIList("org.hsqldb.lib.IntValueHashMap", (List<URI>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DatabaseConfiguration$JdbcOperation", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getIntegerList((String) null, (List<Integer>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = dataConfiguration0.getDateArray("Wj\"%Y7N}$nN}l2,hVb", (Date[]) null);
      assertNull(dateArray0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Vector<Calendar> vector0 = new Vector<Calendar>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList(", value: ", (List<Calendar>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Vector<Float> vector0 = new Vector<Float>();
      // Undeclared exception!
      try { 
        dataConfiguration0.getFloatList("", (List<Float>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(dynamicCombinedConfiguration0);
      BigDecimal[] bigDecimalArray0 = new BigDecimal[0];
      BigDecimal[] bigDecimalArray1 = dataConfiguration0.getBigDecimalArray("", bigDecimalArray0);
      assertSame(bigDecimalArray1, bigDecimalArray0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      BigInteger[] bigIntegerArray0 = dataConfiguration0.getBigIntegerArray("=A^", (BigInteger[]) null);
      assertNull(bigIntegerArray0);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarList("", (List<Calendar>) null, "w>WF7V]D?5~ZPK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      float[] floatArray0 = dataConfiguration0.getFloatArray((String) null, (float[]) null);
      assertNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("<", "<");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar calendar0 = dataConfiguration0.getCalendar("<", "<");
      Calendar calendar1 = dataConfiguration0.getCalendar("<", calendar0, "<");
      assertTrue(calendar1.isLenient());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar calendar0 = dataConfiguration0.getCalendar("", "");
      assertNull(calendar0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      dataConfiguration0.setThrowExceptionOnMissing(true);
      // Undeclared exception!
      try { 
        dataConfiguration0.getDate("", "org.apache.commons.configuration.format.date");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // '' doesn't map to an existing object
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("2", "2");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date date0 = dataConfiguration0.getDate("2", "2");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      dataConfiguration0.addPropertyDirect("dnc^", "dnc^");
      assertFalse(dataConfiguration0.isDetailEvents());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.addPropertyDirect("yyyy-MM-dd HH:mm:ss", "org.apache.commons.configuration2.DataConfiguration$1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date date0 = dataConfiguration0.getDate("H8A3[`8W9uavv");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList("$S\"%lz,4Nphaoscla");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration((Configuration) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getKeysInternal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.CompositeConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList("lk\"@u~ED!5[B", (List<Date>) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      short[] shortArray0 = dataConfiguration0.getShortArray("LY\"vn");
      assertEquals(0, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getBooleanList("{!!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URL[] uRLArray0 = dataConfiguration0.getURLArray("7cmZ)x j/=_OcdUlg");
      assertEquals(0, uRLArray0.length);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.addPropertyInternal("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key for add operation must be defined!
         //
         verifyException("org.apache.commons.configuration2.tree.DefaultExpressionEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendarArray("hu8p8lb2;,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI uRI0 = dataConfiguration0.getURI(".ykz?/gTGHa!");
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar[] calendarArray0 = dataConfiguration0.getCalendarArray("l@u~ED!5V[B", (String) null);
      assertEquals(0, calendarArray0.length);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("org.apache.commons.configuration.format.date", "org.apache.commons.configuration.format.date");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("org.apache.commons.configuration.format.date");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'o'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URL uRL0 = dataConfiguration0.getURL("O@;=`~oO");
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(iNIConfiguration0);
      Color color0 = new Color(1, true);
      Color color1 = dataConfiguration0.getColor(":n$1CEHJQaiUs", color0);
      assertEquals(0, color1.getAlpha());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<BigDecimal> list0 = dataConfiguration0.getBigDecimalList("KUaChU");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = dataConfiguration0.getDateArray("\"tVd$~");
      assertEquals(0, dateArray0.length);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<BigInteger> list0 = dataConfiguration0.getBigIntegerList("lk\"@u~ED!5[B");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Date> list0 = dataConfiguration0.getDateList("_6", "_6");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean[] booleanArray0 = dataConfiguration0.getBooleanArray("", (boolean[]) null);
      assertNull(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean[] booleanArray0 = dataConfiguration0.getBooleanArray("7cmZ)x j/=_OcdUlg");
      assertNull(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<URI> list0 = dataConfiguration0.getURIList("Shard key argument cannot be null");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      BigDecimal[] bigDecimalArray0 = dataConfiguration0.getBigDecimalArray("u{s`;-\" Vb=~S");
      assertEquals(0, bigDecimalArray0.length);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      Color color0 = dataConfiguration0.getColor("^=EDKvTl;d:.C");
      assertNull(color0);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Locale locale0 = new Locale("oP[,M");
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocale((String) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI[] uRIArray0 = dataConfiguration0.getURIArray("T");
      assertEquals(0, uRIArray0.length);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      int[] intArray0 = dataConfiguration0.getIntArray("M");
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = dataConfiguration0.getURL((String) null, uRL0);
      assertNull(uRL1.getUserInfo());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Byte> list0 = dataConfiguration0.getByteList("7cmZ)x j/=_OcdUlg");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      URI uRI0 = dataConfiguration0.getURI("7cmZ)x j/=_OcdUlg", (URI) null);
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Date[] dateArray0 = dataConfiguration0.getDateArray("!|d>Z\"up'54.Y", "~_~*4I:");
      assertEquals(0, dateArray0.length);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLongList("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Integer> list0 = dataConfiguration0.getIntegerList("\"tVd$~");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getURLList("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      long[] longArray0 = dataConfiguration0.getLongArray("zw");
      assertArrayEquals(new long[] {}, longArray0);
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      float[] floatArray0 = dataConfiguration0.getFloatArray("org.apache.commons.configuration2.DataConfiguration$DataConversionHandler");
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(xMLConfiguration0);
      List<Float> list0 = dataConfiguration0.getFloatList((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      List<Color> list0 = dataConfiguration0.getColorList("T");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      short[] shortArray0 = new short[0];
      short[] shortArray1 = dataConfiguration0.getShortArray("0YR5XsGY4", shortArray0);
      assertEquals(0, shortArray1.length);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      double[] doubleArray0 = dataConfiguration0.getDoubleArray("7cmZ)x j/=_OcdUlg");
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getLocale("exf7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      Configuration configuration0 = dataConfiguration0.getConfiguration();
      assertNull(configuration0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      BigInteger[] bigIntegerArray0 = dataConfiguration0.getBigIntegerArray("2");
      assertEquals(0, bigIntegerArray0.length);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      DataConfiguration dataConfiguration0 = new DataConfiguration((Configuration) null);
      // Undeclared exception!
      try { 
        dataConfiguration0.getByteArray("T{!s`9z*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.DataConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Locale[] localeArray0 = dataConfiguration0.getLocaleArray("lk\"@u~ED!5p[B");
      assertEquals(0, localeArray0.length);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      boolean boolean0 = dataConfiguration0.isEmptyInternal();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Stack<Short> stack0 = new Stack<Short>();
      List<Short> list0 = dataConfiguration0.getShortList("org.apache.commons.configuration.format.date", (List<Short>) stack0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      MockDate mockDate0 = new MockDate((-360L));
      Date date0 = dataConfiguration0.getDate("yyyy-MM-dd HH:mm:ss", (Date) mockDate0);
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      Calendar calendar0 = dataConfiguration0.getCalendar(".ykz?/gTGHa!");
      assertNull(calendar0);
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setProperty("7cmZ)x j/=_OcdUlg", "7cmZ)x j/=_OcdUlg");
      DataConfiguration dataConfiguration0 = new DataConfiguration(yAMLConfiguration0);
      // Undeclared exception!
      try { 
        dataConfiguration0.getCalendar("7cmZ)x j/=_OcdUlg", (Calendar) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key '7cmZ)x j/=_OcdUlg' cannot be converted to class java.util.Calendar. Value is: '7cmZ)x j/=_OcdUlg'.
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }
}
