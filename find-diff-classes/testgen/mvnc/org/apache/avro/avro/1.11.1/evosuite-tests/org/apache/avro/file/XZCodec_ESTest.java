/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 20:58:25 GMT 2024
 */

package org.apache.avro.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.nio.ByteBuffer;
import org.apache.avro.file.XZCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XZCodec_ESTest extends XZCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      XZCodec xZCodec1 = new XZCodec(1693);
      boolean boolean0 = xZCodec0.equals(xZCodec1);
      assertFalse(boolean0);
      assertFalse(xZCodec1.equals((Object)xZCodec0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(1068);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1068);
      try { 
        xZCodec0.decompress(byteBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Input is not in the XZ format
         //
         verifyException("org.tukaani.xz.common.DecoderUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      XZCodec xZCodec0 = new XZCodec(0);
      // Undeclared exception!
      try { 
        xZCodec0.decompress(byteBuffer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(9);
      // Undeclared exception!
      try { 
        xZCodec0.decompress((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.avro.file.XZCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      try { 
        xZCodec0.decompress(byteBuffer0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(2597);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(6);
      try { 
        xZCodec0.compress(byteBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported preset: 2597
         //
         verifyException("org.tukaani.xz.LZMA2Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(7);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(7);
      ByteBuffer byteBuffer1 = xZCodec0.compress(byteBuffer0);
      // Undeclared exception!
      xZCodec0.compress(byteBuffer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(6);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2096879);
      // Undeclared exception!
      xZCodec0.compress(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(6);
      // Undeclared exception!
      try { 
        xZCodec0.compress(byteBuffer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      XZCodec xZCodec1 = new XZCodec(0);
      boolean boolean0 = xZCodec0.equals(xZCodec1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      XZCodec xZCodec1 = new XZCodec(6);
      boolean boolean0 = xZCodec1.equals(xZCodec0);
      assertFalse(boolean0);
      assertFalse(xZCodec0.equals((Object)xZCodec1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(8192);
      boolean boolean0 = xZCodec0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      boolean boolean0 = xZCodec0.equals(xZCodec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      Object object0 = new Object();
      boolean boolean0 = xZCodec0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(4);
      // Undeclared exception!
      try { 
        xZCodec0.compress((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.avro.file.XZCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      ByteBuffer byteBuffer1 = xZCodec0.compress(byteBuffer0);
      ByteBuffer byteBuffer2 = xZCodec0.decompress(byteBuffer1);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=8192]", byteBuffer2.toString());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=56 cap=8192]", byteBuffer1.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XZCodec.Option xZCodec_Option0 = new XZCodec.Option(1693);
      xZCodec_Option0.createInstance();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      String string0 = xZCodec0.toString();
      assertEquals("xz-0", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      String string0 = xZCodec0.getName();
      assertEquals("xz", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XZCodec xZCodec0 = new XZCodec(0);
      xZCodec0.hashCode();
  }
}
