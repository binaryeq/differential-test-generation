/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 21:04:51 GMT 2024
 */

package org.apache.curator.framework.recipes.locks;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class InterProcessSemaphoreV2_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/org/apache/curator/curator-recipes/5.6.0"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InterProcessSemaphoreV2_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.curator.shaded.com.google.common.collect.ImmutableEnumSet",
      "org.apache.curator.shaded.com.google.common.collect.Maps$EntryTransformer",
      "org.apache.curator.shaded.com.google.common.collect.ImmutableEnumMap",
      "org.apache.curator.framework.recipes.locks.Lease",
      "org.apache.curator.shaded.com.google.common.collect.Sets",
      "org.apache.zookeeper.KeeperException$NoNodeException",
      "org.apache.curator.shaded.com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "org.apache.curator.shaded.com.google.common.collect.Maps",
      "org.apache.curator.shaded.com.google.common.collect.Sets$SetView",
      "org.apache.curator.shaded.com.google.common.collect.ImmutableMap",
      "org.apache.curator.framework.recipes.shared.SharedCountReader",
      "org.apache.curator.framework.listen.Listenable",
      "org.apache.curator.shaded.com.google.common.collect.CollectPreconditions",
      "org.apache.curator.shaded.com.google.common.collect.ImmutableSet",
      "org.apache.curator.shaded.com.google.common.collect.SortedMapDifference",
      "org.apache.curator.shaded.com.google.common.base.Function",
      "org.apache.curator.shaded.com.google.common.collect.BiMap",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2$1",
      "org.apache.zookeeper.KeeperException",
      "org.apache.zookeeper.Watcher",
      "org.apache.curator.shaded.com.google.common.collect.Maps$BiMapConverter",
      "org.apache.curator.shaded.com.google.common.collect.UnmodifiableIterator",
      "org.apache.curator.shaded.com.google.common.collect.Maps$8",
      "org.apache.curator.shaded.com.google.common.collect.MapDifference",
      "org.apache.curator.shaded.com.google.common.collect.ImmutableCollection",
      "org.apache.curator.framework.CuratorFramework",
      "org.apache.curator.shaded.com.google.common.collect.Sets$2",
      "org.apache.curator.shaded.com.google.common.collect.Sets$1",
      "org.apache.curator.shaded.com.google.common.base.Converter",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2",
      "org.apache.curator.shaded.com.google.common.collect.Sets$4",
      "org.apache.curator.shaded.com.google.common.collect.Sets$3"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InterProcessSemaphoreV2_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.curator.shaded.com.google.common.collect.Sets",
      "org.apache.curator.shaded.com.google.common.collect.Maps",
      "org.apache.curator.shaded.com.google.common.collect.CollectPreconditions",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2$1",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2$2",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2$3",
      "org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2$InternalAcquireResult",
      "org.apache.zookeeper.CreateMode",
      "org.apache.curator.shaded.com.google.common.io.Closeables",
      "org.apache.curator.utils.CloseableUtils",
      "org.apache.curator.RetryLoop",
      "org.apache.curator.RetryLoopImpl",
      "org.apache.curator.framework.imps.CuratorFrameworkState",
      "org.apache.curator.framework.imps.CuratorFrameworkImpl",
      "org.apache.curator.framework.CuratorFrameworkFactory$Builder",
      "org.apache.curator.framework.imps.CuratorFrameworkImpl$2",
      "org.apache.curator.CuratorZookeeperClient",
      "org.apache.curator.framework.imps.CuratorFrameworkImpl$1",
      "org.apache.curator.utils.DefaultTracerDriver",
      "org.apache.curator.shaded.com.google.common.base.Preconditions",
      "org.apache.curator.framework.recipes.shared.SharedCount",
      "org.apache.curator.framework.recipes.shared.SharedValue",
      "org.apache.curator.framework.listen.StandardListenerManager",
      "org.apache.curator.framework.listen.MappingListenerManager",
      "org.apache.curator.framework.recipes.shared.SharedValue$State",
      "org.apache.curator.framework.recipes.shared.SharedValue$1",
      "org.apache.curator.framework.recipes.shared.SharedValue$2",
      "org.apache.curator.ensemble.fixed.FixedEnsembleProvider",
      "org.apache.curator.shaded.com.google.common.base.Strings",
      "org.apache.curator.shaded.com.google.common.base.Platform$JdkPatternCompiler",
      "org.apache.curator.shaded.com.google.common.base.Platform",
      "org.apache.curator.SessionFailedRetryPolicy",
      "org.apache.zookeeper.common.ZKConfig",
      "org.apache.zookeeper.client.ZKClientConfig",
      "org.apache.zookeeper.common.X509Util",
      "org.apache.zookeeper.common.ClientX509Util",
      "org.apache.zookeeper.common.QuorumX509Util",
      "org.apache.curator.utils.DefaultZookeeperFactory",
      "org.apache.curator.ConnectionState",
      "org.apache.curator.HandleHolder",
      "org.apache.curator.framework.imps.StandardInternalConnectionHandler",
      "org.apache.curator.framework.imps.NamespaceImpl",
      "org.apache.curator.utils.ThreadUtils",
      "org.apache.curator.utils.ThreadUtils$1",
      "org.apache.curator.shaded.com.google.common.util.concurrent.ThreadFactoryBuilder",
      "org.apache.curator.shaded.com.google.common.util.concurrent.ThreadFactoryBuilder$1",
      "org.apache.curator.framework.state.ConnectionStateManager",
      "org.apache.curator.framework.state.ConnectionStateManager$State",
      "org.apache.zookeeper.server.util.VerifyingFileFactory$Builder",
      "org.apache.zookeeper.server.util.VerifyingFileFactory",
      "org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException",
      "org.apache.curator.utils.ConfigurableZookeeperFactory"
    );
  }
}
