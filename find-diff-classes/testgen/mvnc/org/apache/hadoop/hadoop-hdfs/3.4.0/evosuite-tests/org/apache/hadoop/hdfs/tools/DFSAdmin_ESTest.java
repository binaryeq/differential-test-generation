/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 00:18:37 GMT 2024
 */

package org.apache.hadoop.hdfs.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.PrintStream;
import java.util.List;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.ReconfigurationTaskStatus;
import org.apache.hadoop.hdfs.tools.DFSAdmin;
import org.apache.hadoop.thirdparty.protobuf.ByteString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DFSAdmin_ESTest extends DFSAdmin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      dFSAdmin0.setSafeMode(stringArray0, 1);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0);
      int int0 = dFSAdmin0.startReconfigurationUtil("", (String) null, mockPrintStream0, mockPrintStream0);
      assertEquals(45, byteArrayOutputStream0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      ByteString.Output byteString_Output0 = ByteString.newOutput();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteString_Output0);
      int int0 = dFSAdmin0.startReconfigurationDispatch(";0<lN9\"", "[aG", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.hadoop.ipc.RemoteException");
      int int0 = dFSAdmin0.startReconfiguration("org.apache.hadoop.ipc.RemoteException", " UGI: ", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[7];
      stringArray0[5] = "datanode";
      int int0 = dFSAdmin0.setBalancerBandwidth(stringArray0, 5);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Permission denied: user=%s, path=\"%s\":%s:%s:%s%s");
      ReconfigurationTaskStatus reconfigurationTaskStatus0 = dFSAdmin0.getReconfigurationStatusDispatch("org.bouncycastle.asn1.DERVideotexString", "a85wypj", mockPrintStream0, mockPrintStream0);
      assertNull(reconfigurationTaskStatus0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      File file0 = MockFile.createTempFile("-deleteBlockPool", "org.eclipse.jetty.io.ssl.SslConnection");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      dFSAdmin0.getReconfigurationStatus("printTopology", "-deleteBlockPool", mockPrintStream0, mockPrintStream0);
      assertEquals(108L, file0.length());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.hadoop.security.UserGroupInformation$TestingGroups");
      List<String> list0 = dFSAdmin0.getReconfigurablePropertiesDispatch("", (String) null, mockPrintStream0, mockPrintStream0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.upgrade("finalize");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfigurationUtil("+8UDP", "+8UDP", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("start", (String) null, (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("namenode", "|(7z~^~-|{c", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: |(7z~^~-|{c
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setSafeMode((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.setSafeMode(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid size prefix 'd' in '-dead'. Allowed prefixes are k, m, g, t, p, e(case insensitive)
         //
         verifyException("org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, (-1342));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1342
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.saveNamespace(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.saveNamespace(dFSAdmin0.DFS_REPORT_ARGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.run((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.rollEdits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.restoreFailedStorage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.report(dFSAdmin0.DFS_REPORT_ARGS, (-1952257859));
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.report(dFSAdmin0.DFS_REPORT_ARGS, (-1952257821));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshUserToGroupsMappings();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshUserToGroupsMappings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshSuperUserGroupsConfiguration();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshSuperUserGroupsConfiguration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshServiceAcl();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshServiceAcl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshNodes();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshCallQueue();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshCallQueue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshCallQueue();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig((String[]) null, (-3815));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig(dFSAdmin0.DFS_REPORT_ARGS, (-3906));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3906
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.provisionSnapshotTrash(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[1] = ", currentKey: ";
      // Undeclared exception!
      try { 
        dFSAdmin0.provisionSnapshotTrash(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.net.URISyntaxException: Relative path in absolute URI: , currentKey:%20
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.provisionSnapshotTrash(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.printTopology();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.printTopology();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      Configuration configuration0 = new Configuration(false);
      dFSAdmin0.setConf(configuration0);
      // Undeclared exception!
      dFSAdmin0.printTopology();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.metaSave(dFSAdmin0.DFS_REPORT_ARGS, 1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.metaSave((String[]) null, (-1101504560));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.metaSave(dFSAdmin0.DFS_REPORT_ARGS, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[4];
      try { 
        DFSAdmin.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.GnuParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getUpgradeStatus();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getUpgradeStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusDispatch("X", "X", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatus("-refresh", "-refresh", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurablePropertiesDispatch("0Fb#=nu4O?g'|:", "B#yesPerChecksm", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurableProperties((String) null, (String) null, (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getDFS();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getDFS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth((String[]) null, (-54));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      dFSAdmin0.genericRefresh(stringArray0, 5);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh((String[]) null, (-1982816351));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh(dFSAdmin0.DFS_REPORT_ARGS, 1289);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1289
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.finalizeUpgrade();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.finalizeUpgrade();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.finalizeUpgrade();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.fetchImage(dFSAdmin0.DFS_REPORT_ARGS, 3030);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.disallowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.allowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-triggerBlockReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-triggerBlockReport";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.run(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-getVolumeReport";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-refresh";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-upgrade";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-upgrade";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-report";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-allowsnapshot";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-triggerBlockReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-getDatanodeInfo";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-setBalancerBandwidth";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-getVolumeReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-refresh";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-reconfig";
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-refreshNodes";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-rollEdits";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-disallowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-report";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("Wu");
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.getReconfigurableProperties(")Z", "", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(721);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      dFSAdmin0.getReconfigurationStatusUtil("aM7DaTyXIL`-nJD", "aM7DaTyXIL`-nJD", mockPrintStream0, mockPrintStream0);
      assertEquals("Node type aM7DaTyXIL`-nJD does not support reconfiguration.\nReconfiguring status for node [aM7DaTyXIL`-nJD]: ", byteArrayOutputStream0.toString());
      assertEquals(109, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusUtil("&,0pFyw:i)C;!", "namenode", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.startReconfiguration("vETVB", "-allowsnapshot");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.startReconfiguration("moeCC", "livenodes");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.reconfig(dFSAdmin0.DFS_REPORT_ARGS, 2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.upgrade("finalize");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.upgrade("query");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.upgrade("namenode");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.listOpenFiles(dFSAdmin0.DFS_REPORT_ARGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.listOpenFiles((String[]) null);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.restoreFailedStorage("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "dfs.corruptfilesreturned.max";
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: dfs.corruptfilesreturned.max
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Refresh nodes failed for ";
      stringArray0[2] = "|FZ*`4QT):\"}8";
      stringArray0[3] = "r2p";
      stringArray0[4] = "-finalizeUpgrade: Finalize upgrade of HDFS.\n\t\tDatanodes delete their previous version working directories,\n\t\tfollowed by Namenode doing the same.\n\t\tThis completes the upgrade process.\n";
      stringArray0[5] = "Can't understand arguments: ";
      stringArray0[6] = ";";
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      dFSAdmin0.setSafeMode(dFSAdmin0.DFS_REPORT_ARGS, (-1439660580));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[5];
      dFSAdmin0.setSafeMode(stringArray0, 4);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: -dead
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.provisionSnapshotTrash(dFSAdmin0.DFS_REPORT_ARGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.disallowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.rollEdits();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("namenode", "namenode");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: namenode
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.fetchImage(dFSAdmin0.DFS_REPORT_ARGS, (-131072));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshUserToGroupsMappings();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      DFSAdmin.main(dFSAdmin0.DFS_REPORT_ARGS);
  }
}
