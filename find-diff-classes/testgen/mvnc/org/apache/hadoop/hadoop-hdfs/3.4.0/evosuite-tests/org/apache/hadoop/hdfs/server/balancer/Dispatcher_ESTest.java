/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 00:04:09 GMT 2024
 */

package org.apache.hadoop.hdfs.server.balancer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.codahale.metrics.MetricRegistry;
import java.time.ZoneId;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.concurrent.SynchronousQueue;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.StorageType;
import org.apache.hadoop.hdfs.protocol.Block;
import org.apache.hadoop.hdfs.protocol.DatanodeInfo;
import org.apache.hadoop.hdfs.server.balancer.Dispatcher;
import org.apache.hadoop.hdfs.server.balancer.NameNodeConnector;
import org.eclipse.jetty.util.AttributesMap;
import org.eclipse.jetty.util.InetAddressSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dispatcher_ESTest extends Dispatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, set0, set0, 239L, 0, 9870, 9870, 239L, 0, (-253), 0, 0, 33554432L, configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      AttributesMap attributesMap0 = new AttributesMap();
      Set<String> set0 = attributesMap0.getAttributeNameSet();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, treeSet0, set0, (-1886L), 461845907, 11, 1, (-2514), configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Block block0 = new Block();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)87;
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (byte)87, (byte)87);
      dispatcher_DBlockStriped0.addLocation((Dispatcher.DDatanode.StorageGroup) null);
      long long0 = dispatcher_DBlockStriped0.getNumBytes((Dispatcher.DDatanode.StorageGroup) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(1939);
      int int0 = dispatcher_Allocator0.allocate(1939);
      assertEquals(1939, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped((Block) null, byteArray0, (short) (-151), 12416);
      Dispatcher.DBlock dispatcher_DBlock0 = dispatcher_DBlockStriped0.getInternalBlock((Dispatcher.DDatanode.StorageGroup) null);
      assertNull(dispatcher_DBlock0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup>();
      // Undeclared exception!
      try { 
        dispatcher_StorageGroupMap0.put((Dispatcher.DDatanode.StorageGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$StorageGroupMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SynchronousQueue<String> synchronousQueue0 = new SynchronousQueue<String>();
      TreeSet<String> treeSet0 = new TreeSet<String>(synchronousQueue0);
      Configuration configuration0 = new Configuration();
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, treeSet0, treeSet0, (-663L), 4112, 3588, 4112, 4112, 1000000000000000L, 4112, 4112, (-663L), 3588, configuration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.hadoop.conf.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, set0, set0, (-3719), 239, (-2649), 2, 893, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator((-1));
      int int0 = dispatcher_Allocator0.allocate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      boolean boolean0 = Dispatcher.Util.isIncluded(linkedHashSet0, (DatanodeInfo) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("");
      // Undeclared exception!
      try { 
        Dispatcher.Util.isIncluded(linkedHashSet0, (DatanodeInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<Dispatcher.Source> stack0 = new Stack<Dispatcher.Source>();
      stack0.add((Dispatcher.Source) null);
      // Undeclared exception!
      try { 
        Dispatcher.checkForSuccess(stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayDeque<Dispatcher.DDatanode.StorageGroup> arrayDeque0 = new ArrayDeque<Dispatcher.DDatanode.StorageGroup>();
      boolean boolean0 = Dispatcher.checkForSuccess(arrayDeque0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Stack<Dispatcher.Source> stack0 = new Stack<Dispatcher.Source>();
      stack0.add((Dispatcher.Source) null);
      Hashtable<Long, Set<DatanodeInfo>> hashtable0 = new Hashtable<Long, Set<DatanodeInfo>>();
      // Undeclared exception!
      try { 
        Dispatcher.checkForBlockPinningFailures(hashtable0, stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SynchronousQueue<Dispatcher.Source> synchronousQueue0 = new SynchronousQueue<Dispatcher.Source>();
      HashMap<Long, Set<DatanodeInfo>> hashMap0 = new HashMap<Long, Set<DatanodeInfo>>();
      Dispatcher.checkForBlockPinningFailures(hashMap0, synchronousQueue0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Stack<Dispatcher.Source> stack0 = new Stack<Dispatcher.Source>();
      stack0.add((Dispatcher.Source) null);
      // Undeclared exception!
      try { 
        Dispatcher.waitForMoveCompletion(stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SynchronousQueue<Dispatcher.Source> synchronousQueue0 = new SynchronousQueue<Dispatcher.Source>();
      boolean boolean0 = Dispatcher.waitForMoveCompletion(synchronousQueue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MetricRegistry metricRegistry0 = new MetricRegistry();
      SortedSet<String> sortedSet0 = metricRegistry0.getNames();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, sortedSet0, sortedSet0, 0L, 128, 0, 128, (-1147), configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, set0, set0, (-1290L), (-2147447853), (-2147447853), 244, (-1283L), (-1283L), (-2147447853), (-2135748762), (-1462L), 1935L, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped((Block) null, byteArray0, (byte)0, (-2145981909));
      Stack<Integer> stack0 = new Stack<Integer>();
      dispatcher_DBlockStriped0.adjustIndices(stack0);
      assertTrue(stack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      Integer integer0 = new Integer(8);
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.add(integer0);
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped((Block) null, byteArray0, (short) (-1984), 8);
      dispatcher_DBlockStriped0.adjustIndices(stack0);
      assertFalse(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped((Block) null, byteArray0, (short) (-151), (short) (-151));
      long long0 = dispatcher_DBlockStriped0.getNumBytes((Dispatcher.DDatanode.StorageGroup) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(60);
      int int0 = dispatcher_Allocator0.allocate(140);
      assertEquals(60, int0);
      
      int int1 = dispatcher_Allocator0.allocate();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Block block0 = new Block(201);
      Dispatcher.DBlock dispatcher_DBlock0 = new Dispatcher.DBlock(block0);
      long long0 = dispatcher_DBlock0.getNumBytes((Dispatcher.DDatanode.StorageGroup) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Dispatcher.Task dispatcher_Task0 = new Dispatcher.Task((Dispatcher.DDatanode.StorageGroup) null, 0L);
      long long0 = dispatcher_Task0.getSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Dispatcher.setDelayAfterErrors((-933L));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MetricRegistry metricRegistry0 = new MetricRegistry();
      SortedSet<String> sortedSet0 = metricRegistry0.getNames();
      Configuration configuration0 = new Configuration();
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, sortedSet0, sortedSet0, 0, 0, 0, 0, 0, configuration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.hadoop.conf.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(0);
      dispatcher_Allocator0.setLotSize(0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(60);
      int int0 = dispatcher_Allocator0.allocate();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(60);
      dispatcher_Allocator0.reset();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      int int0 = dispatcher_StorageGroupMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup>();
      StorageType storageType0 = StorageType.RAM_DISK;
      Dispatcher.DDatanode.StorageGroup dispatcher_DDatanode_StorageGroup0 = dispatcher_StorageGroupMap0.get("#<mWd&wPD6h0D##b2@", storageType0);
      assertNull(dispatcher_DDatanode_StorageGroup0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      dispatcher_StorageGroupMap0.clear();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      Collection<Dispatcher.Source> collection0 = dispatcher_StorageGroupMap0.values();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InetAddressSet inetAddressSet0 = new InetAddressSet();
      // Undeclared exception!
      try { 
        Dispatcher.Util.isExcluded(inetAddressSet0, (DatanodeInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Dispatcher.Util dispatcher_Util0 = new Dispatcher.Util();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped((Block) null, byteArray0, (short) (-151), 12416);
      dispatcher_DBlockStriped0.setIndices(byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
  }
}
