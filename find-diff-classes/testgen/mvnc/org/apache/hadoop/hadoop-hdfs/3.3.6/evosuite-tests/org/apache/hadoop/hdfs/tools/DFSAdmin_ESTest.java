/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 23:36:00 GMT 2024
 */

package org.apache.hadoop.hdfs.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.List;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.ReconfigurationTaskStatus;
import org.apache.hadoop.hdfs.tools.DFSAdmin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DFSAdmin_ESTest extends DFSAdmin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-safemode";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      dFSAdmin0.setSafeMode(dFSAdmin0.DFS_REPORT_ARGS, (-1));
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("SUCCESS: Changed property %s%n\tFrom: \"%s\"%n\tTo: \"%s\"%n");
      int int0 = dFSAdmin0.startReconfigurationUtil("z%SOPF7[%6E", "z%SOPF7[%6E", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("-j=p@rsJ9k Z");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      int int0 = dFSAdmin0.startReconfigurationDispatch("-j=p@rsJ9k Z", "-j=p@rsJ9k Z", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.startReconfiguration("4>2!&", "4>2!&");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      ReconfigurationTaskStatus reconfigurationTaskStatus0 = dFSAdmin0.getReconfigurationStatusDispatch(" not a SequenceFile", " not a SequenceFile", mockPrintStream0, mockPrintStream0);
      assertNull(reconfigurationTaskStatus0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("!+DBX!");
      int int0 = dFSAdmin0.getReconfigurationStatus("*sUQ'C]Xg\"=.o{H", "hCL#Sb`", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("!+DBX!");
      List<String> list0 = dFSAdmin0.getReconfigurablePropertiesDispatch("hCL#Sb`", "hCL#Sb`", mockPrintStream0, mockPrintStream0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfigurationUtil("setSpaceQuota", "setSpaceQuota", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setSafeMode((String[]) null, (-1792));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth((String[]) null, (-1462108891));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, 2199);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2199
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.saveNamespace(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.saveNamespace(dFSAdmin0.DFS_REPORT_ARGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.run((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.rollEdits();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.restoreFailedStorage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.report(dFSAdmin0.DFS_REPORT_ARGS, (-1));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.report(dFSAdmin0.DFS_REPORT_ARGS, (-2308));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshUserToGroupsMappings();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshUserToGroupsMappings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshSuperUserGroupsConfiguration();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshSuperUserGroupsConfiguration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshServiceAcl();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshServiceAcl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshNodes();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshCallQueue();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshCallQueue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig((String[]) null, (-2040109463));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig(dFSAdmin0.DFS_REPORT_ARGS, (-1214));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1214
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.printTopology();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.printTopology();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.metaSave(dFSAdmin0.DFS_REPORT_ARGS, 0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.metaSave(dFSAdmin0.DFS_REPORT_ARGS, 2199);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2199
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try { 
        DFSAdmin.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.GnuParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        dFSAdmin0.listOpenFiles(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getUpgradeStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusUtil("}=hLQ", "MANIFEST", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusDispatch("(j>\"5\"#", "(j>\"5\"#", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatus("-refreshSuperUserGroupsConfiguration", "-report", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurablePropertiesDispatch("f-?+z '#S3.&YEP", (String) null, (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurableProperties(":T-'Yw!$g-8WZg", ":T-'Yw!$g-8WZg", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getDFS();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getDFS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.getDFS();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: -dead
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.genericRefresh(dFSAdmin0.DFS_REPORT_ARGS, 2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh((String[]) null, (-2597));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh(dFSAdmin0.DFS_REPORT_ARGS, (-1720542252));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1720542252
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.finalizeUpgrade();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.finalizeUpgrade();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      DFSAdmin dFSAdmin1 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin1.fetchImage(dFSAdmin0.DFS_REPORT_ARGS, 78);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[5];
      Configuration configuration0 = new Configuration();
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-listOpenFiles";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.run(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-triggerBlockReport";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-deleteBlockPool";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-reconfig";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-refresh";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-upgrade";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-finalizeUpgrade";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-allowsnapshot";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-safemode";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-listOpenFiles";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-triggerBlockReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-getbalancerbandwidth";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-deleteBlockPool";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-getVolumeReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-refresh";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-reconfig";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-refreshUserToGroupsMappings";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-metasave";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-finalizeUpgrade";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-refreshNodes";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-rollEdits";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Error decoding ");
      int int0 = dFSAdmin0.getReconfigurableProperties("1Tdqy", "Error decoding ", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("$z/cxjho{y");
      int int0 = dFSAdmin0.getReconfigurationStatusUtil("$z/cxjho{y", "$z/cxjho{y", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-refreshUserToGroupsMappings");
      int int0 = dFSAdmin0.startReconfiguration("Save namespace failed for ", "~X9l!;-", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.reconfig(dFSAdmin0.DFS_REPORT_ARGS, 3);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.upgrade("namenode");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.listOpenFiles(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.restoreFailedStorage("-namenode");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.restoreFailedStorage("check");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[5];
      stringArray0[1] = "addressKey: %s nsId: %s nnId: %s";
      stringArray0[2] = "rename2";
      stringArray0[3] = "w0pIxdd[";
      stringArray0[4] = "N9\"c5FY]fmr\"CW";
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[1] = "-namenode";
      stringArray0[2] = "namenode";
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: namenode
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      dFSAdmin0.setSafeMode(dFSAdmin0.DFS_REPORT_ARGS, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      dFSAdmin0.setSafeMode(stringArray0, 3);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "Usage: hdfs dfsadmin [-fetchImage <local directory>]";
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: Usage: hdfs dfsadmin [-fetchImage <local directory>]
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.disallowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.rollEdits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(dFSAdmin0.DFS_REPORT_ARGS, 1077);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1077
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("namenode", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Target address cannot be null.
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.fetchImage(dFSAdmin0.DFS_REPORT_ARGS, 122);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.allowSnapshot(dFSAdmin0.DFS_REPORT_ARGS);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getUpgradeStatus();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      DFSAdmin.main(dFSAdmin0.DFS_REPORT_ARGS);
  }
}
