/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 23:21:52 GMT 2024
 */

package org.apache.hadoop.hdfs.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintStream;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.ReconfigurationTaskStatus;
import org.apache.hadoop.hdfs.tools.DFSAdmin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DFSAdmin_ESTest extends DFSAdmin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-disallowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-safemode";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      dFSAdmin0.setSafeMode(stringArray0, (-1879048156));
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Usage: hdfs dfsadmin [-getDatanodeInfo <datanode_host:ipc_port>]");
      int int0 = dFSAdmin0.startReconfigurationUtil("Exception encountered:", "7xrx99t", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      int int0 = dFSAdmin0.startReconfigurationDispatch("livenodes", "livenodes", (PrintStream) null, (PrintStream) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[8];
      stringArray0[1] = "finalize";
      int int0 = dFSAdmin0.setBalancerBandwidth(stringArray0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Usage: hdfs dfsadmin [-getDatanodeInfo <datanode_host:ipc_port>]");
      ReconfigurationTaskStatus reconfigurationTaskStatus0 = dFSAdmin0.getReconfigurationStatusDispatch((String) null, (String) null, mockPrintStream0, mockPrintStream0);
      assertNull(reconfigurationTaskStatus0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockFile mockFile0 = new MockFile("aVGg6", "org.apache.hadoop.fs.InvalidRequestException");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      dFSAdmin0.getReconfigurationStatus("aVGg6", "org.apache.hadoop.fs.InvalidRequestException", mockPrintStream0, mockPrintStream0);
      assertEquals(128L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockFile mockFile0 = new MockFile("aVGg6", "org.apache.hadoop.fs.InvalidRequestException");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      dFSAdmin0.getReconfigurablePropertiesDispatch("org.apache.hadoop.fs.InvalidRequestException", "org.apache.hadoop.fs.InvalidRequestException", mockPrintStream0, mockPrintStream0);
      assertEquals(89L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfigurationUtil((String) null, "qNdc*Q\"w^Hil6$q", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Usage: hdfs dfsadmin [-getDatanodeInfo <datanode_host:ipc_port>]");
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfigurationDispatch("namenode", "namenode", mockPrintStream0, mockPrintStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: namenode
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("Usage: hdfs dfsadmin [-setBalancerBandwidth <bandwidth in bytes per second>]", "-QD&v", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setSafeMode((String[]) null, (-51));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.setSafeMode(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth((String[]) null, (-1287));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "Usage: hdfs dfsadmin [-listOpenFiles [-blockingDecommission] [-path <path>]]";
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(stringArray0, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid size prefix ']' in 'Usage: hdfs dfsadmin [-listOpenFiles [-blockingDecommission] [-path <path>]]'. Allowed prefixes are k, m, g, t, p, e(case insensitive)
         //
         verifyException("org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.setBalancerBandwidth(stringArray0, 176);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 176
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.saveNamespace((String[]) null);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.saveNamespace((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      dFSAdmin0.saveNamespace(stringArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.rollEdits();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.rollEdits();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.restoreFailedStorage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      dFSAdmin0.report(stringArray0, 2);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        dFSAdmin0.report(stringArray0, 1359);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshUserToGroupsMappings();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshUserToGroupsMappings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshSuperUserGroupsConfiguration();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshSuperUserGroupsConfiguration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshSuperUserGroupsConfiguration();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshServiceAcl();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshServiceAcl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshServiceAcl();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshNodes();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshNodes();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.refreshCallQueue();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.refreshCallQueue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.refreshCallQueue();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig((String[]) null, (-1910974793));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.reconfig(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.printTopology();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.printTopology();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.printTopology();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      dFSAdmin0.metaSave(stringArray0, 1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.metaSave((String[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        dFSAdmin0.metaSave(stringArray0, 389);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 389
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DFSAdmin.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        dFSAdmin0.listOpenFiles(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "6vZBXZ_HsZ";
      stringArray0[1] = "Dn9[86a6;~+C)Sz8|";
      stringArray0[2] = "6vZBXZ_HsZ";
      stringArray0[3] = "6vZBXZ_HsZ";
      stringArray0[4] = "6vZBXZ_HsZ";
      stringArray0[5] = "6vZBXZ_HsZ";
      stringArray0[6] = "6vZBXZ_HsZ";
      stringArray0[7] = "6vZBXZ_HsZ";
      stringArray0[8] = "6vZBXZ_HsZ";
      // Undeclared exception!
      dFSAdmin0.listOpenFiles(stringArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getUpgradeStatus();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getUpgradeStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusDispatch("org.bouncycastle.asn1.x500.style.BCStyle", "\"#v3", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatus("DY9V.tg", "DY9V.tg", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurablePropertiesDispatch("-setBalancerBandwidth", "-setBalancerBandwidth", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurablePropertiesDispatch("datanode", "-setBalancerBandwidth", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: -setBalancerBandwidth
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurableProperties("Ek2v=DM.RH^7?8", "-deleteBlockPool", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.getDFS();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getDFS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.getDFS();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth((String[]) null, (-340));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(stringArray0, (-340));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -340
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      dFSAdmin0.genericRefresh(stringArray0, 1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh((String[]) null, 1555022101);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        dFSAdmin0.genericRefresh(stringArray0, (-2116440665));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2116440665
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.finalizeUpgrade();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.finalizeUpgrade();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      // Undeclared exception!
      dFSAdmin0.finalizeUpgrade();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.fetchImage(stringArray0, (-1621405990));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      DFSAdmin dFSAdmin0 = new DFSAdmin(configuration0);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      dFSAdmin0.fetchImage(stringArray0, 4911);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "R]\"`MX@.OW6wOp";
      // Undeclared exception!
      dFSAdmin0.disallowSnapshot(stringArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "x$LWyU`2+";
      // Undeclared exception!
      dFSAdmin0.allowSnapshot(stringArray0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-triggerBlockReport";
      // Undeclared exception!
      try { 
        dFSAdmin0.run(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FsShell", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-shutdownDatanode";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-shutdownDatanode";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-getbalancerbandwidth";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-setBalancerBandwidth";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-deleteBlockPool";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-deleteBlockPool";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-reconfig";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-refreshNamenodes";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-printTopology";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-refresh";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-finalizeUpgrade";
      // Undeclared exception!
      try { 
        dFSAdmin0.run(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FsShell", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-report";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-disallowsnapshot";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-allowsnapshot";
      // Undeclared exception!
      dFSAdmin0.run(stringArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-safemode";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-triggerBlockReport";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-getDatanodeInfo";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-shutdownDatanode";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-fetchImage";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-getbalancerbandwidth";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-setBalancerBandwidth";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-refreshNamenodes";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-printTopology";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-refresh";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-refreshServiceAcl";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-refreshNodes";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-disallowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-allowsnapshot";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-report";
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("R]\"`MX@.OW6wOp");
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurableProperties("datanode", "[1-#ojk~uP", mockPrintStream0, (PrintStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: [1-#ojk~uP
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      File file0 = MockFile.createTempFile("{&pidW", "-safemode");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      int int0 = dFSAdmin0.getReconfigurableProperties("-reconfig", "-reconfig", mockPrintStream0, mockPrintStream0);
      assertEquals(54L, file0.length());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      MockPrintStream mockPrintStream0 = new MockPrintStream("xV}g/4R");
      int int0 = dFSAdmin0.getReconfigurationStatusUtil("xV}g/4R", "xV}g/4R", mockPrintStream0, mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusUtil("SOAP-ENV", "-namenode", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.getReconfigurationStatusUtil("SOAP-ENV", "livenodes", (PrintStream) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.tools.DFSAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      try { 
        dFSAdmin0.startReconfiguration("datanode", "datanode");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: datanode
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      int int0 = dFSAdmin0.startReconfiguration("Usage: hdfs dfsadmin [-setBalancerBandwidth <bandwidth in bytes per second>]", "", mockPrintStream0, mockPrintStream0);
      assertEquals(41, byteArrayOutputStream0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      int int0 = dFSAdmin0.startReconfiguration("livenodes", "livenodes");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      int int0 = dFSAdmin0.reconfig(stringArray0, (byte)0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.upgrade("{\"Jcz#2V=");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      // Undeclared exception!
      dFSAdmin0.listOpenFiles((String[]) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      int int0 = dFSAdmin0.restoreFailedStorage(";k(l:HtAzG28y=j\"H>");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "metrics-";
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Does not contain a valid host:port authority: metrics-
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "Refresh service acl failed for ";
      stringArray0[2] = "Refresh service acl failed for ";
      stringArray0[3] = "org.bouncycastle.asn1.x500.style.BCStyle";
      stringArray0[4] = "Refresh service acl failed for ";
      stringArray0[5] = "Refresh service acl failed for ";
      int int0 = dFSAdmin0.triggerBlockReport(stringArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        dFSAdmin0.triggerBlockReport(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[6];
      dFSAdmin0.setSafeMode(stringArray0, 1425);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[3];
      dFSAdmin0.setSafeMode(stringArray0, 2);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[0];
      int int0 = dFSAdmin0.run(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        dFSAdmin0.disallowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin((Configuration) null);
      // Undeclared exception!
      try { 
        dFSAdmin0.rollEdits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.fs.FileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        dFSAdmin0.getBalancerBandwidth(stringArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Target address cannot be null.
         //
         verifyException("org.apache.hadoop.net.NetUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      dFSAdmin0.fetchImage(stringArray0, 4911);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DFSAdmin dFSAdmin0 = new DFSAdmin();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        dFSAdmin0.allowSnapshot(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[1];
      try { 
        DFSAdmin.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.GnuParser", e);
      }
  }
}
