/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 23:12:53 GMT 2024
 */

package org.apache.hadoop.hdfs.server.balancer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.StorageType;
import org.apache.hadoop.hdfs.protocol.Block;
import org.apache.hadoop.hdfs.protocol.DatanodeInfo;
import org.apache.hadoop.hdfs.server.balancer.Dispatcher;
import org.apache.hadoop.hdfs.server.balancer.NameNodeConnector;
import org.eclipse.jetty.util.AttributesMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dispatcher_ESTest extends Dispatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, (Set<String>) null, (Set<String>) null, 1, 0, 0, (-501), 0, (-650L), (-1), (-3185), (-1), configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AttributesMap attributesMap0 = new AttributesMap();
      Set<String> set0 = attributesMap0.getAttributeNameSet();
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, set0, set0, 120L, 2033, (-2238), 2033, 2033, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, (Set<String>) null, (Set<String>) null, 401L, (byte)38, (byte)38, 3979, 3979, configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Configuration configuration0 = new Configuration(true);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, linkedHashSet0, (Set<String>) null, (byte) (-14), (byte)38, 142, (-3815), 186, configuration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.hadoop.conf.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("S1Y_Q@:scf");
      Block block0 = new Block(mockFile0, 2552L, (short)16384);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)96;
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (short)9365, (byte)96);
      dispatcher_DBlockStriped0.addLocation((Dispatcher.DDatanode.StorageGroup) null);
      long long0 = dispatcher_DBlockStriped0.getNumBytes((Dispatcher.DDatanode.StorageGroup) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(1);
      int int0 = dispatcher_Allocator0.allocate();
      assertEquals(1, int0);
      
      int int1 = dispatcher_Allocator0.allocate(1);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Block block0 = new Block();
      Dispatcher.DBlock dispatcher_DBlock0 = new Dispatcher.DBlock(block0);
      assertEquals(0L, dispatcher_DBlock0.getNumBytes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      // Undeclared exception!
      try { 
        dispatcher_StorageGroupMap0.put((Dispatcher.Source) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$StorageGroupMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, (Set<String>) null, (Set<String>) null, (-842L), 554, 128, (-738), 128, (-738), 554, 554, 128, configuration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.hadoop.conf.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      boolean boolean0 = Dispatcher.Util.isIncluded(treeSet0, (DatanodeInfo) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      // Undeclared exception!
      try { 
        Dispatcher.Util.isIncluded(set0, (DatanodeInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<Dispatcher.Source> arrayList0 = new ArrayList<Dispatcher.Source>();
      arrayList0.add((Dispatcher.Source) null);
      // Undeclared exception!
      try { 
        Dispatcher.checkForSuccess(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashSet<Dispatcher.Source> hashSet0 = new HashSet<Dispatcher.Source>();
      boolean boolean0 = Dispatcher.checkForSuccess(hashSet0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<Dispatcher.Source> arrayList0 = new ArrayList<Dispatcher.Source>();
      arrayList0.add((Dispatcher.Source) null);
      Hashtable<Long, Set<DatanodeInfo>> hashtable0 = new Hashtable<Long, Set<DatanodeInfo>>();
      // Undeclared exception!
      try { 
        Dispatcher.checkForBlockPinningFailures(hashtable0, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashSet<Dispatcher.Source> linkedHashSet0 = new LinkedHashSet<Dispatcher.Source>();
      Hashtable<Long, Set<DatanodeInfo>> hashtable0 = new Hashtable<Long, Set<DatanodeInfo>>();
      Dispatcher.checkForBlockPinningFailures(hashtable0, linkedHashSet0);
      assertTrue(hashtable0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<Dispatcher.Source> arrayList0 = new ArrayList<Dispatcher.Source>();
      arrayList0.add((Dispatcher.Source) null);
      // Undeclared exception!
      try { 
        Dispatcher.waitForMoveCompletion(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$DDatanode$StorageGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashSet<Dispatcher.Source> hashSet0 = new HashSet<Dispatcher.Source>();
      boolean boolean0 = Dispatcher.waitForMoveCompletion(hashSet0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, (Set<String>) null, (Set<String>) null, 0, 96, 0, 96, 0, configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      Dispatcher dispatcher0 = null;
      try {
        dispatcher0 = new Dispatcher((NameNodeConnector) null, (Set<String>) null, (Set<String>) null, 382L, (-788), (-788), (-788), (-788), 382L, (-788), (-788), 382L, configuration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Block block0 = new Block();
      byte[] byteArray0 = new byte[1];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (byte)0, 2456);
      dispatcher_DBlockStriped0.adjustIndices(stack0);
      assertFalse(stack0.contains(2456));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Block block0 = new Block();
      byte[] byteArray0 = new byte[19];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (byte)0, (byte)0);
      Integer integer0 = new Integer((byte)0);
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.add(integer0);
      dispatcher_DBlockStriped0.adjustIndices(stack0);
      assertFalse(stack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Block block0 = new Block();
      byte[] byteArray0 = new byte[8];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (short) (-2224), (short) (-2224));
      long long0 = dispatcher_DBlockStriped0.getNumBytes((Dispatcher.DDatanode.StorageGroup) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(407);
      int int0 = dispatcher_Allocator0.allocate(3272);
      assertEquals(407, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(59);
      int int0 = dispatcher_Allocator0.allocate((-3661));
      assertEquals((-3661), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Dispatcher.Task dispatcher_Task0 = new Dispatcher.Task((Dispatcher.DDatanode.StorageGroup) null, 494L);
      long long0 = dispatcher_Task0.getSize();
      assertEquals(494L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Dispatcher.setDelayAfterErrors(3600000L);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(7);
      dispatcher_Allocator0.setLotSize(0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator((-835));
      int int0 = dispatcher_Allocator0.allocate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Dispatcher.Allocator dispatcher_Allocator0 = new Dispatcher.Allocator(59);
      dispatcher_Allocator0.reset();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      int int0 = dispatcher_StorageGroupMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      StorageType storageType0 = StorageType.SSD;
      Dispatcher.Source dispatcher_Source0 = dispatcher_StorageGroupMap0.get((String) null, storageType0);
      assertNull(dispatcher_Source0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.Source> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.Source>();
      dispatcher_StorageGroupMap0.clear();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup> dispatcher_StorageGroupMap0 = new Dispatcher.StorageGroupMap<Dispatcher.DDatanode.StorageGroup>();
      Collection<Dispatcher.DDatanode.StorageGroup> collection0 = dispatcher_StorageGroupMap0.values();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      // Undeclared exception!
      try { 
        Dispatcher.Util.isExcluded(set0, (DatanodeInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.hdfs.server.balancer.Dispatcher$Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Dispatcher.Util dispatcher_Util0 = new Dispatcher.Util();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Block block0 = new Block();
      byte[] byteArray0 = new byte[19];
      Dispatcher.DBlockStriped dispatcher_DBlockStriped0 = new Dispatcher.DBlockStriped(block0, byteArray0, (byte)0, (byte)0);
      dispatcher_DBlockStriped0.setIndices(byteArray0);
      assertEquals(19, byteArray0.length);
  }
}
