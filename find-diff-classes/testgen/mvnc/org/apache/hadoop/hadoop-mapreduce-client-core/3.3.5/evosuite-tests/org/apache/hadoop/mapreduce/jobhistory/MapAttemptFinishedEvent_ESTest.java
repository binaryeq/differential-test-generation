/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 21:11:17 GMT 2024
 */

package org.apache.hadoop.mapreduce.jobhistory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.hadoop.mapreduce.Counters;
import org.apache.hadoop.mapreduce.TaskAttemptID;
import org.apache.hadoop.mapreduce.TaskID;
import org.apache.hadoop.mapreduce.TaskType;
import org.apache.hadoop.mapreduce.jobhistory.EventType;
import org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinished;
import org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapAttemptFinishedEvent_ESTest extends MapAttemptFinishedEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = mapAttemptFinishedEvent0.getVMemKbytes();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = new int[4];
      mapAttemptFinishedEvent0.vMemKbytes = intArray0;
      int[] intArray1 = mapAttemptFinishedEvent0.getVMemKbytes();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskID taskID0 = new TaskID();
      TaskAttemptID taskAttemptID0 = new TaskAttemptID(taskID0, (-1));
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[6][0];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "&M2],>", (-1), 4611686018427387903L, "qf)Xg5N#D", (-1), "HOSTNAME", "N5V]OAGZMft;", counters0, intArray0);
      mapAttemptFinishedEvent0.getTaskType();
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("N5V]OAGZMft;", mapAttemptFinishedEvent0.getState());
      assertEquals("qf)Xg5N#D", mapAttemptFinishedEvent0.getHostname());
      assertEquals(4611686018427387903L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("&M2],>", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("", (-2041), taskType0, (-2041), (-1));
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "Oegs/?Nyx&s%o", (-2041), 0L, "", (-2041), "", "", counters0, (int[][]) null);
      String string0 = mapAttemptFinishedEvent0.getTaskStatus();
      assertEquals((-2041), mapAttemptFinishedEvent0.getPort());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals((-2041L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("Oegs/?Nyx&s%o", string0);
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", (-1418L), 0L, "", "", counters0);
      mapAttemptFinishedEvent0.getTaskStatus();
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1418L), mapAttemptFinishedEvent0.getMapFinishTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("", 254, taskType0, 0, 254);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[4][8];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, (String) null, 0L, 1575L, "", 254, "Sf'=47`/><", "4 J*b%}U\"", counters0, intArray0);
      mapAttemptFinishedEvent0.getTaskId();
      assertEquals("Sf'=47`/><", mapAttemptFinishedEvent0.getRackName());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1575L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(254, mapAttemptFinishedEvent0.getPort());
      assertEquals("4 J*b%}U\"", mapAttemptFinishedEvent0.getState());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, (-1574L), "A]].", 0, "", "", counters0, (int[][]) null);
      mapAttemptFinishedEvent0.getTaskId();
      assertEquals("A]].", mapAttemptFinishedEvent0.getHostname());
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(0, mapAttemptFinishedEvent0.getPort());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-1574L), mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskType taskType0 = TaskType.REDUCE;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("0Yp", (-382), taskType0, (-382), (-382));
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, ",3{BqU%E`,}Po&>H", (-865L), (-382), "", "", counters0);
      mapAttemptFinishedEvent0.getTaskId();
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-382L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals((-865L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(",3{BqU%E`,}Po&>H", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      int[][] intArray0 = new int[4][4];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "?|m&w5Brpj=oP@$`", 0L, 500L, "@H", 63, "N1\"k", "7edeV", (Counters) null, intArray0, (-293L));
      String string0 = mapAttemptFinishedEvent0.getState();
      assertEquals((-293L), mapAttemptFinishedEvent0.getStartTime());
      assertEquals("7edeV", string0);
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("?|m&w5Brpj=oP@$`", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("N1\"k", mapAttemptFinishedEvent0.getRackName());
      assertEquals("@H", mapAttemptFinishedEvent0.getHostname());
      assertEquals(63, mapAttemptFinishedEvent0.getPort());
      assertEquals(500L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "7&Y}r[?gh#E9^J|7l", 0L, (-12L), "7&Y}r[?gh#E9^J|7l", "", counters0);
      String string0 = mapAttemptFinishedEvent0.getState();
      assertEquals("", string0);
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals((-12L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("7&Y}r[?gh#E9^J|7l", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("7&Y}r[?gh#E9^J|7l", mapAttemptFinishedEvent0.getHostname());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      long long0 = mapAttemptFinishedEvent0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "Q", 25L, 25L, "Q", "Q", counters0);
      long long0 = mapAttemptFinishedEvent0.getStartTime();
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals(25L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1392409281320L, long0);
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(25L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[6][4];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "/*]feD0\"04", (-603L), (-603L), "DP[~2L#7", 24, "fW7&5<", "fW7&5<", counters0, intArray0);
      String string0 = mapAttemptFinishedEvent0.getRackName();
      assertEquals(24, mapAttemptFinishedEvent0.getPort());
      assertEquals("/*]feD0\"04", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("fW7&5<", string0);
      assertEquals((-603L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("DP[~2L#7", mapAttemptFinishedEvent0.getHostname());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-603L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("fW7&5<", mapAttemptFinishedEvent0.getState());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("p+}|wVkAEJ$0(=8]", (-1568), taskType0, (-1568), 0);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[7][0];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "p+}|wVkAEJ$0(=8]", 0, (-1836L), "p+}|wVkAEJ$0(=8]", 1975, "", "p+}|wVkAEJ$0(=8]", counters0, intArray0);
      int int0 = mapAttemptFinishedEvent0.getPort();
      assertEquals(1975, int0);
      assertEquals((-1836L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "", 0L, 0L, "", "", counters0);
      int int0 = mapAttemptFinishedEvent0.getPort();
      assertEquals((-1), int0);
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = mapAttemptFinishedEvent0.getPhysMemKbytes();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = new int[7];
      mapAttemptFinishedEvent0.physMemKbytes = intArray0;
      int[] intArray1 = mapAttemptFinishedEvent0.getPhysMemKbytes();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "Q", 25L, 25L, "Q", "Q", counters0);
      long long0 = mapAttemptFinishedEvent0.getMapFinishTime();
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(25L, long0);
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(25L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "", (-5L), (-5L), "", "", counters0);
      long long0 = mapAttemptFinishedEvent0.getMapFinishTime();
      assertEquals((-5L), long0);
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals((-5L), mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "FINISH_TIME", (-497L), (-497L), "ha^gu);", (-2522), "Qqqrv]_w(g%", "", counters0, (int[][]) null);
      String string0 = mapAttemptFinishedEvent0.getHostname();
      assertEquals("ha^gu);", string0);
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals((-497L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("FINISH_TIME", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals((-2522), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-497L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("Qqqrv]_w(g%", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.MAP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "HOSTNAME", 2038L, 838L, "", ".%-8WNt[", counters0);
      String string0 = mapAttemptFinishedEvent0.getHostname();
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(2038L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(".%-8WNt[", mapAttemptFinishedEvent0.getState());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("", string0);
      assertEquals(838L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.JOB_SETUP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 2862933555777941757L, 8L, ")+pW/Qg", "", counters0);
      long long0 = mapAttemptFinishedEvent0.getFinishTime();
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(8L, long0);
      assertEquals(")+pW/Qg", mapAttemptFinishedEvent0.getHostname());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(2862933555777941757L, mapAttemptFinishedEvent0.getMapFinishTime());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][5];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "RACK_NAME", (-494L), (-494L), "bY`P3=e%.wWB1=)@", (-1038), "RACK_NAME", "HOSTNAME", counters0, intArray0);
      long long0 = mapAttemptFinishedEvent0.getFinishTime();
      assertEquals("RACK_NAME", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("bY`P3=e%.wWB1=)@", mapAttemptFinishedEvent0.getHostname());
      assertEquals((-1038), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("RACK_NAME", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-494L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals((-494L), long0);
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getState());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][0];
      int[] intArray1 = new int[2];
      intArray0[1] = intArray1;
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "Unexpected unwrap result ", (-1L), (-1L), "Unexpected unwrap result ", 947, "\"O,u~MeM`mZ:a1]L", (String) null, counters0, intArray0);
      int[] intArray2 = mapAttemptFinishedEvent0.getCpuUsages();
      assertEquals((-1L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(947, mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("\"O,u~MeM`mZ:a1]L", mapAttemptFinishedEvent0.getRackName());
      assertEquals(2, intArray2.length);
      assertEquals((-1L), mapAttemptFinishedEvent0.getMapFinishTime());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][0];
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "1m3]8j+&;],*Z5/n", (-1L), 947, "\"O,u~MeM`mZ:a1]L", 947, "[N/A]", (String) null, counters0, intArray0);
      mapAttemptFinishedEvent0.getCpuUsages();
      assertEquals(947L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("[N/A]", mapAttemptFinishedEvent0.getRackName());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("\"O,u~MeM`mZ:a1]L", mapAttemptFinishedEvent0.getHostname());
      assertEquals("1m3]8j+&;],*Z5/n", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals((-1L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(947, mapAttemptFinishedEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      Counters counters0 = mapAttemptFinishedEvent0.getCounters();
      assertNull(counters0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      counters0.setWriteAllCounters(false);
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "{w.$zk", (-24L), (-24L), "{w.$zk", "{w.$zk", counters0);
      mapAttemptFinishedEvent0.getCounters();
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals((-24L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals((-24L), mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = new int[8];
      mapAttemptFinishedEvent0.clockSplits = intArray0;
      int[] intArray1 = mapAttemptFinishedEvent0.getClockSplits();
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "4 J*b%}U\"", 0L, 42L, "", "", counters0);
      mapAttemptFinishedEvent0.getClockSplits();
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("4 J*b%}U\"", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(42L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("fh:WxQ", 194, taskType0, 194, 194);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[7][6];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 3000L, 194, "dfs.webhdfs.rest-csrf.enabled", 194, "", "dfs.webhdfs.rest-csrf.enabled", counters0, intArray0, (-2467L));
      mapAttemptFinishedEvent0.getAttemptId();
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("dfs.webhdfs.rest-csrf.enabled", mapAttemptFinishedEvent0.getState());
      assertEquals(194, mapAttemptFinishedEvent0.getPort());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals((-2467L), mapAttemptFinishedEvent0.getStartTime());
      assertEquals(194L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("dfs.webhdfs.rest-csrf.enabled", mapAttemptFinishedEvent0.getHostname());
      assertEquals(3000L, mapAttemptFinishedEvent0.getMapFinishTime());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "FINISH_TIME", (-497L), (-497L), "ha^gu);", (-2522), "Qqqrv]_w(g%", "", counters0, (int[][]) null);
      mapAttemptFinishedEvent0.getAttemptId();
      assertEquals("FINISH_TIME", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals((-497L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals((-2522), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("ha^gu);", mapAttemptFinishedEvent0.getHostname());
      assertEquals((-497L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("Qqqrv]_w(g%", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      TaskID taskID0 = new TaskID("org.eclipse.jetty.io.SelectChannelEndPoint", 0, taskType0, (-1363));
      TaskAttemptID taskAttemptID0 = new TaskAttemptID(taskID0, (-1));
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "org.eclipse.jetty.io.SelectChannelEndPoint", 0, 0, "STATUS", 1895, "TASK_TYPE", "9T,a_`X6Hu", counters0, (int[][]) null);
      mapAttemptFinishedEvent0.getAttemptId();
      assertEquals("STATUS", mapAttemptFinishedEvent0.getHostname());
      assertEquals("org.eclipse.jetty.io.SelectChannelEndPoint", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1895, mapAttemptFinishedEvent0.getPort());
      assertEquals("9T,a_`X6Hu", mapAttemptFinishedEvent0.getState());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("TASK_TYPE", mapAttemptFinishedEvent0.getRackName());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.toTimelineEvent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.setDatum((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "4 J*b%}U\"", 0L, 42L, "", "", counters0);
      MapAttemptFinished mapAttemptFinished0 = (MapAttemptFinished)mapAttemptFinishedEvent0.getDatum();
      mapAttemptFinished0.setAttemptId("");
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.setDatum(mapAttemptFinished0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TaskAttemptId string :  is not properly formed
         //
         verifyException("org.apache.hadoop.mapreduce.TaskAttemptID", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.setDatum(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinished
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getTimelineMetrics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.util.JobHistoryEventUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getTaskId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getDatum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, 0L, "", "", counters0);
      int[][] intArray0 = new int[0][1];
      mapAttemptFinishedEvent0.allSplits = intArray0;
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getDatum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[0][4];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = null;
      try {
        mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "UYl", 1000000039L, 1000000039L, "UYl", 0, "UYl", "UYl", counters0, intArray0, 1000000039L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[0][6];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = null;
      try {
        mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "?f", 636L, 636L, "?f", 0, "5~t5q6'9E-R-<.&", "5~t5q6'9E-R-<.&", counters0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("dVYqGzGQ4{", 0, taskType0, 1712, 67);
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "dVYqGzGQ4{", 1712, 1134L, "STATUS", "dVYqGzGQ4{", (Counters) null);
      String string0 = mapAttemptFinishedEvent0.getRackName();
      assertEquals(1134L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("STATUS", mapAttemptFinishedEvent0.getHostname());
      assertEquals("dVYqGzGQ4{", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1712L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("dVYqGzGQ4{", mapAttemptFinishedEvent0.getState());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      mapAttemptFinishedEvent0.getTaskType();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      TaskAttemptID taskAttemptID0 = mapAttemptFinishedEvent0.getAttemptId();
      assertNull(taskAttemptID0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      EventType eventType0 = mapAttemptFinishedEvent0.getEventType();
      assertEquals(EventType.MAP_ATTEMPT_FINISHED, eventType0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      long long0 = mapAttemptFinishedEvent0.getMapFinishTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getHostname();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getTaskStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      long long0 = mapAttemptFinishedEvent0.getFinishTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int int0 = mapAttemptFinishedEvent0.getPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      // Undeclared exception!
      try { 
        mapAttemptFinishedEvent0.getState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.MapAttemptFinishedEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "", (-24L), (-24L), "", "", counters0);
      mapAttemptFinishedEvent0.toTimelineEvent();
      assertEquals((-24L), mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals((-24L), mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      String string0 = mapAttemptFinishedEvent0.getRackName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, 0L, "", "", counters0);
      mapAttemptFinishedEvent0.getDatum();
      MapAttemptFinished mapAttemptFinished0 = (MapAttemptFinished)mapAttemptFinishedEvent0.getDatum();
      assertEquals((-1), mapAttemptFinished0.port);
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinished0.finishTime);
      assertEquals(0L, mapAttemptFinished0.mapFinishTime);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("", 254, taskType0, 0, 254);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[4][8];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, (String) null, 0L, 1575L, "", 254, "Sf'=47`/><", "4 J*b%}U\"", counters0, intArray0);
      mapAttemptFinishedEvent0.getTimelineMetrics();
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(254, mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("Sf'=47`/><", mapAttemptFinishedEvent0.getRackName());
      assertEquals(1575L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals("4 J*b%}U\"", mapAttemptFinishedEvent0.getState());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("dU\"S&", 557, taskType0, 557, 557);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[5][4];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "dU\"S&", 260L, 1L, "", 557, "dU\"S&", "STATE", counters0, intArray0, (-47L));
      long long0 = mapAttemptFinishedEvent0.getStartTime();
      assertEquals((-47L), long0);
      assertEquals("STATE", mapAttemptFinishedEvent0.getState());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(260L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals(1L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(557, mapAttemptFinishedEvent0.getPort());
      assertEquals("dU\"S&", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("dU\"S&", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = mapAttemptFinishedEvent0.getClockSplits();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "M", 0L, 0L, "M", "M", counters0);
      mapAttemptFinishedEvent0.getPhysMemKbytes();
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "4 J*b%}U\"", 0L, 42L, "", "", counters0);
      MapAttemptFinished mapAttemptFinished0 = (MapAttemptFinished)mapAttemptFinishedEvent0.getDatum();
      assertNotNull(mapAttemptFinished0);
      
      mapAttemptFinishedEvent0.setDatum(mapAttemptFinished0);
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals("4 J*b%}U\"", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinished0.port);
      assertEquals("", mapAttemptFinishedEvent0.getState());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(42L, mapAttemptFinished0.finishTime);
      assertEquals(0L, mapAttemptFinished0.mapFinishTime);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent((TaskAttemptID) null, taskType0, "M", 0L, 0L, "M", "M", counters0);
      mapAttemptFinishedEvent0.getVMemKbytes();
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, 0L, "HOSTNAME", "HOSTNAME", counters0);
      mapAttemptFinishedEvent0.getCounters();
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getState());
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getHostname());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID(" s=7b9$nk=6p(", (-1350), taskType0, 866, 0);
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, (-1350), "", " s=7b9$nk=6p(", counters0);
      mapAttemptFinishedEvent0.getTaskId();
      assertEquals(" s=7b9$nk=6p(", mapAttemptFinishedEvent0.getState());
      assertEquals((-1350L), mapAttemptFinishedEvent0.getFinishTime());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent();
      int[] intArray0 = mapAttemptFinishedEvent0.getCpuUsages();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      Counters counters0 = new Counters();
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "", 0L, 0L, "HOSTNAME", "HOSTNAME", counters0);
      mapAttemptFinishedEvent0.toTimelineEvent();
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getState());
      assertEquals(0L, mapAttemptFinishedEvent0.getMapFinishTime());
      assertEquals("HOSTNAME", mapAttemptFinishedEvent0.getHostname());
      assertEquals((-1), mapAttemptFinishedEvent0.getPort());
      assertEquals(0L, mapAttemptFinishedEvent0.getFinishTime());
      assertEquals(1392409281320L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("", mapAttemptFinishedEvent0.getRackName());
      assertEquals("", mapAttemptFinishedEvent0.getTaskStatus());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[6][7];
      MapAttemptFinishedEvent mapAttemptFinishedEvent0 = new MapAttemptFinishedEvent(taskAttemptID0, taskType0, "MWn3){s{1", 0L, 0L, "", 0, (String) null, "", counters0, intArray0, 4294967295L);
      MapAttemptFinished mapAttemptFinished0 = (MapAttemptFinished)mapAttemptFinishedEvent0.getDatum();
      assertEquals("", mapAttemptFinishedEvent0.getHostname());
      assertEquals(0L, mapAttemptFinished0.finishTime);
      assertEquals(0, mapAttemptFinished0.port);
      assertNotNull(mapAttemptFinished0);
      assertEquals(4294967295L, mapAttemptFinishedEvent0.getStartTime());
      assertEquals("MWn3){s{1", mapAttemptFinishedEvent0.getTaskStatus());
      assertEquals(0L, mapAttemptFinished0.mapFinishTime);
      assertEquals("", mapAttemptFinishedEvent0.getState());
  }
}
