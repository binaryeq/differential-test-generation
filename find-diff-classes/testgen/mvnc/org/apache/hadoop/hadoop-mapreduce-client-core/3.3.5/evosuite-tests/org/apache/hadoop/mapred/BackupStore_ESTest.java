/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 21:09:06 GMT 2024
 */

package org.apache.hadoop.mapred;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.TestFileSystemCaching;
import org.apache.hadoop.mapred.BackupStore;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BackupStore_ESTest extends BackupStore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager(251);
      int int0 = backupStore_BackupRamManager0.reserve((-39), (-39));
      assertEquals((-39), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      BackupStore<Integer, Integer> backupStore0 = new BackupStore<Integer, Integer>(configuration0, (org.apache.hadoop.mapreduce.TaskAttemptID) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      TestFileSystemCaching.InitializeForeverFileSystem testFileSystemCaching_InitializeForeverFileSystem0 = new TestFileSystemCaching.InitializeForeverFileSystem();
      Path path0 = testFileSystemCaching_InitializeForeverFileSystem0.getHomeDirectory();
      configuration0.addResource(path0, false);
      BackupStore<Integer, Integer> backupStore0 = null;
      try {
        backupStore0 = new BackupStore<Integer, Integer>(configuration0, (org.apache.hadoop.mapreduce.TaskAttemptID) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.ctc.wstx.exc.WstxIOException: Is a directory
         //
         verifyException("org.apache.hadoop.conf.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BackupStore<Integer, Integer> backupStore0 = null;
      try {
        backupStore0 = new BackupStore<Integer, Integer>((Configuration) null, (org.apache.hadoop.mapreduce.TaskAttemptID) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapred.BackupStore", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager((-786));
      int int0 = backupStore_BackupRamManager0.reserve(18, 462);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager((-2350));
      int int0 = backupStore_BackupRamManager0.reserve(191);
      assertEquals((-2350), int0);
      
      int int1 = backupStore_BackupRamManager0.reserve((-2350));
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager(251);
      int int0 = backupStore_BackupRamManager0.reserve((-15), 251);
      assertEquals((-15), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager((-128));
      backupStore_BackupRamManager0.reinitialize();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager(2141);
      backupStore_BackupRamManager0.unreserve(251);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BackupStore.BackupRamManager backupStore_BackupRamManager0 = new BackupStore.BackupRamManager((-364));
      PipedInputStream pipedInputStream0 = new PipedInputStream(1048576);
      boolean boolean0 = backupStore_BackupRamManager0.reserve((-364), pipedInputStream0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Configuration configuration0 = new Configuration(false);
      BackupStore<Integer, Integer> backupStore0 = new BackupStore<Integer, Integer>(configuration0, (org.apache.hadoop.mapreduce.TaskAttemptID) null);
  }
}
