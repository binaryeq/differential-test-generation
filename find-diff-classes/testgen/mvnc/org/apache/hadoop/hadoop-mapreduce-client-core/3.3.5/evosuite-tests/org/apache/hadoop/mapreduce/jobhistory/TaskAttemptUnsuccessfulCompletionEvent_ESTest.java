/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 21:15:43 GMT 2024
 */

package org.apache.hadoop.mapreduce.jobhistory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.hadoop.mapreduce.Counters;
import org.apache.hadoop.mapreduce.JobID;
import org.apache.hadoop.mapreduce.TaskAttemptID;
import org.apache.hadoop.mapreduce.TaskID;
import org.apache.hadoop.mapreduce.TaskType;
import org.apache.hadoop.mapreduce.jobhistory.EventType;
import org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletion;
import org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent;
import org.apache.hadoop.yarn.api.records.timelineservice.TimelineEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TaskAttemptUnsuccessfulCompletionEvent_ESTest extends TaskAttemptUnsuccessfulCompletionEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TaskType taskType0 = TaskType.REDUCE;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", 1, taskType0, 1, 1629);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "~-nu", 0L, "xLmUya8.(P.8!T_ou", 1, "; isErasureCoded=", "FINISH_TIME", (int[][]) null);
      TaskAttemptUnsuccessfulCompletion taskAttemptUnsuccessfulCompletion0 = (TaskAttemptUnsuccessfulCompletion)taskAttemptUnsuccessfulCompletionEvent0.getDatum();
      assertNotNull(taskAttemptUnsuccessfulCompletion0);
      
      taskAttemptUnsuccessfulCompletionEvent0.setDatum(taskAttemptUnsuccessfulCompletion0);
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("xLmUya8.(P.8!T_ou", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("~-nu", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("; isErasureCoded=", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1, taskAttemptUnsuccessfulCompletion0.port);
      assertEquals(0L, taskAttemptUnsuccessfulCompletion0.finishTime);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int[] intArray0 = taskAttemptUnsuccessfulCompletionEvent0.getVMemKbytes();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      int[][] intArray0 = new int[4][2];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent((TaskAttemptID) null, taskType0, "FAILED", 127L, "PORT", 0, "FAILED", "np(hGP/?MSYhcV2", intArray0);
      taskAttemptUnsuccessfulCompletionEvent0.getVMemKbytes();
      assertEquals("FAILED", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(0, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("np(hGP/?MSYhcV2", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(127L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("PORT", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("FAILED", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "SORT_FINISH_TIME", 0L, "SORT_FINISH_TIME", "SORT_FINISH_TIME");
      taskAttemptUnsuccessfulCompletionEvent0.getTaskType();
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "PORT", 0L, "PORT", 2316, "PORT", "PORT", counters0, (int[][]) null, (-3228L));
      taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals((-3228L), taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(2316, taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 0L, "f/A/@", "");
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("f/A/@", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("", string0);
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", 1, taskType0, 1, 1629);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "5AxpBF", 0L, "5AxpBF", 1629, "xLmUya8.(P.8!T_ou", "org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", counters0, (int[][]) null, 0L);
      taskAttemptUnsuccessfulCompletionEvent0.getTaskId();
      assertEquals("5AxpBF", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1629, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("xLmUya8.(P.8!T_ou", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("5AxpBF", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "PORT", 0L, "PORT", 2316, "PORT", "PORT", counters0, (int[][]) null, (-3228L));
      taskAttemptUnsuccessfulCompletionEvent0.getTaskId();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(2316, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals((-3228L), taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TaskType taskType0 = TaskType.REDUCE;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", (-1388), taskType0, (-1743), 249);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "STATUS", (-1743), "XL!k(", "STATUS");
      taskAttemptUnsuccessfulCompletionEvent0.getTaskId();
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("STATUS", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("XL!k(", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals((-1743L), taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("STATUS", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "El!v04ux'bU:R1wu", 1L, (String) null, (String) null);
      taskAttemptUnsuccessfulCompletionEvent0.getTaskAttemptId();
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", 1629, taskType0, 1, 1);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "El!v04ux'bU:R1wu", 0L, "ERROR", 1629, "m2e4~|0d/&Ie", "$vEbm7nA8TV,.", counters0, (int[][]) null);
      taskAttemptUnsuccessfulCompletionEvent0.getTaskAttemptId();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("$vEbm7nA8TV,.", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("m2e4~|0d/&Ie", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1629, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("El!v04ux'bU:R1wu", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("ZQC7.*S", (-1388), taskType0, (-1970311164), (-1294));
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "STATUS", (-3350L), "", "STATUS");
      taskAttemptUnsuccessfulCompletionEvent0.getTaskAttemptId();
      assertEquals((-3350L), taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("STATUS", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("STATUS", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "SORT_FINISH_TIME", 0L, "SORT_FINISH_TIME", "SORT_FINISH_TIME");
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getStartTime();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, long0);
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      int[][] intArray0 = new int[5][0];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "ERROR", 80L, "ERROR", 0, " y;NdK", "ERROR", intArray0);
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getRackName();
      assertEquals(" y;NdK", string0);
      assertEquals(80L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(0, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int int0 = taskAttemptUnsuccessfulCompletionEvent0.getPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      int[][] intArray0 = new int[5][8];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, (String) null, (-2170L), (String) null, (-1), (String) null, "k?CUD", (Counters) null, intArray0);
      int int0 = taskAttemptUnsuccessfulCompletionEvent0.getPort();
      assertEquals((-1), int0);
      assertEquals((-2170L), taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int[] intArray0 = taskAttemptUnsuccessfulCompletionEvent0.getPhysMemKbytes();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[4][3];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent((TaskAttemptID) null, taskType0, "/r", 0L, "), expected ", (-1914615651), "TASK_TYPE", "TASK_TYPE", counters0, intArray0);
      taskAttemptUnsuccessfulCompletionEvent0.getPhysMemKbytes();
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals((-1914615651), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("TASK_TYPE", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("TASK_TYPE", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("/r", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("), expected ", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      int[][] intArray0 = new int[9][0];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "ERROR", 1L, "El!v04ux'bU:R1wu", 355, (String) null, "El!v04ux'bU:R1wu", intArray0);
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getHostname();
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(355, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("El!v04ux'bU:R1wu", string0);
      assertEquals("El!v04ux'bU:R1wu", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(1L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("mapreduce.output.fileoutputformat.compress.codec", (-1384), taskType0, 1272, (-1384));
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 86400000L, "", "=D");
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getHostname();
      assertEquals("", string0);
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(86400000L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("=D", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "q&UY-#|0YQaa>6nYk+", 0L, "q&UY-#|0YQaa>6nYk+", " K9>fd/O{I=^rOeG4");
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getFinishTime();
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(" K9>fd/O{I=^rOeG4", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("q&UY-#|0YQaa>6nYk+", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("q&UY-#|0YQaa>6nYk+", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][0];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "'i_)$K}99>p^6m[", (-987L), "q+E-", (-755), "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", "ERROR", counters0, intArray0);
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getFinishTime();
      assertEquals((-755), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("q+E-", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals((-987L), long0);
      assertEquals("'i_)$K}99>p^6m[", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, ",^R;j=47xNvPSP3lm", 2661L, "El!v04ux'bU:R1wu", 1, ",^R;j=47xNvPSP3lm", "ERROR", counters0, (int[][]) null);
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getError();
      assertEquals("ERROR", string0);
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("El!v04ux'bU:R1wu", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(1, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(2661L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 3446L, ",^R;j=47xNvPSP3lm", 1858, "", "", counters0, (int[][]) null);
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getError();
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(3446L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("", string0);
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(1858, taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int[] intArray0 = taskAttemptUnsuccessfulCompletionEvent0.getCpuUsages();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobID jobID0 = new JobID("Yuoux0", 2047);
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      TaskID taskID0 = new TaskID(jobID0, taskType0, 2047);
      TaskAttemptID taskAttemptID0 = new TaskAttemptID(taskID0, (-203));
      int[][] intArray0 = new int[6][4];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "job_[0-9]+_[0-9]+", 2047, "task_(d+)_(d+)_(m|r|s|c|t)_(d+)", 1951, "f$n2dAp", "PORT", intArray0);
      taskAttemptUnsuccessfulCompletionEvent0.getCpuUsages();
      assertEquals("job_[0-9]+_[0-9]+", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("f$n2dAp", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("task_(d+)_(d+)_(m|r|s|c|t)_(d+)", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(2047L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("PORT", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(1951, taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      Counters counters0 = taskAttemptUnsuccessfulCompletionEvent0.getCounters();
      assertNull(counters0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent((TaskAttemptID) null, taskType0, "SHUFFLE_FINISH_TIME", 0L, "SHUFFLE_FINISH_TIME", "26!^b82X");
      taskAttemptUnsuccessfulCompletionEvent0.getCounters();
      assertEquals("26!^b82X", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("SHUFFLE_FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("SHUFFLE_FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("f`0}VuG!b", 99, taskType0, 99, 99);
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[6][3];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "f`0}VuG!b", 0L, "f`0}VuG!b", 99, "b", "f`0}VuG!b", counters0, intArray0);
      taskAttemptUnsuccessfulCompletionEvent0.getClockSplits();
      assertEquals(99, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("b", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int[] intArray0 = new int[0];
      taskAttemptUnsuccessfulCompletionEvent0.clockSplits = intArray0;
      int[] intArray1 = taskAttemptUnsuccessfulCompletionEvent0.getClockSplits();
      assertEquals(0, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.toTimelineEvent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.setDatum((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.setDatum(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletion
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getTimelineMetrics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.util.JobHistoryEventUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getEventType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getDatum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TaskType taskType0 = TaskType.JOB_SETUP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("B$", 2973213, taskType0, 2973213, 2973213);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "B$", 2973213, "B$", "B$");
      int[][] intArray0 = new int[1][8];
      taskAttemptUnsuccessfulCompletionEvent0.allSplits = intArray0;
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getDatum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      int[][] intArray0 = new int[0][1];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = null;
      try {
        taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, (String) null, 0L, (String) null, (-795), (String) null, "?rtn/Uz!>VK&L_{", intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[0][9];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = null;
      try {
        taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "NaN", (-3981L), "mapreduce.job.counters.group.name.max", (-1796644053), "JiZ4H0fpw@oKwXv", "mapreduce.job.counters.group.name.max", counters0, intArray0, (-3981L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.REDUCE;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[0][4];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = null;
      try {
        taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "STATUS", 0L, "8@:ZmNjt", 472, "STATUS", "STATUS", counters0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.hadoop.mapred.ProgressSplitsBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 3446L, ",^R;j=47xNvPSP3lm", 1858, "", "", counters0, (int[][]) null);
      EventType eventType0 = taskAttemptUnsuccessfulCompletionEvent0.getEventType();
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(EventType.REDUCE_ATTEMPT_KILLED, eventType0);
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1858, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(3446L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", 1, taskType0, 1, 1629);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", 1629, "|L35", 432, "TASK_ATTEMPT_ID", "@l", counters0, (int[][]) null, 0L);
      EventType eventType0 = taskAttemptUnsuccessfulCompletionEvent0.getEventType();
      assertEquals("TASK_ATTEMPT_ID", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(432, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("@l", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(1629L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("|L35", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(EventType.MAP_ATTEMPT_KILLED, eventType0);
      assertEquals("org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("HOSTNAME", (-991), taskType0, (-991), (-991));
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "FAILED", 3600000L, "sE", "sE");
      EventType eventType0 = taskAttemptUnsuccessfulCompletionEvent0.getEventType();
      assertEquals("sE", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("sE", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(EventType.MAP_ATTEMPT_FAILED, eventType0);
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(3600000L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.REDUCE;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("FAILED", 1, taskType0, (-1970284015), 3521);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "FAILED", 0L, ",^R;j=47xNvPSP3lm", (-1970284015), "org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", ",^R;j=47xNvPSP3lm", counters0, (int[][]) null, (-1970284015));
      EventType eventType0 = taskAttemptUnsuccessfulCompletionEvent0.getEventType();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(EventType.REDUCE_ATTEMPT_FAILED, eventType0);
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals((-1970284015), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals((-1970284015L), taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "q&UY-#|0YQaa>6nYk+", 0L, "q&UY-#|0YQaa>6nYk+", " K9>fd/O{I=^rOeG4");
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getRackName();
      assertEquals("q&UY-#|0YQaa>6nYk+", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(" K9>fd/O{I=^rOeG4", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("", string0);
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("q&UY-#|0YQaa>6nYk+", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getHostname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getError();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getTaskId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      TaskAttemptID taskAttemptID0 = taskAttemptUnsuccessfulCompletionEvent0.getTaskAttemptId();
      assertNull(taskAttemptID0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.getTaskType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletionEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Counters counters0 = new Counters();
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("@l", 1, taskType0, 1, 1629);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", 1629, "|L35", 432, "TASK_ATTEMPT_ID", "@l", counters0, (int[][]) null, 0L);
      int int0 = taskAttemptUnsuccessfulCompletionEvent0.getPort();
      assertEquals("TASK_ATTEMPT_ID", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(1629L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("org.apache.hadoop.thirdparty.com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(432, int0);
      assertEquals("|L35", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("@l", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 3446L, ",^R;j=47xNvPSP3lm", 1858, "", "", counters0, (int[][]) null);
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getFinishTime();
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(3446L, long0);
      assertEquals(1858, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_SETUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 0L, "f/A/@", "");
      TimelineEvent timelineEvent0 = taskAttemptUnsuccessfulCompletionEvent0.toTimelineEvent();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("f/A/@", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("REDUCE_ATTEMPT_KILLED", timelineEvent0.getId());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      String string0 = taskAttemptUnsuccessfulCompletionEvent0.getRackName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][0];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "ERROR", 355, "ERROR", 355, (String) null, "El!v04ux'bU:R1wu", counters0, intArray0, 65536);
      TaskAttemptUnsuccessfulCompletion taskAttemptUnsuccessfulCompletion0 = (TaskAttemptUnsuccessfulCompletion)taskAttemptUnsuccessfulCompletionEvent0.getDatum();
      assertEquals(355, taskAttemptUnsuccessfulCompletion0.port);
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(355L, taskAttemptUnsuccessfulCompletion0.finishTime);
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(65536L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("El!v04ux'bU:R1wu", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertNotNull(taskAttemptUnsuccessfulCompletion0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("\"TAbT@L", 953, taskType0, 953, 953);
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "\"TAbT@L", 953, "\"TAbT@L", "\"TAbT@L");
      taskAttemptUnsuccessfulCompletionEvent0.getDatum();
      TaskAttemptUnsuccessfulCompletion taskAttemptUnsuccessfulCompletion0 = (TaskAttemptUnsuccessfulCompletion)taskAttemptUnsuccessfulCompletionEvent0.getDatum();
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("\"TAbT@L", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertNotNull(taskAttemptUnsuccessfulCompletion0);
      assertEquals((-1), taskAttemptUnsuccessfulCompletion0.port);
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("\"TAbT@L", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("\"TAbT@L", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals(953L, taskAttemptUnsuccessfulCompletion0.finishTime);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.JOB_CLEANUP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "", 3446L, ",^R;j=47xNvPSP3lm", 1858, "", "", counters0, (int[][]) null);
      taskAttemptUnsuccessfulCompletionEvent0.getCpuUsages();
      assertEquals(1858, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(3446L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals(",^R;j=47xNvPSP3lm", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getError());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent();
      int[] intArray0 = taskAttemptUnsuccessfulCompletionEvent0.getClockSplits();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "PORT", 0L, "PORT", 2316, "PORT", "PORT", counters0, (int[][]) null, (-3228L));
      long long0 = taskAttemptUnsuccessfulCompletionEvent0.getStartTime();
      assertEquals(2316, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals((-3228L), long0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("HAS_EC", (-1049), taskType0, (-1049), (-1049));
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "HAS_EC", (-1049), "HAS_EC", "HAS_EC");
      Object object0 = taskAttemptUnsuccessfulCompletionEvent0.getDatum();
      // Undeclared exception!
      try { 
        taskAttemptUnsuccessfulCompletionEvent0.setDatum(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // TaskAttemptId string : attempt_HAS_EC_-1049_m_-001049_-1049 is not properly formed
         //
         verifyException("org.apache.hadoop.mapreduce.TaskAttemptID", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.TASK_CLEANUP;
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "SORT_FINISH_TIME", 0L, "SORT_FINISH_TIME", "SORT_FINISH_TIME");
      taskAttemptUnsuccessfulCompletionEvent0.getVMemKbytes();
      assertEquals(0L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("SORT_FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("SORT_FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("SORT_FINISH_TIME", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TaskType taskType0 = TaskType.MAP;
      TaskAttemptID taskAttemptID0 = new TaskAttemptID("HOSTNAME", (-991), taskType0, (-991), (-991));
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "FAILED", 3600000L, "sE", "sE");
      taskAttemptUnsuccessfulCompletionEvent0.getTimelineMetrics();
      assertEquals("", taskAttemptUnsuccessfulCompletionEvent0.getRackName());
      assertEquals("FAILED", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(1392409281320L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals("sE", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("sE", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
      assertEquals(3600000L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals((-1), taskAttemptUnsuccessfulCompletionEvent0.getPort());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TaskAttemptID taskAttemptID0 = new TaskAttemptID();
      TaskType taskType0 = TaskType.MAP;
      Counters counters0 = new Counters();
      int[][] intArray0 = new int[9][0];
      TaskAttemptUnsuccessfulCompletionEvent taskAttemptUnsuccessfulCompletionEvent0 = new TaskAttemptUnsuccessfulCompletionEvent(taskAttemptID0, taskType0, "ERROR", 355, "ERROR", 355, (String) null, "El!v04ux'bU:R1wu", counters0, intArray0, 65536);
      taskAttemptUnsuccessfulCompletionEvent0.getPhysMemKbytes();
      assertEquals(65536L, taskAttemptUnsuccessfulCompletionEvent0.getStartTime());
      assertEquals(355, taskAttemptUnsuccessfulCompletionEvent0.getPort());
      assertEquals("El!v04ux'bU:R1wu", taskAttemptUnsuccessfulCompletionEvent0.getError());
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getTaskStatus());
      assertEquals(355L, taskAttemptUnsuccessfulCompletionEvent0.getFinishTime());
      assertEquals("ERROR", taskAttemptUnsuccessfulCompletionEvent0.getHostname());
  }
}
