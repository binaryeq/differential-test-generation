* EvoSuite 1.2.0
* Going to generate test cases for class: org.jfree.chart.plot.FastScatterPlot
* Starting Client-0
* Connecting to master process on port 20170
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/org/jfree/jfreechart/1.5.4/jfreechart-1.5.4.jar
  - t/dependency/apiguardian-api-1.1.2.jar
  - t/dependency/byte-buddy-1.12.19.jar
  - t/dependency/equalsverifier-3.12.3.jar
  - t/dependency/junit-jupiter-api-5.9.1.jar
  - t/dependency/junit-jupiter-engine-5.9.1.jar
  - t/dependency/junit-platform-commons-1.9.1.jar
  - t/dependency/junit-platform-engine-1.9.1.jar
  - t/dependency/objenesis-3.3.jar
  - t/dependency/opentest4j-1.2.0.jar
  - t/dependency/servlet-api-2.5.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.plot.FastScatterPlot
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 1307
* Using seed 1729722023684
* Starting evolution
* Initial Number of Goals in DynaMOSA = 548 / 1307
[Progress:>                             3%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            6%] [Cov:=================>                 51%][MASTER] 11:20:36.616 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.JComboBox<E> : Type points to itself
[Progress:==>                           8%] [Cov:===================>               57%][Progress:===>                          10%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:======>                       21%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        77%][MASTER] 11:20:55.624 [logback-1] WARN  ClassResetter - class java.lang.reflect.InvocationTargetException thrown during execution of method  __STATIC_RESET() for class org.jfree.chart.JFreeChart, java.lang.IllegalArgumentException: org.jfree.chart.JFreeChart$1@37329a46:0 already registered
[Progress:============>                 40%] [Cov:==========================>        77%][Progress:============>                 41%] [Cov:==========================>        77%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][MASTER] 11:21:13.439 [logback-1] WARN  TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[Progress:====================>         68%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 65s and 55 generations, 30847 statements, best individual has fitness: 242.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 284
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 135
* Number of covered goals: 113
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 481
* Number of covered goals: 424
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 182
* Number of covered goals: 87
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 135
* Number of covered goals: 110
* Generated 79 tests with total length 322
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         execute /usr/bin/xprop: 1
* Writing tests to file
* Writing JUnit test case 'FastScatterPlot_ESTest' to evosuite-tests
* Done!

* Computation finished
