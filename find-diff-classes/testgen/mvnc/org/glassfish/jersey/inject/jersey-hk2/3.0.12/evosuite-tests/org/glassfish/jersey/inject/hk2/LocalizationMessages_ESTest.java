/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 01:00:43 GMT 2024
 */

package org.glassfish.jersey.inject.hk2;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.glassfish.jersey.inject.hk2.LocalizationMessages;
import org.glassfish.jersey.internal.l10n.Localizable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizationMessages_ESTest extends LocalizationMessages_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.HK_2_REIFICATION_ERROR(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableHK_2_REIFICATION_ERROR(object1, object0);
      assertEquals("hk2.reification.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.HK_2_CLEARING_CACHE(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableHK_2_FAILURE_OUTSIDE_ERROR_SCOPE();
      assertEquals("hk2.failure.outside.error.scope", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableHK_2_PROVIDER_NOT_REGISTRABLE(object0);
      assertEquals("hk2.provider.not.registrable", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableHK_2_UNKNOWN_ERROR((Object) null);
      assertEquals("hk2.unknown.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = LocalizationMessages.HK_2_FAILURE_OUTSIDE_ERROR_SCOPE();
      assertEquals("HK2 failure has been detected in a code that does not run in an active Jersey Error scope.", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.HK_2_UNKNOWN_PARENT_INJECTION_MANAGER(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.HK_2_UNKNOWN_ERROR(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableHK_2_UNKNOWN_PARENT_INJECTION_MANAGER(object0);
      Localizable localizable1 = LocalizationMessages.localizableHK_2_CLEARING_CACHE(localizable0, object0);
      assertEquals("hk2.unknown.parent.injection.manager", localizable0.getKey());
      assertEquals("hk2.clearing.cache", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.HK_2_PROVIDER_NOT_REGISTRABLE(object0);
      assertNotNull(string0);
  }
}
