/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 00:59:34 GMT 2024
 */

package org.glassfish.jersey.server.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.glassfish.jersey.internal.l10n.Localizable;
import org.glassfish.jersey.server.internal.LocalizationMessages;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizationMessages_ESTest extends LocalizationMessages_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_FORMAT(object0, "Message Body Writers");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER("Could not marshal the wadl Application.", object0);
      assertEquals("error.parameter.missing.value.provider", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WADL_DOC_EXTENDED_WADL(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_VALUE_EMPTY(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_VALUE_EMPTY(object1, object0);
      assertEquals("invalid.mapping.value.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE_PATH(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(object0, "Validation of the application resource model has failed during application initialization.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_APPLICATION_WADL();
      Object object1 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_IN(localizable0, object1, object0, object1);
      assertEquals("error.wadl.resource.application.wadl", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableAMBIGUOUS_RMS_IN(localizable0, localizable0, object0, object1);
      assertEquals("error.monitoring.mbeans.unregistration.destroy", localizable0.getKey());
      assertEquals("ambiguous.rms.in", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_CONFIG_LOADER_PROPERTY(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_APPLICATION_INITIALIZED();
      Localizable localizable1 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      String string0 = LocalizationMessages.AMBIGUOUS_FATAL_RMS(localizable1, "An exception mapping did not successfully produce and processed a response. Logging the original error.", "A HTTP GET method Jersey application initialized. that is being injected with SseEventSink should return void. The output will propagate automatically.", localizable0);
      assertEquals("A resource model has ambiguous (sub-)resource method for HTTP method Error un-registering Jersey monitoring MBeans on application destroy. and input mime-types as defined by\"@Consumes\" and \"@Produces\" annotations at Java methods An exception mapping did not successfully produce and processed a response. Logging the original error. and A HTTP GET method Jersey application initialized. that is being injected with SseEventSink should return void. The output will propagate automatically. at matching regular expression Jersey application initialized.. These two methods produces and consumes exactly the same mime-types and therefore their invocation as a resource methods will always fail.", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_FATAL_RMS(object0, object0, object1, object0);
      assertEquals("ambiguous.fatal.rms", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_PARAMETER(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_REQUEST_MEDIA_TYPE(object0, object1, "WebApplicationException (WAE) with non-null entity thrown. Response with status java.lang.Object@4b9ba527 is directly generated from the WAE.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_MAPPER();
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_REQUEST_MEDIA_TYPE(localizable0, object0, object1);
      assertEquals("error.wadl.builder.generation.request.media.type", localizable1.getKey());
      assertEquals("error.monitoring.queue.mapper", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.CONTRACT_CANNOT_BE_BOUND_TO_RESOURCE_METHOD(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_UNSUPPORTED_ENCODING(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_EMPTY(object1, object0);
      assertEquals("resource.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableGET_RETURNS_VOID((Object) null);
      String string0 = LocalizationMessages.LOGGING_PROVIDER_BOUND((Object) null, localizable0);
      assertEquals("null bound to A HTTP GET method, null, returns a void type. It can be intentional and perfectly fine, but it is a little uncommon that GET method returns always \"204 No Content\".", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE_LOCATOR(object0, "A resource model has ambiguous sub-resource locators on path pattern Provided WebApplicationException (WAE) with no entity thrown and no ExceptionMappers have been found for this WAE. Response with status javax.xml.transform package could not be found. WADL feature is disabled. is directly generated from the WAE. property value type is invalid. Acceptable types are String and String[]..");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCALLBACK_ARRAY_ELEMENT_NULL();
      Object object0 = new Object();
      Object object1 = new Object();
      LocalizationMessages.ILLEGAL_CLIENT_CONFIG_CLASS_PROPERTY_VALUE(localizable0, object0, object1);
      assertEquals("callback.array.element.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.PARAMETER_UNRESOLVABLE(object0, "Exception thrown when provider java.lang.Object@3afdac1c was processing MonitoringStatistics. Removing provider from further processing.", (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableGET_RETURNS_VOID((Object) null);
      Object object0 = new Object();
      LocalizationMessages.PROPERTY_VALUE_TOSTRING_THROWS_EXCEPTION(object0, localizable0);
      assertEquals("get.returns.void", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_KEY_EMPTY(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_KEY_EMPTY(object0, object1);
      assertEquals("invalid.mapping.key.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_RESPONSE_FILTERS();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESPONSE(object0, localizable0);
      assertEquals("logging.global.response.filters", localizable0.getKey());
      assertEquals("error.wadl.builder.generation.response", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_CACHE_INVALID_SIZE(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(object0, object0);
      LocalizationMessages.INVALID_CONFIG_PROPERTY_VALUE(object0, localizable0);
      assertEquals("resource.contains.res.methods.and.locator", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_SRLS(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.METHOD_UNEXPECTED_ANNOTATION("Default value, java.lang.Object@63898e49 could not be processed by method Jersey application initialized..", "An exception mapping did not successfully produce and processed a response. Logging the original error.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(object0);
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableMETHOD_UNEXPECTED_ANNOTATION(localizable0, object0, object1);
      assertEquals("method.unexpected.annotation", localizable1.getKey());
      assertEquals("unable.to.load.class", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_PARAM(object1, object0, "Lookup and initialization failed for a resource class: java.lang.Object@14b8ce4b.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPING_WAE_NO_ENTITY(object0);
      Localizable localizable1 = LocalizationMessages.localizableSUSPEND_HANDLER_EXECUTION_FAILED();
      Localizable localizable2 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_PARAM(localizable0, localizable1, (Object) null);
      assertEquals("exception.mapping.wae.no.entity", localizable0.getKey());
      assertEquals("error.wadl.builder.generation.param", localizable2.getKey());
      assertEquals("suspend.handler.execution.failed", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.WADL_DOC_SIMPLE_WADL(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_REQUEST("WebApplicationException (WAE) with non-null entity thrown. Response with status Method Error occurred when processing a response created from an already mapped exception. on resource Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception.. contains multiple parameters with no annotation. Unable to resolve the injection source. is directly generated from the WAE.", "Method Error occurred when processing a response created from an already mapped exception. on resource Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception.. contains multiple parameters with no annotation. Unable to resolve the injection source.");
      assertEquals("Error generating wadl for request representation of resource method WebApplicationException (WAE) with non-null entity thrown. Response with status Method Error occurred when processing a response created from an already mapped exception. on resource Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception.. contains multiple parameters with no annotation. Unable to resolve the injection source. is directly generated from the WAE. of resource Method Error occurred when processing a response created from an already mapped exception. on resource Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception.. contains multiple parameters with no annotation. Unable to resolve the injection source..", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.RESOURCE_AMBIGUOUS(object0, object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.RESOURCE_AMBIGUOUS(object1, object0, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_MAPPER();
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableRESOURCE_AMBIGUOUS(localizable0, object1, object0);
      assertEquals("error.monitoring.queue.mapper", localizable0.getKey());
      assertEquals("resource.ambiguous", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = LocalizationMessages.SINGLETON_INJECTS_PARAMETER("User not authorized.", "More than one external request scope found. None of them will be used. Jersey runtime can only accommodate a single external request scope: Error generating wadl response representation for method This chunked output has been closed. of resource This chunked output has been closed..");
      assertEquals("Parameter More than one external request scope found. None of them will be used. Jersey runtime can only accommodate a single external request scope: Error generating wadl response representation for method This chunked output has been closed. of resource This chunked output has been closed.. of User not authorized. cannot be injected into singleton resource.", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(object0, object1);
      assertEquals("sub.res.method.treated.as.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_EMPTY_PATH_ANNOTATION((Object) null, "A resource, java.lang.Object@460f34b8, has ambiguous sub-resource locators on path Global Request Filters.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_EMPTY_PATH_ANNOTATION(object0, object1);
      assertEquals("method.empty.path.annotation", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableCONTRACT_CANNOT_BE_BOUND_TO_RESOURCE_METHOD(object0, object0);
      Localizable localizable1 = LocalizationMessages.localizableERROR_SUB_RESOURCE_LOCATOR_MORE_RESOURCES(object0);
      LocalizationMessages.AMBIGUOUS_RMS_OUT(object0, localizable1, localizable0, object0);
      assertEquals("contract.cannot.be.bound.to.resource.method", localizable0.getKey());
      assertEquals("error.sub.resource.locator.more.resources", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableCONTRACT_CANNOT_BE_BOUND_TO_RESOURCE_METHOD(object0, object0);
      Object object1 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_OUT(object1, localizable0, localizable0, object0);
      assertEquals("contract.cannot.be.bound.to.resource.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(object0, object0);
      LocalizationMessages.WADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES(localizable0, object0, "One of additional callbacks is null.", object0);
      assertEquals("resource.contains.res.methods.and.locator", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES((Object) null, (Object) null, object0, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES(object0, object0, object0, object1);
      assertEquals("wadl.resourcedoc.ambiguous.method.entries", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPING_WAE_NO_ENTITY(object0);
      LocalizationMessages.RESOURCE_IMPLEMENTS_PROVIDER(localizable0, object0);
      assertEquals("exception.mapping.wae.no.entity", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_MERGE_CONFLICT_LOCATORS("Both application and applicationClass cant be null.", "Unable to read the next Jar entry.", "Both application and applicationClass cant be null.");
      assertEquals("Both resources, resource Both application and applicationClass cant be null. and resource Unable to read the next Jar entry., contains sub resource locators on the same path Both application and applicationClass cant be null..", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MERGE_CONFLICT_LOCATORS(object1, object0, "Ambiguous resource documentation detected: Unique resource method documentation cannot be found for method %null.%null%java.lang.Object@6ff8c868. Selecting the first available method documentation element from the list of java.lang.Object@6ff8c868 possible candidates.\"");
      assertEquals("resource.merge.conflict.locators", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_MERGE_CONFLICT_LOCATORS(object0, object0, "Unable to read the next Jar entry.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_CACHE_INVALID_SIZE(object0, (Object) null);
      assertEquals("subres.loc.cache.invalid.size", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPER_THROWS_EXCEPTION(object0);
      assertEquals("exception.mapper.throws.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(object0);
      assertEquals("get.consumes.form.param", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WRITING_RESPONSE_ENTITY_CHUNK();
      assertEquals("error.writing.response.entity.chunk", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_RESPONSE();
      assertEquals("error.monitoring.queue.response", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONFIG_UNABLE_TO_PROCESS(object0);
      assertEquals("resource.config.unable.to.process", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_CONFIG_PROPERTY_VALUE((Object) null, object0);
      assertEquals("invalid.config.property.value", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(object0, object0);
      assertEquals("multiple.http.method.designators", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_METHOD("Global Reader Interceptors", "Global Reader Interceptors");
      assertEquals("error.wadl.builder.generation.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER(object0, object0);
      Localizable localizable1 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_METHOD("Resource Java method invocation error.", localizable0);
      assertEquals("error.wadl.builder.generation.method", localizable1.getKey());
      assertEquals("error.parameter.missing.value.provider", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWARNING_TOO_MANY_EXTERNAL_REQ_SCOPES((Object) null);
      assertEquals("warning.too.many.external.req.scopes", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      assertEquals("form.param.method.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableUSER_NOT_AUTHORIZED();
      assertEquals("user.not.authorized", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_MARSHAL();
      assertEquals("error.wadl.resource.marshal", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPING_START();
      assertEquals("exception.mapping.start", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_ORIGINAL_EXCEPTION();
      assertEquals("error.exception.mapping.original.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCHUNKED_OUTPUT_CLOSED();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableILLEGAL_CLIENT_CONFIG_CLASS_PROPERTY_VALUE("The wadl application already contains a grammars element, were adding elements of the provided grammars file.", localizable0, object0);
      assertEquals("chunked.output.closed", localizable0.getKey());
      assertEquals("illegal.client.config.class.property.value", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_WRITER_INTERCEPTORS();
      assertEquals("logging.name.bound.writer.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_VALIDATION_SUBRESOURCE();
      assertEquals("error.validation.subresource", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESOURCES_CANNOT_MERGE();
      assertEquals("error.resources.cannot.merge", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_COMMITTING_OUTPUT_STREAM();
      Localizable localizable1 = LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(localizable0);
      assertEquals("error.committing.output.stream", localizable0.getKey());
      assertEquals("new.ar.created.by.introspection.modeler", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(object0);
      Localizable localizable1 = LocalizationMessages.localizableWARNING_MSG(localizable0);
      assertEquals("warning.msg", localizable1.getKey());
      assertEquals("unable.to.load.class", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED_NOJAXB();
      assertEquals("wadl.feature.disabled.nojaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_SCHEDULER_DESTROY_TIMEOUT();
      assertEquals("error.monitoring.scheduler.destroy.timeout", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE();
      assertEquals("error.request.set.security.context.in.response.phase", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableJAR_SCANNER_UNABLE_TO_READ_ENTRY();
      assertEquals("jar.scanner.unable.to.read.entry", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEVENT_SINK_RETURNS_TYPE("Loading model and router from sub-resource locator cache failed for \"java.lang.Object@562bf738\".");
      assertEquals("event.sink.returns.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_REQUEST();
      assertEquals("error.monitoring.queue.request", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_MESSAGE_BODY_READERS();
      Localizable localizable1 = LocalizationMessages.localizableAMBIGUOUS_NON_ANNOTATED_PARAMETER(localizable0, localizable0);
      String string0 = LocalizationMessages.ERROR_PROCESSING_METHOD(localizable1, localizable0);
      assertEquals("Error processing resource method, Method Message Body Readers on resource Message Body Readers contains multiple parameters with no annotation. Unable to resolve the injection source., for ResourceMethodDispatchProvider, Message Body Readers.", string0);
      assertEquals("ambiguous.non.annotated.parameter", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_LISTENER_DESTROY(object0);
      assertEquals("error.monitoring.statistics.listener.destroy", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_TYPE_PROCESSING(object0);
      assertEquals("error.parameter.type.processing", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIG_LOADER_PROPERTY("Exception thrown when listener null has been processing the destroy event.", object0);
      assertEquals("error.wadl.generator.config.loader.property", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD("The security context cannot be set in the request as it is already in the response processing phase.", "The security context cannot be set in the request as it is already in the response processing phase.");
      assertEquals("default.could.not.process.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_CLOSING_COMMIT_OUTPUT_STREAM();
      assertEquals("error.closing.commit.output.stream", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MARSHALLING_JAXB(object0);
      assertEquals("error.marshalling.jaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED_NOTRANSFORM();
      assertEquals("wadl.feature.disabled.notransform", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_INVALID_CHAR_VALUE(object0);
      assertEquals("error.parameter.invalid.char.value", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_JAXB_CONTEXT_FALLBACK();
      assertEquals("wadl.jaxb.context.fallback", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_PRE_MATCH_FILTERS();
      assertEquals("logging.pre.match.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GRAMMAR_ALREADY_CONTAINS();
      assertEquals("error.wadl.grammar.already.contains", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINIT_MSG((Object) null);
      assertEquals("init.msg", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MONITORING_FEATURE_DISABLED("Both application and applicationClass cant be null.");
      assertEquals("warning.monitoring.feature.disabled", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE("A response error mapping did not successfully produce and processed a response.");
      Localizable localizable1 = LocalizationMessages.localizableNON_INSTANTIABLE_COMPONENT(localizable0);
      assertEquals("non.instantiable.component", localizable1.getKey());
      assertEquals("error.wadl.builder.generation.resource", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_INVOCABLE_FROM_PREMATCH_FILTERS_ONLY();
      assertEquals("method.invocable.from.prematch.filters.only", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIGURE();
      assertEquals("error.wadl.generator.configure", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINJECTED_WEBTARGET_URI_INVALID("Name-bound Request Filters");
      assertEquals("injected.webtarget.uri.invalid", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      assertEquals("suspend.not.suspended", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_PROCESSED_RESPONSE_ERROR();
      assertEquals("error.exception.mapping.processed.response.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE();
      assertEquals("error.request.set.entity.stream.in.response.phase", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePREMATCHING_ALSO_NAME_BOUND(object0);
      assertEquals("prematching.also.name.bound", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_SRLS(object0, (Object) null);
      assertEquals("ambiguous.srls", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_APP();
      assertEquals("error.monitoring.queue.app", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableMULTIPLE_EVENT_SINK_INJECTION(object0);
      assertEquals("multiple.event.sink.injection", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_ROOT_RESOURCE_CLASSES();
      assertEquals("logging.root.resource.classes", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizablePARAMETER_UNRESOLVABLE("Unsupported collection type.", "Unsupported collection type.", "Unsupported collection type.");
      assertEquals("parameter.unresolvable", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_SUB_RES_LOC("Global Response Filters");
      assertEquals("non.pub.sub.res.loc", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIG_LOADER(object0);
      assertEquals("error.wadl.generator.config.loader", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_REQUEST("Additional array of callbacks is null.", "Additional array of callbacks is null.");
      assertEquals("error.wadl.builder.generation.request", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS();
      assertEquals("resource.config.error.null.applicationclass", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_SCHEDULING_ERROR();
      assertEquals("suspend.scheduling.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE_LOCATOR("Name-bound Response Filters", "Name-bound Response Filters");
      assertEquals("error.wadl.builder.generation.resource.locator", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_REGISTRATION(object0);
      assertEquals("error.monitoring.mbeans.registration", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_EXTERNAL_GRAMMAR();
      assertEquals("error.wadl.external.grammar", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_REQUEST_FILTERS();
      assertEquals("logging.global.request.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_REPLACED_CHILD_DOES_NOT_EXIST(object0);
      assertEquals("resource.replaced.child.does.not.exist", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_THROWN_TO_CONTAINER();
      assertEquals("error.exception.mapping.thrown.to.container", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MSG((Object) null);
      assertEquals("error.msg", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_IMPLEMENTS_PROVIDER(object0, object0);
      assertEquals("resource.implements.provider", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_PARAMETER((Object) null, object0);
      assertEquals("ambiguous.parameter", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_TYPE("Name-bound Reader Interceptors");
      assertEquals("invalid.mapping.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PROCESSING_METHOD(object0, "A (sub-)resource method, Time-out handler execution failed., should have only one HTTP method designator. It currently has the following designators defined: java.lang.Object@3557a93");
      assertEquals("error.processing.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSECURITY_CONTEXT_WAS_NOT_SET();
      assertEquals("security.context.was.not.set", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePROPERTY_VALUE_TOSTRING_THROWS_EXCEPTION(object0, "Initiating Jersey application, version Name-bound Reader Interceptors...");
      assertEquals("property.value.tostring.throws.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWADL_DOC_SIMPLE_WADL(object0, object0);
      assertEquals("wadl.doc.simple.wadl", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_LOOKUP_FAILED("\"@Uri\"-based injection of \"java.lang.Object@38473182\" type is not supported.");
      Localizable localizable1 = LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(localizable0, "Component of class java.lang.Object@7054686c cannot be instantiated and will be ignored.", object0, object0);
      assertEquals("resource.lookup.failed", localizable0.getKey());
      assertEquals("ambiguous.rms.out", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_MESSAGE_BODY_WRITERS();
      assertEquals("logging.message.body.writers", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MONITORING_MBEANS_BEAN_ALREADY_REGISTERED(object0);
      assertEquals("warning.monitoring.mbeans.bean.already.registered", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(object0);
      assertEquals("subres.loc.returns.void", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      assertEquals("error.wadl.resource.external.grammar", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESOURCE_JAVA_METHOD_INVOCATION();
      assertEquals("error.resource.java.method.invocation", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_GENERATION();
      Object object0 = new Object();
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESPONSE(localizable0, object0);
      assertEquals("error.monitoring.statistics.generation", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_FLOODED(object0);
      LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(object0, localizable0);
      assertEquals("error.monitoring.queue.flooded", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESPONSE_ALREADY_COMMITED();
      assertEquals("error.response.already.commited", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_PRIMITIVE_TYPE_NULL();
      assertEquals("error.primitive.type.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableCLOSEABLE_INJECTED_REQUEST_CONTEXT_NULL(object0);
      assertEquals("closeable.injected.request.context.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSINGLETON_INJECTS_PARAMETER("Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.", "Additional array of callbacks is null.");
      assertEquals("singleton.injects.parameter", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(object0);
      assertEquals("method.parameter.cannot.be.null.or.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_READER_INTERCEPTORS();
      assertEquals("logging.global.reader.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_LOAD();
      assertEquals("error.wadl.generator.load", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MODEL_VALIDATION_FAILED_AT_INIT();
      assertEquals("resource.model.validation.failed.at.init", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_FORMAT("Could not load wadl generators from wadlGeneratorDescriptions.", "Could not load wadl generators from wadlGeneratorDescriptions.");
      assertEquals("invalid.mapping.format", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableUNSUPPORTED_URI_INJECTION_TYPE("User not authorized.");
      assertEquals("unsupported.uri.injection.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_UPDATED_METHOD_DOES_NOT_EXIST("Resource Java method invocation error.");
      assertEquals("resource.updated.method.does.not.exist", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_UNSUPPORTED_ENCODING("A response error mapping did not successfully produce and processed a response.", (Object) null);
      assertEquals("error.unsupported.encoding", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(object0, object0);
      assertEquals("subres.loc.uri.path.invalid", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_SHUTDOWN_INTERRUPTED();
      assertEquals("error.monitoring.shutdown.interrupted", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_ADD_CHILD_ALREADY_CHILD();
      Localizable localizable1 = LocalizationMessages.localizableGET_CONSUMES_ENTITY(localizable0);
      assertEquals("resource.add.child.already.child", localizable0.getKey());
      assertEquals("get.consumes.entity", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MONITORING_FEATURE_ENABLED("The resource configuration is not modifiable in this context.");
      assertEquals("warning.monitoring.feature.enabled", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableBROADCASTER_LISTENER_EXCEPTION(object0);
      assertEquals("broadcaster.listener.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SCANNING_CLASS_NOT_FOUND((Object) null);
      assertEquals("error.scanning.class.not.found", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED();
      assertEquals("wadl.feature.disabled", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_WRITER_INTERCEPTORS();
      assertEquals("logging.global.writer.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_JAXB_CONTEXT();
      assertEquals("error.wadl.jaxb.context", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SUSPENDING_CHUNKED_OUTPUT_RESPONSE();
      assertEquals("error.suspending.chunked.output.response", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_SRLS_PATH_PATTERN("Global Writer Interceptors");
      assertEquals("ambiguous.srls.pathPattern", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_RESPONSE_FILTERS();
      Localizable localizable1 = LocalizationMessages.localizableERROR_CLOSING_FINDER(localizable0);
      assertEquals("error.closing.finder", localizable1.getKey());
      assertEquals("logging.global.response.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(object0, object0);
      assertEquals("type.of.method.not.resolvable.to.concrete.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePARAM_NULL(object0);
      assertEquals("param.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_PARAMETER_CANNOT_BE_NULL("Error while closing the output stream in order to commit response.");
      assertEquals("method.parameter.cannot.be.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWADL_DOC_EXTENDED_WADL(object0, object0);
      assertEquals("wadl.doc.extended.wadl", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(object0);
      LocalizationMessages.ERROR_PARAMETER_MISSING_VALUE_PROVIDER("A resource model has ambiguous (sub-)resource method for HTTP method A sub-resource model, java.lang.Object@74df468d, can not have an entity parameter. Try to move the parameter to the corresponding resource method. and input mime-types as defined by \"@Consumes\" annotation at Java methods java.lang.Object@7f129f60 and java.lang.Object@4eff917 at matching path pattern java.lang.Object@7f129f60. This could cause an error for conflicting output types!", localizable0);
      assertEquals("subres.loc.has.entity.param", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_PROCESSING_RESPONSE_FROM_ALREADY_MAPPED_EXCEPTION();
      String string0 = LocalizationMessages.AMBIGUOUS_NON_ANNOTATED_PARAMETER(localizable0, "Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception..");
      assertEquals("Method Error occurred when processing a response created from an already mapped exception. on resource Error generating wadl application for one specific resource Error occurred when processing a response created from an already mapped exception.. contains multiple parameters with no annotation. Unable to resolve the injection source.", string0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_RESOURCE_METHOD(object0);
      LocalizationMessages.RESOURCE_EMPTY(object0, localizable0);
      assertEquals("ambiguous.resource.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPER_FAILED_FOR_EXCEPTION();
      assertEquals("exception.mapper.failed.for.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      Localizable localizable1 = LocalizationMessages.localizableERROR_ASYNC_CALLBACK_FAILED(localizable0);
      assertEquals("error.async.callback.failed", localizable1.getKey());
      assertEquals("error.monitoring.mbeans.unregistration.destroy", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCOLLECTION_EXTRACTOR_TYPE_UNSUPPORTED();
      assertEquals("collection.extractor.type.unsupported", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE_PATH(object0, object0);
      Localizable localizable1 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_METHOD(localizable0, localizable1);
      assertEquals("error.wadl.builder.generation.resource.path", localizable0.getKey());
      assertEquals("error.monitoring.mbeans.unregistration.destroy", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPING_WAE_ENTITY(object0);
      assertEquals("exception.mapping.wae.entity", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(object0);
      assertEquals("non.pub.sub.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_REQUEST_FILTERS();
      Localizable localizable1 = LocalizationMessages.localizableLOGGING_PROVIDER_BOUND(localizable0, localizable0);
      assertEquals("logging.provider.bound", localizable1.getKey());
      assertEquals("logging.name.bound.request.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCALLBACK_ARRAY_NULL();
      assertEquals("callback.array.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRELEASING_REQUEST_PROCESSING_RESOURCES_FAILED();
      assertEquals("releasing.request.processing.resources.failed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WRITING_RESPONSE_ENTITY();
      assertEquals("error.writing.response.entity", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRC_NOT_MODIFIABLE();
      Object object0 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_IN(object0, object0, object0, localizable0);
      assertEquals("rc.not.modifiable", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableCLOSEABLE_UNABLE_TO_CLOSE(object0);
      assertEquals("closeable.unable.to.close", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_CONTENT_TYPE_ERROR();
      assertEquals("form.param.content-type.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_RES_METHOD(object0);
      assertEquals("non.pub.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_LISTENER("Error generating /application.wadl.");
      assertEquals("Exception thrown when provider Error generating /application.wadl. was processing MonitoringStatistics. Removing provider from further processing.", string0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_UNMARSHALLING_JAXB(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_MULTIPLE_SCOPE_ANNOTATIONS(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.CLOSEABLE_UNABLE_TO_CLOSE(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = LocalizationMessages.CALLBACK_ARRAY_NULL();
      assertEquals("Additional array of callbacks is null.", string0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM();
      assertEquals("Error while committing the output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_ASYNC_CALLBACK_FAILED("Error configuring the given user WadlGenerator by configure() method.");
      assertEquals("Callback Error configuring the given user WadlGenerator by configure() method. invocation failed.", string0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String string0 = LocalizationMessages.JAR_SCANNER_UNABLE_TO_READ_ENTRY();
      assertEquals("Unable to read the next Jar entry.", string0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_PRE_MATCH_FILTERS();
      assertEquals("Pre-match Filters", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String string0 = LocalizationMessages.PREMATCHING_ALSO_NAME_BOUND("Model validation error(s) found in sub resource returned by sub resource locator.");
      assertEquals("@PreMatching provider, Model validation error(s) found in sub resource returned by sub resource locator., also annotated with a name binding annotation. Name binding will be ignored.", string0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_MBEANS_REGISTRATION("Both application and applicationClass cant be null.");
      assertEquals("Error when registering Jersey monitoring MBeans. Registration of MBean with name \"Both application and applicationClass cant be null.\" failed.", string0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      String string0 = LocalizationMessages.JAR_SCANNER_UNABLE_TO_CLOSE_FILE();
      assertEquals("Unable to close Jar file.", string0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PARAMETER_TYPE_PROCESSING("Attempt to suspend a connection of an asynchronous request failed in the underlying container.");
      assertEquals("Could not process parameter type Attempt to suspend a connection of an asynchronous request failed in the underlying container..", string0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String string0 = LocalizationMessages.EVENT_SINK_RETURNS_TYPE("Validation of the application resource model has failed during application initialization.");
      assertEquals("A HTTP GET method Validation of the application resource model has failed during application initialization. that is being injected with SseEventSink should return void. The output will propagate automatically.", string0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_PARAMETER_CANNOT_BE_NULL("Additional array of callbacks is null.");
      assertEquals("Method parameter \"Additional array of callbacks is null.\" cannot be null.", string0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WRITING_RESPONSE_ENTITY_CHUNK();
      assertEquals("An I/O error has occurred while writing a response message entity chunk to the container output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      String string0 = LocalizationMessages.GET_RETURNS_VOID("Global Response Filters");
      assertEquals("A HTTP GET method, Global Response Filters, returns a void type. It can be intentional and perfectly fine, but it is a little uncommon that GET method returns always \"204 No Content\".", string0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_HANDLER_EXECUTION_FAILED();
      assertEquals("Time-out handler execution failed.", string0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GRAMMAR_ALREADY_CONTAINS();
      assertEquals("The wadl application already contains a grammars element, were adding elements of the provided grammars file.", string0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_READER_INTERCEPTORS();
      String string0 = LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(localizable0);
      assertEquals("A sub-resource model, Name-bound Reader Interceptors, can not have an entity parameter. Try to move the parameter to the corresponding resource method.", string0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_CLOSING_COMMIT_OUTPUT_STREAM();
      assertEquals("Error while closing the output stream in order to commit response.", string0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_DYNAMIC_FEATURES();
      assertEquals("Dynamic Features", string0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_CONFIG_LOADER((Object) null);
      assertEquals("Could not load WadlGeneratorConfiguration, check the configuration of \"null\".", string0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_RESPONSE_FILTERS();
      assertEquals("Global Response Filters", string0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.NON_PUB_RES_METHOD(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_LISTENER(object0);
      assertEquals("error.monitoring.statistics.listener", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_READER_INTERCEPTORS();
      assertEquals("Name-bound Reader Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      String string0 = LocalizationMessages.INIT_MSG("Root Resource Classes");
      assertEquals("Initiating Jersey application, version Root Resource Classes...", string0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_REQUEST_FILTERS();
      assertEquals("Global Request Filters", string0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_SCHEDULING_ERROR();
      assertEquals("Error while scheduling a timeout task.", string0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_MSG(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_UPDATED_METHOD_DOES_NOT_EXIST("Name-bound Response Filters");
      assertEquals("Updated resource method does not exist in the model: Name-bound Response Filters.", string0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_PROCESSED_RESPONSE_ERROR();
      assertEquals("A response error mapping did not successfully produce and processed a response.", string0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      String string0 = LocalizationMessages.NON_INSTANTIABLE_COMPONENT("SecurityContext was not set.");
      assertEquals("Component of class SecurityContext was not set. cannot be instantiated and will be ignored.", string0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String string0 = LocalizationMessages.INVALID_MAPPING_TYPE((Object) null);
      assertEquals("Provided null property value type is invalid. Acceptable types are String and String[].", string0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PARAMETER_INVALID_CHAR_VALUE("Failed to add the monitoring event into the Request Items Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.");
      assertEquals("Value \"Failed to add the monitoring event into the Request Items Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.\" is not a character.", string0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.GET_CONSUMES_FORM_PARAM(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_MESSAGE_BODY_WRITERS();
      assertEquals("Message Body Writers", string0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_WRITER_INTERCEPTORS();
      assertEquals("Global Writer Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MULTIPLE_SCOPE_ANNOTATIONS("Waiting for shutdown of MonitoringStatisticsProcessor has timed out! Possible cause can be that any registered MonitoringStatisticsListener takes too long to execute.");
      assertEquals("resource.multiple.scope.annotations", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String string0 = LocalizationMessages.USER_NOT_AUTHORIZED();
      assertEquals("User not authorized.", string0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.NON_PUB_SUB_RES_LOC(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED();
      assertEquals("JAXBContext implementation could not be found. WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_MODEL_VALIDATION_FAILED_AT_INIT();
      assertEquals("Validation of the application resource model has failed during application initialization.", string0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      assertEquals("Error un-registering Jersey monitoring MBeans on application destroy.", string0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_NOT_SUSPENDED();
      assertEquals("Not suspended.", string0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String string0 = LocalizationMessages.WARNING_MSG("The security context cannot be set in the request as it is already in the response processing phase.");
      assertEquals("WARNING: The security context cannot be set in the request as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      String string0 = LocalizationMessages.CALLBACK_ARRAY_ELEMENT_NULL();
      assertEquals("One of additional callbacks is null.", string0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      String string0 = LocalizationMessages.GET_CONSUMES_ENTITY("Waiting for shutdown of MonitoringStatisticsProcessor has been interrupted.");
      assertEquals("A HTTP GET method, Waiting for shutdown of MonitoringStatisticsProcessor has been interrupted., should not consume any entity.", string0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_ABORT_IN_RESPONSE_PHASE();
      String string0 = LocalizationMessages.WARNING_MONITORING_FEATURE_DISABLED(localizable0);
      assertEquals("MonitoringFeature is registered but the configuration property \"The request cannot be aborted as it is already in the response processing phase.\" (enabling basic monitoring statistics) is FALSE. However, the feature is configured to enable exposure of monitoring MBeans (either by property or by direct instance setup), so the monitoring statistics will be enabled as this is prerequisite for Monitoring MBeans. The configuration is inconsistent and may produce unwanted behaviour. Unregister the feature or change the property value.", string0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_READER_INTERCEPTORS();
      assertEquals("Global Reader Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_RESPONSE_FILTERS();
      assertEquals("Name-bound Response Filters", string0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_SCHEDULER_DESTROY_TIMEOUT();
      assertEquals("Waiting for shutdown of MonitoringStatisticsProcessor has timed out! Possible cause can be that any registered MonitoringStatisticsListener takes too long to execute.", string0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MARSHALLING_JAXB("Starting mapping of the exception.");
      assertEquals("Error marshalling JAXB object of type \"Starting mapping of the exception.\".", string0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY((Object) null);
      assertEquals("Method parameter \"null\" cannot be null or empty.", string0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_SRLS_PATH_PATTERN(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      String string0 = LocalizationMessages.RC_NOT_MODIFIABLE();
      assertEquals("The resource configuration is not modifiable in this context.", string0);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = LocalizationMessages.RELEASING_REQUEST_PROCESSING_RESOURCES_FAILED();
      assertEquals("Attempt to release request processing resources has failed for a request.", string0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESOURCE_JAVA_METHOD_INVOCATION();
      assertEquals("Resource Java method invocation error.", string0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE("An exception mapping did not successfully produce and processed a response. Logging the original error.");
      assertEquals("Error generating wadl application for one specific resource An exception mapping did not successfully produce and processed a response. Logging the original error..", string0);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PRIMITIVE_TYPE_NULL();
      assertEquals("The request entity cannot be empty.", string0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_APPLICATION_INITIALIZED();
      assertEquals("Jersey application initialized.", string0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SCANNING_CLASS_NOT_FOUND("Error generating monitoring statistics.");
      assertEquals("A class file of the class name, Error generating monitoring statistics., is identified but the class could not be found.", string0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SUSPENDING_CHUNKED_OUTPUT_RESPONSE();
      assertEquals("Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.", string0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_INVOCABLE_FROM_PREMATCH_FILTERS_ONLY();
      assertEquals("Method can only be invoked from pre-matching request filters.", string0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_VALIDATION_SUBRESOURCE();
      assertEquals("Model validation error(s) found in sub resource returned by sub resource locator.", string0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_APPLICATION_WADL();
      assertEquals("Error generating /application.wadl.", string0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESOURCES_CANNOT_MERGE();
      assertEquals("Resources do not have the same path and cannot be merged.", string0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      String string0 = LocalizationMessages.COLLECTION_EXTRACTOR_TYPE_UNSUPPORTED();
      assertEquals("Unsupported collection type.", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SUSPENDING_ASYNC_REQUEST();
      String string0 = LocalizationMessages.RESOURCE_LOOKUP_FAILED(localizable0);
      assertEquals("Lookup and initialization failed for a resource class: Attempt to suspend a connection of an asynchronous request failed in the underlying container..", string0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_START();
      assertEquals("Starting mapping of the exception.", string0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_CONFIGURE();
      assertEquals("Error configuring the given user WadlGenerator by configure() method.", string0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SUB_RESOURCE_LOCATOR_MORE_RESOURCES((Object) null);
      assertEquals("Sub resource locator returned null in the resource model. Exactly one resource must be returned.", string0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_CLOSING_FINDER("Resource Java method invocation error.");
      assertEquals("Error while closing Resource Java method invocation error. resource finder.", string0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INJECTED_WEBTARGET_URI_INVALID(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_CACHE_LOAD_FAILED(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_ORIGINAL_EXCEPTION();
      assertEquals("An exception mapping did not successfully produce and processed a response. Logging the original error.", string0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_MESSAGE_BODY_READERS();
      assertEquals("Message Body Readers", string0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESPONSE_ALREADY_COMMITED();
      assertEquals("The response entity was already committed. The Response entity is being reused more than once.", string0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.UNSUPPORTED_URI_INJECTION_TYPE(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      String string0 = LocalizationMessages.SECURITY_CONTEXT_WAS_NOT_SET();
      assertEquals("SecurityContext was not set.", string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      String string0 = LocalizationMessages.PARAM_NULL("(Sub)resource method java.lang.Object@25ea02bc in java.lang.Object@1aab143a contains unexpected annotation A Monitoring Event Queue is being flooded. The monitoring statistics will show inaccurate measurements; especially in case of short time window statistics. The queue size is Could not marshal the wadl Application...");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      String string0 = LocalizationMessages.BROADCASTER_LISTENER_EXCEPTION("Unsupported collection type.");
      assertEquals("Unsupported collection type. thrown from BroadcasterListener.", string0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      String string0 = LocalizationMessages.AMBIGUOUS_RESOURCE_METHOD("Name-bound Reader Interceptors");
      assertEquals("Multiple methods found to suit client request with accept header Name-bound Reader Interceptors. Selected the first method from the following list.", string0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_MAPPER();
      assertEquals("Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_GENERATION();
      assertEquals("Error generating monitoring statistics.", string0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB("Unsupported collection type.");
      assertEquals("error.unmarshalling.jaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED_NOJAXB();
      assertEquals("JAX-B API not found . WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      assertEquals("Error generating external wadl grammar on /application.wadl/[path].", string0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS();
      assertEquals("Both application and applicationClass cant be null.", string0);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_DYNAMIC_FEATURES();
      String string0 = LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(localizable0, localizable0);
      assertEquals("A sub-resource method, Dynamic Features, with URI template, \"Dynamic Features\", is treated as a resource method", string0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_EXTERNAL_GRAMMAR();
      assertEquals("Error attaching an external grammar to the wadl.", string0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPER_FAILED_FOR_EXCEPTION();
      assertEquals("An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.", string0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_WAE_ENTITY("The request entity cannot be empty.");
      assertEquals("WebApplicationException (WAE) with non-null entity thrown. Response with status The request entity cannot be empty. is directly generated from the WAE.", string0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPER_THROWS_EXCEPTION("Resource Java method invocation error.");
      assertEquals("An exception has been thrown from an exception mapper Resource Java method invocation error..", string0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_APP();
      assertEquals("Failed to add the monitoring event into the Application Event Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_RESPONSE_FILTERS();
      String string0 = LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(localizable0, localizable0);
      assertEquals("A (sub-)resource method, Name-bound Response Filters, should have only one HTTP method designator. It currently has the following designators defined: Name-bound Response Filters", string0);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      String string0 = LocalizationMessages.WARNING_MONITORING_FEATURE_ENABLED("Error while committing the output stream.");
      assertEquals("MonitoringFeature is registered but the configuration property \"Error while committing the output stream.\" (enabling basic monitoring statistics) is FALSE. Monitoring statistics will be disabled. The configuration is inconsistent and may produce unwanted behaviour. Disable MBeans exposure or enable monitoring statistics.", string0);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      String string0 = LocalizationMessages.CHUNKED_OUTPUT_CLOSED();
      assertEquals("This chunked output has been closed.", string0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      String string0 = LocalizationMessages.FORM_PARAM_CONTENT_TYPE_ERROR();
      assertEquals("The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded", string0);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_WAE_NO_ENTITY(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      String string0 = LocalizationMessages.FORM_PARAM_METHOD_ERROR();
      assertEquals("The \"@FormParam\" is utilized when the request method is GET", string0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_WRITER_INTERCEPTORS();
      assertEquals("Name-bound Writer Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_REQUEST();
      assertEquals("Failed to add the monitoring event into the Request Items Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.NON_PUB_SUB_RES_METHOD(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      String string0 = LocalizationMessages.WARNING_MONITORING_MBEANS_BEAN_ALREADY_REGISTERED("The request entity cannot be empty.");
      assertEquals("Monitoring MBeans \"The request entity cannot be empty.\" is already registered. Un-registering the current mbean and registering a new one instead.", string0);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_SHUTDOWN_INTERRUPTED();
      assertEquals("Waiting for shutdown of MonitoringStatisticsProcessor has been interrupted.", string0);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PROCESSING_RESPONSE_FROM_ALREADY_MAPPED_EXCEPTION();
      assertEquals("Error occurred when processing a response created from an already mapped exception.", string0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_THROWN_TO_CONTAINER();
      assertEquals("An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the container.", string0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE();
      assertEquals("The entity stream cannot be set in the request as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WRITING_RESPONSE_ENTITY();
      assertEquals("An I/O error has occurred while writing a response message entity to the container output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_MARSHAL();
      assertEquals("Could not marshal the wadl Application.", string0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableJAR_SCANNER_UNABLE_TO_CLOSE_FILE();
      Localizable localizable1 = LocalizationMessages.localizableSUBRES_LOC_CACHE_LOAD_FAILED(localizable0);
      assertEquals("subres.loc.cache.load.failed", localizable1.getKey());
      assertEquals("jar.scanner.unable.to.close.file", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_CONFIG_UNABLE_TO_PROCESS(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE();
      assertEquals("The security context cannot be set in the request as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_COMMITTING_OUTPUT_STREAM();
      String string0 = LocalizationMessages.CLOSEABLE_INJECTED_REQUEST_CONTEXT_NULL(localizable0);
      assertEquals("Injected request context is null on thread Error while committing the output stream..", string0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      String string0 = LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER("Error occurred when processing a response created from an already mapped exception.");
      assertEquals("A new abstract resource created by IntrospectionModeler: Error occurred when processing a response created from an already mapped exception.", string0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_ADD_CHILD_ALREADY_CHILD();
      assertEquals("The resource is already a child resource and cannot contain another child resource.", string0);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_JAXB_CONTEXT_FALLBACK();
      assertEquals("Error creating a JAXBContext for wadl serialization. Trying a fallback solution for osgi environments.", string0);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_REQUEST_FILTERS();
      assertEquals("Name-bound Request Filters", string0);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      String string0 = LocalizationMessages.UNABLE_TO_LOAD_CLASS("Both application and applicationClass cant be null.");
      assertEquals("Class \"Both application and applicationClass cant be null.\" cannot be loaded.", string0);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_LISTENER_DESTROY(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      String string0 = LocalizationMessages.MULTIPLE_EVENT_SINK_INJECTION("Name-bound Response Filters");
      assertEquals("A HTTP GET method Name-bound Response Filters defines to SseEventSink parameters to be injected. Only one of the injected event sinks will be connected to the output.", string0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_ROOT_RESOURCE_CLASSES();
      assertEquals("Root Resource Classes", string0);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_REPLACED_CHILD_DOES_NOT_EXIST("Could not marshal the wadl Application.");
      assertEquals("Replaced child resource does not exist in model: Could not marshal the wadl Application..", string0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED_NOTRANSFORM();
      assertEquals("javax.xml.transform package could not be found. WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_RESPONSE();
      assertEquals("Failed to add the monitoring event into the Response Statuses Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SUSPENDING_ASYNC_REQUEST();
      assertEquals("Attempt to suspend a connection of an asynchronous request failed in the underlying container.", string0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_LOAD();
      assertEquals("Could not load wadl generators from wadlGeneratorDescriptions.", string0);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_ABORT_IN_RESPONSE_PHASE();
      assertEquals("The request cannot be aborted as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_JAXB_CONTEXT();
      assertEquals("Error creating a JAXBContext for wadl processing.", string0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_FLOODED("Additional array of callbacks is null.");
      assertEquals("A Monitoring Event Queue is being flooded. The monitoring statistics will show inaccurate measurements; especially in case of short time window statistics. The queue size is Additional array of callbacks is null..", string0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_RETURNS_VOID(object0);
      assertNotNull(string0);
  }
}
