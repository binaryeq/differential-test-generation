/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 00:45:15 GMT 2024
 */

package org.glassfish.jersey.server.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.glassfish.jersey.internal.l10n.Localizable;
import org.glassfish.jersey.server.internal.LocalizationMessages;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizationMessages_ESTest extends LocalizationMessages_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_FORMAT((Object) null, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PARAMETER_MISSING_VALUE_PROVIDER((Object) null, "Loading model and router from sub-resource locator cache failed for \"java.lang.Object@1b566f73\".");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER(object0, object1);
      assertEquals("error.parameter.missing.value.provider", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_MESSAGE_BODY_READERS();
      Object object0 = new Object();
      LocalizationMessages.WADL_DOC_EXTENDED_WADL(localizable0, object0);
      assertEquals("logging.message.body.readers", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MERGE_CONFLICT_LOCATORS(object0, object0, (Object) null);
      Localizable localizable1 = LocalizationMessages.localizableWADL_DOC_EXTENDED_WADL(localizable0, (Object) null);
      assertEquals("resource.merge.conflict.locators", localizable0.getKey());
      assertEquals("wadl.doc.extended.wadl", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_VALUE_EMPTY("Could not marshal the wadl Application.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(object0, "A resource method, java.lang.Object@1f21bcff, MUST be public scoped otherwise the method is ignored");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE("The resource configuration is not modifiable in this context.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_COMMITTING_OUTPUT_STREAM();
      Object object0 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_IN("Message Body Readers", localizable0, "WebApplicationException (WAE) with non-null entity thrown. Response with status java.lang.Object@190597f5 is directly generated from the WAE.", object0);
      assertEquals("error.committing.output.stream", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_RMS_IN("An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.", object0, "An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.", object0);
      assertEquals("ambiguous.rms.in", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(object0, "Parameter java.lang.Object@1d85784f of java.lang.Object@17520daa cannot be injected into singleton resource.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(object0, object1);
      assertEquals("default.could.not.process.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_FLOODED(object0);
      LocalizationMessages.ERROR_WADL_GENERATOR_CONFIG_LOADER_PROPERTY(object0, localizable0);
      assertEquals("error.monitoring.queue.flooded", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIG_LOADER_PROPERTY(object1, object0);
      assertEquals("error.wadl.generator.config.loader.property", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_FATAL_RMS(object1, object0, object0, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER("Model validation error(s) found in sub resource returned by sub resource locator.");
      Object object0 = new Object();
      LocalizationMessages.AMBIGUOUS_FATAL_RMS(localizable0, object0, "Model validation error(s) found in sub resource returned by sub resource locator.", localizable0);
      assertEquals("new.ar.created.by.introspection.modeler", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_WRITER_INTERCEPTORS();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableAMBIGUOUS_FATAL_RMS(localizable0, localizable0, localizable0, object0);
      assertEquals("ambiguous.fatal.rms", localizable1.getKey());
      assertEquals("logging.global.writer.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_PARAMETER("Method parameter \"java.lang.Object@34840f4a\" cannot be null or empty.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_REQUEST_MEDIA_TYPE(object0, object1, "Error attaching an external grammar to the wadl.");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_UNSUPPORTED_ENCODING(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_EMPTY("java.lang.Object@36c068e7 thrown from BroadcasterListener.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.LOGGING_PROVIDER_BOUND(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_INSTANTIABLE_COMPONENT(object0);
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE_LOCATOR(localizable0, object0);
      assertEquals("non.instantiable.component", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MERGE_CONFLICT_LOCATORS(object0, object0, (Object) null);
      LocalizationMessages.ILLEGAL_CLIENT_CONFIG_CLASS_PROPERTY_VALUE(localizable0, localizable0, (Object) null);
      assertEquals("resource.merge.conflict.locators", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ILLEGAL_CLIENT_CONFIG_CLASS_PROPERTY_VALUE((Object) null, object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(object0, object0);
      Object object1 = new Object();
      LocalizationMessages.PARAMETER_UNRESOLVABLE(object1, object0, localizable0);
      assertEquals("sub.res.method.treated.as.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED_NOJAXB();
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizablePARAMETER_UNRESOLVABLE(object0, object1, localizable0);
      assertEquals("parameter.unresolvable", localizable1.getKey());
      assertEquals("wadl.feature.disabled.nojaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.PROPERTY_VALUE_TOSTRING_THROWS_EXCEPTION(object0, (Object) null);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_KEY_EMPTY((Object) null, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESPONSE(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESPONSE("Injected request context is null on thread java.lang.Object@57ce3575.", object0);
      assertEquals("error.wadl.builder.generation.response", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_CACHE_INVALID_SIZE(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_PROCESSING_METHOD(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_PRE_MATCH_FILTERS();
      Object object0 = new Object();
      LocalizationMessages.INVALID_CONFIG_PROPERTY_VALUE(localizable0, object0);
      assertEquals("logging.pre.match.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_CONFIG_PROPERTY_VALUE(object0, (Object) null);
      assertEquals("invalid.config.property.value", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_NON_ANNOTATED_PARAMETER(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_NON_ANNOTATED_PARAMETER(object1, object0);
      assertEquals("ambiguous.non.annotated.parameter", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableMETHOD_UNEXPECTED_ANNOTATION(object1, object0, localizable0);
      assertEquals("method.unexpected.annotation", localizable1.getKey());
      assertEquals("form.param.method.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_LISTENER_DESTROY(object0);
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_PARAM(localizable0, (Object) null, object0);
      assertEquals("error.monitoring.statistics.listener.destroy", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.WADL_DOC_SIMPLE_WADL(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_METHOD(object1, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.SINGLETON_INJECTS_PARAMETER(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.RESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(object0, object1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD((Object) null, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.METHOD_EMPTY_PATH_ANNOTATION("Unable to read the next Jar entry.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      Object object0 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_OUT(object0, localizable0, localizable0, (Object) null);
      assertEquals("suspend.not.suspended", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      Object object0 = new Object();
      LocalizationMessages.AMBIGUOUS_RMS_OUT(localizable0, localizable0, object0, object0);
      assertEquals("suspend.not.suspended", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.WADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES(object0, object1, object0, "Both resources, resource java.lang.Object@5646cf83 and resource Callback java.lang.Object@5646cf83 invocation failed., contains sub resource locators on the same path Callback java.lang.Object@5646cf83 invocation failed..");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES("An I/O error has occurred while writing a response message entity to the container output stream.", "An I/O error has occurred while writing a response message entity to the container output stream.", "Error while closing the output stream in order to commit response.", "JAX-B API not found . WADL feature is disabled.");
      assertEquals("Ambiguous resource documentation detected: Unique resource method documentation cannot be found for method %An I/O error has occurred while writing a response message entity to the container output stream..%An I/O error has occurred while writing a response message entity to the container output stream.%Error while closing the output stream in order to commit response.. Selecting the first available method documentation element from the list of JAX-B API not found . WADL feature is disabled. possible candidates.\"", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWADL_RESOURCEDOC_AMBIGUOUS_METHOD_ENTRIES(object1, object0, object0, object0);
      assertEquals("wadl.resourcedoc.ambiguous.method.entries", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_IMPLEMENTS_PROVIDER("Callback java.lang.Object@5646cf83 invocation failed.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS("Time-out handler execution failed.", object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_LISTENER_DESTROY(object0);
      Localizable localizable1 = LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(object0);
      Localizable localizable2 = LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(localizable0, localizable1);
      assertEquals("error.monitoring.statistics.listener.destroy", localizable0.getKey());
      assertEquals("subres.loc.returns.void", localizable1.getKey());
      assertEquals("multiple.http.method.designators", localizable2.getKey());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      String string0 = LocalizationMessages.RESOURCE_MERGE_CONFLICT_LOCATORS(object1, (Object) null, object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_CACHE_INVALID_SIZE("A sub-resource model, java.lang.Object@c6d76f6, MUST return a non-void type.", object0);
      assertEquals("subres.loc.cache.invalid.size", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPER_THROWS_EXCEPTION(object0);
      assertEquals("exception.mapper.throws.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM("The request cannot be aborted as it is already in the response processing phase.");
      assertEquals("get.consumes.form.param", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_ADD_CHILD_ALREADY_CHILD();
      assertEquals("resource.add.child.already.child", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WRITING_RESPONSE_ENTITY_CHUNK();
      assertEquals("error.writing.response.entity.chunk", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONFIG_UNABLE_TO_PROCESS(object0);
      assertEquals("resource.config.unable.to.process", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_METHOD("Initiating Jersey application, version java.lang.Object@7fb197a6...", (Object) null);
      assertEquals("error.wadl.builder.generation.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      Localizable localizable1 = LocalizationMessages.localizableWARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(localizable0);
      assertEquals("suspend.not.suspended", localizable0.getKey());
      assertEquals("warning.too.many.external.req.scopes", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableUSER_NOT_AUTHORIZED();
      assertEquals("user.not.authorized", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_MARSHAL();
      assertEquals("error.wadl.resource.marshal", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPING_START();
      assertEquals("exception.mapping.start", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_ORIGINAL_EXCEPTION();
      assertEquals("error.exception.mapping.original.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCHUNKED_OUTPUT_CLOSED();
      assertEquals("chunked.output.closed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_ABORT_IN_RESPONSE_PHASE();
      assertEquals("error.request.abort.in.response.phase", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_VALIDATION_SUBRESOURCE();
      assertEquals("error.validation.subresource", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESOURCES_CANNOT_MERGE();
      assertEquals("error.resources.cannot.merge", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MSG(object0);
      Object object1 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_PARAM(object0, localizable0, object1);
      assertEquals("warning.msg", localizable0.getKey());
      assertEquals("error.wadl.builder.generation.param", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_COMMITTING_OUTPUT_STREAM();
      Object object0 = new Object();
      LocalizationMessages.METHOD_UNEXPECTED_ANNOTATION(localizable0, object0, (Object) null);
      assertEquals("error.committing.output.stream", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_SCHEDULER_DESTROY_TIMEOUT();
      assertEquals("error.monitoring.scheduler.destroy.timeout", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE();
      assertEquals("error.request.set.security.context.in.response.phase", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableJAR_SCANNER_UNABLE_TO_READ_ENTRY();
      assertEquals("jar.scanner.unable.to.read.entry", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEVENT_SINK_RETURNS_TYPE("Model validation error(s) found in sub resource returned by sub resource locator.");
      assertEquals("event.sink.returns.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_REQUEST();
      assertEquals("error.monitoring.queue.request", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_APPLICATION_WADL();
      assertEquals("error.wadl.resource.application.wadl", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_KEY_EMPTY("Attempt to suspend a connection of an asynchronous request failed in the underlying container.", "Attempt to suspend a connection of an asynchronous request failed in the underlying container.");
      assertEquals("invalid.mapping.key.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_TYPE_PROCESSING(object0);
      assertEquals("error.parameter.type.processing", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_REQUEST_MEDIA_TYPE(object0, object0, object0);
      assertEquals("error.wadl.builder.generation.request.media.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MARSHALLING_JAXB(object0);
      assertEquals("error.marshalling.jaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED_NOTRANSFORM();
      assertEquals("wadl.feature.disabled.notransform", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PARAMETER_INVALID_CHAR_VALUE(object0);
      assertEquals("error.parameter.invalid.char.value", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_JAXB_CONTEXT_FALLBACK();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableMETHOD_EMPTY_PATH_ANNOTATION(localizable0, object0);
      assertEquals("method.empty.path.annotation", localizable1.getKey());
      assertEquals("wadl.jaxb.context.fallback", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GRAMMAR_ALREADY_CONTAINS();
      assertEquals("error.wadl.grammar.already.contains", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(object0);
      assertEquals("error.unmarshalling.jaxb", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MONITORING_FEATURE_DISABLED("The response entity was already committed. The Response entity is being reused more than once.");
      assertEquals("warning.monitoring.feature.disabled", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINJECTED_WEBTARGET_URI_INVALID(object0);
      assertEquals("injected.webtarget.uri.invalid", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_PROCESSED_RESPONSE_ERROR();
      assertEquals("error.exception.mapping.processed.response.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_SRLS("Starting mapping of the exception.", "Starting mapping of the exception.");
      assertEquals("ambiguous.srls", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_APP();
      assertEquals("error.monitoring.queue.app", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableMULTIPLE_EVENT_SINK_INJECTION((Object) null);
      assertEquals("multiple.event.sink.injection", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_ROOT_RESOURCE_CLASSES();
      assertEquals("logging.root.resource.classes", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(object0);
      assertEquals("non.pub.sub.res.loc", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIG_LOADER("The \"@FormParam\" is utilized when the request method is GET");
      assertEquals("error.wadl.generator.config.loader", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_REQUEST(object0, object0);
      assertEquals("error.wadl.builder.generation.request", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS();
      assertEquals("resource.config.error.null.applicationclass", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_SCHEDULING_ERROR();
      assertEquals("suspend.scheduling.error", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE_LOCATOR((Object) null, (Object) null);
      assertEquals("error.wadl.builder.generation.resource.locator", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_AMBIGUOUS(object0, object0, object0);
      assertEquals("resource.ambiguous", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(object0, object0);
      Localizable localizable1 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_REGISTRATION(localizable0);
      assertEquals("sub.res.method.treated.as.res.method", localizable0.getKey());
      assertEquals("error.monitoring.mbeans.registration", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_REPLACED_CHILD_DOES_NOT_EXIST("The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded");
      assertEquals("resource.replaced.child.does.not.exist", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_EXCEPTION_MAPPING_THROWN_TO_CONTAINER();
      assertEquals("error.exception.mapping.thrown.to.container", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_MSG(object0);
      assertEquals("error.msg", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(object0, (Object) null);
      LocalizationMessages.AMBIGUOUS_SRLS(localizable0, object0);
      assertEquals("resource.contains.res.methods.and.locator", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_PARAMETER("The resource is already a child resource and cannot contain another child resource.", "The resource is already a child resource and cannot contain another child resource.");
      assertEquals("ambiguous.parameter", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_PRE_MATCH_FILTERS();
      Localizable localizable1 = LocalizationMessages.localizableEXCEPTION_MAPPING_WAE_NO_ENTITY(localizable0);
      assertEquals("exception.mapping.wae.no.entity", localizable1.getKey());
      assertEquals("logging.pre.match.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_TYPE("Unable to close Jar file.");
      assertEquals("invalid.mapping.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_PROCESSING_METHOD(object0, "Injected request context is null on thread java.lang.Object@16dac5a4.");
      assertEquals("error.processing.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_CLOSING_FINDER("Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.");
      assertEquals("error.closing.finder", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_APPLICATION_INITIALIZED();
      assertEquals("logging.application.initialized", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_REQUEST_FILTERS();
      assertEquals("logging.name.bound.request.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSECURITY_CONTEXT_WAS_NOT_SET();
      assertEquals("security.context.was.not.set", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePROPERTY_VALUE_TOSTRING_THROWS_EXCEPTION("Unable to close Jar file.", object0);
      assertEquals("property.value.tostring.throws.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_MESSAGE_BODY_READERS();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableAMBIGUOUS_RMS_OUT((Object) null, object0, object0, localizable0);
      assertEquals("logging.message.body.readers", localizable0.getKey());
      assertEquals("ambiguous.rms.out", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_RESPONSE_FILTERS();
      assertEquals("logging.name.bound.response.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE("The response entity was already committed. The Response entity is being reused more than once.");
      assertEquals("error.wadl.builder.generation.resource", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_CACHE_LOAD_FAILED(object0);
      assertEquals("subres.loc.cache.load.failed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_MESSAGE_BODY_WRITERS();
      assertEquals("logging.message.body.writers", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_EXTERNAL_GRAMMAR();
      Localizable localizable1 = LocalizationMessages.localizableWARNING_MONITORING_MBEANS_BEAN_ALREADY_REGISTERED(localizable0);
      assertEquals("error.wadl.external.grammar", localizable0.getKey());
      assertEquals("warning.monitoring.mbeans.bean.already.registered", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableJAR_SCANNER_UNABLE_TO_CLOSE_FILE();
      assertEquals("jar.scanner.unable.to.close.file", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESOURCE_JAVA_METHOD_INVOCATION();
      assertEquals("error.resource.java.method.invocation", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_GENERATION();
      assertEquals("error.monitoring.statistics.generation", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_RESPONSE_ALREADY_COMMITED();
      assertEquals("error.response.already.commited", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_PRIMITIVE_TYPE_NULL();
      assertEquals("error.primitive.type.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MULTIPLE_SCOPE_ANNOTATIONS((Object) null);
      assertEquals("resource.multiple.scope.annotations", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableCLOSEABLE_INJECTED_REQUEST_CONTEXT_NULL(object0);
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE_PATH("Error generating wadl for Resource java.lang.Object@1c0b42bf with path \"java.lang.Object@1c0b42bf\".", localizable0);
      assertEquals("closeable.injected.request.context.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSINGLETON_INJECTS_PARAMETER((Object) null, (Object) null);
      assertEquals("singleton.injects.parameter", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_EMPTY(object0, object0);
      assertEquals("resource.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY("Message Body Writers");
      assertEquals("method.parameter.cannot.be.null.or.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_READER_INTERCEPTORS();
      Localizable localizable1 = LocalizationMessages.localizableINIT_MSG(localizable0);
      assertEquals("init.msg", localizable1.getKey());
      assertEquals("logging.global.reader.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_LOAD();
      assertEquals("error.wadl.generator.load", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_MODEL_VALIDATION_FAILED_AT_INIT();
      assertEquals("resource.model.validation.failed.at.init", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SUSPENDING_ASYNC_REQUEST();
      assertEquals("error.suspending.async.request", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableGET_RETURNS_VOID("Error attaching an external grammar to the wadl.");
      assertEquals("get.returns.void", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_FORMAT(object0, object0);
      assertEquals("invalid.mapping.format", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableUNSUPPORTED_URI_INJECTION_TYPE("Method parameter \"java.lang.Object@7b467763\" cannot be null or empty.");
      assertEquals("unsupported.uri.injection.type", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_UPDATED_METHOD_DOES_NOT_EXIST(object0);
      assertEquals("resource.updated.method.does.not.exist", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_UNSUPPORTED_ENCODING((Object) null, (Object) null);
      assertEquals("error.unsupported.encoding", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(object0, object0);
      assertEquals("subres.loc.uri.path.invalid", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_SHUTDOWN_INTERRUPTED();
      assertEquals("error.monitoring.shutdown.interrupted", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableGET_CONSUMES_ENTITY(object0);
      assertEquals("get.consumes.entity", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableILLEGAL_CLIENT_CONFIG_CLASS_PROPERTY_VALUE((Object) null, object0, object0);
      assertEquals("illegal.client.config.class.property.value", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWARNING_MONITORING_FEATURE_ENABLED("Waiting for shutdown of MonitoringStatisticsProcessor has timed out! Possible cause can be that any registered MonitoringStatisticsListener takes too long to execute.");
      assertEquals("warning.monitoring.feature.enabled", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableBROADCASTER_LISTENER_EXCEPTION(object0);
      assertEquals("broadcaster.listener.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_READER_INTERCEPTORS();
      assertEquals("logging.name.bound.reader.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_SCANNING_CLASS_NOT_FOUND(object0);
      assertEquals("error.scanning.class.not.found", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_JAXB_CONTEXT();
      assertEquals("error.wadl.jaxb.context", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SUSPENDING_CHUNKED_OUTPUT_RESPONSE();
      assertEquals("error.suspending.chunked.output.response", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_RESPONSE_FILTERS();
      assertEquals("logging.global.response.filters", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_PARAM(object0, object0, object0);
      Localizable localizable1 = LocalizationMessages.localizableRESOURCE_LOOKUP_FAILED(localizable0);
      assertEquals("resource.lookup.failed", localizable1.getKey());
      assertEquals("error.wadl.builder.generation.param", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(object0, localizable0);
      assertEquals("error.request.set.entity.stream.in.response.phase", localizable0.getKey());
      assertEquals("type.of.method.not.resolvable.to.concrete.type", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePARAM_NULL(object0);
      assertEquals("param.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      Localizable localizable1 = LocalizationMessages.localizableMETHOD_PARAMETER_CANNOT_BE_NULL(localizable0);
      assertEquals("suspend.not.suspended", localizable0.getKey());
      assertEquals("method.parameter.cannot.be.null", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      Localizable localizable1 = LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(localizable0);
      assertEquals("form.param.method.error", localizable0.getKey());
      assertEquals("subres.loc.has.entity.param", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_PROCESSING_RESPONSE_FROM_ALREADY_MAPPED_EXCEPTION();
      assertEquals("error.processing.response.from.already.mapped.exception", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_RESOURCE_METHOD(object0);
      assertEquals("ambiguous.resource.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_SUB_RESOURCE_LOCATOR_MORE_RESOURCES("Name-bound Response Filters");
      assertEquals("error.sub.resource.locator.more.resources", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCOLLECTION_EXTRACTOR_TYPE_UNSUPPORTED();
      assertEquals("collection.extractor.type.unsupported", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESOURCE_PATH(object0, object0);
      assertEquals("error.wadl.builder.generation.resource.path", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      Localizable localizable1 = LocalizationMessages.localizableEXCEPTION_MAPPING_WAE_ENTITY(localizable0);
      assertEquals("form.param.method.error", localizable0.getKey());
      assertEquals("exception.mapping.wae.entity", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_HANDLER_EXECUTION_FAILED();
      Object object0 = new Object();
      LocalizationMessages.RESOURCE_AMBIGUOUS(object0, localizable0, "MonitoringFeature is registered but the configuration property \"java.lang.Object@21866fdc\" (enabling basic monitoring statistics) is FALSE. Monitoring statistics will be disabled. The configuration is inconsistent and may produce unwanted behaviour. Disable MBeans exposure or enable monitoring statistics.");
      assertEquals("suspend.handler.execution.failed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableINVALID_MAPPING_VALUE_EMPTY(object0, object0);
      assertEquals("invalid.mapping.value.empty", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(object0);
      assertEquals("non.pub.sub.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCALLBACK_ARRAY_ELEMENT_NULL();
      Object object0 = new Object();
      Localizable localizable1 = LocalizationMessages.localizableCONTRACT_CANNOT_BE_BOUND_TO_RESOURCE_METHOD(object0, localizable0);
      assertEquals("callback.array.element.null", localizable0.getKey());
      assertEquals("contract.cannot.be.bound.to.resource.method", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_PROVIDER_BOUND("The request cannot be aborted as it is already in the response processing phase.", "The request cannot be aborted as it is already in the response processing phase.");
      assertEquals("logging.provider.bound", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableCALLBACK_ARRAY_NULL();
      assertEquals("callback.array.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRELEASING_REQUEST_PROCESSING_RESOURCES_FAILED();
      assertEquals("releasing.request.processing.resources.failed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WRITING_RESPONSE_ENTITY();
      assertEquals("error.writing.response.entity", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(object0);
      assertEquals("unable.to.load.class", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableRC_NOT_MODIFIABLE();
      assertEquals("rc.not.modifiable", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWADL_FEATURE_DISABLED();
      Localizable localizable1 = LocalizationMessages.localizableCLOSEABLE_UNABLE_TO_CLOSE(localizable0);
      assertEquals("wadl.feature.disabled", localizable0.getKey());
      assertEquals("closeable.unable.to.close", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableNON_PUB_RES_METHOD(object0);
      assertEquals("non.pub.res.method", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_RESPONSE();
      assertEquals("Failed to add the monitoring event into the Response Statuses Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_LISTENER("Resource Java method invocation error.");
      assertEquals("Exception thrown when provider Resource Java method invocation error. was processing MonitoringStatistics. Removing provider from further processing.", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_ASYNC_CALLBACK_FAILED(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String string0 = LocalizationMessages.PREMATCHING_ALSO_NAME_BOUND("The entity stream cannot be set in the request as it is already in the response processing phase.");
      assertEquals("@PreMatching provider, The entity stream cannot be set in the request as it is already in the response processing phase., also annotated with a name binding annotation. Name binding will be ignored.", string0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_REQUEST_FILTERS();
      assertEquals("Global Request Filters", string0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = LocalizationMessages.CLOSEABLE_UNABLE_TO_CLOSE("Name-bound Request Filters");
      assertEquals("Error while closing Name-bound Request Filters.", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String string0 = LocalizationMessages.CALLBACK_ARRAY_NULL();
      assertEquals("Additional array of callbacks is null.", string0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM();
      assertEquals("Error while committing the output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_ASYNC_CALLBACK_FAILED("Error configuring the given user WadlGenerator by configure() method.");
      assertEquals("error.async.callback.failed", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      String string0 = LocalizationMessages.JAR_SCANNER_UNABLE_TO_READ_ENTRY();
      assertEquals("Unable to read the next Jar entry.", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_PRE_MATCH_FILTERS();
      assertEquals("Pre-match Filters", string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      LocalizationMessages.AMBIGUOUS_RMS_IN(localizable0, localizable0, "Lookup and initialization failed for a resource class: java.lang.Object@1024cf4a.", object0);
      assertEquals("error.wadl.resource.external.grammar", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizablePREMATCHING_ALSO_NAME_BOUND(object0);
      assertEquals("prematching.also.name.bound", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPER_FAILED_FOR_EXCEPTION();
      assertEquals("An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.", string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableSUSPEND_NOT_SUSPENDED();
      String string0 = LocalizationMessages.ERROR_MONITORING_MBEANS_REGISTRATION(localizable0);
      assertEquals("Error when registering Jersey monitoring MBeans. Registration of MBean with name \"Not suspended.\" failed.", string0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PARAMETER_TYPE_PROCESSING("Message Body Writers");
      assertEquals("Could not process parameter type Message Body Writers.", string0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableMETHOD_INVOCABLE_FROM_PREMATCH_FILTERS_ONLY();
      String string0 = LocalizationMessages.INVALID_CONFIG_PROPERTY_VALUE(localizable0, localizable0);
      assertEquals("Invalid value for Method can only be invoked from pre-matching request filters. configuration property: Method can only be invoked from pre-matching request filters.", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String string0 = LocalizationMessages.JAR_SCANNER_UNABLE_TO_CLOSE_FILE();
      assertEquals("Unable to close Jar file.", string0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      String string0 = LocalizationMessages.EVENT_SINK_RETURNS_TYPE(localizable0);
      assertEquals("A HTTP GET method The \"@FormParam\" is utilized when the request method is GET that is being injected with SseEventSink should return void. The output will propagate automatically.", string0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_PARAMETER_CANNOT_BE_NULL("Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.");
      assertEquals("Method parameter \"Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.\" cannot be null.", string0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WRITING_RESPONSE_ENTITY_CHUNK();
      assertEquals("An I/O error has occurred while writing a response message entity chunk to the container output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_HANDLER_EXECUTION_FAILED();
      assertEquals("Time-out handler execution failed.", string0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GRAMMAR_ALREADY_CONTAINS();
      assertEquals("The wadl application already contains a grammars element, were adding elements of the provided grammars file.", string0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_CLOSING_COMMIT_OUTPUT_STREAM();
      assertEquals("Error while closing the output stream in order to commit response.", string0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_DYNAMIC_FEATURES();
      assertEquals("Dynamic Features", string0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_CONFIG_LOADER(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_RESPONSE_FILTERS();
      assertEquals("Global Response Filters", string0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String string0 = LocalizationMessages.NON_PUB_RES_METHOD("Not suspended.");
      assertEquals("A resource method, Not suspended., MUST be public scoped otherwise the method is ignored", string0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_STATISTICS_LISTENER("java.lang.Object@78731029 bound to java.lang.Object@1289e9fc");
      assertEquals("error.monitoring.statistics.listener", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_DYNAMIC_FEATURES();
      assertEquals("logging.dynamic.features", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_READER_INTERCEPTORS();
      assertEquals("Name-bound Reader Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      String string0 = LocalizationMessages.INIT_MSG("The resource is already a child resource and cannot contain another child resource.");
      assertEquals("Initiating Jersey application, version The resource is already a child resource and cannot contain another child resource....", string0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_SCHEDULING_ERROR();
      assertEquals("Error while scheduling a timeout task.", string0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MSG("Attempt to release request processing resources has failed for a request.");
      assertEquals("ERROR: Attempt to release request processing resources has failed for a request.", string0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_UPDATED_METHOD_DOES_NOT_EXIST(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_PROCESSED_RESPONSE_ERROR();
      assertEquals("A response error mapping did not successfully produce and processed a response.", string0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String string0 = LocalizationMessages.NON_INSTANTIABLE_COMPONENT("The resource configuration is not modifiable in this context.");
      assertEquals("Component of class The resource configuration is not modifiable in this context. cannot be instantiated and will be ignored.", string0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.INVALID_MAPPING_TYPE(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      LocalizationMessages.CONTRACT_CANNOT_BE_BOUND_TO_RESOURCE_METHOD(object0, localizable0);
      assertEquals("error.wadl.resource.external.grammar", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_REQUEST(object0, localizable0);
      assertEquals("error.wadl.resource.external.grammar", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_WRITER_INTERCEPTORS();
      String string0 = LocalizationMessages.ERROR_PARAMETER_INVALID_CHAR_VALUE(localizable0);
      assertEquals("Value \"Global Writer Interceptors\" is not a character.", string0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_CLOSING_COMMIT_OUTPUT_STREAM();
      String string0 = LocalizationMessages.GET_CONSUMES_FORM_PARAM(localizable0);
      assertEquals("A HTTP GET method, Error while closing the output stream in order to commit response., should not consume any form parameter.", string0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_MESSAGE_BODY_WRITERS();
      assertEquals("Message Body Writers", string0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_WRITER_INTERCEPTORS();
      assertEquals("Global Writer Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      assertEquals("Error un-registering Jersey monitoring MBeans on application destroy.", string0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_MULTIPLE_SCOPE_ANNOTATIONS("Dynamic Features");
      assertEquals("A resource, Dynamic Features, is annotated with multiple scope annotations. Only one scope annotation is allowed for the resource.", string0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      String string0 = LocalizationMessages.USER_NOT_AUTHORIZED();
      assertEquals("User not authorized.", string0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String string0 = LocalizationMessages.NON_PUB_SUB_RES_LOC("An exception mapping did not successfully produce and processed a response. Logging the original error.");
      assertEquals("A sub-resource model, An exception mapping did not successfully produce and processed a response. Logging the original error., MUST be public scoped otherwise the method is ignored", string0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED();
      assertEquals("JAXBContext implementation could not be found. WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_MODEL_VALIDATION_FAILED_AT_INIT();
      assertEquals("Validation of the application resource model has failed during application initialization.", string0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_MBEANS_UNREGISTRATION_DESTROY();
      assertEquals("error.monitoring.mbeans.unregistration.destroy", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      String string0 = LocalizationMessages.SUSPEND_NOT_SUSPENDED();
      assertEquals("Not suspended.", string0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WARNING_MSG(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      String string0 = LocalizationMessages.CALLBACK_ARRAY_ELEMENT_NULL();
      assertEquals("One of additional callbacks is null.", string0);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      String string0 = LocalizationMessages.GET_CONSUMES_ENTITY("The request cannot be aborted as it is already in the response processing phase.");
      assertEquals("A HTTP GET method, The request cannot be aborted as it is already in the response processing phase., should not consume any entity.", string0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      String string0 = LocalizationMessages.WARNING_MONITORING_FEATURE_DISABLED("Global Reader Interceptors");
      assertEquals("MonitoringFeature is registered but the configuration property \"Global Reader Interceptors\" (enabling basic monitoring statistics) is FALSE. However, the feature is configured to enable exposure of monitoring MBeans (either by property or by direct instance setup), so the monitoring statistics will be enabled as this is prerequisite for Monitoring MBeans. The configuration is inconsistent and may produce unwanted behaviour. Unregister the feature or change the property value.", string0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_GLOBAL_READER_INTERCEPTORS();
      assertEquals("Global Reader Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.AMBIGUOUS_SRLS_PATH_PATTERN(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_RESPONSE_FILTERS();
      assertEquals("Name-bound Response Filters", string0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_SCHEDULER_DESTROY_TIMEOUT();
      assertEquals("Waiting for shutdown of MonitoringStatisticsProcessor has timed out! Possible cause can be that any registered MonitoringStatisticsListener takes too long to execute.", string0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.GET_RETURNS_VOID(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MARSHALLING_JAXB("Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.");
      assertEquals("Error marshalling JAXB object of type \"Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.\".", string0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.METHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableAMBIGUOUS_SRLS_PATH_PATTERN(object0);
      assertEquals("ambiguous.srls.pathPattern", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = LocalizationMessages.FORM_PARAM_CONTENT_TYPE_ERROR();
      assertEquals("The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded", string0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      String string0 = LocalizationMessages.RC_NOT_MODIFIABLE();
      assertEquals("The resource configuration is not modifiable in this context.", string0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      String string0 = LocalizationMessages.RELEASING_REQUEST_PROCESSING_RESOURCES_FAILED();
      assertEquals("Attempt to release request processing resources has failed for a request.", string0);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESOURCE_JAVA_METHOD_INVOCATION();
      assertEquals("Resource Java method invocation error.", string0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE("Error un-registering Jersey monitoring MBeans on application destroy.");
      assertEquals("Error generating wadl application for one specific resource Error un-registering Jersey monitoring MBeans on application destroy..", string0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PRIMITIVE_TYPE_NULL();
      assertEquals("The request entity cannot be empty.", string0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_APPLICATION_INITIALIZED();
      assertEquals("Jersey application initialized.", string0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_SCANNING_CLASS_NOT_FOUND(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SUSPENDING_CHUNKED_OUTPUT_RESPONSE();
      assertEquals("Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.", string0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      String string0 = LocalizationMessages.METHOD_INVOCABLE_FROM_PREMATCH_FILTERS_ONLY();
      assertEquals("Method can only be invoked from pre-matching request filters.", string0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_VALIDATION_SUBRESOURCE();
      assertEquals("Model validation error(s) found in sub resource returned by sub resource locator.", string0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_APPLICATION_WADL();
      assertEquals("Error generating /application.wadl.", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESOURCES_CANNOT_MERGE();
      assertEquals("Resources do not have the same path and cannot be merged.", string0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      String string0 = LocalizationMessages.COLLECTION_EXTRACTOR_TYPE_UNSUPPORTED();
      assertEquals("Unsupported collection type.", string0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_LOOKUP_FAILED(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_START();
      assertEquals("Starting mapping of the exception.", string0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_CONFIGURE();
      assertEquals("Error configuring the given user WadlGenerator by configure() method.", string0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.ERROR_SUB_RESOURCE_LOCATOR_MORE_RESOURCES(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_CLOSING_FINDER("Attempt to suspend a client connection associated with a chunked output has failed in the underlying container.");
      assertEquals("Error while closing Attempt to suspend a client connection associated with a chunked output has failed in the underlying container. resource finder.", string0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_METHOD_ERROR();
      String string0 = LocalizationMessages.INJECTED_WEBTARGET_URI_INVALID(localizable0);
      assertEquals("\"@Uri\" annotation value is not a valid URI template: \"The \"@FormParam\" is utilized when the request method is GET\"", string0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_ORIGINAL_EXCEPTION();
      assertEquals("An exception mapping did not successfully produce and processed a response. Logging the original error.", string0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_MESSAGE_BODY_READERS();
      assertEquals("Message Body Readers", string0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_RESPONSE_ALREADY_COMMITED();
      assertEquals("The response entity was already committed. The Response entity is being reused more than once.", string0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.UNSUPPORTED_URI_INJECTION_TYPE(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      String string0 = LocalizationMessages.SECURITY_CONTEXT_WAS_NOT_SET();
      assertEquals("SecurityContext was not set.", string0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      String string0 = LocalizationMessages.PARAM_NULL("Name-bound Writer Interceptors");
      assertEquals("\"Name-bound Writer Interceptors\" parameter is null.", string0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.BROADCASTER_LISTENER_EXCEPTION(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      String string0 = LocalizationMessages.AMBIGUOUS_RESOURCE_METHOD((Object) null);
      assertEquals("Multiple methods found to suit client request with accept header null. Selected the first method from the following list.", string0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_MAPPER();
      assertEquals("Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_GENERATION();
      assertEquals("Error generating monitoring statistics.", string0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_UNMARSHALLING_JAXB("Message Body Readers");
      assertEquals("Error unmarshalling JAXB object of type \"Message Body Readers\".", string0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED_NOJAXB();
      assertEquals("JAX-B API not found . WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      assertEquals("Error generating external wadl grammar on /application.wadl/[path].", string0);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS();
      assertEquals("Both application and applicationClass cant be null.", string0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_RESPONSE();
      String string0 = LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(localizable0, localizable0);
      assertEquals("A sub-resource method, Failed to add the monitoring event into the Response Statuses Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing., with URI template, \"Failed to add the monitoring event into the Response Statuses Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.\", is treated as a resource method", string0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_NAME_BOUND_WRITER_INTERCEPTORS();
      Localizable localizable1 = LocalizationMessages.localizableWADL_DOC_SIMPLE_WADL(localizable0, localizable0);
      assertEquals("wadl.doc.simple.wadl", localizable1.getKey());
      assertEquals("logging.name.bound.writer.interceptors", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_EXTERNAL_GRAMMAR();
      assertEquals("Error attaching an external grammar to the wadl.", string0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_MAPPER();
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_WAE_ENTITY(localizable0);
      assertEquals("WebApplicationException (WAE) with non-null entity thrown. Response with status Failed to add the monitoring event into the Exception Mapper Events Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing. is directly generated from the WAE.", string0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.EXCEPTION_MAPPER_THROWS_EXCEPTION(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_APP();
      assertEquals("Failed to add the monitoring event into the Application Event Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      String string0 = LocalizationMessages.WARNING_MONITORING_FEATURE_ENABLED(localizable0);
      assertEquals("MonitoringFeature is registered but the configuration property \"Error generating external wadl grammar on /application.wadl/[path].\" (enabling basic monitoring statistics) is FALSE. Monitoring statistics will be disabled. The configuration is inconsistent and may produce unwanted behaviour. Disable MBeans exposure or enable monitoring statistics.", string0);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      String string0 = LocalizationMessages.CHUNKED_OUTPUT_CLOSED();
      assertEquals("This chunked output has been closed.", string0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableFORM_PARAM_CONTENT_TYPE_ERROR();
      Localizable localizable1 = LocalizationMessages.localizableERROR_WADL_BUILDER_GENERATION_RESPONSE(localizable0, localizable0);
      assertEquals("form.param.content-type.error", localizable0.getKey());
      assertEquals("error.wadl.builder.generation.response", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.EXCEPTION_MAPPING_WAE_NO_ENTITY(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      String string0 = LocalizationMessages.FORM_PARAM_METHOD_ERROR();
      assertEquals("The \"@FormParam\" is utilized when the request method is GET", string0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_WRITER_INTERCEPTORS();
      assertEquals("Name-bound Writer Interceptors", string0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_REQUEST();
      assertEquals("Failed to add the monitoring event into the Request Items Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing.", string0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableLOGGING_GLOBAL_REQUEST_FILTERS();
      String string0 = LocalizationMessages.NON_PUB_SUB_RES_METHOD(localizable0);
      assertEquals("A sub-resource method, Global Request Filters, MUST be public scoped otherwise the method is ignored", string0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      String string0 = LocalizationMessages.WARNING_MONITORING_MBEANS_BEAN_ALREADY_REGISTERED((Object) null);
      assertEquals("Monitoring MBeans \"null\" is already registered. Un-registering the current mbean and registering a new one instead.", string0);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_GENERATOR_CONFIGURE();
      Localizable localizable1 = LocalizationMessages.localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER(localizable0, localizable0);
      assertEquals("error.wadl.generator.configure", localizable0.getKey());
      assertEquals("error.parameter.missing.value.provider", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_SHUTDOWN_INTERRUPTED();
      assertEquals("Waiting for shutdown of MonitoringStatisticsProcessor has been interrupted.", string0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_PROCESSING_RESPONSE_FROM_ALREADY_MAPPED_EXCEPTION();
      assertEquals("Error occurred when processing a response created from an already mapped exception.", string0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_EXCEPTION_MAPPING_THROWN_TO_CONTAINER();
      assertEquals("An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the container.", string0);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE();
      assertEquals("The entity stream cannot be set in the request as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WRITING_RESPONSE_ENTITY();
      assertEquals("An I/O error has occurred while writing a response message entity to the container output stream.", string0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableRESOURCE_IMPLEMENTS_PROVIDER(object0, "JAX-B API not found . WADL feature is disabled.");
      assertEquals("resource.implements.provider", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_RESOURCE_MARSHAL();
      assertEquals("Could not marshal the wadl Application.", string0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      String string0 = LocalizationMessages.SUBRES_LOC_CACHE_LOAD_FAILED("Dynamic Features");
      assertEquals("Loading model and router from sub-resource locator cache failed for \"Dynamic Features\".", string0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_CONFIG_UNABLE_TO_PROCESS((Object) null);
      assertEquals("Unable to process null", string0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE();
      assertEquals("The security context cannot be set in the request as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableEXCEPTION_MAPPER_FAILED_FOR_EXCEPTION();
      String string0 = LocalizationMessages.ERROR_WADL_BUILDER_GENERATION_RESOURCE_LOCATOR(localizable0, localizable0);
      assertEquals("Error generating wadl for sub resource locator An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned. of resource An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned..", string0);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WADL_RESOURCE_EXTERNAL_GRAMMAR();
      String string0 = LocalizationMessages.CLOSEABLE_INJECTED_REQUEST_CONTEXT_NULL(localizable0);
      assertEquals("Injected request context is null on thread Error generating external wadl grammar on /application.wadl/[path]..", string0);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      String string0 = LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER("An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.");
      assertEquals("A new abstract resource created by IntrospectionModeler: An exception was not mapped due to exception mapper failure. The HTTP 500 response will be returned.", string0);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      String string0 = LocalizationMessages.RESOURCE_ADD_CHILD_ALREADY_CHILD();
      assertEquals("The resource is already a child resource and cannot contain another child resource.", string0);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_JAXB_CONTEXT_FALLBACK();
      assertEquals("Error creating a JAXBContext for wadl serialization. Trying a fallback solution for osgi environments.", string0);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      LocalizationMessages localizationMessages0 = new LocalizationMessages();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_NAME_BOUND_REQUEST_FILTERS();
      assertEquals("Name-bound Request Filters", string0);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      String string0 = LocalizationMessages.UNABLE_TO_LOAD_CLASS("javax.xml.transform package could not be found. WADL feature is disabled.");
      assertEquals("Class \"javax.xml.transform package could not be found. WADL feature is disabled.\" cannot be loaded.", string0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_MONITORING_STATISTICS_LISTENER_DESTROY("The resource is already a child resource and cannot contain another child resource.");
      assertEquals("Exception thrown when listener The resource is already a child resource and cannot contain another child resource. has been processing the destroy event.", string0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.MULTIPLE_EVENT_SINK_INJECTION(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      String string0 = LocalizationMessages.LOGGING_ROOT_RESOURCE_CLASSES();
      assertEquals("Root Resource Classes", string0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.RESOURCE_REPLACED_CHILD_DOES_NOT_EXIST(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      String string0 = LocalizationMessages.WADL_FEATURE_DISABLED_NOTRANSFORM();
      assertEquals("javax.xml.transform package could not be found. WADL feature is disabled.", string0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_SUSPENDING_ASYNC_REQUEST();
      assertEquals("Attempt to suspend a connection of an asynchronous request failed in the underlying container.", string0);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_GENERATOR_LOAD();
      assertEquals("Could not load wadl generators from wadlGeneratorDescriptions.", string0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_REQUEST_ABORT_IN_RESPONSE_PHASE();
      assertEquals("The request cannot be aborted as it is already in the response processing phase.", string0);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WADL_JAXB_CONTEXT();
      assertEquals("Error creating a JAXBContext for wadl processing.", string0);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_MONITORING_QUEUE_RESPONSE();
      String string0 = LocalizationMessages.ERROR_MONITORING_QUEUE_FLOODED(localizable0);
      assertEquals("A Monitoring Event Queue is being flooded. The monitoring statistics will show inaccurate measurements; especially in case of short time window statistics. The queue size is Failed to add the monitoring event into the Response Statuses Queue - queue is full. One of the registered MonitoringStatisticsListeners might be blocking the event processing..", string0);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.SUBRES_LOC_RETURNS_VOID(object0);
      assertNotNull(string0);
  }
}
