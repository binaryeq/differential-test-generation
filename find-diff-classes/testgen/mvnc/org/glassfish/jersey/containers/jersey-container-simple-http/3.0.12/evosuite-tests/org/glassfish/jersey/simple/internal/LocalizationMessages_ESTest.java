/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 03:43:23 GMT 2024
 */

package org.glassfish.jersey.simple.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.glassfish.jersey.internal.l10n.Localizable;
import org.glassfish.jersey.simple.internal.LocalizationMessages;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizationMessages_ESTest extends LocalizationMessages_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWRONG_SCHEME_WHEN_USING_HTTP();
      assertEquals("wrong.scheme.when.using.http", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableURI_CANNOT_BE_NULL();
      assertEquals("uri.cannot.be.null", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableERROR_WHEN_CREATING_SERVER();
      assertEquals("error.when.creating.server", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWRONG_SCHEME_WHEN_USING_HTTPS();
      assertEquals("wrong.scheme.when.using.https", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = LocalizationMessages.WRONG_SCHEME_WHEN_USING_HTTPS();
      assertEquals("The URI scheme should be https when using SSL.", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = LocalizationMessages.WRONG_SCHEME_WHEN_USING_HTTP();
      assertEquals("The URI scheme should be http when not using SSL.", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = LocalizationMessages.ERROR_WHEN_CREATING_SERVER();
      assertEquals("IOException thrown when trying to create simple server.", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = LocalizationMessages.URI_CANNOT_BE_NULL();
      assertEquals("The URI must not be null.", string0);
  }
}
