/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 11 03:39:42 GMT 2024
 */

package org.glassfish.jersey.netty.connector;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.glassfish.jersey.internal.l10n.Localizable;
import org.glassfish.jersey.netty.connector.LocalizationMessages;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalizationMessages_ESTest extends LocalizationMessages_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableREDIRECT_LIMIT_REACHED(object0);
      assertEquals("redirect.limit.reached", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableREDIRECT_NO_LOCATION();
      Localizable localizable1 = LocalizationMessages.localizableWRONG_MAX_POOL_SIZE(localizable0);
      assertEquals("wrong.max.pool.size", localizable1.getKey());
      assertEquals("redirect.no.location", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableREDIRECT_INFINITE_LOOP();
      assertEquals("redirect.infinite.loop", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      Localizable localizable0 = LocalizationMessages.localizableUNEXPECTED_VALUE_FOR_EXPECT_100_CONTINUE_STATUSES(object0);
      assertEquals("unexpected.value.for.expect.100.continue.statuses", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WRONG_READ_TIMEOUT(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WRONG_MAX_POOL_IDLE(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableREDIRECT_ERROR_DETERMINING_LOCATION((Object) null);
      Localizable localizable1 = LocalizationMessages.localizableWRONG_READ_TIMEOUT(localizable0);
      assertEquals("wrong.read.timeout", localizable1.getKey());
      assertEquals("redirect.error.determining.location", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WRONG_MAX_POOL_TOTAL(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = LocalizationMessages.REDIRECT_LIMIT_REACHED((Object) null);
      assertEquals("\"Max chained redirect limit (null) exceeded.\"", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableWRONG_MAX_POOL_IDLE("\"Received redirect that does not contain a location or the location is empty.\"");
      assertEquals("wrong.max.pool.idle", localizable0.getKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = LocalizationMessages.REDIRECT_INFINITE_LOOP();
      assertEquals("\"Infinite loop in chained redirects detected.\"", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Localizable localizable0 = LocalizationMessages.localizableREDIRECT_ERROR_DETERMINING_LOCATION((Object) null);
      Localizable localizable1 = LocalizationMessages.localizableWRONG_MAX_POOL_TOTAL(localizable0);
      assertEquals("redirect.error.determining.location", localizable0.getKey());
      assertEquals("wrong.max.pool.total", localizable1.getKey());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = LocalizationMessages.REDIRECT_ERROR_DETERMINING_LOCATION((Object) null);
      assertEquals("\"Error determining redirect location: (null).\"", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = LocalizationMessages.REDIRECT_NO_LOCATION();
      assertEquals("\"Received redirect that does not contain a location or the location is empty.\"", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.UNEXPECTED_VALUE_FOR_EXPECT_100_CONTINUE_STATUSES(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      String string0 = LocalizationMessages.WRONG_MAX_POOL_SIZE(object0);
      assertNotNull(string0);
  }
}
