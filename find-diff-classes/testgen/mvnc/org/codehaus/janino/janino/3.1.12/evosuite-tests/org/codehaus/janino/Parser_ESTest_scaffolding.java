/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 21:31:23 GMT 2024
 */

package org.codehaus.janino;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class Parser_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.codehaus.janino.Parser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/org/codehaus/janino/janino/3.1.12"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Parser_ESTest_scaffolding.class.getClassLoader() ,
      "org.codehaus.janino.Visitor$ConstructorInvocationVisitor",
      "org.codehaus.janino.Java$AbstractCompilationUnit$TypeImportOnDemandDeclaration",
      "org.codehaus.janino.Java$ArrayAccessExpression",
      "org.codehaus.janino.Java$TryStatement$LocalVariableDeclaratorResource",
      "org.codehaus.janino.Java$AbstractCompilationUnit$ImportDeclaration",
      "org.codehaus.janino.Java$ElementValueArrayInitializer",
      "org.codehaus.janino.Java$Locatable",
      "org.codehaus.janino.Java$Located$1",
      "org.codehaus.janino.Java$Lvalue",
      "org.codehaus.janino.ITypeVariable",
      "org.codehaus.janino.Java$ConditionalExpression",
      "org.codehaus.janino.Java$ForEachStatement",
      "org.codehaus.janino.Java$LocalVariableAccess",
      "org.codehaus.janino.TokenStreamImpl",
      "org.codehaus.janino.Java$MethodInvocation",
      "org.codehaus.commons.compiler.WarningHandler",
      "org.codehaus.janino.Java$Located",
      "org.codehaus.janino.Java",
      "org.codehaus.janino.Java$ParameterAccess",
      "org.codehaus.janino.Java$CatchParameter",
      "org.codehaus.janino.Java$PackageMemberEnumDeclaration",
      "org.codehaus.janino.Scanner",
      "org.codehaus.janino.Visitor$ArrayInitializerOrRvalueVisitor",
      "org.codehaus.janino.Java$ElementValue",
      "org.codehaus.janino.Java$LambdaBody",
      "org.codehaus.janino.ITypeVariableOrIClass",
      "org.codehaus.janino.Java$ArrayInitializerOrRvalue",
      "org.codehaus.janino.Java$PackageDeclaration",
      "org.codehaus.janino.TokenType",
      "org.codehaus.janino.Java$ProvidesModuleDirective",
      "org.codehaus.janino.Java$Annotation",
      "org.codehaus.janino.Java$QualifiedThisReference",
      "org.codehaus.janino.Java$ThisReference",
      "org.codehaus.janino.IClass$IInvocable",
      "org.codehaus.janino.Java$AbstractCompilationUnit$StaticImportOnDemandDeclaration",
      "org.codehaus.janino.Java$Cast",
      "org.codehaus.janino.Java$Type",
      "org.codehaus.janino.Java$SuperConstructorInvocation",
      "org.codehaus.janino.Visitor$ElementValueVisitor",
      "org.codehaus.commons.compiler.util.resource.StringResource",
      "org.codehaus.janino.Java$PrimitiveType",
      "org.codehaus.janino.IClass$IField",
      "org.codehaus.janino.Java$PackageMemberTypeDeclaration",
      "org.codehaus.janino.Java$ReferenceType",
      "org.codehaus.janino.Java$DocCommentable",
      "org.codehaus.janino.Java$NamedTypeDeclaration",
      "org.codehaus.janino.Java$Atom",
      "org.codehaus.janino.Java$MemberClassDeclaration",
      "org.codehaus.janino.Java$ExpressionLambdaBody",
      "org.codehaus.janino.Parser",
      "org.codehaus.janino.Java$TextBlock",
      "org.codehaus.janino.Java$MemberInterfaceDeclaration",
      "org.codehaus.janino.Java$AccessModifier",
      "org.codehaus.janino.Java$BreakStatement",
      "org.codehaus.janino.IClass",
      "org.codehaus.janino.Java$LocalClassDeclarationStatement",
      "org.codehaus.janino.util.AbstractTraverser$1",
      "org.codehaus.janino.util.AbstractTraverser$2",
      "org.codehaus.commons.compiler.util.resource.Resource",
      "org.codehaus.janino.util.AbstractTraverser$5",
      "org.codehaus.janino.util.AbstractTraverser$6",
      "org.codehaus.janino.util.AbstractTraverser$3",
      "org.codehaus.janino.Java$CharacterLiteral",
      "org.codehaus.janino.util.AbstractTraverser$4",
      "org.codehaus.janino.IClass$IAnnotation",
      "org.codehaus.janino.Java$ModuleDirective",
      "org.codehaus.janino.CodeContext$FixUp",
      "org.codehaus.janino.Java$SuperclassMethodInvocation",
      "org.codehaus.janino.Java$FunctionDeclarator",
      "org.codehaus.janino.TokenStreamImpl$1",
      "org.codehaus.janino.Java$OpensModuleDirective",
      "org.codehaus.janino.Java$Initializer",
      "org.codehaus.commons.compiler.LocatedException",
      "org.codehaus.janino.Java$AbstractTypeBodyDeclaration",
      "org.codehaus.janino.Java$FloatingPointLiteral",
      "org.codehaus.janino.Java$Rvalue",
      "org.codehaus.janino.Java$Block",
      "org.codehaus.janino.Java$NewAnonymousClassInstance",
      "org.codehaus.janino.TokenStream",
      "org.codehaus.janino.Java$ModularCompilationUnit",
      "org.codehaus.janino.Java$ExportsModuleDirective",
      "org.codehaus.janino.Java$Padder",
      "org.codehaus.janino.Java$ForStatement",
      "org.codehaus.janino.Java$LocalVariableDeclarationStatement",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameter",
      "org.codehaus.janino.Java$EnumDeclaration",
      "org.codehaus.janino.Java$ArrayLength",
      "org.codehaus.janino.Access",
      "org.codehaus.janino.Java$LambdaParameters",
      "org.codehaus.janino.Java$SwitchStatement$SwitchBlockStatementGroup",
      "org.codehaus.janino.Java$TypeParameter",
      "org.codehaus.janino.Java$BlockLambdaBody",
      "org.codehaus.janino.Java$FieldAccess",
      "org.codehaus.janino.Java$Scope",
      "org.codehaus.janino.Java$FieldAccessExpression",
      "org.codehaus.janino.IType",
      "org.codehaus.janino.Java$LocalVariable",
      "org.codehaus.janino.Java$ClassInstanceCreationReference",
      "org.codehaus.janino.Visitor$LambdaParametersVisitor",
      "org.codehaus.janino.Java$SynchronizedStatement",
      "org.codehaus.janino.Java$Primitive",
      "org.codehaus.janino.Java$ClassLiteral",
      "org.codehaus.janino.Java$LocalClassDeclaration",
      "org.codehaus.janino.IClass$IMember",
      "org.codehaus.janino.Java$AbstractTypeDeclaration",
      "org.codehaus.janino.Java$CompilationUnit",
      "org.codehaus.janino.Java$NullLiteral",
      "org.codehaus.janino.Java$Assignment",
      "org.codehaus.janino.Java$PackageMemberClassDeclaration",
      "org.codehaus.janino.Java$IdentifierLambdaParameters",
      "org.codehaus.janino.Java$ExpressionStatement",
      "org.codehaus.janino.Java$ClassDeclaration",
      "org.codehaus.janino.Java$RequiresModuleDirective",
      "org.codehaus.janino.CodeContext$Offset",
      "org.codehaus.janino.Java$RvalueMemberType",
      "org.codehaus.janino.Java$Rvalue$1",
      "org.codehaus.janino.Visitor$FunctionDeclaratorVisitor",
      "org.codehaus.janino.Java$Rvalue$2",
      "org.codehaus.janino.Parser$1",
      "org.codehaus.janino.Java$NamedClassDeclaration",
      "org.codehaus.janino.Parser$MethodDeclarationContext",
      "org.codehaus.janino.Java$TypeArgument",
      "org.codehaus.janino.Java$LocalVariableSlot",
      "org.codehaus.janino.Java$InterfaceDeclaration",
      "org.codehaus.janino.Java$ElementValuePair",
      "org.codehaus.janino.Java$SimpleConstant",
      "org.codehaus.janino.Java$ThrowStatement",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleTypeImportDeclaration",
      "org.codehaus.janino.Visitor$AtomVisitor",
      "org.codehaus.commons.compiler.Location",
      "org.codehaus.janino.Java$Invocation",
      "org.codehaus.janino.Java$ConstructorInvocation",
      "org.codehaus.janino.Visitor$TypeDeclarationVisitor",
      "org.codehaus.janino.Java$NewArray",
      "org.codehaus.janino.util.AbstractTraverser",
      "org.codehaus.janino.Java$SuperclassFieldAccessExpression",
      "org.codehaus.janino.Java$Statement",
      "org.codehaus.janino.Visitor$RvalueVisitor",
      "org.codehaus.janino.Java$StringLiteral",
      "org.codehaus.janino.Java$EmptyStatement",
      "org.codehaus.janino.Visitor$TypeVisitor",
      "org.codehaus.janino.Visitor$ImportVisitor",
      "org.codehaus.janino.Java$IfStatement",
      "org.codehaus.janino.Visitor$LvalueVisitor",
      "org.codehaus.janino.Java$AnonymousClassDeclaration",
      "org.codehaus.janino.Java$Package",
      "org.codehaus.janino.Java$InferredLambdaParameters",
      "org.codehaus.janino.Visitor$AnnotationVisitor",
      "org.codehaus.janino.Java$PackageMemberAnnotationTypeDeclaration",
      "org.codehaus.janino.Java$AnnotationTypeDeclaration",
      "org.codehaus.janino.Java$ModuleDeclaration",
      "org.codehaus.janino.Java$FieldDeclarationOrInitializer",
      "org.codehaus.janino.Java$Modifiers",
      "org.codehaus.janino.Java$FormalLambdaParameters",
      "org.codehaus.janino.Java$MarkerAnnotation",
      "org.codehaus.janino.IClass$PrimitiveIClass",
      "org.codehaus.janino.Java$SwitchStatement",
      "org.codehaus.janino.Java$PackageMemberInterfaceDeclaration",
      "org.codehaus.janino.Java$LabeledStatement",
      "org.codehaus.janino.Parser$InterfaceDeclarationContext",
      "org.codehaus.janino.Visitor$TypeBodyDeclarationVisitor",
      "org.codehaus.janino.Java$MemberAnnotationTypeDeclaration",
      "org.codehaus.janino.Java$ArrayCreationReference",
      "org.codehaus.janino.Visitor$BlockStatementVisitor",
      "org.codehaus.janino.Java$WhileStatement",
      "org.codehaus.janino.Visitor$TryStatementResourceVisitor",
      "org.codehaus.janino.Java$NewInitializedArray",
      "org.codehaus.janino.Java$InnerClassDeclaration",
      "org.codehaus.janino.Java$BlockStatement",
      "org.codehaus.janino.Java$ContinuableStatement",
      "org.codehaus.janino.Visitor$TypeArgumentVisitor",
      "org.codehaus.janino.Java$NormalAnnotation",
      "org.codehaus.janino.Java$UsesModuleDirective",
      "org.codehaus.janino.IClass$IMethod",
      "org.codehaus.janino.Java$TryStatement$VariableAccessResource",
      "org.codehaus.janino.Java$DoStatement",
      "org.codehaus.janino.Java$AlternateConstructorInvocation",
      "org.codehaus.janino.Java$UnaryOperation",
      "org.codehaus.janino.Java$CatchClause",
      "org.codehaus.janino.Java$ParenthesizedExpression",
      "org.codehaus.janino.Token",
      "org.codehaus.janino.Java$BreakableStatement",
      "org.codehaus.janino.Java$NewClassInstance",
      "org.codehaus.janino.ClassFileIClass",
      "org.codehaus.janino.Java$TryStatement$Resource",
      "org.codehaus.janino.Java$Instanceof",
      "org.codehaus.janino.Java$AmbiguousName",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleStaticImportDeclaration",
      "org.codehaus.janino.Java$BooleanRvalue",
      "org.codehaus.janino.Java$AssertStatement",
      "org.codehaus.janino.Java$MethodReference",
      "org.codehaus.janino.Java$MemberEnumDeclaration",
      "org.codehaus.janino.Java$SimpleType",
      "org.codehaus.janino.Java$ArrayInitializer",
      "org.codehaus.janino.util.AbstractTraverser$9",
      "org.codehaus.janino.CodeContext$Inserter",
      "org.codehaus.janino.util.AbstractTraverser$7",
      "org.codehaus.janino.Java$ArrayType",
      "org.codehaus.janino.util.AbstractTraverser$8",
      "org.codehaus.janino.Visitor$ModifierVisitor",
      "org.codehaus.commons.compiler.util.StringPattern",
      "org.codehaus.janino.Java$ConstructorDeclarator",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameters",
      "org.codehaus.janino.Java$TryStatement",
      "org.codehaus.janino.UnicodeUnescapeReader",
      "org.codehaus.janino.Java$BinaryOperation",
      "org.codehaus.janino.Java$MemberTypeDeclaration",
      "org.codehaus.janino.Visitor$FieldDeclarationOrInitializerVisitor",
      "org.codehaus.janino.Java$LambdaExpression",
      "org.codehaus.janino.Java$TypeDeclaration",
      "org.codehaus.commons.compiler.InternalCompilerException",
      "org.codehaus.janino.Java$FieldDeclaration",
      "org.codehaus.janino.Java$Literal",
      "org.codehaus.janino.Java$VariableDeclarator",
      "org.codehaus.janino.Java$ReturnStatement",
      "org.codehaus.janino.Java$MethodDeclarator",
      "org.codehaus.janino.Java$ContinueStatement",
      "org.codehaus.janino.Java$Crement",
      "org.codehaus.janino.UnicodeUnescapeException",
      "org.codehaus.janino.Java$TypeBodyDeclaration",
      "org.codehaus.janino.Java$AbstractCompilationUnit",
      "org.codehaus.janino.util.AbstractTraverser$10",
      "org.codehaus.janino.Java$EnclosingScopeOfTypeDeclaration",
      "org.codehaus.janino.util.AbstractTraverser$11",
      "org.codehaus.janino.Java$Annotatable",
      "org.codehaus.commons.compiler.CompileException",
      "org.codehaus.janino.util.Traverser",
      "org.codehaus.janino.Java$BooleanLiteral",
      "org.codehaus.janino.Java$Modifier",
      "org.codehaus.janino.Java$AbstractAnnotation",
      "org.codehaus.janino.Visitor",
      "org.codehaus.janino.Java$Wildcard",
      "org.codehaus.janino.Java$SingleElementAnnotation",
      "org.codehaus.janino.Visitor$AbstractCompilationUnitVisitor",
      "org.codehaus.janino.FilterWarningHandler",
      "org.codehaus.janino.Java$EnumConstant",
      "org.codehaus.janino.Parser$ClassDeclarationContext",
      "org.codehaus.janino.IClass$2",
      "org.codehaus.janino.Java$AbstractClassDeclaration",
      "org.codehaus.janino.Java$IntegerLiteral",
      "org.codehaus.janino.IClass$IConstructor"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.codehaus.commons.compiler.WarningHandler", false, Parser_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Parser_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.codehaus.janino.Parser",
      "org.codehaus.janino.Parser$InterfaceDeclarationContext",
      "org.codehaus.janino.Parser$MethodDeclarationContext",
      "org.codehaus.janino.Parser$ClassDeclarationContext",
      "org.codehaus.janino.TokenType",
      "org.codehaus.janino.Java$Primitive",
      "org.codehaus.janino.Parser$1",
      "org.codehaus.janino.Scanner",
      "org.codehaus.janino.UnicodeUnescapeReader",
      "org.codehaus.commons.compiler.LocatedException",
      "org.codehaus.commons.compiler.CompileException",
      "org.codehaus.commons.compiler.Location",
      "org.codehaus.janino.TokenStreamImpl",
      "org.codehaus.janino.Token",
      "org.codehaus.janino.TokenStreamImpl$1",
      "org.codehaus.janino.Java$AbstractTypeDeclaration",
      "org.codehaus.janino.Java$AbstractClassDeclaration",
      "org.codehaus.janino.Java$EnumConstant",
      "org.codehaus.janino.Java$Located$1",
      "org.codehaus.janino.Java$Located",
      "org.codehaus.janino.Java$VariableDeclarator",
      "org.codehaus.janino.Java$Atom",
      "org.codehaus.janino.Java$Rvalue$2",
      "org.codehaus.janino.Java$Rvalue",
      "org.codehaus.janino.Java$Literal",
      "org.codehaus.janino.Java$FloatingPointLiteral",
      "org.codehaus.janino.Java$Lvalue",
      "org.codehaus.janino.Java$AmbiguousName",
      "org.codehaus.janino.Java",
      "org.codehaus.janino.Java$Type",
      "org.codehaus.janino.Java$ReferenceType",
      "org.codehaus.janino.Java$AbstractAnnotation",
      "org.codehaus.janino.Java$MarkerAnnotation",
      "org.codehaus.janino.Java$AccessModifier",
      "org.codehaus.janino.Java$Statement",
      "org.codehaus.janino.Java$LocalVariableDeclarationStatement",
      "org.codehaus.commons.compiler.util.resource.FileResource",
      "org.codehaus.commons.compiler.util.resource.StringResource",
      "org.codehaus.janino.Java$BooleanRvalue",
      "org.codehaus.janino.Java$BinaryOperation",
      "org.codehaus.janino.Java$ExpressionStatement",
      "org.codehaus.janino.Java$Wildcard",
      "org.codehaus.janino.Java$ArrayType",
      "org.codehaus.janino.Java$IntegerLiteral",
      "org.codehaus.commons.compiler.util.resource.ResourceFinder$1",
      "org.codehaus.commons.compiler.util.resource.ResourceFinder",
      "org.codehaus.commons.compiler.util.resource.ListableResourceFinder",
      "org.codehaus.commons.compiler.util.resource.MultiResourceFinder",
      "org.codehaus.commons.compiler.util.resource.LazyMultiResourceFinder",
      "org.codehaus.commons.compiler.util.resource.PathResourceFinder",
      "org.codehaus.commons.compiler.util.iterator.IteratorCollection",
      "org.codehaus.commons.compiler.util.iterator.IteratorCollection$1",
      "org.codehaus.janino.Java$SingleElementAnnotation",
      "org.codehaus.janino.Java$ElementValuePair",
      "org.codehaus.janino.Java$NormalAnnotation",
      "org.codehaus.janino.Java$UnaryOperation",
      "org.codehaus.janino.Java$ClassLiteral",
      "org.codehaus.janino.Java$InferredLambdaParameters",
      "org.codehaus.janino.Java$LambdaExpression",
      "org.codehaus.janino.Java$SimpleConstant",
      "org.codehaus.janino.Java$SimpleType",
      "org.codehaus.janino.Java$FieldAccessExpression",
      "org.codehaus.janino.Java$AbstractCompilationUnit",
      "org.codehaus.janino.Java$CompilationUnit",
      "org.codehaus.janino.Java$NullLiteral",
      "org.codehaus.janino.Java$Block",
      "org.codehaus.janino.Java$ConstructorInvocation",
      "org.codehaus.janino.Java$AlternateConstructorInvocation",
      "org.codehaus.janino.util.AbstractTraverser",
      "org.codehaus.janino.Java$Rvalue$1",
      "org.codehaus.janino.util.AbstractTraverser$1",
      "org.codehaus.janino.util.AbstractTraverser$2",
      "org.codehaus.janino.util.AbstractTraverser$3",
      "org.codehaus.janino.util.AbstractTraverser$4",
      "org.codehaus.janino.util.AbstractTraverser$5",
      "org.codehaus.janino.util.AbstractTraverser$6",
      "org.codehaus.janino.util.AbstractTraverser$7",
      "org.codehaus.janino.util.AbstractTraverser$8",
      "org.codehaus.janino.util.AbstractTraverser$9",
      "org.codehaus.janino.util.AbstractTraverser$10",
      "org.codehaus.janino.util.AbstractTraverser$11",
      "org.codehaus.janino.Java$PackageDeclaration",
      "org.codehaus.janino.Java$ConditionalExpression",
      "org.codehaus.janino.Java$RvalueMemberType",
      "org.codehaus.janino.Java$ArrayAccessExpression",
      "org.codehaus.janino.Java$InterfaceDeclaration",
      "org.codehaus.janino.Java$MemberInterfaceDeclaration",
      "org.codehaus.janino.Java$MemberAnnotationTypeDeclaration",
      "org.codehaus.janino.Java$EnclosingScopeOfTypeDeclaration",
      "org.codehaus.commons.compiler.util.StringPattern",
      "org.codehaus.janino.FilterWarningHandler",
      "org.codehaus.janino.Java$Assignment",
      "org.codehaus.janino.Java$Invocation",
      "org.codehaus.janino.Java$MethodInvocation",
      "org.codehaus.janino.Java$TextBlock",
      "org.codehaus.janino.Java$BreakableStatement",
      "org.codehaus.janino.Java$LabeledStatement",
      "org.codehaus.janino.Java$FormalLambdaParameters",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameters",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameter",
      "org.codehaus.janino.Java$CatchParameter",
      "org.codehaus.commons.compiler.InternalCompilerException",
      "org.codehaus.janino.Java$PackageMemberInterfaceDeclaration",
      "org.codehaus.janino.Java$SuperclassMethodInvocation",
      "org.codehaus.janino.Java$PrimitiveType",
      "org.codehaus.janino.Java$NamedClassDeclaration",
      "org.codehaus.janino.Java$MemberClassDeclaration",
      "org.codehaus.janino.Java$MemberEnumDeclaration",
      "org.codehaus.janino.IClassLoader",
      "org.codehaus.janino.ClassLoaderIClassLoader",
      "org.codehaus.janino.Descriptor",
      "org.codehaus.janino.IClass$1",
      "org.codehaus.janino.IClass$2",
      "org.codehaus.janino.IClass$PrimitiveIClass",
      "org.codehaus.janino.IClass",
      "org.codehaus.janino.ReflectionIClass",
      "org.codehaus.janino.IClass$IInvocable",
      "org.codehaus.janino.IClass$IMethod",
      "org.codehaus.janino.ReflectionIClass$ReflectionIMethod",
      "org.codehaus.janino.IClassLoader$1",
      "org.codehaus.janino.IClass$IConstructor",
      "org.codehaus.janino.ReflectionIClass$ReflectionIConstructor",
      "org.codehaus.janino.Java$PackageMemberAnnotationTypeDeclaration",
      "org.codehaus.janino.Java$AnonymousClassDeclaration",
      "org.codehaus.janino.Java$ClassInstanceCreationReference",
      "org.codehaus.janino.Java$TypeParameter",
      "org.codehaus.janino.Java$StringLiteral",
      "org.codehaus.janino.Java$PackageMemberClassDeclaration",
      "org.codehaus.janino.Java$ParenthesizedExpression",
      "org.codehaus.janino.Java$Crement",
      "org.codehaus.janino.Java$ReturnStatement",
      "org.codehaus.janino.util.AbstractTraverser$4$1",
      "org.codehaus.janino.util.AbstractTraverser$7$1",
      "org.codehaus.janino.Java$Cast",
      "org.codehaus.commons.compiler.util.StringUtil",
      "org.codehaus.commons.compiler.util.iterator.TransformingIterator",
      "org.codehaus.commons.compiler.util.resource.PathResourceFinder$1",
      "org.codehaus.commons.compiler.util.resource.ZipFileResourceFinder",
      "org.codehaus.janino.Java$CharacterLiteral",
      "org.codehaus.janino.Java$LocalVariable",
      "org.codehaus.janino.Java$LocalVariableAccess",
      "org.codehaus.janino.Java$BlockLambdaBody",
      "org.codehaus.janino.Java$LocalClassDeclaration",
      "org.codehaus.janino.Java$NewClassInstance",
      "org.codehaus.janino.Java$QualifiedThisReference",
      "org.codehaus.janino.Java$SuperclassFieldAccessExpression",
      "org.codehaus.janino.Java$ArrayInitializer",
      "org.codehaus.janino.Java$NewInitializedArray",
      "org.codehaus.janino.Java$BooleanLiteral",
      "org.codehaus.janino.Java$AbstractCompilationUnit$ImportDeclaration",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleTypeImportDeclaration",
      "org.codehaus.janino.Java$AbstractTypeBodyDeclaration",
      "org.codehaus.janino.Java$FunctionDeclarator",
      "org.codehaus.janino.Java$MethodDeclarator",
      "org.codehaus.janino.Java$ParameterAccess",
      "org.codehaus.janino.Java$ArrayLength",
      "org.codehaus.janino.Java$PackageMemberEnumDeclaration",
      "org.codehaus.janino.Java$ArrayCreationReference",
      "org.codehaus.janino.Java$Instanceof",
      "org.codehaus.janino.Java$Package",
      "org.codehaus.janino.IClass$IField",
      "org.codehaus.janino.UnitCompiler$SimpleIField",
      "org.codehaus.janino.Java$FieldAccess",
      "org.codehaus.janino.Java$ContinueStatement",
      "org.codehaus.janino.Java$SynchronizedStatement",
      "org.codehaus.janino.Java$ModularCompilationUnit",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleStaticImportDeclaration",
      "org.codehaus.janino.Java$IdentifierLambdaParameters",
      "org.codehaus.janino.Access",
      "org.codehaus.janino.Java$Initializer",
      "org.codehaus.janino.Java$AbstractCompilationUnit$TypeImportOnDemandDeclaration"
    );
  }
}
