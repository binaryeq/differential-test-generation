/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 22:34:43 GMT 2024
 */

package org.threeten.bp.chrono;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ChronoLocalDate_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.threeten.bp.chrono.ChronoLocalDate"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/org/threeten/threetenbp/1.6.6"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ChronoLocalDate_ESTest_scaffolding.class.getClassLoader() ,
      "org.threeten.bp.chrono.MinguoEra",
      "org.threeten.bp.chrono.JapaneseEra",
      "org.threeten.bp.chrono.MinguoDate$1",
      "org.threeten.bp.chrono.ChronoZonedDateTime$1",
      "org.threeten.bp.chrono.ChronoPeriod",
      "org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser",
      "org.threeten.bp.chrono.ChronoLocalDate$1",
      "org.threeten.bp.format.DateTimePrintContext$1",
      "org.threeten.bp.MonthDay$1",
      "org.threeten.bp.jdk8.DefaultInterfaceTemporal",
      "org.threeten.bp.chrono.HijrahDate$1",
      "org.threeten.bp.temporal.TemporalAccessor",
      "org.threeten.bp.OffsetDateTime",
      "org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore",
      "org.threeten.bp.Period",
      "org.threeten.bp.chrono.ChronoDateImpl",
      "org.threeten.bp.temporal.TemporalAmount",
      "org.threeten.bp.LocalTime",
      "org.threeten.bp.OffsetDateTime$2",
      "org.threeten.bp.OffsetDateTime$1",
      "org.threeten.bp.Month$1",
      "org.threeten.bp.ZoneId$1",
      "org.threeten.bp.Month$2",
      "org.threeten.bp.temporal.TemporalUnit",
      "org.threeten.bp.Duration",
      "org.threeten.bp.Clock$OffsetClock",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ReducedPrinterParser",
      "org.threeten.bp.chrono.ChronoLocalDateTime",
      "org.threeten.bp.chrono.JapaneseDate$1",
      "org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser",
      "org.threeten.bp.Month",
      "org.threeten.bp.Clock",
      "org.threeten.bp.format.DateTimeFormatter",
      "org.threeten.bp.format.DateTimeBuilder",
      "org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser",
      "org.threeten.bp.chrono.ChronoZonedDateTime",
      "org.threeten.bp.format.DateTimeParseContext$Parsed",
      "org.threeten.bp.format.ResolverStyle",
      "org.threeten.bp.chrono.ChronoLocalDateTime$1",
      "org.threeten.bp.Clock$SystemClock",
      "org.threeten.bp.zone.ZoneRules",
      "org.threeten.bp.LocalDate",
      "org.threeten.bp.chrono.ThaiBuddhistEra",
      "org.threeten.bp.format.DateTimeFormatterBuilder",
      "org.threeten.bp.format.DecimalStyle",
      "org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser",
      "org.threeten.bp.LocalTime$1",
      "org.threeten.bp.ZoneOffset",
      "org.threeten.bp.Instant",
      "org.threeten.bp.ZoneId",
      "org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor",
      "org.threeten.bp.format.DateTimeParseException",
      "org.threeten.bp.Clock$FixedClock",
      "org.threeten.bp.DayOfWeek$1",
      "org.threeten.bp.DayOfWeek",
      "org.threeten.bp.chrono.ChronoLocalDate",
      "org.threeten.bp.chrono.JapaneseChronology",
      "org.threeten.bp.chrono.ThaiBuddhistChronology",
      "org.threeten.bp.OffsetTime",
      "org.threeten.bp.chrono.HijrahDate",
      "org.threeten.bp.zone.StandardZoneRules",
      "org.threeten.bp.temporal.IsoFields$Unit",
      "org.threeten.bp.chrono.ThaiBuddhistDate",
      "org.threeten.bp.LocalDate$2",
      "org.threeten.bp.chrono.ChronoZonedDateTimeImpl",
      "org.threeten.bp.Clock$TickClock",
      "org.threeten.bp.ZoneOffset$1",
      "org.threeten.bp.LocalDate$1",
      "org.threeten.bp.LocalDateTime",
      "org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser",
      "org.threeten.bp.OffsetTime$1",
      "org.threeten.bp.format.DateTimeFormatter$ClassicFormat",
      "org.threeten.bp.jdk8.Jdk8Methods",
      "org.threeten.bp.temporal.UnsupportedTemporalTypeException",
      "org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser",
      "org.threeten.bp.temporal.TemporalQuery",
      "org.threeten.bp.DateTimeException",
      "org.threeten.bp.chrono.IsoChronology",
      "org.threeten.bp.format.DateTimeFormatterBuilder$DateTimePrinterParser",
      "org.threeten.bp.chrono.MinguoChronology$1",
      "org.threeten.bp.temporal.Temporal",
      "org.threeten.bp.temporal.IsoFields$Field",
      "org.threeten.bp.temporal.TemporalField",
      "org.threeten.bp.Instant$1",
      "org.threeten.bp.zone.ZoneRules$Fixed",
      "org.threeten.bp.Instant$2",
      "org.threeten.bp.temporal.IsoFields",
      "org.threeten.bp.ZonedDateTime",
      "org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser",
      "org.threeten.bp.format.DateTimePrintContext",
      "org.threeten.bp.format.DateTimeFormatterBuilder$2",
      "org.threeten.bp.format.DateTimeFormatterBuilder$3",
      "org.threeten.bp.jdk8.DefaultInterfaceEra",
      "org.threeten.bp.format.DateTimeFormatterBuilder$1",
      "org.threeten.bp.chrono.HijrahEra",
      "org.threeten.bp.chrono.MinguoDate",
      "org.threeten.bp.chrono.ChronoPeriodImpl",
      "org.threeten.bp.temporal.ChronoUnit",
      "org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$4",
      "org.threeten.bp.MonthDay",
      "org.threeten.bp.chrono.Chronology",
      "org.threeten.bp.chrono.JapaneseDate",
      "org.threeten.bp.temporal.ChronoField",
      "org.threeten.bp.chrono.MinguoChronology",
      "org.threeten.bp.temporal.TemporalQueries$2",
      "org.threeten.bp.chrono.ChronoDateImpl$1",
      "org.threeten.bp.temporal.TemporalQueries",
      "org.threeten.bp.temporal.TemporalQueries$1",
      "org.threeten.bp.temporal.TemporalQueries$4",
      "org.threeten.bp.format.FormatStyle",
      "org.threeten.bp.temporal.TemporalQueries$3",
      "org.threeten.bp.temporal.TemporalQueries$6",
      "org.threeten.bp.temporal.TemporalQueries$5",
      "org.threeten.bp.temporal.TemporalQueries$7",
      "org.threeten.bp.temporal.IsoFields$Field$1",
      "org.threeten.bp.temporal.IsoFields$Field$2",
      "org.threeten.bp.temporal.IsoFields$Field$3",
      "org.threeten.bp.temporal.IsoFields$Field$4",
      "org.threeten.bp.chrono.Era",
      "org.threeten.bp.zone.ZoneRulesException",
      "org.threeten.bp.format.DateTimeFormatter$1",
      "org.threeten.bp.format.DateTimeFormatter$2",
      "org.threeten.bp.chrono.Chronology$1",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser",
      "org.threeten.bp.format.DateTimeTextProvider",
      "org.threeten.bp.format.SignStyle",
      "org.threeten.bp.LocalDateTime$1",
      "org.threeten.bp.ZoneRegion",
      "org.threeten.bp.chrono.HijrahChronology",
      "org.threeten.bp.format.TextStyle",
      "org.threeten.bp.chrono.IsoEra",
      "org.threeten.bp.chrono.ChronoLocalDateTimeImpl",
      "org.threeten.bp.format.SimpleDateTimeTextProvider$1",
      "org.threeten.bp.temporal.TemporalAdjuster",
      "org.threeten.bp.temporal.ValueRange",
      "org.threeten.bp.format.SimpleDateTimeTextProvider"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.threeten.bp.temporal.TemporalQuery", false, ChronoLocalDate_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ChronoLocalDate_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.threeten.bp.jdk8.DefaultInterfaceTemporalAccessor",
      "org.threeten.bp.jdk8.DefaultInterfaceTemporal",
      "org.threeten.bp.chrono.ChronoLocalDate$1",
      "org.threeten.bp.chrono.ChronoLocalDate",
      "org.threeten.bp.chrono.ChronoDateImpl",
      "org.threeten.bp.Duration",
      "org.threeten.bp.jdk8.Jdk8Methods",
      "org.threeten.bp.temporal.ChronoUnit",
      "org.threeten.bp.temporal.ValueRange",
      "org.threeten.bp.temporal.ChronoField",
      "org.threeten.bp.Month$1",
      "org.threeten.bp.Month",
      "org.threeten.bp.chrono.Chronology$1",
      "org.threeten.bp.chrono.Chronology",
      "org.threeten.bp.chrono.IsoChronology",
      "org.threeten.bp.Month$2",
      "org.threeten.bp.LocalDate$1",
      "org.threeten.bp.LocalDate",
      "org.threeten.bp.chrono.JapaneseDate",
      "org.threeten.bp.temporal.TemporalQueries$1",
      "org.threeten.bp.temporal.TemporalQueries$2",
      "org.threeten.bp.temporal.TemporalQueries$3",
      "org.threeten.bp.temporal.TemporalQueries$4",
      "org.threeten.bp.temporal.TemporalQueries$5",
      "org.threeten.bp.temporal.TemporalQueries$6",
      "org.threeten.bp.temporal.TemporalQueries$7",
      "org.threeten.bp.temporal.TemporalQueries",
      "org.threeten.bp.ZoneId$1",
      "org.threeten.bp.ZoneId",
      "org.threeten.bp.ZoneOffset$1",
      "org.threeten.bp.ZoneOffset",
      "org.threeten.bp.DateTimeException",
      "org.threeten.bp.chrono.ThaiBuddhistDate",
      "org.threeten.bp.Clock",
      "org.threeten.bp.Clock$SystemClock",
      "org.threeten.bp.ZoneRegion",
      "org.threeten.bp.zone.ZoneRules",
      "org.threeten.bp.zone.ZoneRules$Fixed",
      "org.threeten.bp.Instant$1",
      "org.threeten.bp.Instant",
      "org.threeten.bp.chrono.HijrahDate",
      "org.threeten.bp.chrono.ChronoLocalDateTime$1",
      "org.threeten.bp.chrono.ChronoLocalDateTime",
      "org.threeten.bp.LocalTime$1",
      "org.threeten.bp.LocalTime",
      "org.threeten.bp.LocalDateTime$1",
      "org.threeten.bp.LocalDateTime",
      "org.threeten.bp.OffsetDateTime$1",
      "org.threeten.bp.OffsetDateTime$2",
      "org.threeten.bp.OffsetDateTime",
      "org.threeten.bp.chrono.ThaiBuddhistChronology",
      "org.threeten.bp.LocalDate$2",
      "org.threeten.bp.jdk8.DefaultInterfaceEra",
      "org.threeten.bp.chrono.JapaneseEra",
      "org.threeten.bp.chrono.MinguoChronology",
      "org.threeten.bp.chrono.IsoEra",
      "org.threeten.bp.chrono.HijrahChronology",
      "org.threeten.bp.DayOfWeek$1",
      "org.threeten.bp.DayOfWeek",
      "org.threeten.bp.format.DateTimeFormatterBuilder$1",
      "org.threeten.bp.temporal.IsoFields$Field",
      "org.threeten.bp.temporal.IsoFields$Unit",
      "org.threeten.bp.temporal.IsoFields",
      "org.threeten.bp.format.DateTimeFormatterBuilder$3",
      "org.threeten.bp.format.DateTimeFormatterBuilder",
      "org.threeten.bp.format.SignStyle",
      "org.threeten.bp.format.DateTimeFormatterBuilder$NumberPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$CharLiteralPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser",
      "org.threeten.bp.format.DecimalStyle",
      "org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$FractionPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneIdPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$StringLiteralPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$InstantPrinterParser",
      "org.threeten.bp.format.SimpleDateTimeTextProvider$LocaleStore",
      "org.threeten.bp.format.DateTimeTextProvider",
      "org.threeten.bp.format.SimpleDateTimeTextProvider$1",
      "org.threeten.bp.format.SimpleDateTimeTextProvider",
      "org.threeten.bp.format.DateTimeFormatterBuilder$2",
      "org.threeten.bp.format.DateTimeFormatterBuilder$TextPrinterParser",
      "org.threeten.bp.format.DateTimeFormatter$1",
      "org.threeten.bp.format.DateTimeFormatter$2",
      "org.threeten.bp.format.DateTimeFormatter",
      "org.threeten.bp.format.DateTimeParseContext",
      "org.threeten.bp.format.DateTimeParseContext$Parsed",
      "org.threeten.bp.chrono.ChronoPeriod",
      "org.threeten.bp.Period",
      "org.threeten.bp.format.DateTimeParseException",
      "org.threeten.bp.chrono.JapaneseChronology",
      "org.threeten.bp.Clock$TickClock",
      "org.threeten.bp.chrono.JapaneseDate$1",
      "org.threeten.bp.temporal.UnsupportedTemporalTypeException",
      "org.threeten.bp.chrono.MinguoDate",
      "org.threeten.bp.chrono.ChronoZonedDateTime$1",
      "org.threeten.bp.chrono.ChronoZonedDateTime",
      "org.threeten.bp.ZonedDateTime$1",
      "org.threeten.bp.ZonedDateTime",
      "org.threeten.bp.chrono.ChronoPeriodImpl",
      "org.threeten.bp.chrono.ChronoDateImpl$1",
      "org.threeten.bp.chrono.ChronoZonedDateTimeImpl",
      "org.threeten.bp.chrono.ChronoLocalDateTimeImpl",
      "org.threeten.bp.chrono.ThaiBuddhistEra",
      "org.threeten.bp.OffsetTime$1",
      "org.threeten.bp.OffsetTime",
      "org.threeten.bp.chrono.HijrahDate$1",
      "org.threeten.bp.chrono.MinguoDate$1",
      "org.threeten.bp.chrono.MinguoChronology$1",
      "org.threeten.bp.chrono.MinguoEra",
      "org.threeten.bp.zone.ZoneRulesInitializer$DoNothingZoneRulesInitializer",
      "org.threeten.bp.zone.ZoneRulesInitializer",
      "org.threeten.bp.zone.ZoneRulesInitializer$ServiceLoaderZoneRulesInitializer",
      "org.threeten.bp.zone.TzdbZoneRulesProvider",
      "org.threeten.bp.zone.TzdbZoneRulesProvider$Version",
      "org.threeten.bp.zone.ZoneRulesProvider",
      "org.threeten.bp.LocalTime$2",
      "org.threeten.bp.Duration$1",
      "org.threeten.bp.chrono.JapaneseChronology$1",
      "org.threeten.bp.Year$1",
      "org.threeten.bp.Year",
      "org.threeten.bp.Year$2",
      "org.threeten.bp.chrono.ThaiBuddhistDate$1",
      "org.threeten.bp.chrono.ThaiBuddhistChronology$1",
      "org.threeten.bp.LocalDateTime$2",
      "org.threeten.bp.MonthDay$1",
      "org.threeten.bp.MonthDay",
      "org.threeten.bp.format.DateTimeFormatterBuilder$LocalizedPrinterParser",
      "org.threeten.bp.format.DateTimeFormatStyleProvider",
      "org.threeten.bp.format.SimpleDateTimeFormatStyleProvider",
      "org.threeten.bp.format.DateTimeTextProvider$ProviderSingleton",
      "org.threeten.bp.format.DateTimePrintContext",
      "org.threeten.bp.Instant$2",
      "org.threeten.bp.format.DateTimePrintContext$1",
      "org.threeten.bp.format.DateTimeFormatterBuilder$4",
      "org.threeten.bp.Clock$OffsetClock",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ChronoPrinterParser",
      "org.threeten.bp.chrono.Chronology$2",
      "org.threeten.bp.YearMonth$1",
      "org.threeten.bp.YearMonth",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneTextPrinterParser$1",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ZoneTextPrinterParser",
      "org.threeten.bp.zone.Ser",
      "org.threeten.bp.zone.StandardZoneRules",
      "org.threeten.bp.zone.ZoneOffsetTransition",
      "org.threeten.bp.YearMonth$2",
      "org.threeten.bp.ZoneId$2",
      "org.threeten.bp.format.DateTimeFormatterBuilder$ReducedPrinterParser",
      "org.threeten.bp.chrono.ChronoZonedDateTime$2",
      "org.threeten.bp.zone.ZoneRulesException",
      "org.threeten.bp.ZonedDateTime$2",
      "org.threeten.bp.chrono.ChronoLocalDateTimeImpl$1",
      "org.threeten.bp.Clock$FixedClock",
      "org.threeten.bp.chrono.ChronoZonedDateTimeImpl$1",
      "org.threeten.bp.format.DateTimeFormatter$ClassicFormat",
      "org.threeten.bp.format.DateTimeBuilder",
      "org.threeten.bp.OffsetDateTime$3",
      "org.threeten.bp.format.DateTimeFormatterBuilder$WeekFieldsPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$LocalizedOffsetPrinterParser",
      "org.threeten.bp.format.DateTimeFormatterBuilder$PadPrinterParserDecorator",
      "org.threeten.bp.format.ResolverStyle",
      "org.threeten.bp.format.TextStyle",
      "org.threeten.bp.chrono.HijrahEra"
    );
  }
}
