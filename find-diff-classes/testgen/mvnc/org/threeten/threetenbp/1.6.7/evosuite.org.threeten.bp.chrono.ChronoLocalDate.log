* EvoSuite 1.2.0
* Going to generate test cases for class: org.threeten.bp.chrono.ChronoLocalDate
* Starting Client-0
* Connecting to master process on port 15656
* Analyzing classpath: 
  - /home/wtwhite/code/craw-redhat-oss/wget/crawl/repo1.maven.org/maven2/org/threeten/threetenbp/1.6.7/threetenbp-1.6.7.jar
  - t/dependency/jcommander-1.27.jar
  - t/dependency/testng-6.8.21.jar
* Finished analyzing classpath
* Generating tests for class org.threeten.bp.chrono.ChronoLocalDate
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 439
* Using seed 1729723033805
* Starting evolution
* Initial Number of Goals in DynaMOSA = 224 / 439
[MASTER] 11:37:16.433 [logback-1] WARN  TestCluster - Failed to check cache for org.threeten.bp.temporal.TemporalQuery<R> : Type points to itself
[Progress:>                             0%] [Cov:======>                            19%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             1%] [Cov:==============>                    41%][Progress:>                             3%] [Cov:===============>                   44%][Progress:>                             3%] [Cov:==============>                    41%][Progress:>                             3%] [Cov:===============>                   44%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:=================>                 51%][Progress:=>                            5%] [Cov:==================>                52%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:======================>            64%][Progress:==>                           8%] [Cov:======================>            64%][Progress:==>                           8%] [Cov:=======================>           67%][Progress:==>                           8%] [Cov:========================>          69%][Progress:==>                           8%] [Cov:========================>          69%][Progress:==>                           8%] [Cov:========================>          70%][Progress:===>                          10%] [Cov:========================>          70%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          10%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         74%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:==========================>        75%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:======>                       23%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 43%] [Cov:===========================>       78%][Progress:============>                 43%] [Cov:===========================>       78%][Progress:============>                 43%] [Cov:===========================>       78%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][MASTER] 11:38:05.443 [logback-1] WARN  TestCluster - Failed to check cache for org.threeten.bp.chrono.ChronoLocalDateTime<D> : Type points to itself
[Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%]
* Search finished after 62s and 188 generations, 53284 statements, best individual has fitness: 79.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 64
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 65
* Number of covered goals: 57
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 129
* Number of covered goals: 125
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 60
* Number of covered goals: 38
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 28
* Number of covered goals: 27
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 65
* Number of covered goals: 56
* Generated 84 tests with total length 250
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
[MASTER] 11:38:33.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<NanoOfDay> but was:<null>
[MASTER] 11:38:33.993 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LocalDate localDate0 = JapaneseDate.MIN_DATE;
ChronoField chronoField0 = ChronoField.NANO_OF_DAY;
TemporalQuery<ChronoField> temporalQuery0 = (TemporalQuery<ChronoField>) mock(TemporalQuery.class, new ViolatedAssumptionAnswer());
doReturn((Object) null).when(temporalQuery0).queryFrom(any(org.threeten.bp.temporal.TemporalAccessor.class));
ChronoField chronoField1 = localDate0.query(temporalQuery0);
assertEquals(ChronoField.NANO_OF_DAY, chronoField1);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'ChronoLocalDate_ESTest' to evosuite-tests
* Done!

* Computation finished
