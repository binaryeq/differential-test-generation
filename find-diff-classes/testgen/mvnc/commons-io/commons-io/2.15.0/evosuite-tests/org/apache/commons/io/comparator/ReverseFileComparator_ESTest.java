/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 19:01:16 GMT 2024
 */

package org.apache.commons.io.comparator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Converter;
import com.google.common.base.Function;
import java.io.File;
import java.util.Comparator;
import java.util.function.ToLongFunction;
import org.apache.commons.io.comparator.ReverseFileComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReverseFileComparator_ESTest extends ReverseFileComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ToLongFunction<Object> toLongFunction0 = (ToLongFunction<Object>) mock(ToLongFunction.class, new ViolatedAssumptionAnswer());
      doReturn(1L, (-3L)).when(toLongFunction0).applyAsLong(any());
      Comparator<File> comparator0 = Comparator.comparingLong((ToLongFunction<? super File>) toLongFunction0);
      ReverseFileComparator reverseFileComparator0 = new ReverseFileComparator(comparator0);
      MockFile mockFile0 = new MockFile("ReverseFileComparator[java.util.Comparators$NullComparator@74dd9c06]");
      int int0 = reverseFileComparator0.compare((File) mockFile0, (File) mockFile0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ToLongFunction<Object> toLongFunction0 = (ToLongFunction<Object>) mock(ToLongFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-4327L), (-4327L), (-4327L), (-491L)).when(toLongFunction0).applyAsLong(any());
      Comparator<File> comparator0 = Comparator.comparingLong((ToLongFunction<? super File>) toLongFunction0);
      ReverseFileComparator reverseFileComparator0 = new ReverseFileComparator(comparator0);
      int int0 = reverseFileComparator0.compare((File) null, (File) null);
      int int1 = reverseFileComparator0.compare((File) null, (File) null);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("d3I!EIdl}");
      Function<Object, File> function0 = (Function<Object, File>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn(mockFile0).when(function0).apply(any());
      Converter<Object, File> converter0 = Converter.from((Function<? super Object, ? extends File>) function0, (Function<? super File, ?>) function0);
      Comparator<File> comparator0 = Comparator.comparing((java.util.function.Function<? super File, ? extends File>) converter0);
      ReverseFileComparator reverseFileComparator0 = new ReverseFileComparator(comparator0);
      // Undeclared exception!
      try { 
        reverseFileComparator0.compare((File) null, (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.UnixFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Function<Object, File> function0 = (Function<Object, File>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(function0).apply(any());
      Converter<Object, File> converter0 = Converter.from((Function<? super Object, ? extends File>) function0, (Function<? super File, ?>) function0);
      Comparator<File> comparator0 = Comparator.comparing((java.util.function.Function<? super File, ? extends File>) converter0);
      ReverseFileComparator reverseFileComparator0 = new ReverseFileComparator(comparator0);
      File file0 = MockFile.createTempFile("ReverseFileComparator[java.util.Comparator$$Lambda$47/815089773@ced1a66]", "ReverseFileComparator[java.util.Comparator$$Lambda$47/815089773@ced1a66]", (File) null);
      // Undeclared exception!
      try { 
        reverseFileComparator0.compare((File) null, file0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Comparator<File> comparator0 = Comparator.nullsLast((Comparator<? super File>) null);
      ReverseFileComparator reverseFileComparator0 = new ReverseFileComparator(comparator0);
      String string0 = reverseFileComparator0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReverseFileComparator reverseFileComparator0 = null;
      try {
        reverseFileComparator0 = new ReverseFileComparator((Comparator<File>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // delegate
         //
         verifyException("java.util.Objects", e);
      }
  }
}
