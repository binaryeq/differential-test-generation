/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 20:27:10 GMT 2024
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.net.URI;
import java.nio.charset.Charset;
import java.time.Duration;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import org.apache.commons.io.input.Tailer;
import org.apache.commons.io.input.TailerListener;
import org.apache.commons.io.input.TailerListenerAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tailer_ESTest extends Tailer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = MockFile.createTempFile("9;~pe#b", "9;~pe#b");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, 1512L, false, true);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer$Builder", "C3KV$#..");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (-1381L), true, false, (-1685));
      Tailer.Tailable tailer_Tailable0 = tailer0.getTailable();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailable(tailer_Tailable0);
      assertSame(tailer_Builder0, tailer_Builder1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      // Undeclared exception!
      try { 
        tailer_Builder0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailable
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = MockFile.createTempFile("9;~pe#b", "9;~pe#b");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(file0, tailerListenerAdapter0, (-53L));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile(";");
      Charset charset0 = Charset.defaultCharset();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, charset0, tailerListenerAdapter0, (-116444736000000000L), true, true, 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2542, threadFactory0, threadPoolExecutor_DiscardOldestPolicy0);
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setExecutorService(scheduledThreadPoolExecutor0);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("listener");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, false, 0);
      File file0 = tailer0.getFile();
      assertFalse(file0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("commons-io-tailer", "net.bytebuddy.build.Plugin$Engine$Default$Preprocessor$Ignored");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L, false, true);
      long long0 = tailer0.getDelay();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("EJ #%yJ1*0", "a{A+VTIbb:vDJ");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-1L), true, true, 92);
      long long0 = tailer0.getDelay();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("9;~pe#b", "9;~pe#b");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Charset charset0 = Charset.defaultCharset();
      Tailer tailer0 = Tailer.create(file0, charset0, (TailerListener) tailerListenerAdapter0, (-281L), false, true, 5760);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("rt//m");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (TailerListener) null, 1155L, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailerListener
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, (-3144L), true, (-2198));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, (-399L), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, (long) 64);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-2652L), true, false, (-478));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("yf#)Q0|^y]U?,NdHI");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L, false, (-382));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Duration duration0 = Duration.ofSeconds(4327L);
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setDelayDuration(duration0);
      assertSame(tailer_Builder0, tailer_Builder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailFromEnd(true);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setReOpen(false);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailerListener(tailerListenerAdapter0);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setDelayDuration((Duration) null);
      assertSame(tailer_Builder0, tailer_Builder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.commons.io.input.Tailer$1", "org.apache.commons.io.input.Tailer$1");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, 0L, true);
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      File file0 = MockFile.createTempFile("tNS", "tNS");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0);
      File file1 = tailer0.getFile();
      assertEquals("/tmp/tNS0tNS", file1.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("tNS", "tNS");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(file0, tailerListenerAdapter0);
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setStartThread(false);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 2174L);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("aZe<");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 1210L, false, 834);
      Tailer.Tailable tailer_Tailable0 = tailer0.getTailable();
      assertNotNull(tailer_Tailable0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("VK;(6sB|2.&pY#S# ");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0);
      long long0 = tailer0.getDelay();
      assertEquals(1000L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile(",", ",");
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, charset0, (TailerListener) null, 2335L, false, false, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailerListener
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockFile mockFile0 = new MockFile("VK;(6sB|2.&pY#S# ");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0);
      boolean boolean0 = tailer0.getRun();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (-4228L), false, 1392);
      tailer0.stop();
      boolean boolean0 = tailer0.getRun();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile("VK;(6sB|2.&pY#S# ");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0);
      Duration duration0 = tailer0.getDelayDuration();
      assertNotNull(duration0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile("commons-io-tailer", "net.bytebuddy.build.Plugin$Engine$Default$Preprocessor$Ignored");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L, false, true);
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = MockFile.createTempFile("tNS", "tNS");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, (-1503L), false);
      tailer0.close();
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, (-1L), true, true, 457);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }
}
