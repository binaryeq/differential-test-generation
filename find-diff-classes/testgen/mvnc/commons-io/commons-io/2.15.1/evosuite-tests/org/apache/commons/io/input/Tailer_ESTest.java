/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 20:29:46 GMT 2024
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.charset.Charset;
import java.time.Duration;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import org.apache.commons.io.input.Tailer;
import org.apache.commons.io.input.TailerListener;
import org.apache.commons.io.input.TailerListenerAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tailer_ESTest extends Tailer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("H@/kYVb=$__ EV");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (long) 3175800, false, true, 0);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("b(++-EZCMUj!q%;c");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, true, false);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer$1", "org.apache.commons.io.input.Tailer$1");
      Charset charset0 = Charset.defaultCharset();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, charset0, (TailerListener) tailerListenerAdapter0, (long) 0, true, false, (-714));
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      MockFile mockFile0 = new MockFile("**JIruv{s'");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-569L), false, true, 3091);
      Tailer.Tailable tailer_Tailable0 = tailer0.getTailable();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailable(tailer_Tailable0);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      // Undeclared exception!
      try { 
        tailer_Builder0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailable
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer$1", "");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-2430L), false);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile(" Sy;(?.XR1E{(b~>", "<C`X<v&myOu");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(file0, tailerListenerAdapter0, 541L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3091);
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setExecutorService(scheduledThreadPoolExecutor0);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 1803L, false, 1);
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("com.google.common.base.Predicates$SubtypeOfPredicate", "com.google.common.base.Predicates$SubtypeOfPredicate");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, 0L, false, false);
      boolean boolean0 = tailer0.getRun();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("6PFZ'R.j{TGg6SF0~", "6PFZ'R.j{TGg6SF0~");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, false, 215834723);
      tailer0.run();
      boolean boolean0 = tailer0.getRun();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":JnD5yoaBl Gg<&Tg&M");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      MockFile mockFile1 = new MockFile(mockFile0, ":JnD5yoaBl Gg<&Tg&M");
      Tailer tailer0 = Tailer.create((File) mockFile1, (TailerListener) tailerListenerAdapter0, 9223372036854775807L, false);
      File file0 = tailer0.getFile();
      assertFalse(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, true, true);
      long long0 = tailer0.getDelay();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, (-3564L), false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (TailerListener) null, 332L, false, 64);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailerListener
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile(">)y!-uwQtSPi");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (TailerListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // tailerListener
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("]", "]");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(mockFile0, (Charset) null, tailerListenerAdapter0, 0L, false, false, (-4061));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Duration duration0 = Duration.ofMillis((-724L));
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setDelayDuration(duration0);
      assertSame(tailer_Builder0, tailer_Builder1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailFromEnd(true);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setReOpen(false);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setTailerListener(tailerListenerAdapter0);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("]", "]");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L, true, false);
      tailer0.close();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer$1", "");
      Charset charset0 = Charset.defaultCharset();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.commons.io.input.Tailer$1");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, charset0, (TailerListener) tailerListenerAdapter0, (-2444L), true, true, 0);
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = new Tailer.Builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setDelayDuration((Duration) null);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile(";)JaZ`OG;DI$Gk1=");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0);
      File file0 = tailer0.getFile();
      assertEquals(0L, file0.lastModified());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tailer.Builder tailer_Builder0 = Tailer.builder();
      Tailer.Builder tailer_Builder1 = tailer_Builder0.setStartThread(false);
      assertSame(tailer_Builder1, tailer_Builder0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      File file0 = MockFile.createTempFile("Iia", " pu22{{*9dwr[", (File) null);
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, 663L);
      assertNotNull(tailer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":JnD5yoaBl Gg<&Tg&M");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, (Charset) null, tailerListenerAdapter0, (-810L), false, false, 8192);
      Tailer.Tailable tailer_Tailable0 = tailer0.getTailable();
      assertNotNull(tailer_Tailable0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer$1", "org.apache.commons.io.input.Tailer$1");
      Charset charset0 = Charset.defaultCharset();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, charset0, (TailerListener) tailerListenerAdapter0, (-2430L), true, true, 0);
      long long0 = tailer0.getDelay();
      assertEquals((-2430L), long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockFile mockFile0 = new MockFile(">)y!-uwQtSPi");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, true);
      tailer0.stop();
      tailer0.run();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile(">)y!-uwQtSPi");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 1L, false);
      long long0 = tailer0.getDelay();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile(">)y!-uwQtSPi");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, (Charset) null, tailerListenerAdapter0, (-810L), false, false, 8192);
      Duration duration0 = tailer0.getDelayDuration();
      assertNotNull(duration0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = MockFile.createTempFile("]+J 1-,p<P7C2zM", "]+J 1-,p<P7C2zM");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(file0, tailerListenerAdapter0, 0L, true, 2067475462);
  }
}
