/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 23 20:38:47 GMT 2024
 */

package io.micronaut.kubernetes.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class KubernetesUtils_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.micronaut.kubernetes.util.KubernetesUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation/find-diff-classes/testgen/mvnc/io/micronaut/kubernetes/micronaut-kubernetes-discovery-client/3.4.1"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(KubernetesUtils_ESTest_scaffolding.class.getClassLoader() ,
      "org.yaml.snakeyaml.parser.ParserImpl",
      "org.yaml.snakeyaml.nodes.SequenceNode",
      "org.yaml.snakeyaml.introspector.BeanAccess",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "reactor.core.publisher.MonoHide",
      "reactor.util.context.ContextView",
      "com.fasterxml.jackson.core.JsonFactoryBuilder",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber",
      "io.micronaut.jackson.core.tree.JsonNodeTreeCodec$1",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList",
      "reactor.core.publisher.MonoRepeat",
      "org.yaml.snakeyaml.nodes.Node",
      "org.yaml.snakeyaml.introspector.MissingProperty",
      "reactor.core.publisher.MonoSourceFuseable",
      "io.kubernetes.client.openapi.models.V1CSIVolumeSource",
      "org.yaml.snakeyaml.composer.Composer",
      "org.yaml.snakeyaml.tokens.FlowMappingStartToken",
      "org.yaml.snakeyaml.constructor.SafeConstructor",
      "reactor.core.publisher.MonoDelayUntil",
      "org.yaml.snakeyaml.events.MappingStartEvent",
      "reactor.core.publisher.AssemblyOp",
      "io.micronaut.core.order.Ordered",
      "org.yaml.snakeyaml.parser.Parser",
      "com.fasterxml.jackson.core.JacksonException",
      "reactor.core.publisher.MonoTimeout",
      "com.fasterxml.jackson.core.async.ByteArrayFeeder",
      "reactor.core.publisher.FluxOnAssembly$CheckpointHeavySnapshot",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "reactor.core.publisher.MonoCurrentContext",
      "org.yaml.snakeyaml.parser.Production",
      "reactor.util.context.Context",
      "reactor.core.publisher.MonoFilter",
      "reactor.core.publisher.MonoDoOnEach",
      "reactor.core.publisher.FluxCallable",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool",
      "com.fasterxml.jackson.core.util.BufferRecyclers",
      "com.fasterxml.jackson.core.util.Instantiatable",
      "reactor.core.publisher.MonoContextWrite",
      "reactor.core.publisher.MonoPublishOn",
      "io.micronaut.context.env.MapPropertySource",
      "org.yaml.snakeyaml.error.MarkedYAMLException",
      "reactor.core.publisher.MonoRepeatWhen",
      "reactor.core.publisher.MonoDetach",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat",
      "org.yaml.snakeyaml.error.Mark",
      "org.yaml.snakeyaml.events.DocumentEndEvent",
      "reactor.core.Fuseable",
      "reactor.core.publisher.MonoZip",
      "io.micronaut.core.annotation.AnnotationSource",
      "org.yaml.snakeyaml.tokens.DocumentEndToken",
      "reactor.core.CorePublisher",
      "org.yaml.snakeyaml.Yaml$1",
      "org.yaml.snakeyaml.comments.CommentEventsCollector$1",
      "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.Escaper",
      "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
      "org.yaml.snakeyaml.scanner.ScannerImpl",
      "reactor.core.publisher.MonoIgnorePublisher",
      "org.yaml.snakeyaml.reader.UnicodeReader",
      "reactor.core.publisher.SignalPeek",
      "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
      "com.fasterxml.jackson.core.JsonLocation",
      "reactor.core.Disposable",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
      "io.micronaut.core.annotation.AnnotationMetadataProvider",
      "reactor.core.Scannable",
      "reactor.core.publisher.MonoDoFirst",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "reactor.core.publisher.MonoOnAssembly",
      "io.micronaut.core.util.Toggleable",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "reactor.core.publisher.MonoSequenceEqual",
      "org.yaml.snakeyaml.tokens.KeyToken",
      "reactor.core.publisher.FluxFromMonoOperator",
      "org.yaml.snakeyaml.tokens.BlockSequenceStartToken",
      "reactor.core.publisher.MonoNext",
      "io.kubernetes.client.openapi.models.V1OwnerReference",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet",
      "org.yaml.snakeyaml.resolver.Resolver",
      "reactor.core.publisher.MonoJust",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "org.yaml.snakeyaml.tokens.Token",
      "io.micronaut.context.exceptions.ConfigurationException",
      "org.yaml.snakeyaml.events.SequenceStartEvent",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap",
      "org.yaml.snakeyaml.events.CommentEvent",
      "org.yaml.snakeyaml.constructor.Constructor",
      "org.yaml.snakeyaml.scanner.ScannerException",
      "org.yaml.snakeyaml.tokens.CommentToken",
      "reactor.core.publisher.MonoExpand",
      "io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
      "org.yaml.snakeyaml.constructor.AbstractConstruct",
      "reactor.core.publisher.Flux",
      "reactor.core.publisher.MonoSource",
      "org.yaml.snakeyaml.nodes.CollectionNode",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "reactor.util.Loggers$Slf4JLoggerFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
      "org.yaml.snakeyaml.util.PlatformFeatureDetector",
      "reactor.core.publisher.OnNextFailureStrategy",
      "reactor.core.publisher.MonoLogFuseable",
      "org.yaml.snakeyaml.parser.VersionTagsTuple",
      "reactor.util.retry.Retry",
      "reactor.core.publisher.MonoDelay",
      "io.micronaut.context.env.PropertiesPropertySourceLoader",
      "org.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.yaml.snakeyaml.events.DocumentStartEvent",
      "com.fasterxml.jackson.core.SerializableString",
      "io.micronaut.core.util.ArrayUtils",
      "reactor.core.publisher.MonoUsing",
      "com.fasterxml.jackson.core.Versioned",
      "reactor.core.publisher.MonoIgnoreElement",
      "reactor.core.publisher.Hooks",
      "org.yaml.snakeyaml.tokens.FlowMappingEndToken",
      "reactor.core.publisher.MonoOnErrorResume",
      "org.yaml.snakeyaml.representer.BaseRepresenter",
      "reactor.core.publisher.MonoSubscribeOnCallable",
      "io.kubernetes.client.common.KubernetesObject",
      "org.yaml.snakeyaml.tokens.FlowSequenceEndToken",
      "reactor.core.publisher.MonoFromFluxOperator",
      "reactor.util.Logger",
      "reactor.core.publisher.MonoRepeatPredicate",
      "io.micronaut.discovery.config.ConfigurationClient",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary",
      "reactor.core.publisher.MonoSwitchIfEmpty",
      "io.micronaut.context.env.PropertySourceReader",
      "org.yaml.snakeyaml.events.Event$ID",
      "reactor.core.publisher.FluxOnAssembly$CheckpointLightSnapshot",
      "reactor.core.publisher.MonoErrorSupplied",
      "org.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray",
      "org.yaml.snakeyaml.parser.ParserException",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined",
      "org.yaml.snakeyaml.events.CollectionStartEvent",
      "reactor.core.publisher.MonoIgnoreThen",
      "reactor.core.publisher.MonoHasElement",
      "com.fasterxml.jackson.core.io.MergedStream",
      "io.micronaut.context.env.PropertySource$2",
      "reactor.core.publisher.MonoCreate",
      "org.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "org.yaml.snakeyaml.constructor.BaseConstructor",
      "io.kubernetes.client.openapi.models.V1LocalObjectReference",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray",
      "org.yaml.snakeyaml.nodes.MappingNode",
      "reactor.core.publisher.MonoFlattenIterable",
      "io.kubernetes.client.openapi.ApiException",
      "org.yaml.snakeyaml.scanner.SimpleKey",
      "com.fasterxml.jackson.core.TSFBuilder",
      "reactor.core.publisher.MonoFirstWithSignal",
      "org.yaml.snakeyaml.tokens.BlockEndToken",
      "reactor.core.publisher.InternalMonoOperator",
      "reactor.core.publisher.MonoLog",
      "io.micronaut.core.naming.Described",
      "org.yaml.snakeyaml.representer.Represent",
      "org.reactivestreams.Subscriber",
      "org.yaml.snakeyaml.tokens.Token$ID",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd",
      "reactor.core.publisher.MonoRetry",
      "io.micronaut.context.env.PropertySourceLoader",
      "io.micronaut.core.type.TypeVariableResolver",
      "com.fasterxml.jackson.core.JsonParser",
      "reactor.core.publisher.MonoProcessor",
      "reactor.core.publisher.NextProcessor",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "org.yaml.snakeyaml.scanner.Scanner",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
      "com.fasterxml.jackson.core.io.UTF32Reader",
      "io.micronaut.kubernetes.client.reactor.CoreV1ApiReactorClient",
      "reactor.core.publisher.MonoFlatMap",
      "org.yaml.snakeyaml.events.NodeEvent",
      "reactor.core.publisher.MonoDefer",
      "reactor.core.Fuseable$ScalarCallable",
      "org.reactivestreams.Subscription",
      "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
      "com.fasterxml.jackson.core.io.IOContext",
      "io.micronaut.jackson.core.env.JsonPropertySourceLoader",
      "io.micronaut.core.annotation.AnnotationMetadata",
      "com.fasterxml.jackson.core.PrettyPrinter",
      "com.fasterxml.jackson.core.util.JacksonFeatureSet",
      "com.fasterxml.jackson.core.TokenStreamFactory",
      "org.yaml.snakeyaml.serializer.NumberAnchorGenerator",
      "reactor.core.publisher.MonoMap",
      "reactor.core.publisher.MonoUsingWhen",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
      "org.yaml.snakeyaml.composer.ComposerException",
      "com.fasterxml.jackson.core.io.CharTypes",
      "org.yaml.snakeyaml.representer.Representer$RepresentJavaBean",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "org.reactivestreams.Processor",
      "reactor.util.Loggers$Slf4JLogger",
      "io.micronaut.context.env.PropertySourceLocator",
      "reactor.core.publisher.MonoFilterFuseable",
      "com.fasterxml.jackson.core.util.JacksonFeature",
      "reactor.core.publisher.MonoCallable",
      "org.yaml.snakeyaml.events.Event",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt",
      "com.fasterxml.jackson.core.exc.InputCoercionException",
      "org.yaml.snakeyaml.comments.CommentEventsCollector",
      "org.yaml.snakeyaml.emitter.Emitable",
      "reactor.core.CoreSubscriber",
      "reactor.util.Loggers",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp",
      "reactor.core.publisher.MonoFirstWithValue",
      "org.yaml.snakeyaml.nodes.NodeId",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "reactor.core.publisher.SourceProducer",
      "reactor.core.publisher.MonoPublishMulticast",
      "io.kubernetes.client.openapi.models.V1ServiceAccount",
      "io.micronaut.kubernetes.configuration.KubernetesConfigurationClient",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray",
      "reactor.core.publisher.MonoSupplier",
      "io.micronaut.core.annotation.AnnotationSource$1",
      "reactor.core.publisher.MonoMaterialize",
      "org.yaml.snakeyaml.tokens.AnchorToken",
      "org.yaml.snakeyaml.constructor.DuplicateKeyException",
      "com.fasterxml.jackson.core.StreamReadCapability",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate",
      "com.fasterxml.jackson.core.io.UTF8Writer",
      "org.yaml.snakeyaml.introspector.Property",
      "org.yaml.snakeyaml.tokens.StreamStartToken",
      "org.yaml.snakeyaml.constructor.ConstructorException",
      "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
      "org.yaml.snakeyaml.DumperOptions$NonPrintableStyle",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull",
      "reactor.core.publisher.MonoError",
      "io.swagger.annotations.ApiModel",
      "com.fasterxml.jackson.core.base.ParserBase",
      "reactor.core.publisher.MonoRetryWhen",
      "reactor.core.publisher.MonoSingleCallable",
      "io.micronaut.context.env.AbstractPropertySourceLoader",
      "org.yaml.snakeyaml.introspector.PropertyUtils",
      "org.yaml.snakeyaml.events.StreamStartEvent",
      "org.yaml.snakeyaml.error.YAMLException",
      "com.fasterxml.jackson.core.io.JsonEOFException",
      "com.fasterxml.jackson.core.JsonGenerator",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "reactor.core.publisher.MonoDelayElement",
      "io.kubernetes.client.custom.NodeMetrics",
      "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
      "reactor.core.publisher.MonoDoFirstFuseable",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr",
      "reactor.core.publisher.MonoTimed",
      "org.yaml.snakeyaml.DumperOptions",
      "org.yaml.snakeyaml.tokens.BlockMappingStartToken",
      "reactor.core.publisher.MonoMapFuseable",
      "com.fasterxml.jackson.core.JsonEncoding",
      "io.kubernetes.client.openapi.models.V1ObjectMeta",
      "reactor.core.publisher.MonoCacheInvalidateWhen",
      "io.micronaut.core.type.Argument",
      "reactor.core.publisher.MonoPeekFuseable",
      "io.micronaut.context.env.PropertySource$PropertyConvention",
      "org.yaml.snakeyaml.tokens.ScalarToken",
      "org.reactivestreams.Publisher",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "reactor.core.publisher.MonoCacheInvalidateIf",
      "io.kubernetes.client.openapi.models.V1ManagedFieldsEntry",
      "reactor.core.publisher.MonoDoOnEachFuseable",
      "org.yaml.snakeyaml.LoaderOptions",
      "io.kubernetes.client.openapi.models.V1ObjectReference",
      "io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
      "reactor.core.publisher.Mono",
      "org.yaml.snakeyaml.resolver.ResolverTuple",
      "reactor.core.publisher.MonoSingleMono",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "org.yaml.snakeyaml.tokens.TagToken",
      "reactor.core.publisher.MonoPeekTerminal",
      "com.fasterxml.jackson.core.JsonFactory",
      "reactor.core.publisher.MonoElapsed",
      "io.micronaut.context.env.AbstractPropertySourceLoader$1",
      "org.yaml.snakeyaml.comments.CommentType",
      "io.micronaut.core.naming.Named",
      "org.yaml.snakeyaml.nodes.ScalarNode",
      "org.yaml.snakeyaml.TypeDescription",
      "org.yaml.snakeyaml.events.AliasEvent",
      "reactor.core.publisher.OptimizableOperator",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet",
      "reactor.core.publisher.FluxOnAssembly$AssemblySnapshot",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq",
      "org.yaml.snakeyaml.reader.ReaderException",
      "org.yaml.snakeyaml.tokens.DocumentStartToken",
      "io.micronaut.json.JsonStreamConfig",
      "org.yaml.snakeyaml.util.UriEncoder",
      "reactor.core.publisher.MonoFlatMapMany",
      "reactor.core.publisher.MonoDoFinallyFuseable",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
      "reactor.core.publisher.MonoCompletionStage",
      "org.yaml.snakeyaml.tokens.FlowSequenceStartToken",
      "reactor.core.publisher.FluxOnAssembly$MethodReturnSnapshot",
      "com.fasterxml.jackson.core.JsonParseException",
      "reactor.core.publisher.MonoDematerialize",
      "io.micronaut.core.annotation.EmptyAnnotationMetadata",
      "io.micronaut.core.type.DefaultArgument",
      "reactor.core.publisher.MonoTakeUntilOther",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "io.kubernetes.client.openapi.models.V1Secret",
      "org.yaml.snakeyaml.constructor.Construct",
      "org.yaml.snakeyaml.tokens.FlowEntryToken",
      "org.yaml.snakeyaml.tokens.BlockEntryToken",
      "reactor.core.publisher.SignalType",
      "io.micronaut.core.io.ResourceLoader",
      "io.micronaut.jackson.core.tree.JsonNodeTraversingParser",
      "io.micronaut.kubernetes.util.KubernetesUtils",
      "org.yaml.snakeyaml.Yaml$YamlIterable",
      "org.yaml.snakeyaml.scanner.Constant",
      "org.yaml.snakeyaml.representer.SafeRepresenter",
      "org.yaml.snakeyaml.tokens.AliasToken",
      "reactor.core.publisher.MonoOperator",
      "reactor.core.publisher.MonoDeferContextual",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "io.micronaut.core.type.TypeInformation",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "reactor.core.publisher.MonoCacheTime",
      "org.yaml.snakeyaml.serializer.AnchorGenerator",
      "org.yaml.snakeyaml.tokens.StreamEndToken",
      "reactor.core.publisher.MonoSubscribeOnValue",
      "org.yaml.snakeyaml.representer.BaseRepresenter$1",
      "reactor.core.scheduler.Scheduler",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "org.yaml.snakeyaml.Yaml",
      "io.kubernetes.client.common.KubernetesType",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "io.micronaut.jackson.core.tree.JsonNodeTreeCodec",
      "org.yaml.snakeyaml.resolver.Resolver$1",
      "com.fasterxml.jackson.core.io.DataOutputAsStream",
      "com.fasterxml.jackson.core.io.SerializedString",
      "reactor.core.publisher.MonoMetricsFuseable",
      "io.kubernetes.client.openapi.models.V1ConfigMap",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator",
      "reactor.core.publisher.MonoSourceFluxFuseable",
      "org.yaml.snakeyaml.tokens.ValueToken",
      "com.fasterxml.jackson.core.JsonToken",
      "reactor.core.publisher.MonoCancelOn",
      "io.micronaut.core.annotation.AnnotatedElement",
      "org.yaml.snakeyaml.events.StreamEndEvent",
      "reactor.core.publisher.MonoSubscribeOn",
      "io.micronaut.context.env.PropertySource",
      "reactor.core.publisher.MonoRunnable",
      "reactor.core.publisher.MonoSourceFlux",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "reactor.core.publisher.MonoFilterWhen",
      "reactor.core.publisher.MonoFromPublisher",
      "com.fasterxml.jackson.core.exc.StreamReadException",
      "org.yaml.snakeyaml.nodes.Tag",
      "org.yaml.snakeyaml.util.ArrayStack",
      "reactor.core.publisher.MonoPeek",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid",
      "org.yaml.snakeyaml.events.ImplicitTuple",
      "reactor.core.publisher.MonoDefaultIfEmpty",
      "reactor.core.publisher.MonoDelaySubscription",
      "reactor.core.publisher.MonoDoFinally",
      "reactor.core.publisher.MonoWhen",
      "reactor.core.publisher.MonoHandle",
      "reactor.core.publisher.MonoMetrics",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "io.micronaut.context.env.yaml.CustomSafeConstructor",
      "io.micronaut.core.util.CollectionUtils",
      "org.yaml.snakeyaml.representer.Representer",
      "org.yaml.snakeyaml.reader.StreamReader",
      "io.micronaut.core.type.ArgumentCoercible",
      "io.kubernetes.client.openapi.models.V1Pod",
      "org.yaml.snakeyaml.events.ScalarEvent",
      "reactor.core.publisher.MonoHandleFuseable"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(KubernetesUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.micronaut.context.env.AbstractPropertySourceLoader",
      "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
      "io.micronaut.context.env.PropertiesPropertySourceLoader",
      "io.micronaut.jackson.core.env.JsonPropertySourceLoader",
      "io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
      "io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
      "io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
      "io.micronaut.kubernetes.util.KubernetesUtils",
      "io.micronaut.context.annotation.Requires$Sdk",
      "io.micronaut.kubernetes.configuration.KubernetesConfigurationClient",
      "reactor.util.Loggers$Slf4JLoggerFactory",
      "reactor.util.Loggers$Slf4JLogger",
      "reactor.util.Loggers",
      "reactor.core.publisher.Hooks",
      "reactor.core.publisher.Traces$StackWalkerCallSiteSupplierFactory",
      "reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory",
      "reactor.core.publisher.Traces",
      "io.micronaut.core.annotation.Introspected$AccessKind",
      "io.micronaut.core.annotation.Introspected$Visibility",
      "io.micronaut.context.annotation.Primary",
      "io.swagger.annotations.ApiModelProperty$AccessMode",
      "io.kubernetes.client.openapi.models.V1ReplicationController",
      "io.kubernetes.client.openapi.models.V1ReplicationControllerStatus",
      "io.kubernetes.client.openapi.models.V1ReplicationControllerSpec",
      "io.kubernetes.client.openapi.models.V1PodTemplateSpec",
      "io.kubernetes.client.openapi.models.V1Secret",
      "io.kubernetes.client.openapi.models.V1ObjectMeta",
      "io.kubernetes.client.openapi.models.V1PodSpec",
      "io.micronaut.context.env.MapPropertySource",
      "io.micronaut.context.env.PropertySource$2",
      "io.kubernetes.client.openapi.models.V1HostAlias",
      "io.kubernetes.client.openapi.models.V1FlexVolumeSource",
      "io.kubernetes.client.openapi.models.V1CSIPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1SecretReference",
      "io.kubernetes.client.openapi.models.V1ConfigMap",
      "io.micronaut.core.util.ArrayUtils",
      "io.micronaut.core.optim.StaticOptimizations",
      "io.micronaut.core.util.CollectionUtils",
      "io.micronaut.core.reflect.ClassUtils",
      "io.micronaut.core.util.EnvironmentProperties",
      "io.micronaut.context.env.PropertySourcePropertyResolver$PropertyCatalog",
      "io.micronaut.context.env.PropertySourcePropertyResolver",
      "io.micronaut.core.convert.DefaultConversionService",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Builder",
      "io.micronaut.core.util.clhm.Weighers",
      "io.micronaut.core.util.clhm.Weighers$SingletonEntryWeigher",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$DiscardingListener",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$DiscardingQueue",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap",
      "io.micronaut.core.util.clhm.LinkedDeque",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$DrainStatus",
      "io.micronaut.core.convert.DefaultConversionService$ConvertiblePair",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$WeightedValue",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$AddTask",
      "io.micronaut.core.convert.format.ReadableBytesTypeConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$AbstractConverterFromMultiValues",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$MultiValuesToIterableConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$MultiValuesToMapConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$MultiValuesToObjectConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$AbstractConverterToMultiValues",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$IterableToMultiValuesConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$MapToMultiValuesConverter",
      "io.micronaut.core.convert.converters.MultiValuesConverterFactory$ObjectToMultiValuesConverter",
      "io.micronaut.core.convert.ConversionService",
      "io.micronaut.context.env.DefaultEnvironment",
      "io.micronaut.context.env.DefaultPropertyPlaceholderResolver",
      "io.micronaut.context.env.CachedEnvironment",
      "io.micronaut.core.util.StringUtils",
      "io.micronaut.context.env.DefaultEnvironment$EnvironmentsAndPackage",
      "io.micronaut.core.naming.NameUtils",
      "io.micronaut.context.env.ComputePlatform",
      "io.micronaut.context.env.DefaultEnvironment$1",
      "io.micronaut.core.io.scan.BeanIntrospectionScanner",
      "io.micronaut.context.env.PropertySourcePropertyResolver$1",
      "io.kubernetes.client.openapi.models.V1LabelSelector",
      "io.micronaut.kubernetes.client.reactor.CoreV1ApiReactorClient",
      "io.kubernetes.client.openapi.models.V1ServiceSpec",
      "io.kubernetes.client.openapi.models.V1LabelSelectorRequirement",
      "reactor.core.publisher.Mono",
      "reactor.core.Scannable",
      "reactor.core.publisher.MonoJust",
      "io.micronaut.core.annotation.AnnotationSource$1",
      "io.micronaut.core.annotation.AnnotationSource",
      "io.micronaut.core.annotation.EmptyAnnotationMetadata",
      "io.micronaut.core.annotation.AnnotationMetadata",
      "io.micronaut.core.type.Argument",
      "io.micronaut.core.type.DefaultArgument",
      "io.kubernetes.client.openapi.models.V1PodTemplate",
      "io.kubernetes.client.openapi.models.V1Container",
      "io.kubernetes.client.openapi.models.V1RBDPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1DeleteOptions",
      "io.kubernetes.client.openapi.models.V1CSIVolumeSource",
      "io.micronaut.context.env.PropertySource$PropertyConvention",
      "io.kubernetes.client.openapi.models.V1LocalObjectReference",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeSpec",
      "io.kubernetes.client.openapi.models.V1ISCSIPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1AzureDiskVolumeSource",
      "io.kubernetes.client.custom.NodeMetrics",
      "io.kubernetes.client.openapi.models.V1Scale",
      "io.kubernetes.client.openapi.models.V1ScaleSpec",
      "io.kubernetes.client.openapi.models.V1ScaleStatus",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeClaimSpec",
      "io.kubernetes.client.openapi.models.V1ResourceRequirements",
      "io.kubernetes.client.openapi.models.V1NodeSpec",
      "io.kubernetes.client.openapi.models.V1Taint",
      "io.kubernetes.client.openapi.models.V1PodDNSConfig",
      "io.kubernetes.client.openapi.models.V1PodDNSConfigOption",
      "io.kubernetes.client.openapi.models.V1RBDVolumeSource",
      "io.kubernetes.client.openapi.models.V1FCVolumeSource",
      "io.kubernetes.client.openapi.models.V1EphemeralContainer",
      "io.micronaut.context.env.SystemPropertiesPropertySource",
      "io.kubernetes.client.openapi.models.CoreV1Event",
      "io.kubernetes.client.openapi.models.V1FlexPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1OwnerReference",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeClaimStatus",
      "io.kubernetes.client.openapi.models.V1ISCSIVolumeSource",
      "io.kubernetes.client.openapi.models.V1ExecAction",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeClaimCondition",
      "io.kubernetes.client.custom.Quantity",
      "io.kubernetes.client.custom.QuantityFormatter",
      "io.kubernetes.client.custom.QuantityFormatException",
      "io.kubernetes.client.openapi.models.V1Node",
      "io.kubernetes.client.openapi.models.V1ResourceQuotaSpec",
      "io.kubernetes.client.openapi.models.V1ServicePort",
      "io.kubernetes.client.openapi.models.V1SessionAffinityConfig",
      "io.micronaut.core.io.scan.DefaultClassPathResourceLoader",
      "io.micronaut.context.ExecutionHandleLocator$1",
      "io.micronaut.context.ExecutionHandleLocator",
      "io.micronaut.context.event.NoOpApplicationEventPublisher",
      "io.micronaut.context.event.ApplicationEventPublisher",
      "io.micronaut.core.annotation.AnnotationMetadataResolver$1",
      "io.micronaut.core.annotation.AnnotationMetadataResolver",
      "io.micronaut.context.Qualifier",
      "io.micronaut.context.DefaultBeanContext$1",
      "io.micronaut.context.DefaultBeanContext",
      "io.micronaut.context.DefaultApplicationContext",
      "io.micronaut.context.DefaultApplicationContext$1",
      "io.micronaut.core.util.ArgumentUtils",
      "io.micronaut.context.DefaultCustomScopeRegistry$InjectScopeImpl",
      "io.micronaut.context.DefaultCustomScopeRegistry",
      "io.micronaut.inject.qualifiers.Qualifiers",
      "io.micronaut.inject.qualifiers.CompositeQualifier",
      "io.micronaut.context.DefaultBeanContext$BeanKey",
      "io.micronaut.context.DefaultBeanContext$7",
      "io.micronaut.context.exceptions.BeanContextException",
      "io.micronaut.context.exceptions.NoSuchBeanException",
      "io.kubernetes.client.openapi.models.V1ResourceQuotaStatus",
      "io.micronaut.context.DefaultBeanContext$3",
      "io.micronaut.core.type.DefaultGenericPlaceholder",
      "io.micronaut.context.env.KubernetesEnvironmentPropertySource",
      "io.micronaut.context.env.EnvironmentPropertySource",
      "io.kubernetes.client.openapi.models.V1Capabilities",
      "io.micronaut.core.async.ReactiveStreamsTypeInformationProvider",
      "io.micronaut.http.util.HttpTypeInformationProvider",
      "io.micronaut.inject.provider.ProviderTypeInformationProvider",
      "io.micronaut.core.type.RuntimeTypeInformation",
      "io.kubernetes.client.custom.PodMetrics",
      "io.kubernetes.client.openapi.models.V1NamespaceSpec",
      "io.kubernetes.client.openapi.models.V1ManagedFieldsEntry",
      "io.kubernetes.client.openapi.models.V1NodeStatus",
      "io.kubernetes.client.openapi.models.V1CephFSPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1TokenRequestSpec",
      "io.kubernetes.client.openapi.models.V1VolumeNodeAffinity",
      "io.kubernetes.client.openapi.models.V1PodAffinityTerm",
      "io.micronaut.context.DefaultBeanContext$2",
      "io.kubernetes.client.openapi.models.V1Namespace",
      "io.kubernetes.client.openapi.models.V1NamespaceStatus",
      "io.kubernetes.client.openapi.models.V1TypedLocalObjectReference",
      "io.kubernetes.client.openapi.models.V1EventSource",
      "io.micronaut.context.env.EmptyPropertySource",
      "io.kubernetes.client.openapi.models.V1NodeAddress",
      "io.kubernetes.client.openapi.models.V1Service",
      "io.kubernetes.client.openapi.models.V1VolumeMount",
      "io.kubernetes.client.openapi.models.CoreV1EventSeries",
      "io.micronaut.core.cli.CommandLineParser",
      "io.micronaut.core.cli.DefaultCommandLine",
      "io.kubernetes.client.openapi.models.V1LimitRangeItem",
      "io.kubernetes.client.openapi.models.V1Preconditions",
      "io.netty.util.concurrent.DefaultThreadFactory",
      "io.netty.util.internal.ObjectUtil",
      "io.kubernetes.client.openapi.models.V1EnvFromSource",
      "io.micronaut.discovery.DiscoveryConfiguration",
      "io.micronaut.kubernetes.KubernetesConfiguration$AbstractKubernetesConfiguration",
      "io.micronaut.kubernetes.KubernetesConfiguration$KubernetesSecretsConfiguration",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeClaim",
      "io.kubernetes.client.openapi.models.V1ScopedResourceSelectorRequirement",
      "io.micronaut.core.order.OrderUtil",
      "io.micronaut.context.env.MapPropertySource$1",
      "io.micronaut.context.env.EmptyPropertySource$1",
      "io.kubernetes.client.openapi.models.V1CephFSVolumeSource",
      "io.kubernetes.client.openapi.models.V1ObjectReference",
      "io.micronaut.context.DefaultApplicationContext$RuntimeConfiguredEnvironment",
      "io.micronaut.core.io.service.SoftServiceLoader",
      "io.micronaut.core.io.service.SoftServiceLoader$ServiceLoaderIterator",
      "io.micronaut.core.io.service.SoftServiceLoader$RecursiveActionValuesCollector",
      "io.micronaut.core.io.service.SoftServiceLoader$DefaultServiceCollector",
      "io.micronaut.core.io.service.SoftServiceLoader$UrlServicesLoader",
      "io.micronaut.core.io.service.SoftServiceLoader$ServiceInstanceLoader",
      "io.micronaut.core.io.service.SoftServiceLoader$ServiceLoadingException",
      "io.kubernetes.client.openapi.models.AuthenticationV1TokenRequest",
      "io.kubernetes.client.openapi.models.V1FlockerVolumeSource",
      "io.kubernetes.client.openapi.models.V1PortworxVolumeSource",
      "io.kubernetes.client.openapi.models.V1QuobyteVolumeSource",
      "io.kubernetes.client.openapi.models.V1Endpoints",
      "io.kubernetes.client.openapi.models.V1LimitRange",
      "io.kubernetes.client.openapi.models.V1SecurityContext",
      "io.kubernetes.client.openapi.models.V1SELinuxOptions",
      "io.kubernetes.client.openapi.models.V1EndpointSubset",
      "io.kubernetes.client.openapi.models.V1Toleration",
      "io.kubernetes.client.openapi.models.V1HostPathVolumeSource",
      "io.kubernetes.client.openapi.models.V1GCEPersistentDiskVolumeSource",
      "io.kubernetes.client.openapi.models.V1VsphereVirtualDiskVolumeSource",
      "io.kubernetes.client.openapi.models.V1ScopeSelector",
      "io.kubernetes.client.openapi.models.V1ServiceAccount",
      "io.kubernetes.client.openapi.models.V1EnvVar",
      "io.kubernetes.client.openapi.models.V1LocalVolumeSource",
      "io.kubernetes.client.openapi.models.V1Affinity",
      "io.kubernetes.client.openapi.models.V1EndpointPort",
      "io.kubernetes.client.openapi.models.V1EndpointAddress",
      "io.micronaut.validation.validator.Validator",
      "io.micronaut.inject.validation.BeanDefinitionValidator$1",
      "io.micronaut.inject.validation.BeanDefinitionValidator",
      "io.micronaut.validation.validator.DefaultValidator",
      "io.micronaut.validation.validator.DefaultAnnotatedElementValidator",
      "io.micronaut.validation.validator.DefaultValidatorConfiguration",
      "io.micronaut.validation.validator.constraints.DefaultConstraintValidators",
      "io.micronaut.validation.validator.DefaultAnnotatedElementValidator$LocalConstraintValidators",
      "io.micronaut.validation.validator.constraints.ConstraintValidator",
      "io.micronaut.core.beans.DefaultBeanIntrospector",
      "io.micronaut.core.beans.BeanIntrospector",
      "io.micronaut.core.io.service.SoftServiceLoader$1",
      "io.micronaut.core.io.service.DefaultServiceDefinition",
      "io.micronaut.core.beans.AbstractBeanIntrospectionReference",
      "io.micronaut.core.annotation.AnnotationClassValue",
      "io.micronaut.inject.annotation.AbstractAnnotationMetadata",
      "io.micronaut.inject.annotation.DefaultAnnotationMetadata",
      "io.micronaut.inject.annotation.AnnotationMetadataSupport",
      "io.micronaut.core.annotation.AnnotationUtil$1",
      "io.micronaut.core.annotation.AnnotationUtil",
      "io.micronaut.core.annotation.ImmutableSortedStringsArrayMap",
      "io.micronaut.kubernetes.configuration.$KubernetesConfigMapWatcherCondition$IntrospectionRef",
      "io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
      "io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$AbstractServiceEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$CatalogEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$CheckEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$HTTPCheck$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$HealthEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$KeyValue$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$LocalAgentConfiguration$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$MemberEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$NewCheck$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$NewServiceEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$NodeEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$ServiceEntry$IntrospectionRef",
      "io.micronaut.discovery.consul.client.v1.$TTLCheck$IntrospectionRef",
      "io.micronaut.discovery.eureka.client.v2.$DataCenterTypeInfoResolver$IntrospectionRef",
      "io.micronaut.discovery.eureka.client.v2.$InstanceInfo$IntrospectionRef",
      "io.micronaut.discovery.eureka.client.v2.$MyDataCenterInfo$IntrospectionRef",
      "io.micronaut.discovery.eureka.condition.$RequiresEurekaCondition$IntrospectionRef",
      "io.micronaut.discovery.vault.config.$AbstractVaultResponse$IntrospectionRef",
      "io.micronaut.discovery.vault.config.v1.$VaultResponseV1$IntrospectionRef",
      "io.micronaut.discovery.vault.config.v2.$VaultResponseData$IntrospectionRef",
      "io.micronaut.discovery.vault.config.v2.$VaultResponseV2$IntrospectionRef",
      "io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
      "io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
      "io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
      "io.micronaut.http.hateoas.$VndError$IntrospectionRef",
      "io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
      "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
      "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
      "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
      "io.micronaut.health.$HealthStatus$IntrospectionRef",
      "io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
      "io.micronaut.logging.$LogLevel$IntrospectionRef",
      "io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
      "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
      "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
      "io.micronaut.inject.beans.AbstractInitializableBeanIntrospection",
      "io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyRef",
      "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Introspection",
      "io.micronaut.inject.beans.AbstractInitializableBeanIntrospection$BeanPropertyImpl",
      "io.micronaut.core.reflect.ReflectionUtils$1",
      "io.micronaut.core.reflect.ReflectionUtils$2",
      "io.micronaut.core.reflect.ReflectionUtils",
      "io.micronaut.core.beans.DefaultBeanWrapper",
      "io.micronaut.core.convert.ConversionContext$1",
      "io.micronaut.core.convert.ConversionContext",
      "io.micronaut.core.convert.DefaultArgumentConversionContext",
      "io.micronaut.validation.validator.constraints.DefaultConstraintValidators$ValidatorKey",
      "io.micronaut.validation.validator.constraints.AbstractPatternValidator",
      "io.micronaut.validation.validator.constraints.PatternValidator",
      "io.micronaut.validation.validator.constraints.EmailValidator",
      "io.micronaut.validation.validator.DefaultClockProvider",
      "io.micronaut.validation.validator.extractors.DefaultValueExtractors",
      "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Introspection",
      "io.kubernetes.client.openapi.models.V1GlusterfsPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1PodReadinessGate",
      "io.kubernetes.client.openapi.models.V1ContainerImage",
      "io.kubernetes.client.openapi.models.V1TopologySpreadConstraint",
      "io.micronaut.kubernetes.client.DefaultNamespaceResolver",
      "io.micronaut.kubernetes.KubernetesConfiguration",
      "io.micronaut.kubernetes.KubernetesConfiguration$KubernetesDiscoveryConfiguration",
      "io.micronaut.kubernetes.KubernetesConfiguration$KubernetesConfigMapsConfiguration",
      "io.micronaut.context.env.PropertySource$1",
      "io.kubernetes.client.openapi.models.V1Probe",
      "io.kubernetes.client.openapi.ApiException",
      "io.kubernetes.client.openapi.models.V1PodSecurityContext",
      "io.kubernetes.client.openapi.models.V1AWSElasticBlockStoreVolumeSource",
      "io.netty.util.internal.logging.InternalLoggerFactory",
      "io.netty.util.internal.logging.Slf4JLoggerFactory",
      "io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder",
      "io.netty.util.internal.logging.AbstractInternalLogger",
      "io.netty.util.internal.logging.LocationAwareSlf4JLogger",
      "io.netty.util.internal.SystemPropertyUtil",
      "io.netty.util.internal.SystemPropertyUtil$1",
      "io.netty.util.internal.StringUtil",
      "reactor.core.publisher.FluxOnAssembly$AssemblySnapshot",
      "reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory$TracingException",
      "reactor.core.publisher.MonoOperator",
      "reactor.core.publisher.InternalMonoOperator",
      "reactor.core.publisher.MonoCallableOnAssembly",
      "io.kubernetes.client.openapi.models.V1NodeSelectorRequirement",
      "io.kubernetes.client.openapi.models.V1ServiceStatus",
      "io.kubernetes.client.openapi.models.V1AttachedVolume",
      "io.kubernetes.client.openapi.models.V1ClientIPConfig",
      "io.kubernetes.client.openapi.models.V1LimitRangeSpec",
      "io.kubernetes.client.openapi.models.V1PersistentVolume",
      "io.kubernetes.client.openapi.models.V1Volume",
      "io.micronaut.context.env.ActiveEnvironment$1",
      "io.kubernetes.client.openapi.models.V1NodeConfigSource",
      "io.kubernetes.client.openapi.models.V1NFSVolumeSource",
      "io.kubernetes.client.openapi.models.V1AzureFilePersistentVolumeSource",
      "io.micronaut.context.AbstractBeanContextConditional",
      "io.micronaut.context.AbstractInitializableBeanDefinitionReference",
      "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
      "io.micronaut.core.annotation.AnnotationValue",
      "io.micronaut.inject.BeanDefinition",
      "io.micronaut.inject.annotation.MutableAnnotationMetadata",
      "io.micronaut.aop.internal.InterceptorRegistryBean",
      "io.micronaut.core.convert.value.ConvertibleValuesMap",
      "io.micronaut.core.convert.value.ConvertibleValues",
      "io.micronaut.kubernetes.$KubernetesConfiguration$Definition$Reference",
      "io.micronaut.discovery.vault.config.v2.$VaultConfigHttpClientV2$Intercepted$Definition$Reference",
      "io.micronaut.discovery.vault.config.v1.$VaultConfigHttpClientV1$Intercepted$Definition$Reference",
      "io.micronaut.discovery.vault.config.$VaultConfigurationClient$Definition$Reference",
      "io.micronaut.discovery.vault.config.$VaultClientConfiguration$VaultClientDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.discovery.vault.config.$VaultClientConfiguration$VaultClientConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.discovery.vault.config.$VaultClientConfiguration$Definition$Reference",
      "io.micronaut.discovery.spring.config.client.$SpringCloudConfigClient$Intercepted$Definition$Reference",
      "io.micronaut.discovery.spring.config.$SpringCloudConfigurationClient$Definition$Reference",
      "io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$SpringConfigDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$SpringCloudConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
      "io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$Definition$Reference",
      "io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
      "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
      "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
      "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
      "io.micronaut.kubernetes.health.$KubernetesHealthIndicator$Definition$Reference",
      "io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
      "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.$KubernetesConfiguration$KubernetesConfigMapsConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.$KubernetesConfiguration$KubernetesDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
      "io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
      "io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
      "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
      "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
      "io.micronaut.kubernetes.$KubernetesConfiguration$KubernetesSecretsConfiguration$Definition$Reference",
      "io.micronaut.inject.annotation.AnnotationMetadataHierarchy",
      "io.micronaut.discovery.eureka.registration.$EurekaAutoRegistration$Definition$Reference",
      "io.micronaut.discovery.eureka.health.$EurekaHealthIndicator$Definition$Reference",
      "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
      "io.micronaut.discovery.client.config.$DistributedPropertySourceLocator$Definition$Reference",
      "io.micronaut.kubernetes.configuration.$ConfigMapLabelSupplier$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulConfiguration$ConsulConfigDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
      "io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
      "io.micronaut.http.client.loadbalance.$LoadBalancerConverters$Definition$Reference",
      "io.micronaut.discovery.eureka.condition.RequiresEurekaCondition",
      "io.micronaut.discovery.eureka.client.v2.$AbstractEurekaClient$Intercepted$Definition$Reference",
      "io.micronaut.scheduling.io.watch.FileWatchCondition",
      "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
      "io.micronaut.discovery.eureka.$EurekaServiceInstanceList$Definition$Reference",
      "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
      "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
      "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
      "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.discovery.provider.$KubernetesServiceInstanceServiceProvider$Definition$Reference",
      "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
      "io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
      "io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaRegistrationConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.configuration.KubernetesConfigMapWatcherCondition",
      "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
      "io.micronaut.kubernetes.configuration.$KubernetesConfigMapWatcher$ApplicationEventListener$onApplicationEvent1$Intercepted$Definition$Reference",
      "io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
      "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
      "io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
      "io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.discovery.eureka.$EurekaConfiguration$Definition$Reference",
      "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.registration.$ConsulAutoRegistration$Definition$Reference",
      "io.micronaut.http.netty.channel.KQueueAvailabilityCondition",
      "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
      "io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
      "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.discovery.provider.$KubernetesServiceInstanceServiceInformerProvider$Definition$Reference",
      "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
      "io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
      "io.micronaut.kubernetes.configuration.$KubernetesConfigMapWatcher$Definition$Reference",
      "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.health.$ConsulHealthIndicator$Definition$Reference",
      "io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
      "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.discovery.provider.$KubernetesServiceInstanceEndpointProvider$Definition$Reference",
      "io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.EpollAvailabilityCondition",
      "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
      "io.micronaut.discovery.consul.config.$ConsulConfigurationClient$Definition$Reference",
      "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulConfiguration$ConsulConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.client.v1.$ConsulAslTokenFilter$Definition$Reference",
      "io.micronaut.http.client.ServiceHttpClientCondition",
      "io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
      "io.micronaut.kubernetes.discovery.provider.$KubernetesServiceInstanceEndpointInformerProvider$Definition$Reference",
      "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
      "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
      "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
      "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
      "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
      "io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
      "io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
      "io.micronaut.discovery.consul.client.v1.$AbstractConsulClient$Intercepted$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.discovery.informer.$InstanceProviderInformerNamespaceResolver$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulServiceInstanceList$Definition$Reference",
      "io.micronaut.context.event.ApplicationEventPublisherFactory",
      "io.micronaut.inject.provider.AbstractProviderDefinition",
      "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
      "io.micronaut.inject.provider.BeanProviderDefinition",
      "io.micronaut.discovery.consul.$ConsulConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
      "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
      "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulConfiguration$ConsulRegistrationConfiguration$Definition$Reference",
      "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulConfiguration$ConsulDiscoveryConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
      "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
      "io.micronaut.kubernetes.discovery.informer.$IndexerCompositeFactory$Definition$Reference",
      "io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
      "io.micronaut.discovery.consul.$ConsulConfiguration$ConsulRegistrationConfiguration$CheckConfiguration$Definition$Reference",
      "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
      "io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
      "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
      "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
      "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
      "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
      "io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
      "io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
      "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
      "io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
      "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
      "io.micronaut.kubernetes.discovery.$KubernetesServiceInstanceList$Definition$Reference",
      "io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
      "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
      "io.micronaut.kubernetes.client.$WellKnownApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$WellKnownApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationApiFactory$Build0$Definition$Reference",
      "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
      "io.micronaut.kubernetes.client.$VersionApiFactory$Definition$Reference",
      "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
      "io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
      "io.micronaut.kubernetes.discovery.$KubernetesServiceConfiguration$Definition$Reference",
      "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
      "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
      "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
      "io.micronaut.kubernetes.client.$VersionApiFactory$Build0$Definition$Reference",
      "io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
      "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
      "io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
      "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
      "io.micronaut.kubernetes.discovery.$KubernetesDiscoveryClient$Definition$Reference",
      "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
      "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
      "io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationApiFactory$Definition$Reference",
      "io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
      "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
      "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
      "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
      "io.micronaut.kubernetes.configuration.$KubernetesConfigurationClient$Definition$Reference",
      "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
      "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.runtime.converters.time.$TimeConverterRegistrar$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1ApiFactory$Definition$Reference",
      "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
      "io.micronaut.kubernetes.client.$AdmissionregistrationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$WellKnownApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$VersionApiReactorClient$Definition$Reference",
      "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
      "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
      "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
      "io.micronaut.reactor.convert.$ReactorToRxJava3ConverterRegistrar$Definition$Reference",
      "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$StorageV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$StorageApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$StorageV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
      "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.resolvers.$DefaultInformerResourcePluralResolver$Definition$Reference",
      "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
      "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
      "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$StorageV1ApiReactorClient$Definition$Reference",
      "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
      "io.micronaut.reactor.convert.$ReactorToRxJava2ConverterRegistrar$Definition$Reference",
      "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$StorageApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
      "io.micronaut.reactor.convert.$ReactorConverterRegistrar$Definition$Reference",
      "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.resolvers.$DefaultInformerNamespaceResolver$Definition$Reference",
      "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$SchedulingV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
      "io.micronaut.validation.validator.resolver.$CompositeTraversableResolver$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.resolvers.$DefaultInformerLabelSelectorResolver$Definition$Reference",
      "io.micronaut.validation.validator.messages.$DefaultValidationMessages$Definition$Reference",
      "io.micronaut.validation.$ValidatingInterceptor$Definition$Reference",
      "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$SchedulingV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1ApiFactory$Definition$Reference",
      "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$SchedulingV1ApiReactorClient$Definition$Reference",
      "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
      "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Definition$Reference",
      "io.micronaut.validation.validator.constraints.$PatternValidator$Definition$Reference",
      "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
      "io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$SchedulingApiReactorClient$Definition$Reference",
      "io.micronaut.validation.validator.constraints.$EmailValidator$Definition$Reference",
      "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Definition$Reference",
      "io.micronaut.validation.exceptions.$ConstraintExceptionHandler$Definition$Reference",
      "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
      "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
      "io.micronaut.kubernetes.client.$SchedulingApiFactory$Build0$Definition$Reference",
      "io.micronaut.validation.validator.$DefaultValidatorFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.resolvers.$DefaultInformerApiGroupResolver$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AdmissionregistrationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$RbacAuthorizationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
      "io.micronaut.validation.validator.$DefaultValidatorConfiguration$Definition$Reference",
      "io.micronaut.validation.validator.$DefaultValidator$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.$DefaultSharedIndexInformerFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$RbacAuthorizationV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiClientConfiguration$ApiDiscoveryCacheConfiguration$Intercepted$Definition$Reference",
      "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiClientConfiguration$Intercepted$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.$ResourceEventHandlerBeanListener$Definition$Reference",
      "io.micronaut.validation.validator.$DefaultClockProvider$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AdmissionregistrationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.health.HeartbeatDiscoveryClientCondition",
      "io.micronaut.health.$HeartbeatTask$Definition$Reference",
      "io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1ApiFactory$Definition$Reference",
      "io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$RbacAuthorizationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.$InformerFactoryLifecycleListener$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiextensionsApiReactorClient$Definition$Reference",
      "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AdmissionregistrationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$RbacAuthorizationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.informer.$InformerConfiguration$Intercepted$Definition$Reference",
      "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
      "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiClientFactory$ApiClient1$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$RbacAuthorizationApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiextensionsV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$PolicyV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiClientFactory$ClientBuilder0$Definition$Reference",
      "io.micronaut.kubernetes.client.$PolicyV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiextensionsV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiregistrationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiClientFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$PolicyApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$PolicyV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$PolicyApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiregistrationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApiregistrationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AppsApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ApisApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$PolicyApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$OpenidApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AppsV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthenticationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$OpenidApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$OpenidApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthenticationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NodeV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthorizationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthorizationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NodeV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthenticationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AutoscalingApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiextensionsV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NodeV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AutoscalingV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AuthorizationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AutoscalingV2beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NodeApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$BatchV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$BatchApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$AutoscalingV2beta2ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NetworkingV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$BatchV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApiregistrationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$NodeApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApisApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CertificatesV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CertificatesApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NetworkingV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$BatchV2alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$ApisApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CoreApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CoreV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CoordinationApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CertificatesV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AppsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CoordinationV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CoordinationV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$CustomObjectsApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AppsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AppsV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$NetworkingApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$DiscoveryApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$DiscoveryV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$EventsV1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$AppsV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$EventsApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$LogsApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$EventsV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$NetworkingApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ExtensionsApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$ExtensionsV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$FlowcontrolApiserverV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$LogsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$InternalApiserverApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$InternalApiserverV1alpha1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$FlowcontrolApiserverV1beta1ApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$LogsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.reactor.$FlowcontrolApiserverApiReactorClient$Definition$Reference",
      "io.micronaut.kubernetes.client.$InternalApiserverV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthenticationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AuthorizationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$InternalApiserverV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$InternalApiserverApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV2beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV2beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV2beta2ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$AutoscalingV2beta2ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$InternalApiserverApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV2alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$BatchV2alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverV1alpha1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoreApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoordinationApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverV1alpha1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CertificatesV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoreApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoreV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CoreV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$CustomObjectsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$CustomObjectsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$DefaultNamespaceResolver$Definition$Reference",
      "io.micronaut.kubernetes.client.$DefaultPodNameResolver$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryCache$Definition$Reference",
      "io.micronaut.kubernetes.client.$FlowcontrolApiserverApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryFactory$Discovery0$Definition$Reference",
      "io.micronaut.kubernetes.client.$DiscoveryFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ExtensionsV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsV1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$ExtensionsV1beta1ApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsV1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsV1beta1ApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ExtensionsApiFactory$Definition$Reference",
      "io.micronaut.kubernetes.client.$ExtensionsApiFactory$Build0$Definition$Reference",
      "io.micronaut.kubernetes.client.$EventsV1beta1ApiFactory$Build0$Definition$Reference",
      "io.kubernetes.client.openapi.models.V1PhotonPersistentDiskVolumeSource",
      "io.micronaut.core.io.file.DefaultFileSystemResourceLoader",
      "io.micronaut.context.AbstractBeanResolutionContext",
      "io.micronaut.context.DefaultBeanResolutionContext",
      "io.micronaut.context.AbstractBeanResolutionContext$DefaultPath",
      "io.kubernetes.client.openapi.models.V1Pod",
      "io.kubernetes.client.openapi.models.V1NodeSelector",
      "io.kubernetes.client.openapi.models.V1ContainerPort",
      "io.kubernetes.client.openapi.models.V1LoadBalancerStatus",
      "io.kubernetes.client.custom.IntOrString",
      "io.kubernetes.client.openapi.models.V1ResourceQuota",
      "io.kubernetes.client.openapi.models.V1beta1Eviction",
      "io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$ObjectHolder",
      "io.kubernetes.client.openapi.models.V1NodeDaemonEndpoints",
      "io.kubernetes.client.openapi.models.V1DaemonEndpoint",
      "io.kubernetes.client.openapi.models.V1Lifecycle",
      "io.kubernetes.client.openapi.models.V1Handler",
      "io.kubernetes.client.openapi.models.V1SecretEnvSource",
      "io.kubernetes.client.openapi.models.V1VolumeDevice",
      "io.kubernetes.client.openapi.models.V1PodAntiAffinity",
      "io.kubernetes.client.openapi.models.V1WeightedPodAffinityTerm",
      "io.kubernetes.client.openapi.models.V1StorageOSPersistentVolumeSource",
      "io.micronaut.core.util.SupplierUtil",
      "io.micronaut.core.util.SupplierUtil$2",
      "com.fasterxml.jackson.core.TokenStreamFactory",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "com.fasterxml.jackson.core.io.IOContext",
      "com.fasterxml.jackson.core.util.BufferRecyclers",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.JsonEncoding",
      "com.fasterxml.jackson.core.StreamReadCapability",
      "com.fasterxml.jackson.core.util.JacksonFeatureSet",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "io.micronaut.json.JsonStreamConfig",
      "io.micronaut.jackson.core.tree.JsonNodeTreeCodec",
      "com.fasterxml.jackson.core.JsonToken",
      "io.micronaut.jackson.core.tree.JsonNodeTreeCodec$1",
      "com.fasterxml.jackson.core.JacksonException",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.exc.StreamReadException",
      "com.fasterxml.jackson.core.JsonParseException",
      "com.fasterxml.jackson.core.JsonLocation",
      "io.micronaut.context.exceptions.ConfigurationException",
      "io.micronaut.context.AbstractBeanConfiguration",
      "io.micronaut.jackson.$BeanConfiguration",
      "io.micronaut.aop.Interceptor",
      "io.kubernetes.client.openapi.models.V1NodeConfigStatus",
      "io.kubernetes.client.openapi.models.V1BoundObjectReference",
      "io.kubernetes.client.custom.SuffixFormatter$1",
      "io.kubernetes.client.custom.BaseExponent",
      "io.kubernetes.client.custom.SuffixFormatter$2",
      "io.kubernetes.client.custom.SuffixFormatter$3",
      "io.kubernetes.client.custom.SuffixFormatter$4",
      "io.kubernetes.client.custom.SuffixFormatter",
      "io.micronaut.core.util.SupplierUtil$1",
      "io.micronaut.core.io.file.DefaultFileSystemResourceLoader$BaseDir",
      "io.kubernetes.client.openapi.models.V1PersistentVolumeStatus",
      "io.micronaut.inject.ArgumentBeanType",
      "io.kubernetes.client.openapi.models.V1TokenRequestStatus",
      "io.kubernetes.client.openapi.models.V1NodeSystemInfo",
      "io.kubernetes.client.openapi.models.V1ReplicationControllerCondition",
      "io.kubernetes.client.openapi.models.V1Binding",
      "io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1PodStatus",
      "io.kubernetes.client.openapi.models.V1ConfigMapNodeConfigSource",
      "io.kubernetes.client.openapi.models.V1StorageOSVolumeSource",
      "io.kubernetes.client.openapi.models.V1HTTPGetAction",
      "io.kubernetes.client.openapi.models.V1ScaleIOVolumeSource",
      "io.kubernetes.client.openapi.models.V1ConfigMapVolumeSource",
      "io.kubernetes.client.openapi.models.V1CinderVolumeSource",
      "io.kubernetes.client.openapi.models.V1CinderPersistentVolumeSource",
      "io.kubernetes.client.openapi.models.V1NamespaceCondition",
      "io.kubernetes.client.openapi.models.V1SecretVolumeSource",
      "io.kubernetes.client.openapi.models.V1DownwardAPIVolumeSource",
      "io.kubernetes.client.openapi.models.V1TCPSocketAction",
      "org.yaml.snakeyaml.Yaml",
      "org.yaml.snakeyaml.constructor.BaseConstructor",
      "org.yaml.snakeyaml.constructor.AbstractConstruct",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined",
      "org.yaml.snakeyaml.constructor.SafeConstructor",
      "io.micronaut.context.env.yaml.CustomSafeConstructor",
      "org.yaml.snakeyaml.LoaderOptions",
      "org.yaml.snakeyaml.nodes.NodeId",
      "org.yaml.snakeyaml.TypeDescription",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "org.yaml.snakeyaml.util.UriEncoder",
      "org.yaml.snakeyaml.nodes.Tag",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap",
      "org.yaml.snakeyaml.representer.BaseRepresenter",
      "org.yaml.snakeyaml.representer.SafeRepresenter",
      "org.yaml.snakeyaml.representer.Representer",
      "org.yaml.snakeyaml.DumperOptions",
      "org.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "org.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.yaml.snakeyaml.DumperOptions$NonPrintableStyle",
      "org.yaml.snakeyaml.serializer.NumberAnchorGenerator",
      "org.yaml.snakeyaml.representer.BaseRepresenter$1",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum",
      "org.yaml.snakeyaml.representer.Representer$RepresentJavaBean",
      "org.yaml.snakeyaml.introspector.PropertyUtils",
      "org.yaml.snakeyaml.util.PlatformFeatureDetector",
      "org.yaml.snakeyaml.introspector.BeanAccess",
      "org.yaml.snakeyaml.resolver.Resolver",
      "org.yaml.snakeyaml.resolver.ResolverTuple",
      "org.yaml.snakeyaml.reader.UnicodeReader",
      "org.yaml.snakeyaml.composer.Composer",
      "org.yaml.snakeyaml.parser.ParserImpl",
      "org.yaml.snakeyaml.reader.StreamReader",
      "org.yaml.snakeyaml.scanner.ScannerImpl",
      "org.yaml.snakeyaml.util.ArrayStack",
      "org.yaml.snakeyaml.error.Mark",
      "org.yaml.snakeyaml.tokens.Token",
      "org.yaml.snakeyaml.tokens.StreamStartToken",
      "org.yaml.snakeyaml.parser.VersionTagsTuple",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "org.yaml.snakeyaml.comments.CommentEventsCollector",
      "org.yaml.snakeyaml.comments.CommentType",
      "org.yaml.snakeyaml.comments.CommentEventsCollector$1",
      "org.yaml.snakeyaml.Yaml$1",
      "org.yaml.snakeyaml.Yaml$YamlIterable",
      "org.yaml.snakeyaml.events.Event$ID",
      "org.yaml.snakeyaml.events.Event",
      "org.yaml.snakeyaml.events.StreamStartEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "org.yaml.snakeyaml.tokens.Token$ID",
      "org.yaml.snakeyaml.scanner.Constant",
      "org.yaml.snakeyaml.scanner.SimpleKey",
      "org.yaml.snakeyaml.tokens.ScalarToken",
      "org.yaml.snakeyaml.tokens.StreamEndToken",
      "org.yaml.snakeyaml.events.DocumentStartEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode",
      "org.yaml.snakeyaml.events.ImplicitTuple",
      "org.yaml.snakeyaml.events.NodeEvent",
      "org.yaml.snakeyaml.events.ScalarEvent",
      "org.yaml.snakeyaml.resolver.Resolver$1",
      "org.yaml.snakeyaml.nodes.Node",
      "org.yaml.snakeyaml.nodes.ScalarNode",
      "org.yaml.snakeyaml.events.DocumentEndEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "org.yaml.snakeyaml.events.StreamEndEvent"
    );
  }
}
