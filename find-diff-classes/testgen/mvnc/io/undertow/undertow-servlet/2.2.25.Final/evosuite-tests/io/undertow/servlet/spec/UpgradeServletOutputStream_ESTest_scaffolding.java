/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 10 22:46:36 GMT 2024
 */

package io.undertow.servlet.spec;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class UpgradeServletOutputStream_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.undertow.servlet.spec.UpgradeServletOutputStream"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/io/undertow/undertow-servlet/2.2.25.Final"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("user.name", "wtwhite"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UpgradeServletOutputStream_ESTest_scaffolding.class.getClassLoader() ,
      "org.jboss.logging.SecurityActions$1",
      "org.jboss.logging.SecurityActions$2",
      "org.wildfly.common.context.Contextual",
      "org.xnio.channels.WriteListenerSettable$Setter",
      "org.jboss.threads.DelegatingExecutorService",
      "io.undertow.servlet.spec.UpgradeServletOutputStream",
      "org.jboss.logging.LoggerProvider",
      "org.jboss.threads.JBossExecutors$5",
      "org.xnio.channels.WriteListenerSettable",
      "org.xnio.channels.SuspendableWriteChannel",
      "org.xnio.channels.CloseListenerSettable",
      "org.xnio.channels.StreamSourceChannel",
      "org.xnio.Option",
      "org.xnio.ChannelListeners$4",
      "org.xnio.channels.SplitStreamSinkChannel$1",
      "org.xnio.ChannelListeners$3",
      "org.xnio.ChannelListeners$2",
      "org.xnio.ChannelListeners$1",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$1",
      "org.xnio.channels.StreamSinkChannel",
      "org.jboss.threads.NullRunnable",
      "org.xnio.ChannelListeners",
      "org.wildfly.common.function.ExceptionBiFunction",
      "org.jboss.logging.Messages$1",
      "org.wildfly.common.function.ExceptionObjIntConsumer",
      "org.xnio.channels.ConcurrentStreamChannelAccessException",
      "org.xnio.channels.NullStreamSinkChannel",
      "io.undertow.servlet.UndertowServletMessages",
      "org.xnio.ChannelListener",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$WriteChannelListener",
      "org.xnio.channels.SplitStreamSinkChannel",
      "org.xnio.ChannelExceptionHandler",
      "org.jboss.logging.Slf4jLogger",
      "org.wildfly.common.function.ExceptionBiConsumer",
      "org.xnio.XnioIoThread",
      "io.undertow.servlet.UndertowServletMessages_$bundle",
      "org.jboss.threads.StoppedExecutorException",
      "org.xnio.channels.CloseableChannel",
      "org.xnio.ChannelListener$Setter",
      "org.wildfly.common.function.ExceptionConsumer",
      "org.jboss.threads.RejectingExecutor",
      "org.jboss.threads.Messages_$logger",
      "org.jboss.logging.Logger$1",
      "org.xnio.channels.Channels",
      "org.jboss.threads.JBossExecutors$3",
      "org.jboss.threads.JBossExecutors$4",
      "org.jboss.threads.JBossExecutors",
      "org.wildfly.common.function.ExceptionFunction",
      "org.wildfly.common.function.ExceptionSupplier",
      "org.jboss.threads.DiscardingExecutor",
      "org.jboss.logging.AbstractLoggerProvider",
      "org.xnio.channels.Configurable",
      "org.jboss.logging.Logger",
      "org.jboss.threads.LoggingUncaughtExceptionHandler",
      "org.xnio.channels.ByteChannel",
      "org.jboss.logging.LoggingLocale",
      "org.jboss.logging.BasicLogger",
      "org.jboss.logmanager.LogManager",
      "org.wildfly.common.function.ExceptionRunnable",
      "org.jboss.threads.Version",
      "org.xnio.Bits",
      "org.wildfly.common.function.ExceptionObjLongConsumer",
      "org.xnio.XnioExecutor",
      "org.jboss.threads.ThreadNameInfo",
      "org.jboss.logging.Slf4jLoggerProvider",
      "org.xnio.channels.Channels$4",
      "org.jboss.logging.LoggerProviders",
      "org.jboss.threads.JBossThreadFactory",
      "org.jboss.logging.Slf4jLocationAwareLogger",
      "org.jboss.logging.Slf4jLocationAwareLogger$1",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$3",
      "org.xnio.XnioWorker",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$2",
      "org.jboss.logging.DelegatingBasicLogger",
      "org.jboss.threads.InterruptHandler",
      "org.jboss.logging.SecurityActions",
      "org.jboss.threads.JBossThreadFactory$ThreadCreateAction",
      "org.xnio.XnioIoFactory",
      "org.jboss.logging.Logger$Level",
      "org.jboss.threads.JBossThread",
      "org.xnio.channels.SuspendableReadChannel",
      "org.jboss.threads.Messages",
      "org.xnio.ChannelListeners$23",
      "org.jboss.logging.Messages"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.lang.ThreadGroup", false, UpgradeServletOutputStream_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("javax.servlet.WriteListener", false, UpgradeServletOutputStream_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UpgradeServletOutputStream_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.undertow.servlet.spec.UpgradeServletOutputStream",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$1",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$2",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$WriteChannelListener",
      "io.undertow.servlet.spec.UpgradeServletOutputStream$3",
      "org.jboss.logging.SecurityActions",
      "org.jboss.logging.SecurityActions$2",
      "org.jboss.logging.LoggingLocale",
      "org.jboss.logging.Messages",
      "org.jboss.logging.Messages$1",
      "io.undertow.servlet.UndertowServletMessages_$bundle",
      "io.undertow.servlet.UndertowServletMessages",
      "org.xnio.XnioIoThread",
      "org.xnio.channels.EmptyStreamSourceChannel",
      "org.xnio.channels.EmptyStreamSourceChannel$1",
      "org.xnio.channels.NullStreamSinkChannel",
      "org.xnio.channels.AssembledStreamChannel",
      "org.xnio.channels.AssembledConnectedStreamChannel",
      "org.xnio.channels.AssembledConnectedSslStreamChannel",
      "org.xnio.channels.AssembledChannel",
      "org.xnio.channels.AssembledConnectedChannel",
      "org.xnio.channels.AssembledSslChannel",
      "org.xnio.ChannelListener$SimpleSetter",
      "org.xnio.channels.AssembledChannel$1",
      "org.jboss.logging.Logger",
      "org.jboss.logging.Logger$1",
      "org.jboss.logging.DelegatingBasicLogger",
      "org.xnio._private.Messages_$logger",
      "org.jboss.logging.SecurityActions$1",
      "org.jboss.logging.AbstractLoggerProvider",
      "org.jboss.logging.Slf4jLoggerProvider",
      "org.jboss.logging.Slf4jLocationAwareLogger",
      "org.jboss.logging.Logger$Level",
      "org.jboss.logging.Slf4jLocationAwareLogger$1",
      "org.jboss.logging.LoggerProviders",
      "org.xnio._private.Messages",
      "org.xnio.channels.SplitStreamSinkChannel",
      "org.xnio.channels.WriteListenerSettable$Setter",
      "org.xnio.channels.SplitStreamSinkChannel$1",
      "org.xnio.channels.CloseListenerSettable$Setter",
      "org.xnio.Bits",
      "org.xnio.ChannelListeners$1",
      "org.xnio.ChannelListeners$2",
      "org.xnio.ChannelListeners$3",
      "org.xnio.ChannelListeners$23",
      "org.xnio.ChannelListeners",
      "org.xnio.channels.Channels$4",
      "org.xnio.channels.Channels",
      "org.xnio.channels.PushBackStreamChannel",
      "org.xnio.channels.ReadListenerSettable$Setter",
      "org.xnio.channels.PushBackStreamChannel$1",
      "org.xnio.channels.PushBackStreamChannel$2",
      "org.xnio.ChannelListeners$4",
      "org.xnio.channels.SplitStreamSourceChannel",
      "io.netty.util.ResourceLeakDetector$Level",
      "io.netty.util.internal.logging.InternalLoggerFactory",
      "io.netty.util.internal.logging.Slf4JLoggerFactory",
      "io.netty.util.internal.logging.AbstractInternalLogger",
      "io.netty.util.internal.logging.LocationAwareSlf4JLogger",
      "io.netty.util.internal.ObjectUtil",
      "io.netty.util.internal.SystemPropertyUtil",
      "io.netty.util.internal.SystemPropertyUtil$1",
      "io.netty.util.internal.EmptyArrays",
      "io.netty.util.ResourceLeakDetector",
      "io.netty.buffer.AbstractByteBufAllocator",
      "io.netty.util.NettyRuntime$AvailableProcessorsHolder",
      "io.netty.util.NettyRuntime",
      "io.netty.util.internal.PlatformDependent0$1",
      "io.netty.util.internal.ReflectionUtil",
      "io.netty.util.internal.PlatformDependent0$2",
      "io.netty.util.internal.PlatformDependent0$3",
      "io.netty.util.internal.PlatformDependent0$4",
      "io.netty.util.internal.PlatformDependent0$5",
      "io.netty.util.internal.PlatformDependent0$10",
      "io.netty.util.internal.PlatformDependent0",
      "io.netty.util.internal.PlatformDependent$1",
      "io.netty.util.internal.PlatformDependent$2",
      "io.netty.util.internal.CleanerJava6$1",
      "io.netty.util.internal.CleanerJava6",
      "io.netty.util.internal.PlatformDependent$4",
      "io.netty.util.internal.PlatformDependent",
      "io.netty.buffer.ByteBuf",
      "io.netty.buffer.EmptyByteBuf",
      "io.netty.util.internal.StringUtil",
      "io.netty.buffer.PooledByteBufAllocator$1",
      "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
      "io.netty.util.internal.InternalThreadLocalMap",
      "io.netty.util.concurrent.FastThreadLocal",
      "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
      "io.netty.buffer.PoolArena",
      "io.netty.buffer.PoolArena$DirectArena",
      "io.netty.util.internal.LongAdderCounter",
      "io.netty.buffer.PoolSubpage",
      "io.netty.buffer.PoolChunkList",
      "io.netty.buffer.PooledByteBufAllocatorMetric",
      "io.netty.buffer.PooledByteBufAllocator",
      "io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory",
      "io.netty.util.ResourceLeakDetectorFactory",
      "io.netty.buffer.AbstractByteBuf",
      "io.netty.util.internal.ReferenceCountUpdater",
      "io.netty.buffer.AbstractReferenceCountedByteBuf$1",
      "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "io.netty.buffer.UnpooledHeapByteBuf",
      "io.netty.buffer.UnpooledUnsafeHeapByteBuf",
      "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric",
      "io.netty.buffer.UnpooledByteBufAllocator",
      "org.jboss.threads.JBossThreadFactory",
      "io.netty.buffer.UnpooledDirectByteBuf",
      "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
      "io.netty.util.internal.MathUtil",
      "org.xnio.channels.SplitStreamSourceChannel$1",
      "io.undertow.util.ImmediatePooledByteBuffer",
      "io.undertow.util.ReferenceCountedPooled",
      "org.xnio.Buffers$5",
      "org.xnio.Buffers",
      "io.undertow.util.PooledAdaptor",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf",
      "io.netty.buffer.ByteBufUtil$1",
      "io.netty.util.CharsetUtil",
      "io.netty.buffer.ByteBufUtil$2",
      "io.netty.buffer.ByteBufUtil",
      "io.netty.buffer.ByteBufAllocator",
      "io.netty.handler.ssl.PemX509Certificate",
      "io.netty.buffer.Unpooled",
      "org.xnio.channels.AssembledMessageChannel",
      "org.xnio.channels.AssembledConnectedMessageChannel",
      "io.netty.buffer.AbstractDerivedByteBuf",
      "io.netty.buffer.DuplicatedByteBuf",
      "io.netty.buffer.UnpooledDuplicatedByteBuf",
      "org.jboss.threads.JBossThreadFactory$ThreadCreateAction",
      "org.jboss.threads.ThreadNameInfo",
      "org.jboss.threads.Messages_$logger",
      "org.jboss.threads.Messages",
      "org.jboss.threads.Version",
      "org.jboss.threads.JBossThread",
      "org.jboss.threads.DelegatingExecutorService",
      "org.jboss.threads.RejectingExecutor",
      "org.jboss.threads.DiscardingExecutor",
      "org.jboss.threads.JBossExecutors$3",
      "org.jboss.threads.NullRunnable",
      "org.jboss.threads.JBossExecutors$5",
      "org.jboss.threads.LoggingUncaughtExceptionHandler",
      "org.jboss.threads.JBossExecutors",
      "io.netty.buffer.CompositeByteBuf$1",
      "io.netty.buffer.CompositeByteBuf$2",
      "io.netty.buffer.CompositeByteBuf",
      "io.netty.buffer.AbstractByteBufAllocator$1",
      "io.netty.buffer.UnsafeByteBufUtil"
    );
  }
}
