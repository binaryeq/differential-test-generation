/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 22:43:15 GMT 2024
 */

package io.undertow.servlet.spec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.servlet.spec.UpgradeServletOutputStream;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.util.concurrent.Executor;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import javax.servlet.WriteListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xnio.XnioIoThread;
import org.xnio.channels.NullStreamSinkChannel;
import org.xnio.channels.SplitStreamSinkChannel;
import org.xnio.channels.StreamSinkChannel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UpgradeServletOutputStream_ESTest extends UpgradeServletOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1509);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, scheduledThreadPoolExecutor0);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      scheduledThreadPoolExecutor0.getThreadFactory();
      upgradeServletOutputStream0.setWriteListener(writeListener0);
      upgradeServletOutputStream0.print(false);
      upgradeServletOutputStream0.write(1509);
      WriteListener writeListener1 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      upgradeServletOutputStream0.write(1509);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1509);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7od");
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, scheduledThreadPoolExecutor0);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      upgradeServletOutputStream0.write(3025);
      upgradeServletOutputStream0.setWriteListener(writeListener0);
      upgradeServletOutputStream0.write(1509);
      upgradeServletOutputStream0.close();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1509);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, scheduledThreadPoolExecutor0);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      upgradeServletOutputStream0.setWriteListener(writeListener0);
      upgradeServletOutputStream0.write(1509);
      upgradeServletOutputStream0.close();
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream1 = new UpgradeServletOutputStream(splitStreamSinkChannel0, scheduledThreadPoolExecutor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1509);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, scheduledThreadPoolExecutor0);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      upgradeServletOutputStream0.setWriteListener(writeListener0);
      upgradeServletOutputStream0.write(1509);
      WriteListener writeListener1 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.closeBlocking();
      try { 
        upgradeServletOutputStream0.write(1639);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      nullStreamSinkChannel0.close();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.flush();
      try { 
        upgradeServletOutputStream0.write(37);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.NullStreamSinkChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.write(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, true);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.closeBlocking();
      upgradeServletOutputStream0.close();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)68;
      try { 
        upgradeServletOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.closeBlocking();
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write((-16777216));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte) (-123);
      nullStreamSinkChannel0.isOpen();
      upgradeServletOutputStream0.closeBlocking();
      upgradeServletOutputStream0.close();
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      upgradeServletOutputStream0.close();
      try { 
        upgradeServletOutputStream0.write(byteArray0, (int) (byte) (-123), 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.closeBlocking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0rn$00<BX!B+y");
      SplitStreamSinkChannel splitStreamSinkChannel1 = new SplitStreamSinkChannel(splitStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel1, (Executor) null);
      upgradeServletOutputStream0.print((String) null);
      upgradeServletOutputStream0.closeBlocking();
      UpgradeServletOutputStream upgradeServletOutputStream1 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream1.flush();
      // Undeclared exception!
      try { 
        upgradeServletOutputStream1.isReady();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener((WriteListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      try { 
        upgradeServletOutputStream0.write((byte[]) null, (-492), (-492));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      try { 
        upgradeServletOutputStream0.println();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte) (-123);
      upgradeServletOutputStream0.write(byteArray0);
      assertEquals(2, byteArray0.length);
      
      upgradeServletOutputStream0.close();
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.isReady();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write(byteArray0, Integer.MAX_VALUE, Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, false);
      SplitStreamSinkChannel splitStreamSinkChannel1 = new SplitStreamSinkChannel(splitStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel1, (Executor) null);
      upgradeServletOutputStream0.print((String) null);
      upgradeServletOutputStream0.closeBlocking();
      upgradeServletOutputStream0.close();
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write((byte[]) null, (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, true);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.print(false);
      upgradeServletOutputStream0.print(1876);
      upgradeServletOutputStream0.print((-1L));
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write((byte[]) null, 46, 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.isReady();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.print((-299.6468578002));
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.isReady();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)106;
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XnioIoThread.currentThread();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.flush();
      upgradeServletOutputStream0.closeBlocking();
      UpgradeServletOutputStream upgradeServletOutputStream1 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-2);
      upgradeServletOutputStream1.write(byteArray0, (int) (byte)2, 0);
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.flush();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, false);
      SplitStreamSinkChannel splitStreamSinkChannel1 = new SplitStreamSinkChannel(splitStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel1, (Executor) null);
      upgradeServletOutputStream0.print((String) null);
      upgradeServletOutputStream0.closeBlocking();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|IYwC@U\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte)0;
      try { 
        upgradeServletOutputStream0.write(byteArray0, (int) (byte)0, 602);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XnioIoThread.currentThread();
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0, false);
      SplitStreamSinkChannel splitStreamSinkChannel1 = new SplitStreamSinkChannel(splitStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel1, (Executor) null);
      upgradeServletOutputStream0.print((String) null);
      UpgradeServletOutputStream upgradeServletOutputStream1 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte)66;
      // Undeclared exception!
      try { 
        upgradeServletOutputStream1.setWriteListener((WriteListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.print((-1228.9));
      upgradeServletOutputStream0.closeBlocking();
      upgradeServletOutputStream0.closeBlocking();
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.println();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      // Undeclared exception!
      try { 
        nullStreamSinkChannel0.resumeWrites();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.NullStreamSinkChannel", e);
      }
  }
}
