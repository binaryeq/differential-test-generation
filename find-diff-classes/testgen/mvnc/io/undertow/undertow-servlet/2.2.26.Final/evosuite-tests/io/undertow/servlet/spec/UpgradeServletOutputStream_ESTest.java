/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 22:51:09 GMT 2024
 */

package io.undertow.servlet.spec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.servlet.spec.UpgradeServletOutputStream;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import javax.servlet.WriteListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xnio.XnioIoThread;
import org.xnio.channels.NullStreamSinkChannel;
import org.xnio.channels.SplitStreamSinkChannel;
import org.xnio.channels.StreamSinkChannel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UpgradeServletOutputStream_ESTest extends UpgradeServletOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      upgradeServletOutputStream0.closeBlocking();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      upgradeServletOutputStream0.close();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[5];
      upgradeServletOutputStream0.write(byteArray0, 0, (int) (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write((byte[]) null, (-6142), 2543);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write(byteArray0, 0, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      byte[] byteArray0 = new byte[3];
      try { 
        upgradeServletOutputStream0.write(byteArray0, (int) (byte)1, 91);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      nullStreamSinkChannel0.close();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[1];
      try { 
        upgradeServletOutputStream0.write(byteArray0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.NullStreamSinkChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      byte[] byteArray0 = new byte[0];
      try { 
        upgradeServletOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      UpgradeServletOutputStream upgradeServletOutputStream1 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream1.closeBlocking();
      try { 
        upgradeServletOutputStream0.write(2496);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.NullStreamSinkChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.write(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      try { 
        upgradeServletOutputStream0.write(4565);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, (Executor) null);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xnio.channels.Channels", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.closeBlocking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener((WriteListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream((StreamSinkChannel) null, forkJoinPool0);
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.isReady();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.close();
      try { 
        upgradeServletOutputStream0.flush();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.flush();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      SplitStreamSinkChannel splitStreamSinkChannel0 = new SplitStreamSinkChannel(nullStreamSinkChannel0);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(splitStreamSinkChannel0, (Executor) null);
      WriteListener writeListener0 = mock(WriteListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        upgradeServletOutputStream0.setWriteListener(writeListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.undertow.servlet.spec.UpgradeServletOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      upgradeServletOutputStream0.write(2496);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NullStreamSinkChannel nullStreamSinkChannel0 = new NullStreamSinkChannel((XnioIoThread) null);
      UpgradeServletOutputStream upgradeServletOutputStream0 = new UpgradeServletOutputStream(nullStreamSinkChannel0, (Executor) null);
      byte[] byteArray0 = new byte[0];
      upgradeServletOutputStream0.write(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }
}
