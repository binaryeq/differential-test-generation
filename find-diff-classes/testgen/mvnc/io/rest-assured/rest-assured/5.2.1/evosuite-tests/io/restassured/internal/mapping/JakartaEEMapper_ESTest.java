/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 22:09:25 GMT 2024
 */

package io.restassured.internal.mapping;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.internal.mapping.JakartaEEMapper;
import io.restassured.internal.mapping.ObjectMapperDeserializationContextImpl;
import io.restassured.internal.mapping.ObjectMapperSerializationContextImpl;
import io.restassured.path.xml.mapper.factory.DefaultJakartaEEObjectMapperFactory;
import io.restassured.path.xml.mapper.factory.JakartaEEObjectMapperFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JakartaEEMapper_ESTest extends JakartaEEMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultJakartaEEObjectMapperFactory defaultJakartaEEObjectMapperFactory0 = new DefaultJakartaEEObjectMapperFactory();
      ObjectMapperSerializationContextImpl objectMapperSerializationContextImpl0 = new ObjectMapperSerializationContextImpl();
      Object object0 = new Object();
      objectMapperSerializationContextImpl0.setObject(object0);
      JakartaEEMapper jakartaEEMapper0 = new JakartaEEMapper(defaultJakartaEEObjectMapperFactory0);
      // Undeclared exception!
      try { 
        jakartaEEMapper0.serialize(objectMapperSerializationContextImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // class java.lang.Object nor any of its super class is known to this context.
         //
         verifyException("org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultJakartaEEObjectMapperFactory defaultJakartaEEObjectMapperFactory0 = new DefaultJakartaEEObjectMapperFactory();
      JakartaEEMapper jakartaEEMapper0 = new JakartaEEMapper(defaultJakartaEEObjectMapperFactory0);
      ObjectMapperSerializationContextImpl objectMapperSerializationContextImpl0 = new ObjectMapperSerializationContextImpl();
      // Undeclared exception!
      try { 
        jakartaEEMapper0.serialize(objectMapperSerializationContextImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //  - with linked exception:
         // [org.glassfish.jaxb.runtime.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions
         // groovy.lang.MetaClass is an interface, and JAXB can't handle interfaces.
         // \tthis problem is related to the following location:
         // \t\tat groovy.lang.MetaClass
         // \t\tat public groovy.lang.MetaClass groovy.lang.GroovyObjectSupport.getMetaClass()
         // \t\tat groovy.lang.GroovyObjectSupport
         // \t\tat org.codehaus.groovy.runtime.NullObject
         // ]
         //
         verifyException("io.restassured.path.xml.mapper.factory.DefaultJakartaEEObjectMapperFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JakartaEEMapper jakartaEEMapper0 = new JakartaEEMapper((JakartaEEObjectMapperFactory) null);
      ObjectMapperSerializationContextImpl objectMapperSerializationContextImpl0 = new ObjectMapperSerializationContextImpl();
      // Undeclared exception!
      try { 
        jakartaEEMapper0.serialize(objectMapperSerializationContextImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method create() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultJakartaEEObjectMapperFactory defaultJakartaEEObjectMapperFactory0 = new DefaultJakartaEEObjectMapperFactory();
      ObjectMapperSerializationContextImpl objectMapperSerializationContextImpl0 = new ObjectMapperSerializationContextImpl();
      objectMapperSerializationContextImpl0.setObject(defaultJakartaEEObjectMapperFactory0);
      objectMapperSerializationContextImpl0.setCharset(defaultJakartaEEObjectMapperFactory0);
      JakartaEEMapper jakartaEEMapper0 = new JakartaEEMapper(defaultJakartaEEObjectMapperFactory0);
      // Undeclared exception!
      try { 
        jakartaEEMapper0.serialize(objectMapperSerializationContextImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.glassfish.jaxb.runtime.v2.runtime.MarshallerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultJakartaEEObjectMapperFactory defaultJakartaEEObjectMapperFactory0 = new DefaultJakartaEEObjectMapperFactory();
      JakartaEEMapper jakartaEEMapper0 = new JakartaEEMapper(defaultJakartaEEObjectMapperFactory0);
      ObjectMapperDeserializationContextImpl objectMapperDeserializationContextImpl0 = new ObjectMapperDeserializationContextImpl();
      // Undeclared exception!
      try { 
        jakartaEEMapper0.deserialize(objectMapperDeserializationContextImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method asString() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }
}
