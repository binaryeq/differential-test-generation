/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 10 22:16:19 GMT 2024
 */

package io.restassured.internal.multipart;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class MultiPartInternal_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.restassured.internal.multipart.MultiPartInternal"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/io/rest-assured/rest-assured/5.2.1"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiPartInternal_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.http.entity.mime.content.InputStreamBody",
      "io.restassured.internal.multipart.MultiPartInternal",
      "org.apache.http.ParseException",
      "org.apache.http.util.Args",
      "org.apache.http.entity.ContentType",
      "io.restassured.internal.NoParameterValue",
      "org.apache.http.util.TextUtils",
      "org.apache.http.entity.mime.content.ContentDescriptor",
      "org.apache.http.entity.mime.content.AbstractContentBody",
      "org.apache.http.entity.mime.content.StringBody",
      "org.apache.http.entity.mime.content.ContentBody",
      "org.apache.http.Consts",
      "org.apache.http.entity.mime.content.FileBody"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiPartInternal_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.restassured.internal.multipart.MultiPartInternal",
      "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
      "org.apache.http.entity.mime.content.AbstractContentBody",
      "org.apache.http.entity.mime.content.StringBody",
      "org.apache.http.Consts",
      "org.apache.http.util.Args",
      "org.apache.http.util.TextUtils",
      "org.apache.http.entity.ContentType",
      "org.apache.http.entity.mime.content.InputStreamBody",
      "org.apache.http.entity.mime.content.FileBody",
      "org.apache.http.entity.AbstractHttpEntity",
      "org.apache.http.entity.BasicHttpEntity",
      "org.apache.http.util.Asserts",
      "org.apache.http.entity.HttpEntityWrapper",
      "org.apache.http.entity.BufferedHttpEntity",
      "org.apache.http.entity.ByteArrayEntity",
      "org.apache.http.util.CharArrayBuffer",
      "org.apache.http.message.BasicHeader",
      "org.apache.http.entity.FileEntity",
      "org.apache.http.entity.EntityTemplate",
      "org.apache.http.entity.StringEntity",
      "org.apache.http.message.TokenParser",
      "org.apache.http.message.BasicHeaderValueParser",
      "org.apache.http.message.ParserCursor",
      "org.apache.http.message.BasicNameValuePair",
      "org.apache.http.message.BasicHeaderElement",
      "org.apache.http.protocol.HTTP",
      "org.apache.http.entity.InputStreamEntity",
      "org.apache.http.entity.SerializableEntity",
      "org.apache.http.message.BufferedHeader",
      "org.apache.http.ParseException"
    );
  }
}
