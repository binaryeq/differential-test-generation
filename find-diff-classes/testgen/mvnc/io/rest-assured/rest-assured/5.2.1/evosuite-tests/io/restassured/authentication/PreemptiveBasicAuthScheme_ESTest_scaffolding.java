/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 08 03:50:45 GMT 2024
 */

package io.restassured.authentication;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class PreemptiveBasicAuthScheme_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.restassured.authentication.PreemptiveBasicAuthScheme"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("user.dir", "/home/wtwhite/code/regression-test-generation-NON-SOURCE-EQUIV/find-diff-classes/testgen/mvnc/io/rest-assured/rest-assured/5.2.1"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PreemptiveBasicAuthScheme_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.http.client.ClientProtocolException",
      "org.apache.http.client.methods.HttpPost",
      "org.apache.http.client.methods.Configurable",
      "org.apache.http.client.methods.HttpEntityEnclosingRequestBase",
      "org.apache.http.client.methods.HttpPatch",
      "org.apache.http.client.methods.HttpUriRequest",
      "io.restassured.config.DecoderConfig",
      "org.apache.http.StatusLine",
      "org.apache.http.Header",
      "io.restassured.authentication.PreemptiveBasicAuthScheme",
      "io.restassured.config.EncoderConfig",
      "org.apache.http.client.methods.AbortableHttpRequest",
      "org.apache.http.client.HttpClient",
      "io.restassured.internal.http.HttpResponseContentTypeFinder",
      "io.restassured.internal.http.URIBuilder",
      "org.apache.http.HttpMessage",
      "org.apache.http.impl.client.AbstractHttpClient",
      "io.restassured.internal.http.HTTPBuilder",
      "org.apache.http.message.AbstractHttpMessage",
      "org.apache.http.client.methods.AbstractExecutionAwareRequest",
      "io.restassured.config.OAuthConfig",
      "io.restassured.internal.http.HTTPBuilder$RequestConfigDelegate",
      "io.restassured.internal.http.ContentEncodingRegistry",
      "io.restassured.internal.http.HttpResponseException",
      "org.apache.http.HttpEntityEnclosingRequest",
      "org.apache.http.impl.client.CloseableHttpClient",
      "org.apache.http.HeaderIterator",
      "io.restassured.internal.http.AuthConfig",
      "org.apache.http.client.HttpResponseException",
      "org.apache.http.client.methods.HttpRequestBase",
      "org.apache.http.HttpEntity",
      "org.apache.http.client.methods.HttpExecutionAware",
      "io.restassured.internal.http.EncoderRegistry",
      "org.apache.http.HttpRequest",
      "io.restassured.authentication.AuthenticationScheme",
      "org.apache.http.ProtocolVersion",
      "io.restassured.internal.http.ResponseParseException",
      "org.apache.http.client.methods.HttpGet",
      "io.restassured.config.Config",
      "org.apache.http.params.HttpParams",
      "org.apache.http.HttpResponse",
      "org.apache.http.NameValuePair",
      "io.restassured.internal.http.HttpResponseDecorator"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("io.restassured.internal.http.HTTPBuilder", false, PreemptiveBasicAuthScheme_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PreemptiveBasicAuthScheme_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.restassured.authentication.PreemptiveBasicAuthScheme",
      "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
      "io.restassured.internal.http.HTTPBuilder",
      "groovyjarjarasm.asm.MethodVisitor",
      "groovyjarjarasm.asm.tree.MethodNode",
      "groovyjarjarasm.asm.tree.Util",
      "groovyjarjarasm.asm.tree.InsnList",
      "groovyjarjarasm.asm.Type",
      "groovyjarjarasm.asm.commons.LocalVariablesSorter",
      "groovyjarjarasm.asm.commons.AnalyzerAdapter",
      "groovyjarjarasm.asm.commons.Method",
      "groovyjarjarasm.asm.util.TraceMethodVisitor",
      "groovyjarjarasm.asm.commons.InstructionAdapter",
      "groovyjarjarasm.asm.util.Printer",
      "groovyjarjarasm.asm.util.Textifier",
      "groovyjarjarasm.asm.commons.CodeSizeEvaluator",
      "groovyjarjarasm.asm.util.ASMifier",
      "groovyjarjarasm.asm.commons.Remapper",
      "groovyjarjarasm.asm.commons.SimpleRemapper",
      "groovyjarjarasm.asm.tree.AbstractInsnNode",
      "groovyjarjarasm.asm.tree.IntInsnNode",
      "groovyjarjarasm.asm.commons.MethodRemapper",
      "groovyjarjarasm.asm.commons.GeneratorAdapter",
      "groovyjarjarasm.asm.ClassReader",
      "groovyjarjarasm.asm.ClassVisitor",
      "groovyjarjarasm.asm.ClassWriter",
      "groovyjarjarasm.asm.SymbolTable",
      "groovyjarjarasm.asm.ByteVector",
      "groovyjarjarasm.asm.MethodWriter",
      "groovyjarjarasm.asm.Symbol",
      "groovyjarjarasm.asm.SymbolTable$Entry",
      "groovyjarjarasm.asm.commons.JSRInlinerAdapter",
      "groovyjarjarasm.asm.commons.TryCatchBlockSorter",
      "groovyjarjarasm.asm.tree.IincInsnNode",
      "groovyjarjarasm.asm.TypePath",
      "groovyjarjarasm.asm.tree.FrameNode",
      "groovyjarjarasm.asm.tree.MultiANewArrayInsnNode",
      "groovyjarjarasm.asm.Label",
      "groovyjarjarasm.asm.Frame"
    );
  }
}
