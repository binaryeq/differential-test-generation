/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 22:12:28 GMT 2024
 */

package io.restassured.internal.matcher.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.internal.matcher.xml.LoadFromClasspathSupport;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoadFromClasspathSupport_ESTest extends LoadFromClasspathSupport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        LoadFromClasspathSupport.loadFromClasspath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputStream inputStream0 = LoadFromClasspathSupport.loadFromClasspath("/");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputStream inputStream0 = LoadFromClasspathSupport.loadFromClasspath("Wkl%ll");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoadFromClasspathSupport loadFromClasspathSupport0 = new LoadFromClasspathSupport();
  }
}
