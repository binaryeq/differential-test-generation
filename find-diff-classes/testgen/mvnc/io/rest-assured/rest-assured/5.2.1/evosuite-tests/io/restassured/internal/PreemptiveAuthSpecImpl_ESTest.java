/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 03:57:26 GMT 2024
 */

package io.restassured.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import groovy.lang.NonEmptySequence;
import io.restassured.authentication.FormAuthScheme;
import io.restassured.config.RestAssuredConfig;
import io.restassured.internal.PreemptiveAuthSpecImpl;
import io.restassured.internal.RequestSpecificationImpl;
import io.restassured.internal.log.LogRepository;
import io.restassured.specification.ProxySpecification;
import io.restassured.specification.RequestSpecification;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PreemptiveAuthSpecImpl_ESTest extends PreemptiveAuthSpecImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl((RequestSpecification) null);
      // Undeclared exception!
      try { 
        preemptiveAuthSpecImpl0.oauth2("0=*F6N: OYuqp$1s");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method auth() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl((RequestSpecification) null);
      // Undeclared exception!
      try { 
        preemptiveAuthSpecImpl0.oauth2((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl((RequestSpecification) null);
      // Undeclared exception!
      try { 
        preemptiveAuthSpecImpl0.basic("removePreviousAuth", "removePreviousAuth");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method auth() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl((RequestSpecification) null);
      // Undeclared exception!
      try { 
        preemptiveAuthSpecImpl0.basic((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FormAuthScheme formAuthScheme0 = new FormAuthScheme();
      Class<Object> class0 = Object.class;
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence(class0);
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      ProxySpecification proxySpecification0 = ProxySpecification.port((-1679));
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("F", 1512, "", formAuthScheme0, nonEmptySequence0, (RequestSpecification) null, false, restAssuredConfig0, (LogRepository) null, proxySpecification0, false, false);
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl(requestSpecificationImpl0);
      RequestSpecification requestSpecification0 = preemptiveAuthSpecImpl0.oauth2("jblZA?'i.EdY%y|@");
      assertSame(requestSpecificationImpl0, requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FormAuthScheme formAuthScheme0 = new FormAuthScheme();
      Class<Object> class0 = Object.class;
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence(class0);
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      ProxySpecification proxySpecification0 = ProxySpecification.port((-1679));
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("F", 1512, "", formAuthScheme0, nonEmptySequence0, (RequestSpecification) null, false, restAssuredConfig0, (LogRepository) null, proxySpecification0, false, false);
      PreemptiveAuthSpecImpl preemptiveAuthSpecImpl0 = new PreemptiveAuthSpecImpl(requestSpecificationImpl0);
      RequestSpecification requestSpecification0 = preemptiveAuthSpecImpl0.basic("", "E!y8eWXk");
      assertSame(requestSpecificationImpl0, requestSpecification0);
  }
}
