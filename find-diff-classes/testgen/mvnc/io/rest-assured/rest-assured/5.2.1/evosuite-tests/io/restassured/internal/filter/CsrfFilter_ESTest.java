/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 21:58:37 GMT 2024
 */

package io.restassured.internal.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.RestAssured;
import io.restassured.config.CsrfConfig;
import io.restassured.config.LogConfig;
import io.restassured.filter.Filter;
import io.restassured.internal.filter.CsrfFilter;
import io.restassured.internal.filter.FilterContextImpl;
import io.restassured.specification.FilterableRequestSpecification;
import io.restassured.specification.FilterableResponseSpecification;
import java.net.URL;
import java.util.Iterator;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CsrfFilter_ESTest extends CsrfFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = CsrfConfig.csrfConfig();
      CsrfConfig csrfConfig1 = csrfConfig0.sendCsrfTokenAsHeader();
      csrfFilter0.setCsrfConfig(csrfConfig1);
      CsrfConfig csrfConfig2 = csrfFilter0.getCsrfConfig();
      assertSame(csrfConfig2, csrfConfig1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = CsrfConfig.csrfConfig();
      LogConfig logConfig0 = LogConfig.logConfig();
      CsrfConfig csrfConfig1 = csrfConfig0.loggingEnabled(logConfig0);
      csrfFilter0.setCsrfConfig(csrfConfig1);
      CsrfConfig csrfConfig2 = csrfFilter0.getCsrfConfig();
      assertFalse(csrfConfig2.equals((Object)csrfConfig0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = CsrfConfig.csrfConfig();
      csrfFilter0.setCsrfConfig(csrfConfig0);
      CsrfConfig csrfConfig1 = csrfFilter0.getCsrfConfig();
      assertSame(csrfConfig1, csrfConfig0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = CsrfConfig.csrfConfig();
      CsrfConfig csrfConfig1 = csrfConfig0.csrfInputFieldName("PARAMS");
      csrfFilter0.setCsrfConfig(csrfConfig1);
      CsrfConfig csrfConfig2 = csrfFilter0.getCsrfConfig();
      assertTrue(csrfConfig2.isUserConfigured());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = CsrfConfig.csrfConfig();
      URL uRL0 = MockURL.getHttpExample();
      CsrfConfig csrfConfig1 = csrfConfig0.csrfTokenPath(uRL0);
      csrfFilter0.setCsrfConfig(csrfConfig1);
      Object object0 = new Object();
      FilterContextImpl filterContextImpl0 = new FilterContextImpl("I>)HQxy]z&9buSQ", "", "PARAMS", "", "PARAMS", (Object[]) null, "", object0, (Iterator<Filter>) null, (Map<String, Object>) null);
      // Undeclared exception!
      try { 
        csrfFilter0.filter((FilterableRequestSpecification) null, (FilterableResponseSpecification) null, filterContextImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get property 'method' on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        RestAssured.put();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Target host is null
         //
         verifyException("org.apache.http.util.Asserts", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CsrfFilter csrfFilter0 = new CsrfFilter();
      CsrfConfig csrfConfig0 = csrfFilter0.getCsrfConfig();
      assertNull(csrfConfig0);
  }
}
