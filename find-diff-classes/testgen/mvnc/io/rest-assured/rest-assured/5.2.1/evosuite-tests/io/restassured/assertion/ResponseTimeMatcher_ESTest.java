/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 03:38:56 GMT 2024
 */

package io.restassured.assertion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.assertion.ResponseTimeMatcher;
import io.restassured.internal.RestAssuredResponseImpl;
import io.restassured.response.Response;
import java.util.LinkedHashMap;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Matcher;
import org.hamcrest.object.HasToString;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResponseTimeMatcher_ESTest extends ResponseTimeMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      responseTimeMatcher0.setTimeUnit(timeUnit0);
      TimeUnit timeUnit1 = responseTimeMatcher0.getTimeUnit();
      assertSame(timeUnit1, timeUnit0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      Matcher<Long> matcher0 = HasToString.hasToString((String) null);
      responseTimeMatcher0.setMatcher(matcher0);
      Matcher<Long> matcher1 = responseTimeMatcher0.getMatcher();
      assertSame(matcher1, matcher0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      // Undeclared exception!
      try { 
        responseTimeMatcher0.validate((Response) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method getTimeIn() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      RestAssuredResponseImpl restAssuredResponseImpl0 = new RestAssuredResponseImpl();
      // Undeclared exception!
      try { 
        responseTimeMatcher0.validate(restAssuredResponseImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      responseTimeMatcher0.setTimeUnit(timeUnit0);
      RestAssuredResponseImpl restAssuredResponseImpl0 = new RestAssuredResponseImpl();
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)responseTimeMatcher0.validate(restAssuredResponseImpl0);
      assertFalse(linkedHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      TimeUnit timeUnit0 = responseTimeMatcher0.getTimeUnit();
      responseTimeMatcher0.setTimeUnit(timeUnit0);
      assertNull(responseTimeMatcher0.getTimeUnit());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResponseTimeMatcher responseTimeMatcher0 = new ResponseTimeMatcher();
      Matcher<Long> matcher0 = responseTimeMatcher0.getMatcher();
      assertNull(matcher0);
  }
}
