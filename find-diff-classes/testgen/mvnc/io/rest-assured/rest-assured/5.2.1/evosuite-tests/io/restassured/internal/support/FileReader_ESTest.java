/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 10 22:27:53 GMT 2024
 */

package io.restassured.internal.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.internal.support.FileReader;
import java.io.File;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileReader_ESTest extends FileReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = MockFile.createTempFile("classWriter.visitInnerClass(", "classWriter.visitInnerClass(");
      // Undeclared exception!
      try { 
        FileReader.readToString(file0, "classWriter.visitInnerClass(");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // /tmp/classWriter.visitInnerClass(0classWriter.visitInnerClass( (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileReader fileReader0 = new FileReader();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileReader.readToString((File) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method getText() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }
}
