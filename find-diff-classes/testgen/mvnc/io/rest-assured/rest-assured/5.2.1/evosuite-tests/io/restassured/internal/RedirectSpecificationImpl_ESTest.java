/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 03:57:52 GMT 2024
 */

package io.restassured.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import groovy.lang.NonEmptySequence;
import groovy.util.ConfigObject;
import io.restassured.authentication.BasicAuthScheme;
import io.restassured.authentication.CertAuthScheme;
import io.restassured.config.RestAssuredConfig;
import io.restassured.internal.RedirectSpecificationImpl;
import io.restassured.internal.RequestSpecificationImpl;
import io.restassured.internal.log.LogRepository;
import io.restassured.specification.ProxySpecification;
import io.restassured.specification.RequestSpecification;
import java.util.HashMap;
import java.util.Map;
import org.codehaus.groovy.runtime.callsite.CallSiteArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RedirectSpecificationImpl_ESTest extends RedirectSpecificationImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.rejectRelative(false);
      assertNull(requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.max(3758);
      assertNull(requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CertAuthScheme certAuthScheme0 = new CertAuthScheme();
      Class<Object> class0 = Object.class;
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence(class0);
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      LogRepository logRepository0 = new LogRepository();
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("", 477, "", certAuthScheme0, nonEmptySequence0, (RequestSpecification) null, true, restAssuredConfig0, logRepository0, (ProxySpecification) null, true, true);
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl(requestSpecificationImpl0, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.max((-856));
      assertSame(requestSpecificationImpl0, requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.follow(true);
      assertNull(requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.allowCircular(true);
      assertNull(requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, (Map) null);
      // Undeclared exception!
      try { 
        redirectSpecificationImpl0.rejectRelative(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method put() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, (Map) null);
      // Undeclared exception!
      try { 
        redirectSpecificationImpl0.follow(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method put() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, (Map) null);
      // Undeclared exception!
      try { 
        redirectSpecificationImpl0.allowCircular(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method put() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicAuthScheme basicAuthScheme0 = new BasicAuthScheme();
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence();
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      LogRepository logRepository0 = new LogRepository();
      ProxySpecification proxySpecification0 = ProxySpecification.port(125);
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("\"op ^F`y6TV", 125, "HANDLE_REDIRECTS", basicAuthScheme0, nonEmptySequence0, (RequestSpecification) null, true, restAssuredConfig0, logRepository0, proxySpecification0, true, true);
      HashMap<CallSiteArray, CallSiteArray> hashMap0 = new HashMap<CallSiteArray, CallSiteArray>();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl(requestSpecificationImpl0, hashMap0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.follow(true);
      assertSame(requestSpecificationImpl0, requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CertAuthScheme certAuthScheme0 = new CertAuthScheme();
      Class<Object> class0 = Object.class;
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence(class0);
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      LogRepository logRepository0 = new LogRepository();
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("", 477, "", certAuthScheme0, nonEmptySequence0, (RequestSpecification) null, true, restAssuredConfig0, logRepository0, (ProxySpecification) null, true, true);
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl(requestSpecificationImpl0, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.allowCircular(true);
      assertSame(requestSpecification0, requestSpecificationImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CertAuthScheme certAuthScheme0 = new CertAuthScheme();
      Class<Object> class0 = Object.class;
      NonEmptySequence nonEmptySequence0 = new NonEmptySequence(class0);
      RestAssuredConfig restAssuredConfig0 = RestAssuredConfig.config();
      LogRepository logRepository0 = new LogRepository();
      RequestSpecificationImpl requestSpecificationImpl0 = new RequestSpecificationImpl("", 477, "", certAuthScheme0, nonEmptySequence0, (RequestSpecification) null, true, restAssuredConfig0, logRepository0, (ProxySpecification) null, true, true);
      ConfigObject configObject0 = new ConfigObject();
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl(requestSpecificationImpl0, configObject0);
      RequestSpecification requestSpecification0 = redirectSpecificationImpl0.rejectRelative(false);
      assertSame(requestSpecificationImpl0, requestSpecification0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RedirectSpecificationImpl redirectSpecificationImpl0 = new RedirectSpecificationImpl((RequestSpecification) null, (Map) null);
      // Undeclared exception!
      try { 
        redirectSpecificationImpl0.max(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method put() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }
}
