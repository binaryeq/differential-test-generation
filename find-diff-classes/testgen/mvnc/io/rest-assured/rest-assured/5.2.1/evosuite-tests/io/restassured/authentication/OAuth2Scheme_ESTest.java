/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 03:48:23 GMT 2024
 */

package io.restassured.authentication;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.restassured.authentication.OAuth2Scheme;
import io.restassured.authentication.OAuthSignature;
import io.restassured.internal.http.HTTPBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OAuth2Scheme_ESTest extends OAuth2Scheme_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      OAuthSignature oAuthSignature0 = OAuthSignature.HEADER;
      oAuth2Scheme0.setSignature(oAuthSignature0);
      OAuthSignature oAuthSignature1 = oAuth2Scheme0.getSignature();
      assertSame(oAuthSignature1, oAuthSignature0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      oAuth2Scheme0.setAccessToken("auth");
      String string0 = oAuth2Scheme0.getAccessToken();
      assertEquals("auth", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      oAuth2Scheme0.setAccessToken("");
      String string0 = oAuth2Scheme0.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      HTTPBuilder hTTPBuilder0 = mock(HTTPBuilder.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oAuth2Scheme0.authenticate(hTTPBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method oauth2() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      oAuth2Scheme0.getSignature();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      String string0 = oAuth2Scheme0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OAuth2Scheme oAuth2Scheme0 = new OAuth2Scheme();
      OAuthSignature oAuthSignature0 = OAuthSignature.HEADER;
      oAuth2Scheme0.setSignature(oAuthSignature0);
      HTTPBuilder hTTPBuilder0 = mock(HTTPBuilder.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oAuth2Scheme0.authenticate(hTTPBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke method oauth2() on null object
         //
         verifyException("org.codehaus.groovy.runtime.NullObject", e);
      }
  }
}
