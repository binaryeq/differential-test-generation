/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 08 03:27:59 GMT 2024
 */

package org.jboss.netty.handler.codec.marshalling;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.io.StreamCorruptedException;
import java.nio.ByteOrder;
import java.sql.SQLTransientConnectionException;
import java.sql.SQLTransientException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jboss.marshalling.MarshallingConfiguration;
import org.jboss.marshalling.river.RiverMarshallerFactory;
import org.jboss.marshalling.serial.SerialMarshallerFactory;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.channel.DefaultExceptionEvent;
import org.jboss.netty.channel.SimpleChannelHandler;
import org.jboss.netty.channel.local.DefaultLocalClientChannelFactory;
import org.jboss.netty.channel.local.DefaultLocalServerChannelFactory;
import org.jboss.netty.channel.local.LocalChannel;
import org.jboss.netty.channel.local.LocalServerChannel;
import org.jboss.netty.handler.codec.frame.TooLongFrameException;
import org.jboss.netty.handler.codec.marshalling.CompatibleMarshallingDecoder;
import org.jboss.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider;
import org.jboss.netty.handler.codec.marshalling.DefaultUnmarshallerProvider;
import org.jboss.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider;
import org.jboss.netty.handler.codec.replay.VoidEnum;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompatibleMarshallingDecoder_ESTest extends CompatibleMarshallingDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)125;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, 962);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      byte[] byteArray0 = new byte[1];
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, 962);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, 31);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      SimpleChannelHandler simpleChannelHandler0 = new SimpleChannelHandler();
      defaultChannelPipeline0.addLast("nLIYQN,a@6%[{", simpleChannelHandler0);
      byte[] byteArray0 = new byte[5];
      marshallingConfiguration0.setBufferSize((-2044));
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext("nLIYQN,a@6%[{");
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      try { 
        compatibleMarshallingDecoder0.decodeLast(channelHandlerContext0, localChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.marshalling.SimpleDataInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, 0);
      byte[] byteArray0 = new byte[3];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, (Channel) null, bigEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The limit MUST be > 0
         //
         verifyException("org.jboss.netty.handler.codec.marshalling.LimitingByteInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, 1456);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, 1456);
      try { 
        compatibleMarshallingDecoder0.decode((ChannelHandlerContext) null, (Channel) null, dynamicChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, 0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, 0);
      try { 
        compatibleMarshallingDecoder0.decode((ChannelHandlerContext) null, (Channel) null, dynamicChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The limit MUST be > 0
         //
         verifyException("org.jboss.netty.handler.codec.marshalling.LimitingByteInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      byte[] byteArray0 = new byte[9];
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, Integer.MAX_VALUE);
      try { 
        compatibleMarshallingDecoder0.decode((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // Header is incorrect (expected [-84, -19], got [0, 0])
         //
         verifyException("org.jboss.marshalling.Marshalling$StaticStreamHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      DefaultUnmarshallerProvider defaultUnmarshallerProvider0 = new DefaultUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(defaultUnmarshallerProvider0, 1);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1160);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, 1160);
      try { 
        compatibleMarshallingDecoder0.decode((ChannelHandlerContext) null, localServerChannel0, truncatedChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported protocol version 0
         //
         verifyException("org.jboss.marshalling.river.RiverUnmarshaller", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, 620);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(1024);
      try { 
        compatibleMarshallingDecoder0.decode((ChannelHandlerContext) null, localChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.marshalling.Marshalling", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, 2085);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      SQLTransientException sQLTransientException0 = new SQLTransientException(".[76h&E- Z");
      TooLongFrameException tooLongFrameException0 = new TooLongFrameException(".[76h&E- Z", sQLTransientException0);
      DefaultExceptionEvent defaultExceptionEvent0 = new DefaultExceptionEvent(localServerChannel0, tooLongFrameException0);
      compatibleMarshallingDecoder0.exceptionCaught((ChannelHandlerContext) null, defaultExceptionEvent0);
      //  // Unstable assertion: assertEquals(97, (int)localServerChannel0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ContextBoundUnmarshallerProvider contextBoundUnmarshallerProvider0 = new ContextBoundUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(contextBoundUnmarshallerProvider0, (-1531));
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("org.jboss.netty.handler.codec.marshalling.CompatibleMarshallingDecoder", "org.jboss.netty.handler.codec.marshalling.CompatibleMarshallingDecoder", (-1531));
      DefaultExceptionEvent defaultExceptionEvent0 = new DefaultExceptionEvent(localChannel0, sQLTransientConnectionException0);
      try { 
        compatibleMarshallingDecoder0.exceptionCaught((ChannelHandlerContext) null, defaultExceptionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.FrameDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, Integer.MAX_VALUE);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      byte[] byteArray0 = new byte[8];
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // Header is incorrect (expected [-84, -19], got [0, 0])
         //
         verifyException("org.jboss.marshalling.Marshalling$StaticStreamHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, Integer.MAX_VALUE);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(1024);
      compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
      //  // Unstable assertion: assertEquals(62, (int)localChannel0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RiverMarshallerFactory riverMarshallerFactory0 = new RiverMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(riverMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, 121);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      byte[] byteArray0 = new byte[1];
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported protocol version 0
         //
         verifyException("org.jboss.marshalling.river.RiverUnmarshaller", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SerialMarshallerFactory serialMarshallerFactory0 = new SerialMarshallerFactory();
      MarshallingConfiguration marshallingConfiguration0 = new MarshallingConfiguration();
      ThreadLocalUnmarshallerProvider threadLocalUnmarshallerProvider0 = new ThreadLocalUnmarshallerProvider(serialMarshallerFactory0, marshallingConfiguration0);
      CompatibleMarshallingDecoder compatibleMarshallingDecoder0 = new CompatibleMarshallingDecoder(threadLocalUnmarshallerProvider0, Integer.MAX_VALUE);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      byte[] byteArray0 = new byte[1];
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      try { 
        compatibleMarshallingDecoder0.decodeLast((ChannelHandlerContext) null, localServerChannel0, littleEndianHeapChannelBuffer0, (VoidEnum) null);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.marshalling.Marshalling", e);
      }
  }
}
