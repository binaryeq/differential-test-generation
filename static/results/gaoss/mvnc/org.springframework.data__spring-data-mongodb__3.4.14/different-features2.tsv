org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	doGetSession	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	lambda$null$2	(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoDatabaseFactory::withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	lambda$null$2	(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoDatabaseUtils::getMongoDatabaseOrDefault(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	CONSTANT	 type: class java.lang.String; value: About to start transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::logger|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoResourceHolder::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::setResourceHolder(Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	CONSTANT	 type: class java.lang.String; value: Started transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::logger|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::options|Lcom/mongodb/TransactionOptions;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoResourceHolder::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::startTransaction(Lcom/mongodb/TransactionOptions;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	CONSTANT	 type: class java.lang.String; value: Could not start Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$3	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::getRequiredDatabaseFactory()Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$3	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/transaction/reactive/TransactionSynchronizationManager::bindResource(Ljava/lang/Object;Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	CONSTANT	 type: class java.lang.String; value: Could not commit Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	CONSTANT	 type: class java.lang.String; value: Could not abort Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$null$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::error(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/DefaultBulkOperations	computeUpdateOptions	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Z)Lcom/mongodb/client/model/UpdateOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/DefaultBulkOperations	remove	(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/BulkOperations;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/DefaultBulkOperations	replaceOne	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lorg/springframework/data/mongodb/core/BulkOperations;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	getIndexInfo	()Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$null$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	GET_FIELD	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::queryMapper|Lorg/springframework/data/mongodb/core/convert/QueryMapper;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$null$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mapping/context/MappingContext::getRequiredPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$null$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/QueryMapper::getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$null$1	()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	GET_FIELD	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::collectionName|Ljava/lang/String;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$null$1	()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::lookupPersistentEntity(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
org/springframework/data/mongodb/core/EntityOperations	convertToCreateCollectionOptions	(Lorg/springframework/data/mongodb/core/CollectionOptions;Ljava/lang/Class;)Lcom/mongodb/client/model/CreateCollectionOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/EntityOperations	lambda$convertToCreateCollectionOptions$7	(Ljava/lang/Class;Lcom/mongodb/client/model/CreateCollectionOptions;Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/EntityOperations	lambda$null$6	(Lcom/mongodb/client/model/ValidationOptions;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationOptions::validator(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/model/ValidationOptions;
org/springframework/data/mongodb/core/EntityOperations	lambda$null$6	(Lcom/mongodb/client/model/ValidationOptions;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ExecutableFindOperationSupport$DelegatingQueryCursorPreparer	prepare	(Lcom/mongodb/client/FindIterable;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ExecutableFindOperationSupport$ExecutableFindSupport	getCursorPreparer	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/CursorPreparer;)Lorg/springframework/data/mongodb/core/CursorPreparer;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	computeClientSetting	()Lcom/mongodb/MongoClientSettings;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$0	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/SslSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/SslSettings$Builder;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$16	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/ConnectionPoolSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/ConnectionPoolSettings$Builder;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$21	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/SocketSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/SocketSettings$Builder;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$5	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/ClusterSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/ClusterSettings$Builder;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ClusterSettings$Builder::localThreshold(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ClusterSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxConnectionLifeTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxConnectionLifeTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxWaitTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxWaitTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maintenanceInitialDelay(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaintenanceInitialDelay(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	com/mongodb/connection/SocketSettings$Builder::connectTimeout(ILjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/SocketSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	com/mongodb/connection/SocketSettings::getConnectTimeout(Ljava/util/concurrent/TimeUnit;)I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	com/mongodb/connection/SocketSettings$Builder::readTimeout(ILjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/SocketSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ClusterSettings::getLocalThreshold(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	com/mongodb/connection/SocketSettings::getReadTimeout(Ljava/util/concurrent/TimeUnit;)I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ServerSettings$Builder::minHeartbeatFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ServerSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ServerSettings::getMinHeartbeatFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ServerSettings$Builder::heartbeatFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ServerSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ServerSettings::getHeartbeatFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ClusterSettings$Builder::serverSelectionTimeout(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ClusterSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ClusterSettings::getServerSelectionTimeout(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maintenanceFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaintenanceFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxConnectionIdleTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxConnectionIdleTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$null$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoTemplate	convertToDocument	(Lorg/springframework/data/mongodb/core/CollectionOptions;Ljava/lang/Class;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	count	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	doAggregate	(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	exactCount	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	executeFindMultiInternal	(Lorg/springframework/data/mongodb/core/CollectionCallback;Lorg/springframework/data/mongodb/core/CursorPreparer;Lorg/springframework/data/mongodb/core/MongoTemplate$DocumentCallback;Ljava/lang/String;)Ljava/util/List;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	executeQueryInternal	(Lorg/springframework/data/mongodb/core/CollectionCallback;Lorg/springframework/data/mongodb/core/CursorPreparer;Lorg/springframework/data/mongodb/core/DocumentCallbackHandler;Ljava/lang/String;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	findAndModify	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	lambda$aggregateStream$26	(Ljava/util/List;Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lcom/mongodb/client/MongoCollection;)Lorg/springframework/data/util/CloseableIterator;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$24	(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lcom/mongodb/client/MongoCollection;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	lambda$findDistinct$10	(Lorg/bson/Document;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/QueryOperations$DistinctQueryContext;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/DistinctIterable;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$1	(Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	com/mongodb/client/FindIterable::projection(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$1	(Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	com/mongodb/client/MongoCollection::find(Lorg/bson/conversions/Bson;Ljava/lang/Class;)Lcom/mongodb/client/FindIterable;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$22	(Ljava/lang/Class;)Ljava/util/Optional;	GET_FIELD	org/springframework/data/mongodb/core/MongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$22	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$TypedOperations::getCollation()Ljava/util/Optional;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$22	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forType(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/EntityOperations$TypedOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$23	(Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lorg/bson/Document;)Ljava/lang/Object;	INVOKE_STATIC	java/util/List::add(Ljava/lang/Object;)Z
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$23	(Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lorg/bson/Document;)Ljava/lang/Object;	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback::doWith(Lorg/bson/Document;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$25	(Ljava/lang/Class;)Ljava/util/Optional;	GET_FIELD	org/springframework/data/mongodb/core/MongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$25	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$TypedOperations::getCollation()Ljava/util/Optional;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$25	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forType(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/EntityOperations$TypedOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	CONSTANT	 type: class java.lang.String; value: validator
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/bson/Document::put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	CONSTANT	 type: class java.lang.String; value: validationLevel
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationLevel::getValue()Ljava/lang/String;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	CONSTANT	 type: class java.lang.String; value: validationAction
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationAction::getValue()Ljava/lang/String;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	CONSTANT	 type: class java.lang.String; value: validator
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$null$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	mapReduce	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Ljava/util/List;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate$FindAndModifyCallback	doInCollection	(Lcom/mongodb/client/MongoCollection;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate$FindAndRemoveCallback	doInCollection	(Lcom/mongodb/client/MongoCollection;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/MongoTemplate$QueryCursorPreparer	prepare	(Lcom/mongodb/client/FindIterable;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/QueryOperations$CountContext	getCountOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/CountOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/QueryOperations$DeleteContext	getDeleteOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/DeleteOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/QueryOperations$QueryContext	applyCollation	(Ljava/lang/Class;Ljava/util/function/Consumer;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/QueryOperations$UpdateContext	getUpdateOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/UpdateOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveChangeStreamOperationSupport$ReactiveChangeStreamSupport	initOptionsBuilder	()Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveFindOperationSupport$ReactiveFindSupport	getCursorPreparer	(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/FindPublisherPreparer;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveFindOperationSupport$ReactiveFindSupport	tail	()Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	aggregateAndMap	(Lcom/mongodb/reactivestreams/client/MongoCollection;Ljava/util/List;ZLorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$ReadDocumentCallback;Ljava/lang/Class;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	createFlux	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	exactCount	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	findAndModify	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	geoNear	(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$changeStream$74	(Ljava/lang/String;Ljava/util/List;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Lcom/mongodb/client/model/changestream/FullDocument;Lcom/mongodb/reactivestreams/client/MongoDatabase;)Lcom/mongodb/reactivestreams/client/ChangeStreamPublisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$count$27	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$33	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$35	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$executeFindMultiInternal$88	(Lorg/springframework/data/mongodb/core/FindPublisherPreparer;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$ReactiveCollectionQueryCallback;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$DocumentCallback;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$executeFindOneInternal$87	(Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$DocumentCallback;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$exists$16	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$26	(Ljava/lang/Object;Ljava/lang/String;Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findDistinct$17	(Lorg/bson/Document;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/QueryOperations$DistinctQueryContext;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$mapReduce$78	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$12	(Ljava/lang/String;Ljava/lang/String;)Z	INVOKE_STATIC	java/lang/String::equals(Ljava/lang/Object;)Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$13	(Ljava/lang/String;)Ljava/lang/Boolean;	INVOKE_STATIC	java/lang/Boolean::valueOf(Z)Ljava/lang/Boolean;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/CountOptions::getMaxTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/EstimatedDocumentCountOptions::<init>()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/EstimatedDocumentCountOptions::maxTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/client/model/EstimatedDocumentCountOptions;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Boolean::booleanValue()Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doEstimatedCount(Ljava/lang/String;Lcom/mongodb/client/model/EstimatedDocumentCountOptions;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doExactCount(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::of(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$Entity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/EntityOperations$Entity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::addTargetDocument(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getSource()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::map(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Optional::orElse(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$QueryContext::getCollation(Ljava/lang/Class;)Ljava/util/Optional;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doFindAndReplace(Ljava/lang/String;Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/model/Collation;Ljava/lang/Class;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::populateIdIfNecessary(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getSource()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$38	(Ljava/lang/String;)Ljava/util/List;	INVOKE_STATIC	java/util/ArrayList::<init>()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::assertUpdateableIdIfNotSet()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::initializeVersionProperty()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::thenReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/util/function/Tuples::of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple2;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::updateWithoutId()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doUpdate(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;ZZ)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$Entity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/EntityOperations$Entity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::populateIdIfNecessary(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::saveDocument(Ljava/lang/String;Lorg/bson/Document;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$57	(Lorg/springframework/data/mongodb/core/MappedDocument;)Z	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::isIdPresent(Ljava/lang/Class;)Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$58	(Lorg/springframework/data/mongodb/core/MappedDocument;)Lorg/bson/types/ObjectId;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getId(Ljava/lang/Class;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$60	(Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::applyShardKey(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$61	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Ljava/lang/Class;Lorg/bson/Document;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::replaceOne(Lorg/bson/conversions/Bson;Ljava/lang/Object;Lcom/mongodb/client/model/ReplaceOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$61	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Ljava/lang/Class;Lorg/bson/Document;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::getReplaceOptions(Ljava/lang/Class;)Lcom/mongodb/client/model/ReplaceOptions;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$62	(Lorg/springframework/data/mongodb/core/MappedDocument;Ljava/lang/Object;)Ljava/lang/Object;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getId()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$65	(Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::applyShardKey(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$66	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/ReplaceOptions;Lorg/bson/Document;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::replaceOne(Lorg/bson/conversions/Bson;Ljava/lang/Object;Lcom/mongodb/client/model/ReplaceOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$66	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/ReplaceOptions;Lorg/bson/Document;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::from(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$70	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lcom/mongodb/client/model/DeleteOptions;Ljava/util/List;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::deleteMany(Lorg/bson/conversions/Bson;Lcom/mongodb/client/model/DeleteOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$70	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lcom/mongodb/client/model/DeleteOptions;Ljava/util/List;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getIdIn(Ljava/util/Collection;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$75	(Ljava/lang/Class;Lcom/mongodb/client/model/changestream/ChangeStreamDocument;)Lorg/springframework/data/mongodb/core/ChangeStreamEvent;	INVOKE_STATIC	org/springframework/data/mongodb/core/ChangeStreamEvent::<init>(Lcom/mongodb/client/model/changestream/ChangeStreamDocument;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$75	(Ljava/lang/Class;Lcom/mongodb/client/model/changestream/ChangeStreamDocument;)Lorg/springframework/data/mongodb/core/ChangeStreamEvent;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$77	(Lorg/springframework/data/mongodb/core/query/Collation;Lorg/springframework/data/mongodb/core/query/Collation;)V	CONSTANT	 type: class java.lang.String; value: Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$77	(Lorg/springframework/data/mongodb/core/query/Collation;Lorg/springframework/data/mongodb/core/query/Collation;)V	INVOKE_STATIC	java/lang/IllegalArgumentException::<init>(Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$null$80	(Ljava/util/List;Lcom/mongodb/client/result/DeleteResult;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	reactor/core/publisher/Flux::fromIterable(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$1	lambda$null$0	(Ljava/util/function/Consumer;Lcom/mongodb/reactivestreams/client/ClientSession;Lreactor/core/publisher/SignalType;)V	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$null$0	(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/reactivestreams/Publisher;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate$2::this$0|Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$null$0	(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::access$000(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$null$1	(Lcom/mongodb/reactivestreams/client/ClientSession;Ljava/lang/Throwable;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/ClientSession::abortTransaction()Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$null$2	(Ljava/util/function/Consumer;Lcom/mongodb/reactivestreams/client/ClientSession;Lreactor/core/publisher/SignalType;)V	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndModifyCallback	convertToFindOneAndUpdateOptions	(Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Lorg/bson/Document;Lorg/bson/Document;Ljava/util/List;)Lcom/mongodb/client/model/FindOneAndUpdateOptions;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndModifyCallback	doInCollection	(Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndRemoveCallback	doInCollection	(Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$QueryFindPublisherPreparer	prepare	(Lcom/mongodb/reactivestreams/client/FindPublisher;)Lcom/mongodb/reactivestreams/client/FindPublisher;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression	unpack	(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/aggregation/AggregationUpdate	toString	()Ljava/lang/String;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/aggregation/DocumentEnhancingOperation	toDocument	(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId	toDocument	(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/aggregation/ProjectionOperation	inheritsFields	()Z	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/GeoConverters	<clinit>	()V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	isConstructorArgument	(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Predicate;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	isIdentifier	(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Predicate;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	readAssociation	(Lorg/springframework/data/mapping/Association;Lorg/springframework/data/mapping/PersistentPropertyAccessor;Lorg/springframework/data/mongodb/core/convert/DocumentAccessor;Lorg/springframework/data/mongodb/core/convert/DbRefProxyHandler;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider	getPropertyValue	(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/Object;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/convert/ObjectPath	push	(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/convert/ObjectPath;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$null$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept()Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$null$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$null$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer::lookup(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;)Ljava/util/Optional;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	start	()V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/query/Collation	lambda$null$10	(Lorg/bson/Document;Ljava/lang/String;)V	CONSTANT	 type: class java.lang.String; value: version
org/springframework/data/mongodb/core/query/Collation	lambda$null$10	(Lorg/bson/Document;Ljava/lang/String;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationCaseFirst(Lcom/mongodb/client/model/CollationCaseFirst;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$null$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	com/mongodb/client/model/CollationCaseFirst::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationCaseFirst;
org/springframework/data/mongodb/core/query/Collation	lambda$null$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$CaseFirst::access$200(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lcom/mongodb/client/model/Collation$Builder;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationStrength(Lcom/mongodb/client/model/CollationStrength;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	com/mongodb/client/model/CollationStrength::fromInt(I)Lcom/mongodb/client/model/CollationStrength;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseFirst()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseLevel()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getLevel()I
org/springframework/data/mongodb/core/query/Collation	lambda$null$14	(Lcom/mongodb/client/model/Collation$Builder;Ljava/lang/String;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationMaxVariable(Lcom/mongodb/client/model/CollationMaxVariable;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$null$14	(Lcom/mongodb/client/model/Collation$Builder;Ljava/lang/String;)V	INVOKE_STATIC	com/mongodb/client/model/CollationMaxVariable::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationMaxVariable;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::alternate|Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::maxVariable|Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lcom/mongodb/client/model/Collation$Builder;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationAlternate(Lcom/mongodb/client/model/CollationAlternate;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	com/mongodb/client/model/CollationAlternate::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationAlternate;
org/springframework/data/mongodb/core/query/Collation	lambda$null$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$null$2	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: caseLevel
org/springframework/data/mongodb/core/query/Collation	lambda$null$2	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	CONSTANT	 type: class java.lang.String; value: caseFirst
org/springframework/data/mongodb/core/query/Collation	lambda$null$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$CaseFirst::access$200(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	CONSTANT	 type: class java.lang.String; value: strength
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lorg/bson/Document;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseFirst()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseLevel()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getLevel()I
org/springframework/data/mongodb/core/query/Collation	lambda$null$5	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: numericOrdering
org/springframework/data/mongodb/core/query/Collation	lambda$null$5	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$6	(Lorg/bson/Document;Ljava/lang/String;)V	CONSTANT	 type: class java.lang.String; value: maxVariable
org/springframework/data/mongodb/core/query/Collation	lambda$null$6	(Lorg/bson/Document;Ljava/lang/String;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	CONSTANT	 type: class java.lang.String; value: alternate
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::alternate|Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::maxVariable|Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lorg/bson/Document;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$null$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$8	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: backwards
org/springframework/data/mongodb/core/query/Collation	lambda$null$8	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$null$9	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: normalization
org/springframework/data/mongodb/core/query/Collation	lambda$null$9	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$16	(Lorg/springframework/data/mongodb/core/query/Collation;)Lcom/mongodb/client/model/Collation;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/query/Update	filterArray	(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Update;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$null$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	CONSTANT	 type: class java.lang.String; value: %s is not a valid numeric type. Expected one of %s.
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$null$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	GET_FIELD	org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject::NUMERIC_TYPES|Ljava/util/Set;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$null$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/gridfs/ReactiveGridFsResource	createDownloadStream	(Lcom/mongodb/reactivestreams/client/gridfs/GridFSDownloadPublisher;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate	createFlux	(Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate$ReactiveBucketCallback;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractMongoQuery	prepareBindingContext	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;)Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	decode	(Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	expressionEvaluator	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AggregationOperationContext::getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery::decode(Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery::getQueryMethod()Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/MongoQueryMethod::getDomainClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	reactor/util/function/Tuple2::getT1()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$null$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	reactor/util/function/Tuple2::getT2()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/CollationUtils	computeCollation	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mongodb/repository/query/MongoParameters;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)Lorg/springframework/data/mongodb/core/query/Collation;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/MongoQueryCreator	lambda$from$0	(ZLorg/springframework/data/mongodb/core/query/Criteria;Lorg/springframework/data/geo/Point;Ljava/util/Optional;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/mongodb/core/query/Criteria;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/MongoQueryMethod	lambda$null$1	()Ljava/lang/IllegalStateException;	CONSTANT	 type: class java.lang.String; value: Expected to find @Query annotation but did not. Make sure to check hasAnnotatedCollation() before.
org/springframework/data/mongodb/repository/query/MongoQueryMethod	lambda$null$1	()Ljava/lang/IllegalStateException;	INVOKE_STATIC	java/lang/IllegalStateException::<init>(Ljava/lang/String;)V
org/springframework/data/mongodb/repository/query/ReactivePartTreeMongoQuery	createQueryInternal	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Z)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$null$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$null$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AggregationUtils::extractSimpleTypeResult(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$null$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::next(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	getBindingContext	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$getBindingContext$4	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;)Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$0	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::query|Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$0	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec::decode(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$1	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::fieldSpec|Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$1	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec::decode(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	CONSTANT	 type: class java.lang.String; value: Created query %s for %s fields.
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::LOG|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::<init>(Lorg/bson/Document;Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::with(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Query::getFieldsObject()Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Query::getQueryObject()Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor::getSort()Lorg/springframework/data/domain/Sort;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	reactor/util/function/Tuple2::getT1()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$null$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	reactor/util/function/Tuple2::getT2()Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/CachingExpressionParser	parseExpression	(Ljava/lang/String;)Lorg/springframework/expression/Expression;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery	createProjection	(Lcom/querydsl/core/types/Expression;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/QuerydslMongoPredicateExecutor	applySorting	(Lorg/springframework/data/mongodb/repository/support/SpringDataMongodbQuery;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/repository/support/SpringDataMongodbQuery;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/QuerydslMongoPredicateExecutor	findAll	(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/ReactiveQuerydslMongoPredicateExecutor	applySorting	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::queryCustomizer|Ljava/util/function/Consumer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	com/querydsl/core/QueryModifiers::getLimitAsInteger()Ljava/lang/Integer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	com/querydsl/core/QueryModifiers::getOffsetAsInteger()Ljava/lang/Integer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/util/List::size()I
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/bson/Document::<init>()V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::<init>(Lorg/bson/Document;Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::limit(I)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::setSortObject(Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::skip(J)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::createProjection(Lcom/querydsl/core/types/Expression;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::createSort(Ljava/util/List;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveFilter$9	(Lcom/querydsl/core/QueryMetadata;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/QueryMetadata::getWhere()Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveFilter$9	(Lcom/querydsl/core/QueryMetadata;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::allOf([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$10	(Lcom/querydsl/core/JoinExpression;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/JoinExpression::getCondition()Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$10	(Lcom/querydsl/core/JoinExpression;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::allOf([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	CONSTANT	 type: class java.lang.String; value: $id
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::in(Lcom/querydsl/core/types/Expression;Ljava/util/Collection;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::path(Ljava/lang/Class;Lcom/querydsl/core/types/Path;Ljava/lang/String;)Lcom/querydsl/core/types/Path;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	java/util/List::isEmpty()Z
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException::<init>(Lcom/querydsl/core/types/Path;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::error(Ljava/lang/Throwable;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::next(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	GET_FIELD	com/querydsl/mongodb/MongodbOps::NO_MATCH|Lcom/querydsl/mongodb/MongodbOps;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException::source|Lcom/querydsl/core/types/Path;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::predicate(Lcom/querydsl/core/types/Operator;[Lcom/querydsl/core/types/Expression;)Lcom/querydsl/core/types/PredicateOperation;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::just(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getIds$13	(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::getJoinIds(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getIds$14	(Ljava/lang/Class;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::getJoinIds(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$15	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	CONSTANT	 type: class java.lang.String; value: _id
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$15	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::mongoOperations|Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$15	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoOperations::findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/SimpleMongoRepository	saveAll	(Ljava/lang/Iterable;)Ljava/util/List;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	deleteAll	(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	deleteAll	(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	saveAll	(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/util/BsonUtils	iterableToDelimitedString	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/String;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/util/BsonUtils	merge	([Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
