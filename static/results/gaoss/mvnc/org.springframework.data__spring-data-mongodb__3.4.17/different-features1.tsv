org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	doGetSession	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	lambda$doGetMongoDatabase$2	(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoDatabaseFactory::withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
org/springframework/data/mongodb/ReactiveMongoDatabaseUtils	lambda$doGetMongoDatabase$2	(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoDatabaseUtils::getMongoDatabaseOrDefault(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	CONSTANT	 type: class java.lang.String; value: About to start transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::logger|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoResourceHolder::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::setResourceHolder(Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$0	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	CONSTANT	 type: class java.lang.String; value: Started transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::logger|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	GET_FIELD	org/springframework/data/mongodb/ReactiveMongoTransactionManager::options|Lcom/mongodb/TransactionOptions;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoResourceHolder::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::startTransaction(Lcom/mongodb/TransactionOptions;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$1	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	CONSTANT	 type: class java.lang.String; value: Could not start Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$2	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$3	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::getRequiredDatabaseFactory()Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doBegin$3	(Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;Lorg/springframework/data/mongodb/ReactiveMongoResourceHolder;)V	INVOKE_STATIC	org/springframework/transaction/reactive/TransactionSynchronizationManager::bindResource(Ljava/lang/Object;Ljava/lang/Object;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doCommit$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	CONSTANT	 type: class java.lang.String; value: Could not commit Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doCommit$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doCommit$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doCommit$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doCommit$7	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Ljava/lang/Throwable;)Ljava/lang/Throwable;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	CONSTANT	 type: class java.lang.String; value: Could not abort Mongo transaction for session %s.
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject::getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/ReactiveMongoTransactionManager::debugString(Lcom/mongodb/reactivestreams/client/ClientSession;)Ljava/lang/String;
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/transaction/TransactionSystemException::<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org/springframework/data/mongodb/ReactiveMongoTransactionManager	lambda$doRollback$9	(Lorg/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject;Lcom/mongodb/MongoException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::error(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/SessionSynchronization	$values	()[Lorg/springframework/data/mongodb/SessionSynchronization;	GET_FIELD	org/springframework/data/mongodb/SessionSynchronization::ALWAYS|Lorg/springframework/data/mongodb/SessionSynchronization;
org/springframework/data/mongodb/SessionSynchronization	$values	()[Lorg/springframework/data/mongodb/SessionSynchronization;	GET_FIELD	org/springframework/data/mongodb/SessionSynchronization::NEVER|Lorg/springframework/data/mongodb/SessionSynchronization;
org/springframework/data/mongodb/SessionSynchronization	$values	()[Lorg/springframework/data/mongodb/SessionSynchronization;	GET_FIELD	org/springframework/data/mongodb/SessionSynchronization::ON_ACTUAL_TRANSACTION|Lorg/springframework/data/mongodb/SessionSynchronization;
org/springframework/data/mongodb/SessionSynchronization	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/SessionSynchronization::$values()[Lorg/springframework/data/mongodb/SessionSynchronization;
org/springframework/data/mongodb/core/BulkOperations$BulkMode	$values	()[Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;	GET_FIELD	org/springframework/data/mongodb/core/BulkOperations$BulkMode::ORDERED|Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;
org/springframework/data/mongodb/core/BulkOperations$BulkMode	$values	()[Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;	GET_FIELD	org/springframework/data/mongodb/core/BulkOperations$BulkMode::UNORDERED|Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;
org/springframework/data/mongodb/core/BulkOperations$BulkMode	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/BulkOperations$BulkMode::$values()[Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;
org/springframework/data/mongodb/core/ChangeStreamOptions$Resume	$values	()[Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;	GET_FIELD	org/springframework/data/mongodb/core/ChangeStreamOptions$Resume::RESUME_AFTER|Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;
org/springframework/data/mongodb/core/ChangeStreamOptions$Resume	$values	()[Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;	GET_FIELD	org/springframework/data/mongodb/core/ChangeStreamOptions$Resume::START_AFTER|Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;
org/springframework/data/mongodb/core/ChangeStreamOptions$Resume	$values	()[Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;	GET_FIELD	org/springframework/data/mongodb/core/ChangeStreamOptions$Resume::UNDEFINED|Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;
org/springframework/data/mongodb/core/ChangeStreamOptions$Resume	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/ChangeStreamOptions$Resume::$values()[Lorg/springframework/data/mongodb/core/ChangeStreamOptions$Resume;
org/springframework/data/mongodb/core/DefaultBulkOperations	computeUpdateOptions	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Z)Lcom/mongodb/client/model/UpdateOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/DefaultBulkOperations	remove	(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/BulkOperations;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/DefaultBulkOperations	replaceOne	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lorg/springframework/data/mongodb/core/BulkOperations;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	getIndexInfo	()Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$ensureIndex$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	GET_FIELD	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::queryMapper|Lorg/springframework/data/mongodb/core/convert/QueryMapper;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$ensureIndex$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mapping/context/MappingContext::getRequiredPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$ensureIndex$0	(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/QueryMapper::getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$ensureIndex$1	()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	GET_FIELD	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::collectionName|Ljava/lang/String;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations	lambda$ensureIndex$1	()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;	INVOKE_STATIC	org/springframework/data/mongodb/core/DefaultReactiveIndexOperations::lookupPersistentEntity(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
org/springframework/data/mongodb/core/DefaultWriteConcernResolver	$values	()[Lorg/springframework/data/mongodb/core/DefaultWriteConcernResolver;	GET_FIELD	org/springframework/data/mongodb/core/DefaultWriteConcernResolver::INSTANCE|Lorg/springframework/data/mongodb/core/DefaultWriteConcernResolver;
org/springframework/data/mongodb/core/DefaultWriteConcernResolver	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/DefaultWriteConcernResolver::$values()[Lorg/springframework/data/mongodb/core/DefaultWriteConcernResolver;
org/springframework/data/mongodb/core/EntityOperations	convertToCreateCollectionOptions	(Lorg/springframework/data/mongodb/core/CollectionOptions;Ljava/lang/Class;)Lcom/mongodb/client/model/CreateCollectionOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/EntityOperations	lambda$convertToCreateCollectionOptions$6	(Lcom/mongodb/client/model/ValidationOptions;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationOptions::validator(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/model/ValidationOptions;
org/springframework/data/mongodb/core/EntityOperations	lambda$convertToCreateCollectionOptions$6	(Lcom/mongodb/client/model/ValidationOptions;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/EntityOperations	lambda$convertToCreateCollectionOptions$7	(Ljava/lang/Class;Lcom/mongodb/client/model/CreateCollectionOptions;Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/EntityOperations$UntypedOperations	$values	()[Lorg/springframework/data/mongodb/core/EntityOperations$UntypedOperations;	GET_FIELD	org/springframework/data/mongodb/core/EntityOperations$UntypedOperations::INSTANCE|Lorg/springframework/data/mongodb/core/EntityOperations$UntypedOperations;
org/springframework/data/mongodb/core/EntityOperations$UntypedOperations	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$UntypedOperations::$values()[Lorg/springframework/data/mongodb/core/EntityOperations$UntypedOperations;
org/springframework/data/mongodb/core/ExecutableFindOperationSupport$DelegatingQueryCursorPreparer	prepare	(Lcom/mongodb/client/FindIterable;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ExecutableFindOperationSupport$ExecutableFindSupport	getCursorPreparer	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/CursorPreparer;)Lorg/springframework/data/mongodb/core/CursorPreparer;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::BULK|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::INSERT_LIST|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::INSERT|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::REMOVE|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::SAVE|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	$values	()[Lorg/springframework/data/mongodb/core/MongoActionOperation;	GET_FIELD	org/springframework/data/mongodb/core/MongoActionOperation::UPDATE|Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoActionOperation	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoActionOperation::$values()[Lorg/springframework/data/mongodb/core/MongoActionOperation;
org/springframework/data/mongodb/core/MongoClientFactoryBean	computeClientSetting	()Lcom/mongodb/MongoClientSettings;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$0	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/SslSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/SslSettings$Builder;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ClusterSettings$Builder::localThreshold(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ClusterSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$1	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxConnectionLifeTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$10	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxConnectionLifeTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$11	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxWaitTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$12	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxWaitTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$13	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maintenanceInitialDelay(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$14	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaintenanceInitialDelay(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$15	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$16	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/ConnectionPoolSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/ConnectionPoolSettings$Builder;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	com/mongodb/connection/SocketSettings$Builder::connectTimeout(ILjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/SocketSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$17	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	com/mongodb/connection/SocketSettings::getConnectTimeout(Ljava/util/concurrent/TimeUnit;)I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$18	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	com/mongodb/connection/SocketSettings$Builder::readTimeout(ILjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/SocketSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$19	(Lcom/mongodb/connection/SocketSettings$Builder;Ljava/lang/Integer;)V	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ClusterSettings::getLocalThreshold(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$2	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	com/mongodb/connection/SocketSettings::getReadTimeout(Ljava/util/concurrent/TimeUnit;)I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$20	(Lcom/mongodb/connection/SocketSettings;)Ljava/lang/Integer;	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$21	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/SocketSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/SocketSettings$Builder;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ServerSettings$Builder::minHeartbeatFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ServerSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$22	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ServerSettings::getMinHeartbeatFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$23	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ServerSettings$Builder::heartbeatFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ServerSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$24	(Lcom/mongodb/connection/ServerSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::intValue()I
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ServerSettings::getHeartbeatFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$25	(Lcom/mongodb/connection/ServerSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ClusterSettings$Builder::serverSelectionTimeout(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ClusterSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$3	(Lcom/mongodb/connection/ClusterSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ClusterSettings::getServerSelectionTimeout(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$4	(Lcom/mongodb/connection/ClusterSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$5	(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/ClusterSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/ClusterSettings$Builder;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maintenanceFrequency(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$6	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Long;)V	INVOKE_STATIC	java/lang/Long::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaintenanceFrequency(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$7	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Long;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings$Builder::maxConnectionIdleTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/connection/ConnectionPoolSettings$Builder;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$8	(Lcom/mongodb/connection/ConnectionPoolSettings$Builder;Ljava/lang/Number;)V	INVOKE_STATIC	java/lang/Number::longValue()J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	com/mongodb/connection/ConnectionPoolSettings::getMaxConnectionIdleTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/MongoClientFactoryBean	lambda$computeClientSetting$9	(Lcom/mongodb/connection/ConnectionPoolSettings;)Ljava/lang/Number;	INVOKE_STATIC	java/lang/Long::valueOf(J)Ljava/lang/Long;
org/springframework/data/mongodb/core/MongoTemplate	convertToDocument	(Lorg/springframework/data/mongodb/core/CollectionOptions;Ljava/lang/Class;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	count	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	doAggregate	(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	exactCount	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	executeFindMultiInternal	(Lorg/springframework/data/mongodb/core/CollectionCallback;Lorg/springframework/data/mongodb/core/CursorPreparer;Lorg/springframework/data/mongodb/core/MongoTemplate$DocumentCallback;Ljava/lang/String;)Ljava/util/List;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	executeQueryInternal	(Lorg/springframework/data/mongodb/core/CollectionCallback;Lorg/springframework/data/mongodb/core/CursorPreparer;Lorg/springframework/data/mongodb/core/DocumentCallbackHandler;Ljava/lang/String;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	findAndModify	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$aggregateStream$25	(Ljava/lang/Class;)Ljava/util/Optional;	GET_FIELD	org/springframework/data/mongodb/core/MongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$aggregateStream$25	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$TypedOperations::getCollation()Ljava/util/Optional;
org/springframework/data/mongodb/core/MongoTemplate	lambda$aggregateStream$25	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forType(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/EntityOperations$TypedOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$aggregateStream$26	(Ljava/util/List;Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lcom/mongodb/client/MongoCollection;)Lorg/springframework/data/util/CloseableIterator;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	CONSTANT	 type: class java.lang.String; value: validator
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/bson/Document::put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$29	(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	CONSTANT	 type: class java.lang.String; value: validationLevel
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationLevel::getValue()Ljava/lang/String;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$36	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationLevel;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	CONSTANT	 type: class java.lang.String; value: validationAction
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	INVOKE_STATIC	com/mongodb/client/model/ValidationAction::getValue()Ljava/lang/String;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$37	(Lorg/bson/Document;Lcom/mongodb/client/model/ValidationAction;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	CONSTANT	 type: class java.lang.String; value: validator
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$convertToDocument$38	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/validation/Validator;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate::getMappedValidator(Lorg/springframework/data/mongodb/core/validation/Validator;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$22	(Ljava/lang/Class;)Ljava/util/Optional;	GET_FIELD	org/springframework/data/mongodb/core/MongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$22	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$TypedOperations::getCollation()Ljava/util/Optional;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$22	(Ljava/lang/Class;)Ljava/util/Optional;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forType(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/EntityOperations$TypedOperations;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$23	(Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lorg/bson/Document;)Ljava/lang/Object;	INVOKE_STATIC	java/util/List::add(Ljava/lang/Object;)Z
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$23	(Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lorg/bson/Document;)Ljava/lang/Object;	INVOKE_STATIC	org/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback::doWith(Lorg/bson/Document;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doAggregate$24	(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Ljava/util/List;Lorg/springframework/data/mongodb/core/MongoTemplate$ReadDocumentCallback;Lcom/mongodb/client/MongoCollection;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doStream$1	(Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	com/mongodb/client/FindIterable::projection(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
org/springframework/data/mongodb/core/MongoTemplate	lambda$doStream$1	(Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	com/mongodb/client/MongoCollection::find(Lorg/bson/conversions/Bson;Ljava/lang/Class;)Lcom/mongodb/client/FindIterable;
org/springframework/data/mongodb/core/MongoTemplate	lambda$findDistinct$10	(Lorg/bson/Document;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/QueryOperations$DistinctQueryContext;Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/client/DistinctIterable;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate	mapReduce	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Ljava/util/List;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate$FindAndModifyCallback	doInCollection	(Lcom/mongodb/client/MongoCollection;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate$FindAndRemoveCallback	doInCollection	(Lcom/mongodb/client/MongoCollection;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/MongoTemplate$QueryCursorPreparer	prepare	(Lcom/mongodb/client/FindIterable;)Lcom/mongodb/client/FindIterable;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/QueryOperations$CountContext	getCountOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/CountOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/QueryOperations$DeleteContext	getDeleteOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/DeleteOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/QueryOperations$QueryContext	applyCollation	(Ljava/lang/Class;Ljava/util/function/Consumer;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/QueryOperations$UpdateContext	getUpdateOptions	(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/UpdateOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveChangeStreamOperationSupport$ReactiveChangeStreamSupport	initOptionsBuilder	()Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveFindOperationSupport$ReactiveFindSupport	getCursorPreparer	(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/FindPublisherPreparer;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveFindOperationSupport$ReactiveFindSupport	tail	()Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	aggregateAndMap	(Lcom/mongodb/reactivestreams/client/MongoCollection;Ljava/util/List;ZLorg/springframework/data/mongodb/core/aggregation/AggregationOptions;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$ReadDocumentCallback;Ljava/lang/Class;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	createFlux	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	exactCount	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	findAndModify	(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	geoNear	(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$changeStream$74	(Ljava/lang/String;Ljava/util/List;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Lcom/mongodb/client/model/changestream/FullDocument;Lcom/mongodb/reactivestreams/client/MongoDatabase;)Lcom/mongodb/reactivestreams/client/ChangeStreamPublisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$changeStream$75	(Ljava/lang/Class;Lcom/mongodb/client/model/changestream/ChangeStreamDocument;)Lorg/springframework/data/mongodb/core/ChangeStreamEvent;	INVOKE_STATIC	org/springframework/data/mongodb/core/ChangeStreamEvent::<init>(Lcom/mongodb/client/model/changestream/ChangeStreamDocument;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$changeStream$75	(Ljava/lang/Class;Lcom/mongodb/client/model/changestream/ChangeStreamDocument;)Lorg/springframework/data/mongodb/core/ChangeStreamEvent;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$collectionExists$12	(Ljava/lang/String;Ljava/lang/String;)Z	INVOKE_STATIC	java/lang/String::equals(Ljava/lang/Object;)Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$collectionExists$13	(Ljava/lang/String;)Ljava/lang/Boolean;	INVOKE_STATIC	java/lang/Boolean::valueOf(Z)Ljava/lang/Boolean;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$count$27	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doFindAndDelete$80	(Ljava/util/List;Lcom/mongodb/client/result/DeleteResult;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	reactor/core/publisher/Flux::fromIterable(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$33	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$35	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::populateIdIfNecessary(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getSource()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsert$36	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertAll$38	(Ljava/lang/String;)Ljava/util/List;	INVOKE_STATIC	java/util/ArrayList::<init>()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::assertUpdateableIdIfNotSet()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::initializeVersionProperty()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::thenReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doInsertBatch$41	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/util/function/Tuples::of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple2;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doRemove$70	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lcom/mongodb/client/model/DeleteOptions;Ljava/util/List;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::deleteMany(Lorg/bson/conversions/Bson;Lcom/mongodb/client/model/DeleteOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doRemove$70	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lcom/mongodb/client/model/DeleteOptions;Ljava/util/List;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getIdIn(Ljava/util/Collection;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::populateIdIfNecessary(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$50	(Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Lorg/bson/Document;Ljava/lang/String;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::saveDocument(Ljava/lang/String;Lorg/bson/Document;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$51	(Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/String;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/mongodb/core/EntityOperations$AdaptibleEntity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverter::getConversionService()Lorg/springframework/core/convert/ConversionService;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSave$52	(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$46	(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;Lcom/mongodb/client/result/UpdateResult;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Object::getClass()Ljava/lang/Class;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::updateWithoutId()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doUpdate(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;ZZ)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$47	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/MappedDocument;Lorg/bson/Document;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$Entity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/EntityOperations$Entity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doSaveVersioned$48	(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doUpdate$65	(Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::applyShardKey(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doUpdate$66	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/ReplaceOptions;Lorg/bson/Document;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::replaceOne(Lorg/bson/conversions/Bson;Ljava/lang/Object;Lcom/mongodb/client/model/ReplaceOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$doUpdate$66	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/ReplaceOptions;Lorg/bson/Document;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::from(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$executeFindMultiInternal$88	(Lorg/springframework/data/mongodb/core/FindPublisherPreparer;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$ReactiveCollectionQueryCallback;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$DocumentCallback;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$executeFindOneInternal$87	(Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$DocumentCallback;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$exists$16	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$22	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::of(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate::operations|Lorg/springframework/data/mongodb/core/EntityOperations;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations$Entity::toMappedDocument(Lorg/springframework/data/mongodb/core/convert/MongoWriter;)Lorg/springframework/data/mongodb/core/MappedDocument;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/EntityOperations::forEntity(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/EntityOperations$Entity;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getDocument()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::addTargetDocument(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getSource()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$23	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::map(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeCallAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::maybeEmitEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$24	(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;Ljava/lang/Object;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent::<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::apply(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Ljava/util/function/Function;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Optional::orElse(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$QueryContext::getCollation(Ljava/lang/Class;)Ljava/util/Optional;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getCollection()Ljava/lang/String;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel::getTarget()Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doFindAndReplace(Ljava/lang/String;Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lcom/mongodb/client/model/Collation;Ljava/lang/Class;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$25	(Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate$PersistableEntityModel;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findAndReplace$26	(Ljava/lang/Object;Ljava/lang/String;Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$QueryContext;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Lorg/springframework/data/projection/EntityProjection;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$findDistinct$17	(Lorg/bson/Document;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/QueryOperations$DistinctQueryContext;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$insertDocumentList$57	(Lorg/springframework/data/mongodb/core/MappedDocument;)Z	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::isIdPresent(Ljava/lang/Class;)Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$insertDocumentList$58	(Lorg/springframework/data/mongodb/core/MappedDocument;)Lorg/bson/types/ObjectId;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getId(Ljava/lang/Class;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$mapReduce$77	(Lorg/springframework/data/mongodb/core/query/Collation;Lorg/springframework/data/mongodb/core/query/Collation;)V	CONSTANT	 type: class java.lang.String; value: Both Query and MapReduceOptions define a collation. Please provide the collation only via one of the two.
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$mapReduce$77	(Lorg/springframework/data/mongodb/core/query/Collation;Lorg/springframework/data/mongodb/core/query/Collation;)V	INVOKE_STATIC	java/lang/IllegalArgumentException::<init>(Ljava/lang/String;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$mapReduce$78	(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;Ljava/lang/String;Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$saveDocument$60	(Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::applyShardKey(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/bson/Document;Lorg/bson/Document;)Lorg/bson/Document;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$saveDocument$61	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Ljava/lang/Class;Lorg/bson/Document;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/MongoCollection::replaceOne(Lorg/bson/conversions/Bson;Ljava/lang/Object;Lcom/mongodb/client/model/ReplaceOptions;)Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$saveDocument$61	(Lcom/mongodb/reactivestreams/client/MongoCollection;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Ljava/lang/Class;Lorg/bson/Document;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/QueryOperations$UpdateContext::getReplaceOptions(Ljava/lang/Class;)Lcom/mongodb/client/model/ReplaceOptions;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$saveDocument$62	(Lorg/springframework/data/mongodb/core/MappedDocument;Ljava/lang/Object;)Ljava/lang/Object;	INVOKE_STATIC	org/springframework/data/mongodb/core/MappedDocument::getId()Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	GET_FIELD	java/util/concurrent/TimeUnit::MILLISECONDS|Ljava/util/concurrent/TimeUnit;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/CountOptions::getMaxTime(Ljava/util/concurrent/TimeUnit;)J
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/EstimatedDocumentCountOptions::<init>()V
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/mongodb/client/model/EstimatedDocumentCountOptions::maxTime(JLjava/util/concurrent/TimeUnit;)Lcom/mongodb/client/model/EstimatedDocumentCountOptions;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/lang/Boolean::booleanValue()Z
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doEstimatedCount(Ljava/lang/String;Lcom/mongodb/client/model/EstimatedDocumentCountOptions;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate	lambda$useEstimatedCount$2	(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;Ljava/lang/Boolean;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::doExactCount(Ljava/lang/String;Lorg/bson/Document;Lcom/mongodb/client/model/CountOptions;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$1	lambda$execute$0	(Ljava/util/function/Consumer;Lcom/mongodb/reactivestreams/client/ClientSession;Lreactor/core/publisher/SignalType;)V	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$execute$0	(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/reactivestreams/Publisher;	GET_FIELD	org/springframework/data/mongodb/core/ReactiveMongoTemplate$2::this$0|Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$execute$0	(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoTemplate::access$000(Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Lcom/mongodb/reactivestreams/client/ClientSession;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$execute$1	(Lcom/mongodb/reactivestreams/client/ClientSession;Ljava/lang/Throwable;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	com/mongodb/reactivestreams/client/ClientSession::abortTransaction()Lorg/reactivestreams/Publisher;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$2	lambda$execute$2	(Ljava/util/function/Consumer;Lcom/mongodb/reactivestreams/client/ClientSession;Lreactor/core/publisher/SignalType;)V	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndModifyCallback	convertToFindOneAndUpdateOptions	(Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Lorg/bson/Document;Lorg/bson/Document;Ljava/util/List;)Lcom/mongodb/client/model/FindOneAndUpdateOptions;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndModifyCallback	doInCollection	(Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$FindAndRemoveCallback	doInCollection	(Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/ReactiveMongoTemplate$QueryFindPublisherPreparer	prepare	(Lcom/mongodb/reactivestreams/client/FindPublisher;)Lcom/mongodb/reactivestreams/client/FindPublisher;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/WriteResultChecking	$values	()[Lorg/springframework/data/mongodb/core/WriteResultChecking;	GET_FIELD	org/springframework/data/mongodb/core/WriteResultChecking::EXCEPTION|Lorg/springframework/data/mongodb/core/WriteResultChecking;
org/springframework/data/mongodb/core/WriteResultChecking	$values	()[Lorg/springframework/data/mongodb/core/WriteResultChecking;	GET_FIELD	org/springframework/data/mongodb/core/WriteResultChecking::NONE|Lorg/springframework/data/mongodb/core/WriteResultChecking;
org/springframework/data/mongodb/core/WriteResultChecking	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/WriteResultChecking::$values()[Lorg/springframework/data/mongodb/core/WriteResultChecking;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression	unpack	(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand::EXPAND_VALUES|Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand::KEEP_SOURCE|Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand::$values()[Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;
org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable	$values	()[Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable::CURRENT|Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;
org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable	$values	()[Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable::REMOVE|Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;
org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable	$values	()[Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable::ROOT|Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;
org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable::$values()[Lorg/springframework/data/mongodb/core/aggregation/Aggregation$SystemVariable;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::ADD|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::CMP|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::EQ|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::GTE|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::GT|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::LTE|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::LT|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::MULTIPLY|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::NE|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::SIZE|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::SUBTRACT|Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions::$values()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping::NONE|Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping::RELAXED|Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping::STRICT|Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping::$values()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions::READ|Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions	$values	()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions::SKIP|Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions;
org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions::$values()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$ResultOptions;
org/springframework/data/mongodb/core/aggregation/AggregationUpdate	toString	()Ljava/lang/String;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit::DEGREES|Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;
org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit::RADIANS|Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;
org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit::$values()[Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;
org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable::THIS|Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;
org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable::VALUE|Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;
org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable::$values()[Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E12|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E192|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E24|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E48|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E6|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::E96|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::POWERSOF2|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::R10|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::R20|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::R40|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::R5|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::R80|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::SERIES_1_2_5|Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities::$values()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::ADDTOSET|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::AVG|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::FIRST|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::LAST|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::MAX|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::MIN|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::PUSH|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	$values	()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::SUM|Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators::$values()[Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Accumulators;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::DAY|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::HOUR|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::MILLISECOND|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::MINUTE|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::MONTH|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::QUARTER|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::SECOND|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::WEEK|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::YEAR|Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits::$values()[Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnits;
org/springframework/data/mongodb/core/aggregation/DocumentEnhancingOperation	toDocument	(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::ADD_TO_SET|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::AVG|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::FIRST|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::LAST|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::MAX|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::MIN|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::PUSH|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::STD_DEV_POP|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::STD_DEV_SAMP|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	$values	()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::SUM|Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps::$values()[Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOps;
org/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId	toDocument	(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode	$values	()[Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode::INSERT|Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode	$values	()[Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode::REPLACE_COLLECTION|Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode	$values	()[Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode::REPLACE|Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode::$values()[Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
org/springframework/data/mongodb/core/aggregation/ProjectionOperation	inheritsFields	()Z	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::ACCUMULATE_ARGS|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::ACCUMULATE|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::FINALIZE|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::INIT_ARGS|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::INIT|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::LANG|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::MERGE|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields::$values()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields::ARGS|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields::BODY|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields	$values	()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields::LANG|Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;
org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields::$values()[Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function$Fields;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::DAY|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::DEFAULT|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::HOUR|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::MILLISECOND|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::MINUTE|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::MONTH|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::QUARTER|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::SECOND|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::WEEK|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	$values	()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;	GET_FIELD	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::YEAR|Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits::$values()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
org/springframework/data/mongodb/core/convert/GeoConverters	<clinit>	()V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$BoxToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$CircleToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToBoxConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToCircleConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonGeometryCollectionConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonLineStringConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiLineStringConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonMultiPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToGeoJsonPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPointConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToPolygonConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DocumentToSphereConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPointToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonPolygonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoJsonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PointToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter;
org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$SphereToDocumentConverter;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	isConstructorArgument	(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Predicate;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	isIdentifier	(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Predicate;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/MappingMongoConverter	readAssociation	(Lorg/springframework/data/mapping/Association;Lorg/springframework/data/mapping/PersistentPropertyAccessor;Lorg/springframework/data/mongodb/core/convert/DocumentAccessor;Lorg/springframework/data/mongodb/core/convert/DbRefProxyHandler;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider	getPropertyValue	(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/Object;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider	$values	()[Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider;	GET_FIELD	org/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider;
org/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider::$values()[Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$NoOpParameterValueProvider;
org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToDecimal128Converter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BinaryToByteArrayConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BsonTimestampToInstantConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$Decimal128ToBigDecimalConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory;
org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory;
org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter;
org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$CustomToStringConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalDateTimeConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter	$values	()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter;	GET_FIELD	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter::INSTANCE|Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter;
org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter::$values()[Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter$DateToUtcLocalTimeConverter;
org/springframework/data/mongodb/core/convert/NoOpDbRefResolver	$values	()[Lorg/springframework/data/mongodb/core/convert/NoOpDbRefResolver;	GET_FIELD	org/springframework/data/mongodb/core/convert/NoOpDbRefResolver::INSTANCE|Lorg/springframework/data/mongodb/core/convert/NoOpDbRefResolver;
org/springframework/data/mongodb/core/convert/NoOpDbRefResolver	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/NoOpDbRefResolver::$values()[Lorg/springframework/data/mongodb/core/convert/NoOpDbRefResolver;
org/springframework/data/mongodb/core/convert/ObjectPath	push	(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/convert/ObjectPath;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping	$values	()[Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;	GET_FIELD	org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping::FORCE|Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;
org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping	$values	()[Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;	GET_FIELD	org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping::IGNORE|Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;
org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping	$values	()[Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;	GET_FIELD	org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping::WHEN_PRESENT|Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;
org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping::$values()[Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetaMapping;
org/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference	$values	()[Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference;	GET_FIELD	org/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference::INSTANCE|Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference;
org/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference::$values()[Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$ReferenceEmulatingDocumentReference;
org/springframework/data/mongodb/core/index/DurationStyle	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle::ISO8601|Lorg/springframework/data/mongodb/core/index/DurationStyle;
org/springframework/data/mongodb/core/index/DurationStyle	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle::SIMPLE|Lorg/springframework/data/mongodb/core/index/DurationStyle;
org/springframework/data/mongodb/core/index/DurationStyle	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/DurationStyle::$values()[Lorg/springframework/data/mongodb/core/index/DurationStyle;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle$Unit::DAYS|Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle$Unit::HOURS|Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle$Unit::MILLIS|Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle$Unit::MINUTES|Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	$values	()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;	GET_FIELD	org/springframework/data/mongodb/core/index/DurationStyle$Unit::SECONDS|Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/DurationStyle$Unit	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/DurationStyle$Unit::$values()[Lorg/springframework/data/mongodb/core/index/DurationStyle$Unit;
org/springframework/data/mongodb/core/index/GeoSpatialIndexType	$values	()[Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;	GET_FIELD	org/springframework/data/mongodb/core/index/GeoSpatialIndexType::GEO_2DSPHERE|Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
org/springframework/data/mongodb/core/index/GeoSpatialIndexType	$values	()[Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;	GET_FIELD	org/springframework/data/mongodb/core/index/GeoSpatialIndexType::GEO_2D|Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
org/springframework/data/mongodb/core/index/GeoSpatialIndexType	$values	()[Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;	GET_FIELD	org/springframework/data/mongodb/core/index/GeoSpatialIndexType::GEO_HAYSTACK|Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
org/springframework/data/mongodb/core/index/GeoSpatialIndexType	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/GeoSpatialIndexType::$values()[Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
org/springframework/data/mongodb/core/index/Index$Duplicates	$values	()[Lorg/springframework/data/mongodb/core/index/Index$Duplicates;	GET_FIELD	org/springframework/data/mongodb/core/index/Index$Duplicates::RETAIN|Lorg/springframework/data/mongodb/core/index/Index$Duplicates;
org/springframework/data/mongodb/core/index/Index$Duplicates	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/Index$Duplicates::$values()[Lorg/springframework/data/mongodb/core/index/Index$Duplicates;
org/springframework/data/mongodb/core/index/IndexDirection	$values	()[Lorg/springframework/data/mongodb/core/index/IndexDirection;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexDirection::ASCENDING|Lorg/springframework/data/mongodb/core/index/IndexDirection;
org/springframework/data/mongodb/core/index/IndexDirection	$values	()[Lorg/springframework/data/mongodb/core/index/IndexDirection;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexDirection::DESCENDING|Lorg/springframework/data/mongodb/core/index/IndexDirection;
org/springframework/data/mongodb/core/index/IndexDirection	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/IndexDirection::$values()[Lorg/springframework/data/mongodb/core/index/IndexDirection;
org/springframework/data/mongodb/core/index/IndexField$Type	$values	()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexField$Type::DEFAULT|Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/IndexField$Type	$values	()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexField$Type::GEO|Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/IndexField$Type	$values	()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexField$Type::HASH|Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/IndexField$Type	$values	()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexField$Type::TEXT|Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/IndexField$Type	$values	()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;	GET_FIELD	org/springframework/data/mongodb/core/index/IndexField$Type::WILDCARD|Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/IndexField$Type	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/IndexField$Type::$values()[Lorg/springframework/data/mongodb/core/index/IndexField$Type;
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy	$values	()[Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy;	GET_FIELD	org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy::DEFAULT|Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy;
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy	$values	()[Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy;	GET_FIELD	org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy::FORCE|Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy;
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy::$values()[Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$TextIndexIncludeOptions$IncludeStrategy;
org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator	$values	()[Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator;	GET_FIELD	org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator::INSTANCE|Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator;
org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator::$values()[Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$MongoPersistentPropertyComparator;
org/springframework/data/mongodb/core/mapping/Field$Write	$values	()[Lorg/springframework/data/mongodb/core/mapping/Field$Write;	GET_FIELD	org/springframework/data/mongodb/core/mapping/Field$Write::ALWAYS|Lorg/springframework/data/mongodb/core/mapping/Field$Write;
org/springframework/data/mongodb/core/mapping/Field$Write	$values	()[Lorg/springframework/data/mongodb/core/mapping/Field$Write;	GET_FIELD	org/springframework/data/mongodb/core/mapping/Field$Write::NON_NULL|Lorg/springframework/data/mongodb/core/mapping/Field$Write;
org/springframework/data/mongodb/core/mapping/Field$Write	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/Field$Write::$values()[Lorg/springframework/data/mongodb/core/mapping/Field$Write;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::ARRAY|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::BINARY|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::BOOLEAN|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::DATE_TIME|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::DECIMAL128|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::DOUBLE|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::IMPLICIT|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::INT32|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::INT64|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::OBJECT_ID|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::PATTERN|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::SCRIPT|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::STRING|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	$values	()[Lorg/springframework/data/mongodb/core/mapping/FieldType;	GET_FIELD	org/springframework/data/mongodb/core/mapping/FieldType::TIMESTAMP|Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/FieldType	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/FieldType::$values()[Lorg/springframework/data/mongodb/core/mapping/FieldType;
org/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter	$values	()[Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter;	GET_FIELD	org/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter::INSTANCE|Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter;
org/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter::$values()[Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter;
org/springframework/data/mongodb/core/mapping/ShardingStrategy	$values	()[Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;	GET_FIELD	org/springframework/data/mongodb/core/mapping/ShardingStrategy::HASH|Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;
org/springframework/data/mongodb/core/mapping/ShardingStrategy	$values	()[Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;	GET_FIELD	org/springframework/data/mongodb/core/mapping/ShardingStrategy::RANGE|Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;
org/springframework/data/mongodb/core/mapping/ShardingStrategy	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/ShardingStrategy::$values()[Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;
org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty	$values	()[Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;	GET_FIELD	org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty::USE_EMPTY|Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;
org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty	$values	()[Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;	GET_FIELD	org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty::USE_NULL|Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;
org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty::$values()[Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$register$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept()Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$register$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	lambda$register$2	(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Throwable;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer::lookup(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;)Ljava/util/Optional;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer	start	()V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/messaging/Task$State	$values	()[Lorg/springframework/data/mongodb/core/messaging/Task$State;	GET_FIELD	org/springframework/data/mongodb/core/messaging/Task$State::CANCELLED|Lorg/springframework/data/mongodb/core/messaging/Task$State;
org/springframework/data/mongodb/core/messaging/Task$State	$values	()[Lorg/springframework/data/mongodb/core/messaging/Task$State;	GET_FIELD	org/springframework/data/mongodb/core/messaging/Task$State::CREATED|Lorg/springframework/data/mongodb/core/messaging/Task$State;
org/springframework/data/mongodb/core/messaging/Task$State	$values	()[Lorg/springframework/data/mongodb/core/messaging/Task$State;	GET_FIELD	org/springframework/data/mongodb/core/messaging/Task$State::RUNNING|Lorg/springframework/data/mongodb/core/messaging/Task$State;
org/springframework/data/mongodb/core/messaging/Task$State	$values	()[Lorg/springframework/data/mongodb/core/messaging/Task$State;	GET_FIELD	org/springframework/data/mongodb/core/messaging/Task$State::STARTING|Lorg/springframework/data/mongodb/core/messaging/Task$State;
org/springframework/data/mongodb/core/messaging/Task$State	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/messaging/Task$State::$values()[Lorg/springframework/data/mongodb/core/messaging/Task$State;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationCaseFirst(Lcom/mongodb/client/model/CollationCaseFirst;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	com/mongodb/client/model/CollationCaseFirst::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationCaseFirst;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$12	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$CaseFirst::access$200(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lcom/mongodb/client/model/Collation$Builder;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationStrength(Lcom/mongodb/client/model/CollationStrength;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	com/mongodb/client/model/CollationStrength::fromInt(I)Lcom/mongodb/client/model/CollationStrength;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseFirst()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseLevel()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$13	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getLevel()I
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$14	(Lcom/mongodb/client/model/Collation$Builder;Ljava/lang/String;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationMaxVariable(Lcom/mongodb/client/model/CollationMaxVariable;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$14	(Lcom/mongodb/client/model/Collation$Builder;Ljava/lang/String;)V	INVOKE_STATIC	com/mongodb/client/model/CollationMaxVariable::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationMaxVariable;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::alternate|Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::maxVariable|Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lcom/mongodb/client/model/Collation$Builder;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	com/mongodb/client/model/Collation$Builder::collationAlternate(Lcom/mongodb/client/model/CollationAlternate;)Lcom/mongodb/client/model/Collation$Builder;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	com/mongodb/client/model/CollationAlternate::fromString(Ljava/lang/String;)Lcom/mongodb/client/model/CollationAlternate;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$15	(Lcom/mongodb/client/model/Collation$Builder;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoCollationConverter$16	(Lorg/springframework/data/mongodb/core/query/Collation;)Lcom/mongodb/client/model/Collation;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$10	(Lorg/bson/Document;Ljava/lang/String;)V	CONSTANT	 type: class java.lang.String; value: version
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$10	(Lorg/bson/Document;Ljava/lang/String;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$2	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: caseLevel
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$2	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	CONSTANT	 type: class java.lang.String; value: caseFirst
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$3	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$CaseFirst::access$200(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	CONSTANT	 type: class java.lang.String; value: strength
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lorg/bson/Document;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/lang/Integer::valueOf(I)Ljava/lang/Integer;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseFirst()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getCaseLevel()Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$4	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevel::getLevel()I
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$5	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: numericOrdering
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$5	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$6	(Lorg/bson/Document;Ljava/lang/String;)V	CONSTANT	 type: class java.lang.String; value: maxVariable
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$6	(Lorg/bson/Document;Ljava/lang/String;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	CONSTANT	 type: class java.lang.String; value: alternate
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::alternate|Ljava/lang/String;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$Alternate::maxVariable|Ljava/util/Optional;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_DYNAMIC	[java/lang/invoke/LambdaMetafactory::metafactory(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;]::accept(Lorg/bson/Document;)Ljava/util/function/Consumer;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	java/util/Optional::ifPresent(Ljava/util/function/Consumer;)V
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$7	(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$8	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: backwards
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$8	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$9	(Lorg/bson/Document;Ljava/lang/Boolean;)V	CONSTANT	 type: class java.lang.String; value: normalization
org/springframework/data/mongodb/core/query/Collation	lambda$toMongoDocumentConverter$9	(Lorg/bson/Document;Ljava/lang/Boolean;)V	INVOKE_STATIC	org/bson/Document::append(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
org/springframework/data/mongodb/core/query/Collation$ComparisonLevels	$values	()[Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevels;	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$ComparisonLevels::IDENTICAL|Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevels;
org/springframework/data/mongodb/core/query/Collation$ComparisonLevels	$values	()[Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevels;	GET_FIELD	org/springframework/data/mongodb/core/query/Collation$ComparisonLevels::QUATERNARY|Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevels;
org/springframework/data/mongodb/core/query/Collation$ComparisonLevels	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Collation$ComparisonLevels::$values()[Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevels;
org/springframework/data/mongodb/core/query/Meta$CursorOption	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$CursorOption::EXHAUST|Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$CursorOption	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$CursorOption::NO_TIMEOUT|Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$CursorOption	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$CursorOption::PARTIAL|Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$CursorOption	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$CursorOption::SECONDARY_READS|Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$CursorOption	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$CursorOption::SLAVE_OK|Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$CursorOption	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Meta$CursorOption::$values()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
org/springframework/data/mongodb/core/query/Meta$MetaKey	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$MetaKey::COMMENT|Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;
org/springframework/data/mongodb/core/query/Meta$MetaKey	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$MetaKey::MAX_SCAN|Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;
org/springframework/data/mongodb/core/query/Meta$MetaKey	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$MetaKey::MAX_TIME_MS|Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;
org/springframework/data/mongodb/core/query/Meta$MetaKey	$values	()[Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;	GET_FIELD	org/springframework/data/mongodb/core/query/Meta$MetaKey::SNAPSHOT|Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;
org/springframework/data/mongodb/core/query/Meta$MetaKey	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Meta$MetaKey::$values()[Lorg/springframework/data/mongodb/core/query/Meta$MetaKey;
org/springframework/data/mongodb/core/query/MongoRegexCreator	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator::INSTANCE|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator;
org/springframework/data/mongodb/core/query/MongoRegexCreator	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/MongoRegexCreator::$values()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::CONTAINING|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::DEFAULT|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::ENDING_WITH|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::EXACT|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::LIKE|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::REGEX|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	$values	()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;	GET_FIELD	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::STARTING_WITH|Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode::$values()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
org/springframework/data/mongodb/core/query/Term$Type	$values	()[Lorg/springframework/data/mongodb/core/query/Term$Type;	GET_FIELD	org/springframework/data/mongodb/core/query/Term$Type::PHRASE|Lorg/springframework/data/mongodb/core/query/Term$Type;
org/springframework/data/mongodb/core/query/Term$Type	$values	()[Lorg/springframework/data/mongodb/core/query/Term$Type;	GET_FIELD	org/springframework/data/mongodb/core/query/Term$Type::WORD|Lorg/springframework/data/mongodb/core/query/Term$Type;
org/springframework/data/mongodb/core/query/Term$Type	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Term$Type::$values()[Lorg/springframework/data/mongodb/core/query/Term$Type;
org/springframework/data/mongodb/core/query/Update	filterArray	(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Update;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator	$values	()[Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;	GET_FIELD	org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator::AND|Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;
org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator	$values	()[Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;	GET_FIELD	org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator::OR|Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;
org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator	$values	()[Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;	GET_FIELD	org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator::XOR|Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;
org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator::$values()[Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder$BitwiseOperator;
org/springframework/data/mongodb/core/query/Update$Position	$values	()[Lorg/springframework/data/mongodb/core/query/Update$Position;	GET_FIELD	org/springframework/data/mongodb/core/query/Update$Position::FIRST|Lorg/springframework/data/mongodb/core/query/Update$Position;
org/springframework/data/mongodb/core/query/Update$Position	$values	()[Lorg/springframework/data/mongodb/core/query/Update$Position;	GET_FIELD	org/springframework/data/mongodb/core/query/Update$Position::LAST|Lorg/springframework/data/mongodb/core/query/Update$Position;
org/springframework/data/mongodb/core/query/Update$Position	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Update$Position::$values()[Lorg/springframework/data/mongodb/core/query/Update$Position;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$validateTypes$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	CONSTANT	 type: class java.lang.String; value: %s is not a valid numeric type. Expected one of %s.
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$validateTypes$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	GET_FIELD	org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject::NUMERIC_TYPES|Ljava/util/Set;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject	lambda$validateTypes$2	(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Ljava/lang/String;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType	$values	()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;	GET_FIELD	org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType::ARRAY|Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType	$values	()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;	GET_FIELD	org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType::EMPTY_DOCUMENT|Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType	$values	()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;	GET_FIELD	org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType::MAP|Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType	$values	()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;	GET_FIELD	org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType::SINGLE|Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType::$values()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
org/springframework/data/mongodb/core/timeseries/Granularity	$values	()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;	GET_FIELD	org/springframework/data/mongodb/core/timeseries/Granularity::DEFAULT|Lorg/springframework/data/mongodb/core/timeseries/Granularity;
org/springframework/data/mongodb/core/timeseries/Granularity	$values	()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;	GET_FIELD	org/springframework/data/mongodb/core/timeseries/Granularity::HOURS|Lorg/springframework/data/mongodb/core/timeseries/Granularity;
org/springframework/data/mongodb/core/timeseries/Granularity	$values	()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;	GET_FIELD	org/springframework/data/mongodb/core/timeseries/Granularity::MINUTES|Lorg/springframework/data/mongodb/core/timeseries/Granularity;
org/springframework/data/mongodb/core/timeseries/Granularity	$values	()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;	GET_FIELD	org/springframework/data/mongodb/core/timeseries/Granularity::SECONDS|Lorg/springframework/data/mongodb/core/timeseries/Granularity;
org/springframework/data/mongodb/core/timeseries/Granularity	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/core/timeseries/Granularity::$values()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;
org/springframework/data/mongodb/gridfs/ReactiveGridFsResource	createDownloadStream	(Lcom/mongodb/reactivestreams/client/gridfs/GridFSDownloadPublisher;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate	createFlux	(Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate$ReactiveBucketCallback;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractMongoQuery	prepareBindingContext	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;)Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	decode	(Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	expressionEvaluator	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/core/aggregation/AggregationOperationContext::getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery::decode(Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery::getQueryMethod()Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/MongoQueryMethod::getDomainClass()Ljava/lang/Class;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	reactor/util/function/Tuple2::getT1()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery	lambda$computePipelineStage$10	(Lreactor/util/function/Tuple2;Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;	INVOKE_STATIC	reactor/util/function/Tuple2::getT2()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/CollationUtils	computeCollation	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mongodb/repository/query/MongoParameters;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)Lorg/springframework/data/mongodb/core/query/Collation;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator	$values	()[Lorg/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator;	GET_FIELD	org/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator::INSTANCE|Lorg/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator;
org/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator::$values()[Lorg/springframework/data/mongodb/repository/query/DefaultSpELExpressionEvaluator$NoOpExpressionEvaluator;
org/springframework/data/mongodb/repository/query/MongoQueryCreator	lambda$from$0	(ZLorg/springframework/data/mongodb/core/query/Criteria;Lorg/springframework/data/geo/Point;Ljava/util/Optional;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/mongodb/core/query/Criteria;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/MongoQueryMethod	lambda$getAnnotatedCollation$1	()Ljava/lang/IllegalStateException;	CONSTANT	 type: class java.lang.String; value: Expected to find @Query annotation but did not. Make sure to check hasAnnotatedCollation() before.
org/springframework/data/mongodb/repository/query/MongoQueryMethod	lambda$getAnnotatedCollation$1	()Ljava/lang/IllegalStateException;	INVOKE_STATIC	java/lang/IllegalStateException::<init>(Ljava/lang/String;)V
org/springframework/data/mongodb/repository/query/ReactivePartTreeMongoQuery	createQueryInternal	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Z)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$doExecute$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation::mongoConverter|Lorg/springframework/data/mongodb/core/convert/MongoConverter;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$doExecute$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/AggregationUtils::extractSimpleTypeResult(Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation	lambda$doExecute$0	(Ljava/lang/Class;Ljava/lang/Object;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::next(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	getBindingContext	(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$0	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::query|Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$0	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec::decode(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$1	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::fieldSpec|Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$1	(Lorg/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec::decode(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	CONSTANT	 type: class java.lang.String; value: Created query %s for %s fields.
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	GET_FIELD	org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery::LOG|Lorg/apache/commons/logging/Log;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/lang/String::format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/apache/commons/logging/Log::debug(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/apache/commons/logging/Log::isDebugEnabled()Z
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::<init>(Lorg/bson/Document;Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::with(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Query::getFieldsObject()Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/Query::getQueryObject()Lorg/bson/Document;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor::getSort()Lorg/springframework/data/domain/Sort;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	reactor/util/function/Tuple2::getT1()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$createQuery$2	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lreactor/util/function/Tuple2;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	reactor/util/function/Tuple2::getT2()Ljava/lang/Object;
org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery	lambda$getBindingContext$4	(Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;)Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/CachingExpressionParser	parseExpression	(Ljava/lang/String;)Lorg/springframework/expression/Expression;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery	createProjection	(Lcom/querydsl/core/types/Expression;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/QuerydslMongoPredicateExecutor	applySorting	(Lorg/springframework/data/mongodb/repository/support/SpringDataMongodbQuery;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/repository/support/SpringDataMongodbQuery;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/QuerydslMongoPredicateExecutor	findAll	(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/ReactiveQuerydslMongoPredicateExecutor	applySorting	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$8	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery;Lcom/querydsl/core/types/Predicate;)Lorg/bson/Document;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::createQuery(Lcom/querydsl/core/types/Predicate;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::queryCustomizer|Ljava/util/function/Consumer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	com/querydsl/core/QueryModifiers::getLimitAsInteger()Ljava/lang/Integer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	com/querydsl/core/QueryModifiers::getOffsetAsInteger()Ljava/lang/Integer;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/lang/Integer::intValue()I
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/util/List::size()I
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	java/util/function/Consumer::accept(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/bson/Document::<init>()V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::<init>(Lorg/bson/Document;Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::limit(I)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::setSortObject(Lorg/bson/Document;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/core/query/BasicQuery::skip(J)Lorg/springframework/data/mongodb/core/query/Query;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::createProjection(Lcom/querydsl/core/types/Expression;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createQuery$9	(Lcom/querydsl/core/types/Expression;Lcom/querydsl/core/QueryModifiers;Ljava/util/List;Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::createSort(Ljava/util/List;)Lorg/bson/Document;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveFilter$10	(Lcom/querydsl/core/QueryMetadata;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/QueryMetadata::getWhere()Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveFilter$10	(Lcom/querydsl/core/QueryMetadata;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::allOf([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/JoinExpression;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/JoinExpression::getCondition()Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$11	(Lcom/querydsl/core/JoinExpression;Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::allOf([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	CONSTANT	 type: class java.lang.String; value: $id
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::in(Lcom/querydsl/core/types/Expression;Ljava/util/Collection;)Lcom/querydsl/core/types/Predicate;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::path(Ljava/lang/Class;Lcom/querydsl/core/types/Path;Ljava/lang/String;)Lcom/querydsl/core/types/Path;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	java/util/List::isEmpty()Z
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException::<init>(Lcom/querydsl/core/types/Path;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::error(Ljava/lang/Throwable;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$12	(Lcom/querydsl/core/types/Path;Ljava/util/List;Lreactor/core/publisher/SynchronousSink;)V	INVOKE_STATIC	reactor/core/publisher/SynchronousSink::next(Ljava/lang/Object;)V
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$13	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	GET_FIELD	com/querydsl/mongodb/MongodbOps::NO_MATCH|Lcom/querydsl/mongodb/MongodbOps;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$13	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException::source|Lcom/querydsl/core/types/Path;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$13	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	com/querydsl/core/types/ExpressionUtils::predicate(Lcom/querydsl/core/types/Operator;[Lcom/querydsl/core/types/Expression;)Lcom/querydsl/core/types/PredicateOperation;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$createReactiveJoinFilter$13	(Lorg/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery$NoMatchException;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	reactor/core/publisher/Mono::just(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getIds$14	(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::getJoinIds(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getIds$15	(Ljava/lang/Class;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::getJoinIds(Ljava/lang/Class;Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$16	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	CONSTANT	 type: class java.lang.String; value: _id
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$16	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	GET_FIELD	org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery::mongoOperations|Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
org/springframework/data/mongodb/repository/support/ReactiveSpringDataMongodbQuery	lambda$getJoinIds$16	(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/reactivestreams/Publisher;	INVOKE_STATIC	org/springframework/data/mongodb/core/ReactiveMongoOperations::findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
org/springframework/data/mongodb/repository/support/SimpleMongoRepository	saveAll	(Ljava/lang/Iterable;)Ljava/util/List;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	deleteAll	(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	deleteAll	(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository	saveAll	(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/util/BsonUtils	iterableToDelimitedString	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/String;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/util/BsonUtils	merge	([Lorg/bson/Document;)Lorg/bson/Document;	INVOKE_STATIC	java/util/Objects::requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::DONE|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::INVALID|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_DECIMAL_POINT|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_EXPONENT_DIGITS|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_EXPONENT_LETTER|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_EXPONENT_SIGN|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_FRACTION_DIGITS|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_INTEGER_DIGITS|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_LEADING_MINUS|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_LEADING_ZERO|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::SAW_MINUS_I|Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$NumberState	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/util/json/JsonScanner$NumberState::$values()[Lorg/springframework/data/mongodb/util/json/JsonScanner$NumberState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::DONE|Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::INVALID|Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::IN_ESCAPE_SEQUENCE|Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::IN_OPTIONS|Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	$values	()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::IN_PATTERN|Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState::$values()[Lorg/springframework/data/mongodb/util/json/JsonScanner$RegularExpressionState;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::BEGIN_ARRAY|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::BEGIN_OBJECT|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::COLON|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::COMMA|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::DOUBLE|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::END_ARRAY|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::END_OBJECT|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::END_OF_FILE|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::INT32|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::INT64|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::INVALID|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::LEFT_PAREN|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::REGULAR_EXPRESSION|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::RIGHT_PAREN|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::STRING|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	$values	()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;	GET_FIELD	org/springframework/data/mongodb/util/json/JsonTokenType::UNQUOTED_STRING|Lorg/springframework/data/mongodb/util/json/JsonTokenType;
org/springframework/data/mongodb/util/json/JsonTokenType	<clinit>	()V	INVOKE_STATIC	org/springframework/data/mongodb/util/json/JsonTokenType::$values()[Lorg/springframework/data/mongodb/util/json/JsonTokenType;
