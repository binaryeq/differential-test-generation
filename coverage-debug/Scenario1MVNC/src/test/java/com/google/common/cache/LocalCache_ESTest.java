/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 14:27:51 GMT 2024
 */

package com.google.common.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Converter;
import com.google.common.base.Function;
import com.google.common.base.Supplier;
import com.google.common.cache.AbstractCache;
import com.google.common.cache.CacheBuilder;
import com.google.common.cache.CacheLoader;
import com.google.common.cache.LocalCache;
import com.google.common.cache.ReferenceEntry;
import java.lang.ref.ReferenceQueue;
import java.time.chrono.HijrahEra;
import java.util.concurrent.Callable;
import java.util.concurrent.Delayed;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.LinkedTransferQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalCache_ESTest extends LocalCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.Segment<AbstractCache.SimpleStatsCounter, LocalCache.StrongAccessEntry<Delayed, Delayed>> localCache_Segment0 = null;
      try {
        localCache_Segment0 = new LocalCache.Segment<AbstractCache.SimpleStatsCounter, LocalCache.StrongAccessEntry<Delayed, Delayed>>((LocalCache<AbstractCache.SimpleStatsCounter, LocalCache.StrongAccessEntry<Delayed, Delayed>>) null, 127, 127, abstractCache_SimpleStatsCounter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.cache.LocalCache$Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalCache.unset();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.WriteQueue<ForkJoinTask<HijrahEra>, AbstractCache.SimpleStatsCounter> localCache_WriteQueue0 = new LocalCache.WriteQueue<ForkJoinTask<HijrahEra>, AbstractCache.SimpleStatsCounter>();
      // Undeclared exception!
      try { 
        localCache_WriteQueue0.remove((Object) abstractCache_SimpleStatsCounter0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.common.cache.AbstractCache$SimpleStatsCounter cannot be cast to com.google.common.cache.ReferenceEntry
         //
         verifyException("com.google.common.cache.LocalCache$WriteQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Converter<Delayed, Delayed> converter0 = Converter.identity();
      CacheLoader<Delayed, Delayed> cacheLoader0 = CacheLoader.from((Function<Delayed, Delayed>) converter0);
      LocalCache<Delayed, Delayed> localCache0 = null;
      try {
        localCache0 = new LocalCache<Delayed, Delayed>((CacheBuilder<? super Delayed, ? super Delayed>) null, cacheLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.cache.LocalCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Callable<Delayed> callable0 = (Callable<Delayed>) mock(Callable.class, new ViolatedAssumptionAnswer());
      LocalCache.StrongValueReference<AbstractCache.SimpleStatsCounter, Callable<Delayed>> localCache_StrongValueReference0 = new LocalCache.StrongValueReference<AbstractCache.SimpleStatsCounter, Callable<Delayed>>(callable0);
      localCache_StrongValueReference0.isActive();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HijrahEra hijrahEra0 = HijrahEra.AH;
      LocalCache.WeightedStrongValueReference<LocalCache.StrongAccessEntry<HijrahEra, HijrahEra>, HijrahEra> localCache_WeightedStrongValueReference0 = new LocalCache.WeightedStrongValueReference<LocalCache.StrongAccessEntry<HijrahEra, HijrahEra>, HijrahEra>(hijrahEra0, (-3146));
      HijrahEra hijrahEra1 = localCache_WeightedStrongValueReference0.get();
      LocalCache.StrongAccessEntry<HijrahEra, HijrahEra> localCache_StrongAccessEntry0 = new LocalCache.StrongAccessEntry<HijrahEra, HijrahEra>(hijrahEra1, 1185147655, (ReferenceEntry<HijrahEra, HijrahEra>) null);
      localCache_StrongAccessEntry0.getValueReference();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter> localCache_StrongAccessEntry0 = new LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>(abstractCache_SimpleStatsCounter0, 120, (ReferenceEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>) null);
      // Undeclared exception!
      try { 
        localCache_StrongAccessEntry0.getNextInWriteQueue();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.cache.LocalCache$AbstractReferenceEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalCache.StrongWriteEntry<LocalCache.StrongAccessEntry<Delayed, Delayed>, ForkJoinTask<Delayed>> localCache_StrongWriteEntry0 = new LocalCache.StrongWriteEntry<LocalCache.StrongAccessEntry<Delayed, Delayed>, ForkJoinTask<Delayed>>((LocalCache.StrongAccessEntry<Delayed, Delayed>) null, 35, (ReferenceEntry<LocalCache.StrongAccessEntry<Delayed, Delayed>, ForkJoinTask<Delayed>>) null);
      // Undeclared exception!
      try { 
        localCache_StrongWriteEntry0.getPreviousInAccessQueue();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.cache.LocalCache$AbstractReferenceEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter> localCache_StrongAccessEntry0 = new LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>(abstractCache_SimpleStatsCounter0, 120, (ReferenceEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>) null);
      localCache_StrongAccessEntry0.setNextInAccessQueue((ReferenceEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter> localCache_StrongAccessEntry0 = new LocalCache.StrongAccessEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>(abstractCache_SimpleStatsCounter0, 120, (ReferenceEntry<AbstractCache.SimpleStatsCounter, AbstractCache.SimpleStatsCounter>) null);
      localCache_StrongAccessEntry0.setAccessTime(0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheBuilder<Object, Object> cacheBuilder0 = CacheBuilder.newBuilder();
      Supplier<AbstractCache.SimpleStatsCounter> supplier0 = (Supplier<AbstractCache.SimpleStatsCounter>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      CacheLoader<Object, AbstractCache.SimpleStatsCounter> cacheLoader0 = CacheLoader.from(supplier0);
      LocalCache.LocalLoadingCache<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter> localCache_LocalLoadingCache0 = new LocalCache.LocalLoadingCache<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter>(cacheBuilder0, cacheLoader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReferenceQueue<AbstractCache.SimpleStatsCounter> referenceQueue0 = new ReferenceQueue<AbstractCache.SimpleStatsCounter>();
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.WeakAccessWriteEntry<AbstractCache.SimpleStatsCounter, ForkJoinTask<Delayed>> localCache_WeakAccessWriteEntry0 = new LocalCache.WeakAccessWriteEntry<AbstractCache.SimpleStatsCounter, ForkJoinTask<Delayed>>(referenceQueue0, abstractCache_SimpleStatsCounter0, 35, (ReferenceEntry<AbstractCache.SimpleStatsCounter, ForkJoinTask<Delayed>>) null);
      localCache_WeakAccessWriteEntry0.setNextInWriteQueue((ReferenceEntry<AbstractCache.SimpleStatsCounter, ForkJoinTask<Delayed>>) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReferenceQueue<AbstractCache.SimpleStatsCounter> referenceQueue0 = new ReferenceQueue<AbstractCache.SimpleStatsCounter>();
      LocalCache.WeakAccessEntry<AbstractCache.SimpleStatsCounter, Delayed> localCache_WeakAccessEntry0 = new LocalCache.WeakAccessEntry<AbstractCache.SimpleStatsCounter, Delayed>(referenceQueue0, (AbstractCache.SimpleStatsCounter) null, (-5313), (ReferenceEntry<AbstractCache.SimpleStatsCounter, Delayed>) null);
      LocalCache.WeakEntry<AbstractCache.SimpleStatsCounter, Delayed> localCache_WeakEntry0 = new LocalCache.WeakEntry<AbstractCache.SimpleStatsCounter, Delayed>(referenceQueue0, (AbstractCache.SimpleStatsCounter) null, 0, localCache_WeakAccessEntry0);
      LocalCache.StrongAccessWriteEntry<AbstractCache.SimpleStatsCounter, Delayed> localCache_StrongAccessWriteEntry0 = new LocalCache.StrongAccessWriteEntry<AbstractCache.SimpleStatsCounter, Delayed>((AbstractCache.SimpleStatsCounter) null, 1073741824, localCache_WeakEntry0);
      LocalCache.StrongEntry<AbstractCache.SimpleStatsCounter, Delayed> localCache_StrongEntry0 = new LocalCache.StrongEntry<AbstractCache.SimpleStatsCounter, Delayed>((AbstractCache.SimpleStatsCounter) null, 26, localCache_StrongAccessWriteEntry0);
      LocalCache.StrongWriteEntry<AbstractCache.SimpleStatsCounter, Delayed> localCache_StrongWriteEntry0 = new LocalCache.StrongWriteEntry<AbstractCache.SimpleStatsCounter, Delayed>((AbstractCache.SimpleStatsCounter) null, 26, localCache_StrongEntry0);
      localCache_StrongWriteEntry0.setNextInWriteQueue(localCache_WeakAccessEntry0);
      assertEquals(26, localCache_StrongWriteEntry0.getHash());
      assertEquals(9223372036854775807L, localCache_WeakAccessEntry0.getAccessTime());
      assertEquals(9223372036854775807L, localCache_StrongAccessWriteEntry0.getWriteTime());
      assertEquals(9223372036854775807L, localCache_StrongWriteEntry0.getWriteTime());
      assertEquals((-5313), localCache_WeakAccessEntry0.getHash());
      assertEquals(9223372036854775807L, localCache_StrongAccessWriteEntry0.getAccessTime());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalCache.AccessQueue<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter> localCache_AccessQueue0 = new LocalCache.AccessQueue<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter>();
      // Undeclared exception!
      try { 
        localCache_AccessQueue0.add((ReferenceEntry<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.cache.LocalCache$AccessQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalCache.AccessQueue<AbstractCache.SimpleStatsCounter, Object> localCache_AccessQueue0 = new LocalCache.AccessQueue<AbstractCache.SimpleStatsCounter, Object>();
      int int0 = localCache_AccessQueue0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalCache.WriteQueue<ForkJoinTask<HijrahEra>, AbstractCache.SimpleStatsCounter> localCache_WriteQueue0 = new LocalCache.WriteQueue<ForkJoinTask<HijrahEra>, AbstractCache.SimpleStatsCounter>();
      LinkedTransferQueue<Delayed> linkedTransferQueue0 = new LinkedTransferQueue<Delayed>();
      boolean boolean0 = localCache_WriteQueue0.removeAll(linkedTransferQueue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalCache.LoadingValueReference<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter> localCache_LoadingValueReference0 = new LocalCache.LoadingValueReference<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter>();
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      boolean boolean0 = localCache_LoadingValueReference0.set(abstractCache_SimpleStatsCounter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocalCache.LoadingValueReference<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter> localCache_LoadingValueReference0 = new LocalCache.LoadingValueReference<LocalCache.StrongAccessEntry<Delayed, Delayed>, AbstractCache.SimpleStatsCounter>();
      long long0 = localCache_LoadingValueReference0.elapsedNanos();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CacheBuilder<Object, Object> cacheBuilder0 = CacheBuilder.newBuilder();
      Supplier<AbstractCache.SimpleStatsCounter> supplier0 = (Supplier<AbstractCache.SimpleStatsCounter>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      CacheLoader<Object, AbstractCache.SimpleStatsCounter> cacheLoader0 = CacheLoader.from(supplier0);
      LocalCache<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter> localCache0 = new LocalCache<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter>(cacheBuilder0, cacheLoader0);
      AbstractCache.SimpleStatsCounter abstractCache_SimpleStatsCounter0 = new AbstractCache.SimpleStatsCounter();
      LocalCache.Segment<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter> localCache_Segment0 = new LocalCache.Segment<LocalCache.StrongAccessEntry<Object, Object>, AbstractCache.SimpleStatsCounter>(localCache0, 1356, (-2375L), abstractCache_SimpleStatsCounter0);
  }
}
