/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 15:21:35 GMT 2024
 */

package com.google.common.collect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableBiMap;
import com.google.common.collect.JdkBackedImmutableBiMap;
import java.lang.reflect.Array;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JdkBackedImmutableBiMap_ESTest extends JdkBackedImmutableBiMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        JdkBackedImmutableBiMap.create((-1072), (Map.Entry<Object, Comparable<Integer>>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expectedSize cannot be negative but was: -1072
         //
         verifyException("com.google.common.collect.CollectPreconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Map.Entry<Object, Object>[] map_EntryArray0 = (Map.Entry<Object, Object>[]) Array.newInstance(Map.Entry.class, 0);
      // Undeclared exception!
      try { 
        JdkBackedImmutableBiMap.create(1038, (Map.Entry<Object, Object>[]) map_EntryArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.common.collect.JdkBackedImmutableBiMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImmutableBiMap<Integer, Integer> immutableBiMap0 = JdkBackedImmutableBiMap.create(0, (Map.Entry<Integer, Integer>[]) null);
      assertEquals(0, immutableBiMap0.size());
  }
}
