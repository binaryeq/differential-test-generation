/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 16:18:27 GMT 2024
 */

package com.google.common.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.hash.BloomFilterStrategies;
import com.google.common.hash.Funnel;
import com.google.common.hash.HashCode;
import com.google.common.hash.Hasher;
import com.google.common.hash.Murmur3_128HashFunction;
import com.google.common.hash.Murmur3_32HashFunction;
import com.google.common.hash.SipHashFunction;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Murmur3_32HashFunction_ESTest extends Murmur3_32HashFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction(0, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)16;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      murmur3_32HashFunction0.hashBytes(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction(0, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)16;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      murmur3_32HashFunction0.hashBytes(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction((-3604), false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      murmur3_32HashFunction0.hashBytes(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)97;
      murmur3_32HashFunction0.hashBytes(byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      byte[] byteArray0 = new byte[4];
      murmur3_32HashFunction0.hashBytes(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      murmur3_32HashFunction0.hashString("B`e\"SB^r?<H'6c", charset0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\u00A0';
      Charset charset0 = Charset.defaultCharset();
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      murmur3_32HashFunction0.hashString(charBuffer0, charset0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      murmur3_32HashFunction0.hashLong((-4347));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      BloomFilterStrategies bloomFilterStrategies0 = BloomFilterStrategies.MURMUR128_MITZ_64;
      Funnel<Object> funnel0 = (Funnel<Object>) mock(Funnel.class, new ViolatedAssumptionAnswer());
      murmur3_32HashFunction0.hashObject(bloomFilterStrategies0, (Funnel<? super BloomFilterStrategies>) funnel0);
      Murmur3_32HashFunction murmur3_32HashFunction1 = new Murmur3_32HashFunction((-3604), false);
      murmur3_32HashFunction1.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      Murmur3_32HashFunction murmur3_32HashFunction1 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      murmur3_32HashFunction0.equals(murmur3_32HashFunction1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      byte[] byteArray0 = new byte[3];
      murmur3_32HashFunction0.hashBytes(byteArray0, (int) (byte)0, (int) (byte)0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Murmur3_128HashFunction murmur3_128HashFunction0 = (Murmur3_128HashFunction)Murmur3_128HashFunction.GOOD_FAST_HASH_128;
      // Undeclared exception!
      try { 
        murmur3_128HashFunction0.toString();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SipHashFunction sipHashFunction0 = new SipHashFunction((byte)50, (byte)1, (byte)55, (byte)1);
      // Undeclared exception!
      try { 
        sipHashFunction0.newHasher();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      CharBuffer charBuffer0 = CharBuffer.allocate(1015958893);
      // Undeclared exception!
      murmur3_32HashFunction0.hashUnencodedChars(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.hashUnencodedChars((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.hash.Murmur3_32HashFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      CharBuffer charBuffer0 = CharBuffer.allocate(1772190727);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      murmur3_32HashFunction0.hashString(charBuffer0, charset0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction((-3052), false);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.put(charArray0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.hashString(charBuffer1, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.hashBytes((byte[]) null, 74, (-162));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.hash.Murmur3_32HashFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction((-245), true);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.hashBytes(byteArray0, (-245), (-245));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // java.lang.String@0000000002 (java.lang.Integer@0000000003) must not be negative
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.allocate(133);
      char[] charArray0 = new char[5];
      charBuffer0.get(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      HashCode hashCode0 = murmur3_32HashFunction0.hashBytes(byteBuffer0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction((-2942), true);
      StringWriter stringWriter0 = new StringWriter(34);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringWriter0.write(2649);
      Charset charset0 = Charset.defaultCharset();
      HashCode hashCode0 = murmur3_32HashFunction0.hashString(stringBuffer0, charset0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = '\u0090';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Charset charset0 = Charset.defaultCharset();
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      HashCode hashCode0 = murmur3_32HashFunction0.hashString(charBuffer0, charset0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[2] = '\u0090';
      Charset charset0 = Charset.defaultCharset();
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put('\u0090');
      HashCode hashCode0 = murmur3_32HashFunction0.hashString(charBuffer0, charset0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringWriter0.write(128);
      stringWriter0.write((-863835651));
      Charset charset0 = Charset.defaultCharset();
      stringWriter0.append((CharSequence) stringBuffer0);
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      HashCode hashCode0 = murmur3_32HashFunction0.hashString(stringBuffer0, charset0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      // Undeclared exception!
      try { 
        murmur3_32HashFunction0.hashString("B`e\"SB^r?<H'6c", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      HashCode hashCode0 = murmur3_32HashFunction0.hashUnencodedChars("B`e\"SB^r?<H'6c");
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      HashCode hashCode0 = murmur3_32HashFunction0.hashUnencodedChars("9Dy|>Z?/Y]o7w");
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      Murmur3_32HashFunction murmur3_32HashFunction1 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      boolean boolean0 = murmur3_32HashFunction1.equals(murmur3_32HashFunction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.GOOD_FAST_HASH_32;
      Murmur3_32HashFunction murmur3_32HashFunction1 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      boolean boolean0 = murmur3_32HashFunction1.equals(murmur3_32HashFunction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32_FIXED;
      boolean boolean0 = murmur3_32HashFunction0.equals(murmur3_32HashFunction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      Object object0 = new Object();
      boolean boolean0 = murmur3_32HashFunction0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      int int0 = murmur3_32HashFunction0.bits();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      HashCode hashCode0 = murmur3_32HashFunction0.hashInt((-1286));
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      Hasher hasher0 = murmur3_32HashFunction0.newHasher();
      assertNotNull(hasher0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-113);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      HashCode hashCode0 = murmur3_32HashFunction0.hashString(charBuffer0, charset0);
      assertNotNull(hashCode0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Murmur3_32HashFunction murmur3_32HashFunction0 = (Murmur3_32HashFunction)Murmur3_32HashFunction.MURMUR3_32;
      String string0 = murmur3_32HashFunction0.toString();
      assertEquals("Hashing.murmur3_32(0)", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Murmur3_32HashFunction murmur3_32HashFunction0 = new Murmur3_32HashFunction(5, true);
      HashCode hashCode0 = murmur3_32HashFunction0.hashBytes(byteArray0);
      assertNotNull(hashCode0);
  }
}
