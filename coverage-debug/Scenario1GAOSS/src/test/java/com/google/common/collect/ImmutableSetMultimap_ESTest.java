/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 15:15:58 GMT 2024
 */

package com.google.common.collect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableSetMultimap;
import com.google.common.collect.LinkedHashMultimap;
import com.google.common.collect.Multimap;
import java.io.InvalidObjectException;
import java.util.Collection;
import java.util.Comparator;
import java.util.TreeSet;
import java.util.stream.Collector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImmutableSetMultimap_ESTest extends ImmutableSetMultimap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImmutableSetMultimap.Builder<Comparable<Object>, InvalidObjectException> immutableSetMultimap_Builder0 = ImmutableSetMultimap.builder();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      InvalidObjectException[] invalidObjectExceptionArray0 = new InvalidObjectException[3];
      InvalidObjectException invalidObjectException0 = new InvalidObjectException((String) null);
      invalidObjectExceptionArray0[0] = invalidObjectException0;
      invalidObjectExceptionArray0[1] = invalidObjectExceptionArray0[0];
      invalidObjectExceptionArray0[2] = invalidObjectExceptionArray0[1];
      ImmutableSetMultimap.Builder<Comparable<Object>, InvalidObjectException> immutableSetMultimap_Builder1 = immutableSetMultimap_Builder0.putAll(comparable0, invalidObjectExceptionArray0);
      assertSame(immutableSetMultimap_Builder1, immutableSetMultimap_Builder0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImmutableSetMultimap.Builder<Comparable<Object>, InvalidObjectException> immutableSetMultimap_Builder0 = ImmutableSetMultimap.builder();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Comparator<InvalidObjectException> comparator0 = (Comparator<InvalidObjectException>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<InvalidObjectException> treeSet0 = new TreeSet<InvalidObjectException>(comparator0);
      ImmutableSetMultimap.Builder<Comparable<Object>, InvalidObjectException> immutableSetMultimap_Builder1 = immutableSetMultimap_Builder0.putAll(comparable0, (Iterable<? extends InvalidObjectException>) treeSet0);
      assertSame(immutableSetMultimap_Builder0, immutableSetMultimap_Builder1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImmutableSetMultimap.Builder<Comparable<InvalidObjectException>, InvalidObjectException> immutableSetMultimap_Builder0 = new ImmutableSetMultimap.Builder<Comparable<InvalidObjectException>, InvalidObjectException>();
      Collection<InvalidObjectException> collection0 = immutableSetMultimap_Builder0.newMutableValueCollection();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImmutableSetMultimap<Collector.Characteristics, InvalidObjectException> immutableSetMultimap0 = ImmutableSetMultimap.of();
      InvalidObjectException invalidObjectException0 = new InvalidObjectException("Invalid value count ");
      // Undeclared exception!
      try { 
        immutableSetMultimap0.removeAll(invalidObjectException0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableSetMultimap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImmutableSetMultimap.Builder<InvalidObjectException, Comparable<InvalidObjectException>> immutableSetMultimap_Builder0 = ImmutableSetMultimap.builder();
      InvalidObjectException invalidObjectException0 = new InvalidObjectException("Duplicate key-value pairs exist for key ");
      Comparable<InvalidObjectException> comparable0 = (Comparable<InvalidObjectException>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      ImmutableSetMultimap<InvalidObjectException, Comparable<InvalidObjectException>> immutableSetMultimap0 = ImmutableSetMultimap.of(invalidObjectException0, comparable0);
      LinkedHashMultimap<InvalidObjectException, Comparable<InvalidObjectException>> linkedHashMultimap0 = LinkedHashMultimap.create((Multimap<? extends InvalidObjectException, ? extends Comparable<InvalidObjectException>>) immutableSetMultimap0);
      immutableSetMultimap_Builder0.putAll((Multimap<? extends InvalidObjectException, ? extends Comparable<InvalidObjectException>>) linkedHashMultimap0);
      assertEquals(1, immutableSetMultimap0.size());
  }
}
