/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 14:24:28 GMT 2024
 */

package com.google.common.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.cache.CacheBuilder;
import com.google.common.cache.CacheBuilderSpec;
import com.google.common.cache.LocalCache;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheBuilderSpec_ESTest extends CacheBuilderSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.WriteDurationParser cacheBuilderSpec_WriteDurationParser0 = new CacheBuilderSpec.WriteDurationParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_WriteDurationParser0.parse(cacheBuilderSpec0, "com.google.common.collect.ImmutableBiMapFauxverideShim", "com.google.common.cache.CacheBuilderSpec$KeyStrengthParser");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key com.google.common.collect.ImmutableBiMapFauxverideShim invalid unit: was com.google.common.cache.CacheBuilderSpec$KeyStrengthParser, must end with one of [dhms]
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$DurationParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.WriteDurationParser cacheBuilderSpec_WriteDurationParser0 = new CacheBuilderSpec.WriteDurationParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_WriteDurationParser0.parse(cacheBuilderSpec0, "com.google.common.collect.ImmutableBiMapFauxverideShim", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value of key com.google.common.collect.ImmutableBiMapFauxverideShim omitted
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$DurationParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_MaximumWeightParser0.parse(cacheBuilderSpec0, ")", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value of key ) omitted
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$LongParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.InitialCapacityParser cacheBuilderSpec_InitialCapacityParser0 = new CacheBuilderSpec.InitialCapacityParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_InitialCapacityParser0.parse(cacheBuilderSpec0, "com.google.common.collect.ImmutableBiMapFauxverideShim", "Gc%Rw92N8^ATz*IY6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key com.google.common.collect.ImmutableBiMapFauxverideShim value set to Gc%Rw92N8^ATz*IY6, must be integer
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$IntegerParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      cacheBuilderSpec1.accessExpirationDuration = 798L;
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      cacheBuilderSpec0.refreshTimeUnit = timeUnit0;
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      cacheBuilderSpec0.writeExpirationDuration = (-2436L);
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec1.equals(cacheBuilderSpec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      cacheBuilderSpec0.accessExpirationTimeUnit = timeUnit0;
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      cacheBuilderSpec1.accessExpirationDuration = (-692L);
      boolean boolean0 = cacheBuilderSpec1.equals(cacheBuilderSpec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      cacheBuilderSpec0.writeExpirationDuration = (-636L);
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      cacheBuilderSpec_MaximumWeightParser0.parseLong(cacheBuilderSpec0, (-1710L));
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec1.equals(cacheBuilderSpec0);
      assertFalse(boolean0);
      assertFalse(cacheBuilderSpec0.equals((Object)cacheBuilderSpec1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      Integer integer0 = new Integer(5);
      cacheBuilderSpec0.initialCapacity = integer0;
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      cacheBuilderSpec0.accessExpirationTimeUnit = timeUnit0;
      cacheBuilderSpec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      CacheBuilderSpec.RefreshDurationParser cacheBuilderSpec_RefreshDurationParser0 = new CacheBuilderSpec.RefreshDurationParser();
      cacheBuilderSpec_RefreshDurationParser0.parseDuration(cacheBuilderSpec0, 0L, timeUnit0);
      cacheBuilderSpec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      cacheBuilderSpec0.writeExpirationDuration = (-692L);
      cacheBuilderSpec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.SOFT;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, "", (String) null);
      cacheBuilderSpec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CacheBuilderSpec.parse("h0C.+Jxa ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unknown key java.lang.String@0000000007
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumSizeParser cacheBuilderSpec_MaximumSizeParser0 = new CacheBuilderSpec.MaximumSizeParser();
      cacheBuilderSpec_MaximumSizeParser0.parseLong(cacheBuilderSpec0, (-1775L));
      assertEquals("", cacheBuilderSpec0.toParsableString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        CacheBuilderSpec.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      cacheBuilderSpec_MaximumWeightParser0.parseLong(cacheBuilderSpec0, (-1710L));
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(boolean0);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      Integer integer0 = new Integer(1);
      cacheBuilderSpec1.initialCapacity = integer0;
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      String string0 = cacheBuilderSpec0.toParsableString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      cacheBuilderSpec0.accessExpirationTimeUnit = timeUnit0;
      CacheBuilderSpec.AccessDurationParser cacheBuilderSpec_AccessDurationParser0 = new CacheBuilderSpec.AccessDurationParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_AccessDurationParser0.parseDuration(cacheBuilderSpec0, (-1L), timeUnit0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expireAfterAccess already set
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CacheBuilderSpec.WriteDurationParser cacheBuilderSpec_WriteDurationParser0 = new CacheBuilderSpec.WriteDurationParser();
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      // Undeclared exception!
      try { 
        cacheBuilderSpec_WriteDurationParser0.parse(cacheBuilderSpec0, "", "com.google.common.collect.ImmutableBiMapFauxverideShim");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key  value set to com.google.common.collect.ImmutableBiMapFauxverideShim, must be integer
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$DurationParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CacheBuilderSpec.WriteDurationParser cacheBuilderSpec_WriteDurationParser0 = new CacheBuilderSpec.WriteDurationParser();
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      // Undeclared exception!
      try { 
        cacheBuilderSpec_WriteDurationParser0.parse(cacheBuilderSpec0, "", " omitted");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key  value set to  omitted, must be integer
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$DurationParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.RecordStatsParser cacheBuilderSpec_RecordStatsParser0 = new CacheBuilderSpec.RecordStatsParser();
      cacheBuilderSpec_RecordStatsParser0.parse(cacheBuilderSpec0, (String) null, (String) null);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_RecordStatsParser0.parse(cacheBuilderSpec0, "", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // recordStats already set
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.WEAK;
      CacheBuilderSpec.ValueStrengthParser cacheBuilderSpec_ValueStrengthParser0 = new CacheBuilderSpec.ValueStrengthParser(localCache_Strength0);
      cacheBuilderSpec_ValueStrengthParser0.parse(cacheBuilderSpec0, (String) null, (String) null);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_ValueStrengthParser0.parse(cacheBuilderSpec0, "", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String@0000000006 was already set to com.google.common.cache.LocalCache$Strength$3@0000000007
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.SOFT;
      CacheBuilderSpec.ValueStrengthParser cacheBuilderSpec_ValueStrengthParser0 = new CacheBuilderSpec.ValueStrengthParser(localCache_Strength0);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_ValueStrengthParser0.parse(cacheBuilderSpec0, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key java.lang.String@0000000006 does not take values
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.STRONG;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, (String) null, (String) null);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null was already set to com.google.common.cache.LocalCache$Strength$1@0000000006
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.SOFT;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key java.lang.String@0000000006 does not take values
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.ConcurrencyLevelParser cacheBuilderSpec_ConcurrencyLevelParser0 = new CacheBuilderSpec.ConcurrencyLevelParser();
      cacheBuilderSpec_ConcurrencyLevelParser0.parseInteger(cacheBuilderSpec0, 21);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_ConcurrencyLevelParser0.parseInteger(cacheBuilderSpec0, 21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // concurrency level was already set to  [java.lang.Integer@0000000006]
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      cacheBuilderSpec_MaximumWeightParser0.parseLong(cacheBuilderSpec0, 2030L);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_MaximumWeightParser0.parseLong(cacheBuilderSpec0, 2030L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maximum weight was already set to  [java.lang.Long@0000000006]
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      cacheBuilderSpec_MaximumWeightParser0.parseLong(cacheBuilderSpec0, 0L);
      CacheBuilderSpec.MaximumSizeParser cacheBuilderSpec_MaximumSizeParser0 = new CacheBuilderSpec.MaximumSizeParser();
      // Undeclared exception!
      try { 
        cacheBuilderSpec_MaximumSizeParser0.parseLong(cacheBuilderSpec0, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maximum weight was already set to  [java.lang.Long@0000000007]
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CacheBuilderSpec.InitialCapacityParser cacheBuilderSpec_InitialCapacityParser0 = new CacheBuilderSpec.InitialCapacityParser();
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      cacheBuilderSpec_InitialCapacityParser0.parseInteger(cacheBuilderSpec0, 6);
      // Undeclared exception!
      try { 
        cacheBuilderSpec_InitialCapacityParser0.parseInteger(cacheBuilderSpec0, 3448);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initial capacity was already set to  [java.lang.Integer@0000000006]
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CacheBuilderSpec.InitialCapacityParser cacheBuilderSpec_InitialCapacityParser0 = new CacheBuilderSpec.InitialCapacityParser();
      CacheBuilderSpec.RefreshDurationParser cacheBuilderSpec_RefreshDurationParser0 = new CacheBuilderSpec.RefreshDurationParser();
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      // Undeclared exception!
      try { 
        CacheBuilderSpec.parse("initialCapacity");
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // value of key initialCapacity omitted
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$IntegerParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      CacheBuilderSpec.InitialCapacityParser cacheBuilderSpec_InitialCapacityParser0 = new CacheBuilderSpec.InitialCapacityParser();
      cacheBuilderSpec_InitialCapacityParser0.parse(cacheBuilderSpec0, "", "46");
      assertEquals("", cacheBuilderSpec0.toParsableString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      cacheBuilderSpec0.accessExpirationTimeUnit = timeUnit0;
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec1.equals(cacheBuilderSpec0);
      assertFalse(boolean0);
      assertFalse(cacheBuilderSpec0.equals((Object)cacheBuilderSpec1));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      cacheBuilderSpec0.writeExpirationTimeUnit = timeUnit0;
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.WEAK;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, "", (String) null);
      CacheBuilderSpec cacheBuilderSpec1 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec1);
      assertFalse(cacheBuilderSpec1.equals((Object)cacheBuilderSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      boolean boolean0 = cacheBuilderSpec0.equals(cacheBuilderSpec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      cacheBuilderSpec0.refreshTimeUnit = timeUnit0;
      // Undeclared exception!
      try { 
        cacheBuilderSpec0.toCacheBuilder();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duration must be positive: java.lang.Long@0000000006 java.util.concurrent.TimeUnit$4@0000000007
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      cacheBuilderSpec0.accessExpirationTimeUnit = timeUnit0;
      CacheBuilder<Object, Object> cacheBuilder0 = cacheBuilderSpec0.toCacheBuilder();
      assertNotNull(cacheBuilder0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      cacheBuilderSpec0.writeExpirationTimeUnit = timeUnit0;
      CacheBuilder<Object, Object> cacheBuilder0 = cacheBuilderSpec0.toCacheBuilder();
      assertNotNull(cacheBuilder0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      Boolean boolean0 = new Boolean("");
      cacheBuilderSpec0.recordStats = boolean0;
      CacheBuilder<Object, Object> cacheBuilder0 = cacheBuilderSpec0.toCacheBuilder();
      assertNotNull(cacheBuilder0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.WEAK;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, (String) null, (String) null);
      CacheBuilder<Object, Object> cacheBuilder0 = cacheBuilderSpec0.toCacheBuilder();
      assertNotNull(cacheBuilder0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      LocalCache.Strength localCache_Strength0 = LocalCache.Strength.STRONG;
      CacheBuilderSpec.KeyStrengthParser cacheBuilderSpec_KeyStrengthParser0 = new CacheBuilderSpec.KeyStrengthParser(localCache_Strength0);
      cacheBuilderSpec_KeyStrengthParser0.parse(cacheBuilderSpec0, "", (String) null);
      // Undeclared exception!
      try { 
        cacheBuilderSpec0.toCacheBuilder();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      Integer integer0 = new Integer(479);
      cacheBuilderSpec0.initialCapacity = integer0;
      CacheBuilder<Object, Object> cacheBuilder0 = cacheBuilderSpec0.toCacheBuilder();
      assertNotNull(cacheBuilder0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        CacheBuilderSpec.parse("W;KF-==a|bYNDG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key-value pair java.lang.String@0000000008 with more than one equals sign
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        CacheBuilderSpec.disableCaching();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unknown key java.lang.String@0000000008
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      String string0 = cacheBuilderSpec0.toString();
      assertEquals("CacheBuilderSpec{}", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CacheBuilderSpec.MaximumWeightParser cacheBuilderSpec_MaximumWeightParser0 = new CacheBuilderSpec.MaximumWeightParser();
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      // Undeclared exception!
      try { 
        cacheBuilderSpec_MaximumWeightParser0.parse(cacheBuilderSpec0, (String) null, "@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // key null value set to @, must be integer
         //
         verifyException("com.google.common.cache.CacheBuilderSpec$LongParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CacheBuilderSpec.RecordStatsParser cacheBuilderSpec_RecordStatsParser0 = new CacheBuilderSpec.RecordStatsParser();
      CacheBuilderSpec cacheBuilderSpec0 = CacheBuilderSpec.parse("");
      // Undeclared exception!
      try { 
        cacheBuilderSpec_RecordStatsParser0.parse(cacheBuilderSpec0, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // recordStats does not take values
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
