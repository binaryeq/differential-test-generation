/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 15:28:04 GMT 2024
 */

package com.google.common.collect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Function;
import com.google.common.collect.BoundType;
import com.google.common.collect.Maps;
import java.util.Locale;
import java.util.Map;
import java.util.NavigableMap;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Maps_ESTest extends Maps_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Maps.NavigableKeySet<Class<BoundType>, BoundType> maps_NavigableKeySet0 = null;
      try {
        maps_NavigableKeySet0 = new Maps.NavigableKeySet<Class<BoundType>, BoundType>((NavigableMap<Class<BoundType>, BoundType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maps.unmodifiableEntrySet((Set<Map.Entry<Locale.FilteringMode, Locale.FilteringMode>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Maps.asEntryToEntryFunction((Maps.EntryTransformer<? super Class<Integer>, ? super Object, Map.Entry<Comparable, Class<Integer>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Function<Map.Entry<BoundType, ?>, BoundType> function0 = Maps.keyFunction();
      assertNotNull(function0);
  }
}
